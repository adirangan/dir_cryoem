%function test_transforms_dr_0(n_r);
% test transforms: ;
%%%%%%%%;
% When not explicitly mentioned, we assume that all array indices are zero-based. ;
% Assumes that images are defined on a grid of: ;
% dx_c_1 = diameter_x_c_1/n_x_c_1; dx_c_2 = diameter_x_c_2/n_x_c_2;
% x_c_1_max = dx_c_1*floor(n_x_c_1/2); x_c_2_max = dx_c_2*floor(n_x_c_2/2);
% grid_x_c_1_ = transpose( -x_c_1_max + dx_c_1*[0:n_x_c_1-1] );
% grid_x_c_2_ = transpose( -x_c_2_max + dx_c_2*[0:n_x_c_2-1] );
% In addition, we assume that the image is defined in terms of: ;
% S_x_c_(nx_c_1 + nx_c_2*n_x_c_1) = pixel nx_c_1,nx_c_2. ;
%%%%%%%%;
%if nargin<1; n_r = 32; end;
n_r = 32;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Generating initial S_x_c_ ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_x_c_1 = 2*n_r; n_x_c_2 = 2*n_r+1;
diameter_x_c_1 = 2.0; diameter_x_c_2 = 2.0;
half_diameter_x_c_1 = diameter_x_c_1/2.0d0; half_diameter_x_c_2 = diameter_x_c_2/2.0d0;
dx_c_1 = diameter_x_c_1/n_x_c_1; dx_c_2 = diameter_x_c_2/n_x_c_2;
x_c_1_max = dx_c_1*floor(n_x_c_1/2); x_c_2_max = dx_c_2*floor(n_x_c_2/2);
grid_x_c_1_ = transpose( -x_c_1_max + dx_c_1*[0:n_x_c_1-1] );
grid_x_c_2_ = transpose( -x_c_2_max + dx_c_2*[0:n_x_c_2-1] );
%%%%%%%%;
grid_x_p_r_ = zeros(n_x_c_1*n_x_c_2,1);
grid_x_p_w_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
grid_x_p_r_(1+na) = sqrt(grid_x_c_1_(1+nx_c_1).^2 + grid_x_c_2_(1+nx_c_2).^2);
grid_x_p_w_(1+na) = atan2(grid_x_c_2_(1+nx_c_2),grid_x_c_1_(1+nx_c_1));
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
S_x_c_ = zeros(n_x_c_1*n_x_c_2,1);
S_x_c_ = S_x_c_ - 0.50*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(5*(grid_x_p_w_-pi/1.0)))).^2));
S_x_c_ = S_x_c_ + 0.75*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(6*(grid_x_p_w_-pi/2.5)))).^2));
S_x_c_ = S_x_c_ + 0.75*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(7*(grid_x_p_w_-pi/5.0)))).^2));
S_x_c_ = reshape(S_x_c_,n_x_c_1,n_x_c_2);
S_x_c_(find(grid_x_c_1_==0),find(grid_x_c_2_==0))=-0.5;
%%%%%%%%;

flag_disp=0;
if flag_disp;
imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((S_x_c_)),[],colormap(colormap_beach()));
xlim(half_diameter_x_c_1*[-1,1]);ylim(half_diameter_x_c_2*[-1,1]);
title('real(S_x_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
figbig;
end;%if flag_disp;

%%%%%%%%;
% say that m,n range from 0:6, with N=7 , dx_c_1 = 2/7=2/N , x_c_1_max = -x_c_1_min = 6/7=dx_c_1*floor(N/2). ;
%   fft: fhat_m = \sum_n fori_n * exp(-i 2*pi*m*n/N) ;
% nufft: fhat_m = \sum_n fori_n * exp(-i k_m x_n) ;
% x_n = x_min + n*dx_c_1 = -dx_c_1*floor(N/2) + n*dx_c_1 = dx_c_1*(n-floor(N/2)) = 2/N*(n - (N-1)/2). ;
% k_m * x_n = (2*pi/N)*m*n ;
% so k_m = pi * (m - (N-1)/2) * (n - (N-1)/2) / (n - (N-1)/2) = pi * (m - (N-1)/2). ;
% Thus, the type-3 nufft can be run with the x_n, k_m above. ;
% However, the type-1 nufft assumes that k_m = -N/2:(N-1)/2, which should be interpreted as -floor(N/2):floor((N-1)/2). ;
% This means that the x_n for the type-1 nufft should be rescaled to (2*pi/N)*(n - (N-1)/2). ;
% Note also that the type-2 nufft assumes that x_n = -floor(N/2):floor((N-1)/2). ;
% This means that the k_m for the type-2 nufft should be rescaled to (2*pi/N)*(m - (N-1)/2). ;
%%%%%%%%;
S_k_c_ = decenter2( fft2(recenter2(S_x_c_/sqrt(n_x_c_1*n_x_c_2))));
T_x_c_ = decenter2(ifft2(recenter2(S_k_c_*sqrt(n_x_c_1*n_x_c_2))));
disp(sprintf(' norm(S_x_c_-T_x_c_) %0.16f',norm(S_x_c_-T_x_c_,'fro')));
%%%%%%%%;
% type-3. ;
%%%%%%%%;
tmp_grid_x_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_x_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_x_c_1_(1+na) = grid_x_c_1_(1+nx_c_1);
tmp_grid_x_c_2_(1+na) = grid_x_c_2_(1+nx_c_2);
%tmp_grid_x_c_1_(1+na) = nx_c_1-floor(n_x_c_1/2);
%tmp_grid_x_c_2_(1+na) = nx_c_2-floor(n_x_c_2/2);
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
tmp_grid_k_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_k_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_k_c_1_(1+na) = pi*(nx_c_1-floor(n_x_c_1/2));
tmp_grid_k_c_2_(1+na) = pi*(nx_c_2-floor(n_x_c_2/2));
%tmp_grid_k_c_1_(1+na) = 2*pi*(nx_c_1-floor(n_x_c_1/2))/n_x_c_1;
%tmp_grid_k_c_2_(1+na) = 2*pi*(nx_c_2-floor(n_x_c_2/2))/n_x_c_2;
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
iflag = -1; eps = 1e-12;
T_k_c_ = nufft2d3(n_x_c_1*n_x_c_2,tmp_grid_x_c_1_,tmp_grid_x_c_2_,S_x_c_,iflag,eps,n_x_c_1*n_x_c_2,tmp_grid_k_c_1_,tmp_grid_k_c_2_);
T_k_c_ = reshape(T_k_c_,n_x_c_1,n_x_c_2);
T_k_c_ = T_k_c_/sqrt(n_x_c_1*n_x_c_2); %<-- Note division. ;
disp(sprintf(' %% nufft2d3: norm(S_k_c_-T_k_c_) %0.16f',norm(S_k_c_-T_k_c_,'fro')));
%%%%%%%%;
% type-2. ;
%%%%%%%%;
tmp_grid_x_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_x_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_x_c_1_(1+na) = (nx_c_1-floor(n_x_c_1/2));
tmp_grid_x_c_2_(1+na) = (nx_c_2-floor(n_x_c_2/2));
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
tmp_grid_k_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_k_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_k_c_1_(1+na) = (2*pi/n_x_c_1)*(nx_c_1-floor(n_x_c_1/2));
tmp_grid_k_c_2_(1+na) = (2*pi/n_x_c_2)*(nx_c_2-floor(n_x_c_2/2));
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
iflag = -1; eps = 1e-12;
T_k_c_ = nufft2d2(n_x_c_1*n_x_c_2,tmp_grid_k_c_1_,tmp_grid_k_c_2_,iflag,eps,n_x_c_1,n_x_c_2,S_x_c_);
T_k_c_ = reshape(T_k_c_,n_x_c_1,n_x_c_2);
T_k_c_ = T_k_c_/sqrt(n_x_c_1*n_x_c_2); %<-- Note division. ;
disp(sprintf(' %% nufft2d2: norm(S_k_c_-T_k_c_) %0.16f',norm(S_k_c_-T_k_c_,'fro')));
%%%%%%%%;
% type-2. ;
%%%%%%%%;
tmp_grid_x_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_x_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_x_c_1_(1+na) = (2*pi/n_x_c_1)*(nx_c_1-floor(n_x_c_1/2));
tmp_grid_x_c_2_(1+na) = (2*pi/n_x_c_2)*(nx_c_2-floor(n_x_c_2/2));
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
tmp_grid_k_c_1_ = zeros(n_x_c_1*n_x_c_2,1);
tmp_grid_k_c_2_ = zeros(n_x_c_1*n_x_c_2,1);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
tmp_grid_k_c_1_(1+na) = (nx_c_1-floor(n_x_c_1/2));
tmp_grid_k_c_2_(1+na) = (nx_c_2-floor(n_x_c_2/2));
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
iflag = -1; eps = 1e-12;
T_k_c_ = nufft2d1(n_x_c_1*n_x_c_2,tmp_grid_x_c_1_,tmp_grid_x_c_2_,S_x_c_,iflag,eps,n_x_c_1,n_x_c_2);
T_k_c_ = reshape(T_k_c_,n_x_c_1,n_x_c_2);
T_k_c_ = T_k_c_*sqrt(n_x_c_1*n_x_c_2); %<-- Note multiplication. ;
disp(sprintf(' %% nufft2d1: norm(S_k_c_-T_k_c_) %0.16f',norm(S_k_c_-T_k_c_,'fro')));

%%%%%%%%;
% Now produce S_k_p_ ;
%%%%%%%%;
diameter_k_c = 2.0*n_r/diameter_x_c_1;
grid_k_c_1_ = 0.5*([0:n_x_c_1-1]-floor(n_x_c_1/2));
grid_k_c_2_ = 0.5*([0:n_x_c_2-1]-floor(n_x_c_2/2));
half_diameter_k_c = diameter_k_c/2.0;
dtmp = half_diameter_k_c/n_r;
grid_k_p_r_ = linspace(dtmp,half_diameter_k_c,n_r); dr = mean(diff(grid_k_p_r_));
n_polar_a_ = zeros(n_r,1);
for nr=0:n_r-1; n_polar_a_(1+nr) = ceil(pi*(nr+1)); end;%for nr=0:n_r-1;
n_w_ = 2*n_polar_a_; n_A = sum(n_w_); n_w_max = max(n_w_);
grid_k_p_1_ = zeros(1,n_A); grid_k_p_2_ = zeros(1,n_A);
weight_k_p_ = zeros(n_A,1);
na=0;
for nr=0:n_r-1;
tmp_k = grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,n_w_(1+nr)+1);
for nw=0:n_w_(1+nr)-1;
grid_k_p_1_(1+na) = pi*tmp_k/half_diameter_k_c*cos(tmp_w_(1+nw));
grid_k_p_2_(1+na) = pi*tmp_k/half_diameter_k_c*sin(tmp_w_(1+nw));
weight_k_p_(1+na) = 2*pi*grid_k_p_r_(1+nr)*dr / n_w_(1+nr);
na=na+1;
end;%for nw=0:n_w_(1+nr)-1;
end;%for nr=0:n_r-1;
S_k_p_ = nufft2d2(n_A,grid_k_p_1_,grid_k_p_2_,-1,1e-12,n_x_c_1,n_x_c_2,(S_x_c_))/sqrt(n_x_c_1*n_x_c_2);
S_k_q_ = interp_p_to_q(n_r,n_w_,n_A,S_k_p_);
%%%%%%%%;
% Try and reproduce S_x_c_. ;
%%%%%%%%;
T_x_c_ = nufft2d1(n_A,grid_k_p_1_,grid_k_p_2_,S_k_p_.*weight_k_p_,+1,1e-12,n_x_c_1,n_x_c_2)*sqrt(n_x_c_1*n_x_c_2);

S_x_c_lim_ = 0 + 1.5*[-1,+1]*std(abs(S_x_c_(:)));
S_k_c_lim_ = 0 + 1.5*[-1,+1]*std(abs(S_k_c_(:)));
S_k_q_lim_ = 0 + 1.5*[-1,+1]*std(abs(S_k_q_(:)));

flag_disp=0;
if flag_disp;
%%%%%%%%;
% plot S_x_c_, S_k_c_, S_k_p_ and S_k_q_. ;
%%%%%%%%;
figure(1); pcols = 4;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,1+0*pcols); 
imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((S_x_c_)),S_x_c_lim_,colormap(colormap_beach()));
xlim(diameter_x_c_1/2*[-1,1]);ylim(diameter_x_c_2/2*[-1,1]);
title('real(S_x_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
subplot(2,pcols,1+1*pcols); 
imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,imag((S_x_c_)),S_x_c_lim_,colormap(colormap_beach()));
xlim(diameter_x_c_1/2*[-1,1]);ylim(diameter_x_c_2/2*[-1,1]);
title('imag(S_x_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,2+0*pcols); 
imagesc_c(n_x_c_1,grid_k_c_1_,n_x_c_2,grid_k_c_2_,real((S_k_c_)),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(S_k_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
subplot(2,pcols,2+1*pcols); 
imagesc_c(n_x_c_1,grid_k_c_1_,n_x_c_2,grid_k_c_2_,imag((S_k_c_)),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('imag(S_k_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,3+0*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
subplot(2,pcols,3+1*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,imag(S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('imag(S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,4+0*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('real(S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
subplot(2,pcols,4+1*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,imag(S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('imag(S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
set(gcf,'Position',1+[0,0,1024*2,1024]);
dir_trunk = sprintf('/data/rangan/dir_cryoem/dir_rangan_playhouse');
tmp_fname = sprintf('%s/dir_freq_march/dir_jpg/test_transforms_dr_0_A',dir_trunk);
disp(sprintf(' %% writing %s',sprintf('%s.jpg',tmp_fname)));
print('-djpeg',sprintf('%s.jpg',tmp_fname));
disp('returning'); return;
end;%if flag_disp;

%%%%%%%%;
% define quadrature mesh. ;
%%%%%%%%;
quad_n_r = ceil(1.5*n_r);
[r_x_,r_w_] = jacpts(quad_n_r,0,1); r_w_ = transpose(r_w_);
r_x_ = 0.5*(r_x_ + 1)*half_diameter_k_c;
r_w_ = half_diameter_k_c^2 * r_w_ / sum(r_w_);
quad_grid_k_p_r_ = r_x_;
quad_weight_k_p_r_ = r_w_;
quad_n_polar_a_ = zeros(quad_n_r,1);
for nr=0:quad_n_r-1; quad_n_polar_a_(1+nr) = ceil(pi*(quad_grid_k_p_r_(1+nr)+1)); end;%for nr=0:quad_n_r-1;
quad_n_w_ = 2*quad_n_polar_a_; quad_n_A = sum(quad_n_w_); quad_n_w_max = max(quad_n_w_);
quad_grid_k_p_1_ = zeros(1,quad_n_A); quad_grid_k_p_2_ = zeros(1,quad_n_A);
quad_weight_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
quad_grid_k_p_1_(1+na) = pi*tmp_k/half_diameter_k_c*cos(tmp_w_(1+nw));
quad_grid_k_p_2_(1+na) = pi*tmp_k/half_diameter_k_c*sin(tmp_w_(1+nw));
quad_weight_k_p_(1+na) = quad_weight_k_p_r_(1+nr) * pi/quad_n_w_(1+nr);
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
quad_S_k_p_ = nufft2d2(quad_n_A,quad_grid_k_p_1_,quad_grid_k_p_2_,-1,1e-12,n_x_c_1,n_x_c_2,(S_x_c_))/sqrt(n_x_c_1*n_x_c_2);
%disp(sprintf(' %% c16_alpha: %0.16f',1.0/sqrt(n_x_c_1*n_x_c_2)));
quad_S_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_S_k_p_);

flag_disp=0;
if flag_disp;
%%%%%%%%;
% plot S_k_p_ and S_k_q_, versus quad_S_k_p_ and quad_S_k_q_. ;
%%%%%%%%;
figure(1); pcols = 4;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,1+0*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
subplot(2,pcols,1+1*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,imag(S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('imag(S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,2+0*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('real(S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
subplot(2,pcols,2+1*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,imag(S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('imag(S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
subplot(2,pcols,3+0*pcols);
imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(quad_S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
subplot(2,pcols,3+1*pcols);
imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,imag(quad_S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('imag(quad_S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,4+0*pcols);
imagesc_q(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(quad_n_w_max/2*[-1,1]);
title('real(quad_S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
subplot(2,pcols,4+1*pcols);
imagesc_q(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,imag(quad_S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(quad_n_w_max/2*[-1,1]);
title('imag(quad_S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
set(gcf,'Position',1+[0,0,1024*2,1024]);
dir_trunk = sprintf('/data/rangan/dir_cryoem/dir_rangan_playhouse');
tmp_fname = sprintf('%s/dir_freq_march/dir_jpg/test_transforms_dr_0_B',dir_trunk);
disp(sprintf(' %% writing %s',sprintf('%s.jpg',tmp_fname)));
print('-djpeg',sprintf('%s.jpg',tmp_fname));
disp('returning'); return;
end;%if flag_disp;

%%%%%%%%;
% test quadrature with polynomial. ;
% P_k_p_ = tmp_k^tmp_p .* ( tmp_a + 0.5*cos(1*tmp_w) + 1.5*cos(2*tmp_w) + 2.5*cos(-3*tmp_w) ) ;
% integral should be 2*pi*tmp_a*half_diameter_k_c^(tmp_p+2)/(tmp_p+2). ;
%%%%%%%%;
tmp_p = 3.5; tmp_a = 1.2;
tmp_I = 2*pi*tmp_a*half_diameter_k_c^(tmp_p+2)/(tmp_p+2);
quad_P_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
quad_P_k_p_(1+na) = tmp_k^tmp_p .* ( tmp_a + 0.5*cos(1*tmp_w) + 1.5*cos(2*tmp_w) + 2.5*cos(-3*tmp_w) ) ;
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
quad_P_k_p_lim_ = mean(quad_P_k_p_(:)) + 1.5*std(quad_P_k_p_(:))*[-1,+1];
%imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_k_p_),quad_P_k_p_lim_,colormap(colormap_beach()));
disp(sprintf(' %% testing quadrature: error %0.16f',(sum(quad_P_k_p_.*quad_weight_k_p_) - tmp_I)./tmp_I));
%%%%%%%%;
% test equispaced grid_k_p_r_ with polynomial. ;
%%%%%%%%;
P_k_p_ = zeros(n_A,1);
na=0;
for nr=0:n_r-1;
tmp_k = grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,n_w_(1+nr)+1);
for nw=0:n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
P_k_p_(1+na) = tmp_k^tmp_p .* ( tmp_a + 0.5*cos(1*tmp_w) + 1.5*cos(2*tmp_w) + 2.5*cos(-3*tmp_w) ) ;
na=na+1;
end;%for nw=0:n_w_(1+nr)-1;
end;%for nr=0:n_r-1;
P_k_p_lim_ = mean(P_k_p_(:)) + 1.5*std(P_k_p_(:))*[-1,+1];
%imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(P_k_p_),P_k_p_lim_,colormap(colormap_beach()));
disp(sprintf(' %% testing uniform grid: error %0.16f',(sum(P_k_p_.*weight_k_p_) - tmp_I)./tmp_I));

%%%%%%%%;
% test quadrature with plane-wave. ;
% P_k_p_ = exp(+i*2*pi*k*fix_delta_x_p_r*cos(psi-fix_delta_x_p_w));
% I = besselj(0,2*pi*half_diameter_k_c*fix_delta_x_p_r) + besselj(2,2*pi*half_diameter_k_c*fix_delta_x_p_r);
%%%%%%%%;
IP = @(delta) besselj(0,2*pi*half_diameter_k_c*delta) + besselj(2,2*pi*half_diameter_k_c*delta);
fix_delta_x_c_ = 4*[0.85;0.15]/half_diameter_k_c; 
fix_delta_x_p_r = sqrt(sum(fix_delta_x_c_.^2)); fix_delta_x_p_w = atan2(fix_delta_x_c_(2),fix_delta_x_c_(1));
fix_I = IP(fix_delta_x_p_r);
quad_P_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
quad_P_k_p_(1+na) = exp(+i*2*pi*tmp_k*fix_delta_x_p_r*cos(tmp_w-fix_delta_x_p_w));
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
quad_P_k_p_lim_ = mean(quad_P_k_p_(:)) + 1.5*std(quad_P_k_p_(:))*[-1,+1];
%imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_k_p_),quad_P_k_p_lim_,colormap(colormap_beach()));
disp(sprintf(' %% testing quadrature: error %0.16f',(sum(quad_P_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2) - fix_I)./fix_I));
%%%%%%%%;
fix_delta_S_x_c_ = 4*[+0.75;+0.25]/half_diameter_k_c; 
fix_delta_S_x_p_r = sqrt(sum(fix_delta_S_x_c_.^2)); fix_delta_S_x_p_w = atan2(fix_delta_S_x_c_(2),fix_delta_S_x_c_(1));
fix_delta_M_x_c_ = 4*[-0.65;+0.65]/half_diameter_k_c; 
fix_delta_M_x_p_r = sqrt(sum(fix_delta_M_x_c_.^2)); fix_delta_M_x_p_w = atan2(fix_delta_M_x_c_(2),fix_delta_M_x_c_(1));
tmp_delta_Y_x_p_r = sqrt(sum((fix_delta_S_x_c_-fix_delta_M_x_c_).^2));
fix_I_SM = IP(tmp_delta_Y_x_p_r);
quad_P_S_k_p_ = zeros(quad_n_A,1);
quad_P_M_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
quad_P_S_k_p_(1+na) = exp(+i*2*pi*tmp_k*fix_delta_S_x_p_r*cos(tmp_w-fix_delta_S_x_p_w));
quad_P_M_k_p_(1+na) = exp(+i*2*pi*tmp_k*fix_delta_M_x_p_r*cos(tmp_w-fix_delta_M_x_p_w));
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
quad_I_SM = sum(conj(quad_P_S_k_p_).*quad_P_M_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2);
disp(sprintf(' %% testing quadrature: error %0.16f',(quad_I_SM - fix_I_SM)./fix_I_SM));
%%%%%%%%;
% test equispaced grid_k_p_r_ with plane-wave. ;
%%%%%%%%;
P_k_p_ = zeros(n_A,1);
na=0;
for nr=0:n_r-1;
tmp_k = grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,n_w_(1+nr)+1);
for nw=0:n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
P_k_p_(1+na) = exp(+i*2*pi*tmp_k*fix_delta_x_p_r*cos(tmp_w-fix_delta_x_p_w));
na=na+1;
end;%for nw=0:n_w_(1+nr)-1;
end;%for nr=0:n_r-1;
P_k_p_lim_ = mean(P_k_p_(:)) + 1.5*std(P_k_p_(:))*[-1,+1];
%imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(P_k_p_),P_k_p_lim_,colormap(colormap_beach()));
disp(sprintf(' %% testing uniform grid: error %0.16f',(sum(P_k_p_.*weight_k_p_)/(pi*half_diameter_k_c^2) - fix_I)./fix_I));

%%%%%%%%;
% convert P_k_p_ back into P_x_c_. ;
%%%%%%%%;
P_x_c_ = nufft2d1(quad_n_A,quad_grid_k_p_1_,quad_grid_k_p_2_,quad_P_k_p_.*quad_weight_k_p_,+1,1e-12,n_x_c_1,n_x_c_2) * quad_n_A / (pi*half_diameter_k_c^2);
I_x_c_ = zeros(n_x_c_1,n_x_c_2);
na=0;
for nx_c_2=0:n_x_c_2-1;
for nx_c_1=0:n_x_c_1-1;
test_delta_x_c_ = +fix_delta_x_c_ + [nx_c_1-floor(n_x_c_1/2) ; nx_c_2-floor(n_x_c_2/2)]/(2*half_diameter_k_c);
test_delta_x_p_r = sqrt(sum(test_delta_x_c_.^2)); test_delta_x_p_w = atan2(test_delta_x_c_(2),test_delta_x_c_(1));
I_x_c_(1+na) = IP(test_delta_x_p_r);
na=na+1;
end;%for nx_c_1=0:n_x_c_1-1;
end;%for nx_c_2=0:n_x_c_2-1;
I_x_c_lim_ = mean(real(I_x_c_(:))) + 1.5*std(real(I_x_c_(:)))*[-1,+1];
flag_disp=0;
if flag_disp;
subplot(1,3,1); imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((P_x_c_)),I_x_c_lim_,colormap(colormap_beach())); 
title('P_x_c_','Interpreter','none'); 
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
subplot(1,3,2); imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((I_x_c_)),I_x_c_lim_,colormap(colormap_beach())); 
title('I_x_c_','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
subplot(1,3,3); imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,log10(abs((P_x_c_ - I_x_c_))),[-12,0],colormap(colormap_beach())); 
title('log10(abs(P_x_c_ - I_x_c_))','Interpreter','none'); 
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image; colorbar;
figbig;
end;%if flag_disp;

%%%%%%%%;
% Now test the transformations between x_c and k_p. ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
T_k_p_ = nufft2d2(quad_n_A,quad_grid_k_p_1_,quad_grid_k_p_2_,-1,1e-12,n_x_c_1,n_x_c_2,(S_x_c_))/sqrt(n_x_c_1*n_x_c_2);
T_x_c_ = nufft2d1(quad_n_A,quad_grid_k_p_1_,quad_grid_k_p_2_,T_k_p_.*quad_weight_k_p_,+1,1e-12,n_x_c_1,n_x_c_2) * quad_n_A / sqrt(n_x_c_1*n_x_c_2);
subplot(1,3,1); imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,S_x_c_,S_x_c_lim_,colormap(colormap_beach())); 
title('S_x_c_','Interpreter','none'); 
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
subplot(1,3,2); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(T_k_p_),S_k_c_lim_,colormap(colormap_beach()));
title('T_k_p_','Interpreter','none'); 
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
subplot(1,3,3); imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real(T_x_c_),S_x_c_lim_,colormap(colormap_beach())); 
title('T_x_c_','Interpreter','none'); 
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis image;
figbig;
end;%if flag_disp;

%%%%%%%%;
% Now define an M_x_c_, etc. ; 
%%%%%%%%;
M_x_c_ = zeros(n_x_c_1*n_x_c_2,1);
M_x_c_ = M_x_c_ - 0.20*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(2*(grid_x_p_w_-pi/3.0)))).^2));
M_x_c_ = M_x_c_ + 0.15*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(3*(grid_x_p_w_-pi/5.5)))).^2));
M_x_c_ = M_x_c_ + 0.45*exp(-grid_x_p_r_.^2./(2*(1/16 * (2+cos(5*(grid_x_p_w_-pi/7.0)))).^2));
M_x_c_ = reshape(M_x_c_,n_x_c_1,n_x_c_2);
M_x_c_(find(grid_x_c_1_==0),find(grid_x_c_2_==0))=-0.5;
M_k_c_ = decenter2( fft2(recenter2(M_x_c_/sqrt(n_x_c_1*n_x_c_2))));
M_k_p_ = nufft2d2(n_A,grid_k_p_1_,grid_k_p_2_,-1,1e-12,n_x_c_1,n_x_c_2,(M_x_c_))/sqrt(n_x_c_1*n_x_c_2);
M_k_q_ = interp_p_to_q(n_r,n_w_,n_A,M_k_p_);
M_x_c_lim_ = 0 + 1.5*[-1,+1]*std(abs(M_x_c_(:)));
M_k_c_lim_ = 0 + 1.5*[-1,+1]*std(abs(M_k_c_(:)));
M_k_q_lim_ = 0 + 1.5*[-1,+1]*std(abs(M_k_q_(:)));
%%%%%%%%;
flag_disp=0;
if flag_disp;
%%%%%%%%;
% plot S_x_c_, etc. versus M_x_c_, etc. ;
%%%%%%%%;
figure(1); pcols = 4;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,1+0*pcols); 
imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((S_x_c_)),S_x_c_lim_,colormap(colormap_beach()));
xlim(diameter_x_c_1/2*[-1,1]);ylim(diameter_x_c_2/2*[-1,1]);
title('real(S_x_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
subplot(2,pcols,1+1*pcols); 
imagesc_c(n_x_c_1,grid_x_c_1_,n_x_c_2,grid_x_c_2_,real((M_x_c_)),M_x_c_lim_,colormap(colormap_beach()));
xlim(diameter_x_c_1/2*[-1,1]);ylim(diameter_x_c_2/2*[-1,1]);
title('real(M_x_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,2+0*pcols); 
imagesc_c(n_x_c_1,grid_k_c_1_,n_x_c_2,grid_k_c_2_,real((S_k_c_)),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(S_k_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
subplot(2,pcols,2+1*pcols); 
imagesc_c(n_x_c_1,grid_k_c_1_,n_x_c_2,grid_k_c_2_,real((M_k_c_)),M_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(M_k_c_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[],'Ydir','normal'); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,3+0*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_p_),S_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(S_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
subplot(2,pcols,3+1*pcols);
imagesc_p(n_r,grid_k_p_r_,n_w_,n_A,real(M_k_p_),M_k_c_lim_,colormap(colormap_beach()));
xlim(half_diameter_k_c*[-1,1]);ylim(half_diameter_k_c*[-1,1]);
title('real(M_k_p_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); axis square;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
subplot(2,pcols,4+0*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,real(S_k_q_),S_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('real(S_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
subplot(2,pcols,4+1*pcols);
imagesc_q(n_r,grid_k_p_r_,n_w_,n_A,real(M_k_q_),M_k_q_lim_,colormap(colormap_beach()));
xlim([0,half_diameter_k_c]);ylim(n_w_max/2*[-1,1]);
title('real(M_k_q_)','Interpreter','none');
set(gca,'XTick',[],'YTick',[]); 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
set(gcf,'Position',1+[0,0,1024*2,1024]);
dir_trunk = sprintf('/data/rangan/dir_cryoem/dir_rangan_playhouse');
tmp_fname = sprintf('%s/dir_freq_march/dir_jpg/test_transforms_dr_0_C',dir_trunk);
disp(sprintf(' %% writing %s',sprintf('%s.jpg',tmp_fname)));
print('-djpeg',sprintf('%s.jpg',tmp_fname));
disp('returning'); return;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now test out rotations. ;
%%%%%%%%;
X0_= zeros(n_w_max,1);
for nw=0:n_w_max-1;
gamma_z = 2*pi*nw/n_w_max;
T_k_p_ = rotate_p2p_fx(n_r,n_w_,n_A,S_k_p_,gamma_z);
X0_(1+nw) = innerproduct_p(n_r,grid_k_p_r_,n_w_,n_A,T_k_p_,M_k_p_);
end;%for nw=0:n_w_max-1;
X1_ = zeros(n_w_max,1);
T_q1_ = innerproduct_q_k_stretch_0(n_r,grid_k_p_r_,n_w_,n_A,S_k_q_,M_k_q_);
X1_ = ifft(T_q1_)*n_w_max; %<-- multiplication by n_w_max not needed in fortran fftw_plan_back. ;
%%%%%%%%;
disp(sprintf(' %% fnorm(X0_-X1_)/fnorm(X0_) = %0.16f',fnorm(X0_-X1_)/fnorm(X0_)));

%%%%%%%%;
% Now test SZxTRM. ;
%%%%%%%%;
disp(sprintf(' %% First: testing SZxTRM'));
fix_delta_C_x_c_ = +4*[+0.25;-0.15]/half_diameter_k_c; 
fix_delta_C_x_p_r = sqrt(sum(fix_delta_C_x_c_.^2)); fix_delta_C_x_p_w = atan2(fix_delta_C_x_c_(2),fix_delta_C_x_c_(1));
tmp_delta_Y_x_p_r = sqrt(sum((fix_delta_S_x_c_+fix_delta_C_x_c_-fix_delta_M_x_c_).^2));
fix_I_SCM = IP(tmp_delta_Y_x_p_r);
quad_P_C_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
quad_P_C_k_p_(1+na) = exp(+i*2*pi*tmp_k*fix_delta_C_x_p_r*cos(tmp_w-fix_delta_C_x_p_w));
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
quad_I_SCM = sum(conj(quad_P_C_k_p_.*quad_P_S_k_p_).*quad_P_M_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2);
disp(sprintf(' %% testing quadrature: error %0.16f',(quad_I_SCM - fix_I_SCM)./fix_I_SCM));
%%%%%%%%;
delta_est_ = +4.0*[-0.33;-0.55]/half_diameter_k_c; 
gamma_z_est = 2.0d0*pi*3.0d0/7.0d0;
delta_upd_ = +3.0*[-0.23;+0.95]/half_diameter_k_c;
%%%%%%%%;
quad_X1_ = zeros(quad_n_w_max,1);
quad_P_T_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_p_,+delta_upd_(1),+delta_upd_(2));
quad_P_R_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_T_k_p_);
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est);
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2));
quad_P_N_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_);
quad_T_q1_ = innerproduct_q_k_stretch_quad_0(quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_R_k_q_,quad_P_N_k_q_);
quad_X1_ = ifft(quad_T_q1_)*quad_n_w_max; %<-- multiplication by quad_n_w_max not needed in fortran fftw_plan_back. ;
quad_X1_ = quad_X1_/(2*pi*half_diameter_k_c^2);
%%%%%%%%;
quad_X0_ = zeros(quad_n_w_max,1);
fix_X0_ = zeros(quad_n_w_max,1);
fix_SX0_ = zeros(quad_n_w_max,1);
fix_MX0_ = zeros(quad_n_w_max,1);
R = @(gamma,delta_) [+cos(gamma),-sin(gamma);+sin(gamma),+cos(gamma)]*delta_ ;
%subplot(2,3,1); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_S_k_p_),[-1,+1],colormap(colormap_beach())); title('S');
quad_P_T_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_p_,+delta_upd_(1),+delta_upd_(2)); %<-- T_{+delta_upd} S ;
%subplot(2,3,2); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_T_k_p_),[-1,+1],colormap(colormap_beach())); title('T_{+delta_upd} S');
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;  %<-- conj(C)*M ;
%subplot(2,3,3); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_M_k_p_),[-1,+1],colormap(colormap_beach())); title('M');
%subplot(2,3,4); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_N_k_p_),[-1,+1],colormap(colormap_beach())); title('CM');
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est); %<-- R_{-gamma_est} conj(C)*M ;
%subplot(2,3,5); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_N_k_p_),[-1,+1],colormap(colormap_beach())); title('RCM');
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2)); %<-- T_{-delta_est} R_{-gamma_est} conj(C)*M ;
%subplot(2,3,6); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_P_N_k_p_),[-1,+1],colormap(colormap_beach())); title('TRCM');
for nw=0:quad_n_w_max-1;
gamma_z_upd = 2*pi*nw/quad_n_w_max;
quad_P_R_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_T_k_p_,+gamma_z_upd); %<-- R_{+gamma_z_upd} T_{+delta_upd} S ;
quad_X0_(1+nw) = sum(conj(quad_P_R_k_p_).*quad_P_N_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2); %<-- < R_{+gamma_z_upd} T_{+delta_upd} S , T_{-delta_est} R_{-gamma_est} conj(C)*M > ;
% TS = exp(-i*2*pi*dot(k,delta_upd)) * exp(+i*2*pi*dot(k,delta_S)) = exp(+i*2*pi*dot(k,delta_S-delta_upd));
% RTS = exp(+i*2*pi*dot(R_{-gamma_upd}k,delta_S-delta_upd)) = exp(+i*2*pi*dot(k,R_{+gamma_upd} * (delta_S-delta_upd))) ;
% CM = exp(-i*2*pi*dot(k,delta_C)) * exp(+i*2*pi*dot(k,delta_M)) = exp(+i*2*pi*dot(k,delta_M-delta_C)) ;
% RCM = exp(+i*2*pi*dot(R_{+gamma_est}k,delta_M-delta_C)) = exp(+i*2*pi*dot(k,R_{-gamma_est}(delta_M-delta_C))) ;
% TRCM = exp(+i*2*pi*dot(k,delta_est)) * exp(+i*2*pi*dot(k,R_{-gamma_est}(delta_M-delta_C))) = exp(+i*2*pi*dot(k,delta_est + R_{-gamma_est}(delta_M-delta_C))) ;
% <RTS,TRCM> = exp(-i*2*pi*dot(k,R_{+gamma_upd} * (delta_S-delta_upd))) * exp(+i*2*pi*dot(k,delta_est + R_{-gamma_est}(delta_M-delta_C))) ;
% <RTS,TRCM> = exp(+i*2*pi*dot(k,delta_est + R_{-gamma_est}(delta_M-delta_C) - R_{+gamma_upd} * (delta_S-delta_upd))) ;
fix_X0_(1+nw) = IP( fnorm( delta_est_ + R(-gamma_z_est,fix_delta_M_x_c_-fix_delta_C_x_c_) - R(+gamma_z_upd,fix_delta_S_x_c_-delta_upd_) ) );
fix_SX0_(1+nw) = IP( fnorm( delta_est_ + R(-gamma_z_est,fix_delta_M_x_c_-fix_delta_C_x_c_) - R(+gamma_z_upd,fix_delta_S_x_c_-delta_upd_) ) );
fix_MX0_(1+nw) = IP( fnorm( delta_est_ + R(-gamma_z_est,fix_delta_M_x_c_-fix_delta_C_x_c_) - (R(+gamma_z_upd,fix_delta_S_x_c_)-delta_upd_) ) );
end;%for nw=0:quad_n_w_max-1;
disp(sprintf(' %% quad_X1_ vs fix_X0_: error %0.16f',fnorm(quad_X1_-fix_X0_)/fnorm(fix_X0_)));
%%%%%%%%;
eps_svd = 1e-6;
flag_warning = 1;
dir_svd = '/data/rangan/dir_cryoem/dir_rangan_playground/dir_gen_Jsvd_6';
R_max = 2.0d0*pi*quad_grid_k_p_r_(1+quad_n_r-1);
K_max = quad_grid_k_p_r_(1+quad_n_r-1);
n_pixel = 4.50d0;
delta_max = n_pixel*sqrt(2.0d0)/2.0d0/K_max;
FTK = get_svd_FTK_2(eps_svd,quad_grid_k_p_r_,quad_n_r,1,delta_max,0,flag_warning,dir_svd);
FTK.n_delta_v = 1;
FTK.delta_x_ = delta_upd_(1);
FTK.delta_y_ = delta_upd_(2);
FTK.svd_d_max = delta_max;
FTK.svd_polyval_U_d_ = get_svd_polyval_U_d_0(FTK.svd_d_max,FTK.n_svd_d,FTK.svd_d_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_U_d_,FTK.n_delta_v,FTK.delta_x_,FTK.delta_y_);
FTK.svd_r_max = quad_grid_k_p_r_(1+quad_n_r-1);
FTK.svd_polyval_V_r_ = get_svd_polyval_V_r_0(FTK.svd_r_max,FTK.n_svd_r,FTK.svd_r_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_V_r_,quad_n_r,quad_grid_k_p_r_);
%%%%%%%%;
quad_X2_ = zeros(quad_n_w_max);
quad_P_S_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_S_k_p_);
quad_P_R_k_q_ = transf_svd_q_to_q_FTK_5(FTK,quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,+delta_upd_(1),+delta_upd_(2));
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est);
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2));
quad_P_N_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_);
quad_T_q2_ = innerproduct_q_k_stretch_quad_0(quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_R_k_q_,quad_P_N_k_q_);
quad_X2_ = ifft(quad_T_q2_)*quad_n_w_max; %<-- multiplication by quad_n_w_max not needed in fortran fftw_plan_back. ;
quad_X2_ = quad_X2_/(2*pi*half_diameter_k_c^2);
disp(sprintf(' %% eps_svd: %0.6f; quad_X2_ vs fix_X0_: error %0.16f',eps_svd,fnorm(quad_X2_-fix_X0_)/fnorm(fix_X0_)));
%%%%%%%%;
quad_X3_ = zeros(quad_n_w_max);
Z_S_svdd_ = innerproduct_q_k_svdd_FTK_4(1,FTK);
quad_P_S_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_S_k_p_);
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est);
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2));
quad_P_N_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_);
Z_S_svdr_ = innerproduct_q_k_svdr_quad_FTK_5(1,FTK,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,quad_P_N_k_q_)/(2*pi*half_diameter_k_c^2);
for nsvd_l=0:FTK.n_svd_l-1;
tmp_ij_ = nsvd_l + [0:quad_n_w_max-1]*FTK.n_svd_l;
Z_S_svdr_(1+tmp_ij_) = ifft(Z_S_svdr_(1+tmp_ij_))*quad_n_w_max;
end;%for nsvd_l=0:FTK.n_svd_l-1;
quad_X3_ = transpose(transpose(Z_S_svdd_)*reshape(Z_S_svdr_,FTK.n_svd_l,quad_n_w_max));
disp(sprintf(' %% eps_svd: %0.6f; quad_X3_ vs fix_X0_: error %0.16f',eps_svd,fnorm(quad_X3_-fix_X0_)/fnorm(fix_X0_)));
disp(sprintf(' %% eps_svd: %0.6f; quad_X3_ vs quad_X2_: error %0.16f',eps_svd,fnorm(quad_X3_-quad_X2_)/fnorm(quad_X2_)));
%%%%%%%%;
disp(sprintf(' %% now reducing accuracy of svd-expansion: '));
n_eps_svd = 11; eps_svd_ = 0.1.^linspace(1,6,n_eps_svd);
for neps_svd=1:n_eps_svd;
eps_svd = eps_svd_(neps_svd);
FTK = get_svd_FTK_2(eps_svd,quad_grid_k_p_r_,quad_n_r,1,delta_max,0,flag_warning,dir_svd);
FTK.n_delta_v = 1;
FTK.delta_x_ = delta_upd_(1);
FTK.delta_y_ = delta_upd_(2);
FTK.svd_d_max = delta_max;
FTK.svd_polyval_U_d_ = get_svd_polyval_U_d_0(FTK.svd_d_max,FTK.n_svd_d,FTK.svd_d_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_U_d_,FTK.n_delta_v,FTK.delta_x_,FTK.delta_y_);
FTK.svd_r_max = quad_grid_k_p_r_(1+quad_n_r-1);
FTK.svd_polyval_V_r_ = get_svd_polyval_V_r_0(FTK.svd_r_max,FTK.n_svd_r,FTK.svd_r_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_V_r_,quad_n_r,quad_grid_k_p_r_);
quad_X2_ = zeros(quad_n_w_max);
quad_P_S_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_S_k_p_);
quad_P_R_k_q_ = transf_svd_q_to_q_FTK_5(FTK,quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,+delta_upd_(1),+delta_upd_(2));
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est);
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2));
quad_P_N_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_);
quad_T_q2_ = innerproduct_q_k_stretch_quad_0(quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_R_k_q_,quad_P_N_k_q_);
quad_X2_ = ifft(quad_T_q2_)*quad_n_w_max; %<-- multiplication by quad_n_w_max not needed in fortran fftw_plan_back. ;
quad_X2_ = quad_X2_/(2*pi*half_diameter_k_c^2);
disp(sprintf(' %% eps_svd: %0.6f; quad_X2_ vs fix_X0_: error %0.16f',eps_svd,fnorm(quad_X2_-fix_X0_)/fnorm(fix_X0_)));
end;%for neps_svd=1:n_eps_svd;

%%%%%%%%;
% Now test SxZTRM. ;
%%%%%%%%;
disp(sprintf(' %% Second: testing SxZTRM'));
eps_svd = 1.0d-6;
FTK = get_svd_FTK_2(eps_svd,quad_grid_k_p_r_,quad_n_r,1,delta_max,0,flag_warning,dir_svd);
FTK.n_delta_v = 1;
FTK.delta_x_ = delta_upd_(1);
FTK.delta_y_ = delta_upd_(2);
FTK.svd_d_max = delta_max;
FTK.svd_polyval_U_d_ = get_svd_polyval_U_d_0(FTK.svd_d_max,FTK.n_svd_d,FTK.svd_d_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_U_d_,FTK.n_delta_v,FTK.delta_x_,FTK.delta_y_);
FTK.svd_r_max = quad_grid_k_p_r_(1+quad_n_r-1);
FTK.svd_polyval_V_r_ = get_svd_polyval_V_r_0(FTK.svd_r_max,FTK.n_svd_r,FTK.svd_r_,FTK.n_svd_l,FTK.svd_l_,FTK.svd_V_r_,quad_n_r,quad_grid_k_p_r_);
Z_S_svdd_ = innerproduct_q_k_svdd_FTK_4(1,FTK);
Z_M_svdd_ = innerproduct_q_k_svdd_FTK_4(0,FTK);
%%%%%%%%;
quad_P_S_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_S_k_p_);
quad_P_N_k_p_ = conj(quad_P_C_k_p_).*quad_P_M_k_p_;
quad_P_N_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_,-gamma_z_est);
quad_P_N_k_p_ = transf_p_to_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_N_k_p_,-delta_est_(1),-delta_est_(2));
quad_P_N_k_q_ = interp_p_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_N_k_p_);
Z_S_svdr_ = innerproduct_q_k_svdr_quad_FTK_5(1,FTK,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,quad_P_N_k_q_)/(2*pi*half_diameter_k_c^2);
for nsvd_l=0:FTK.n_svd_l-1;
tmp_ij_ = nsvd_l + [0:quad_n_w_max-1]*FTK.n_svd_l;
Z_S_svdr_(1+tmp_ij_) = ifft(Z_S_svdr_(1+tmp_ij_))*quad_n_w_max;
end;%for nsvd_l=0:FTK.n_svd_l-1;
Z_M_svdr_ = innerproduct_q_k_svdr_quad_FTK_5(0,FTK,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,quad_P_N_k_q_)/(2*pi*half_diameter_k_c^2);
for nsvd_l=0:FTK.n_svd_l-1;
tmp_ij_ = nsvd_l + [0:quad_n_w_max-1]*FTK.n_svd_l;
Z_M_svdr_(1+tmp_ij_) = ifft(Z_M_svdr_(1+tmp_ij_))*quad_n_w_max;
end;%for nsvd_l=0:FTK.n_svd_l-1;
quad_SX2_ = zeros(quad_n_w_max,1); quad_SX2_(:) = transpose(Z_S_svdd_)*reshape(Z_S_svdr_,FTK.n_svd_l,quad_n_w_max);
quad_MX2_ = zeros(quad_n_w_max,1); quad_MX2_(:) = transpose(Z_M_svdd_)*reshape(Z_M_svdr_,FTK.n_svd_l,quad_n_w_max);
quad_SX1_ = zeros(quad_n_w_max,1); 
quad_P_T_k_q_ = transf_svd_q_to_q_FTK_5(FTK,quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_S_k_q_,+delta_upd_(1),+delta_upd_(2));
for nw=0:quad_n_w_max-1;
gamma_z_upd = (2*pi*nw)/quad_n_w_max;
quad_P_R_k_q_ = rotate_q_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_T_k_q_,+gamma_z_upd);
quad_SX1_(1+nw) = sum(conj(quad_P_R_k_q_).*quad_P_N_k_q_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2); %<-- < R_{+gamma_z_upd} T_{+delta_upd} S , T_{-delta_est} R_{-gamma_est} conj(C)*M > ;
end;%for nw=0:quad_n_w_max-1;
disp(sprintf(' %% eps_svd: %0.6f; quad_SX2_ vs quad_SX1_: error %0.16f',eps_svd,fnorm(quad_SX2_-quad_SX1_)/fnorm(quad_SX1_)));
disp(sprintf(' %% eps_svd: %0.6f; quad_SX2_ vs fix_SX0_: error %0.16f',eps_svd,fnorm(quad_SX2_-fix_SX0_)/fnorm(fix_SX0_)));
%{
quad_MX1_ = zeros(quad_n_w_max,1);
for nw=0:quad_n_w_max-1;
gamma_z_upd = (2*pi*nw)/quad_n_w_max;
quad_P_R_k_q_ = rotate_q_to_q(quad_n_r,quad_n_w_,quad_n_A,quad_P_S_k_q_,+gamma_z_upd);
quad_P_R_k_q_ = transf_svd_q_to_q_FTK_5(FTK,quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,quad_P_R_k_q_,+delta_upd_(1),+delta_upd_(2));
quad_MX1_(1+nw) = sum(conj(quad_P_R_k_q_).*quad_P_N_k_q_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2); %<-- < T_{+delta_upd} R_{+gamma_z_upd} S , T_{-delta_est} R_{-gamma_est} conj(C)*M > ;
end;%for nw=0:quad_n_w_max-1;
disp(sprintf(' %% eps_svd: %0.6f; quad_MX2_ vs quad_MX1_: error %0.16f',eps_svd,fnorm(quad_MX2_-quad_MX1_)/fnorm(quad_MX1_)));
 %}
disp(sprintf(' %% eps_svd: %0.6f; quad_MX2_ vs fix_MX0_: error %0.16f',eps_svd,fnorm(quad_MX2_-fix_MX0_)/fnorm(fix_MX0_)));

%%%%%%%%;
% Now test CTF_R_S. ;
%%%%%%%%;
disp(sprintf(' %% Third: testing CTF_R_S'));
n_gamma_z_upd = quad_n_w_max;
gamma_z_upd_ = transpose(linspace(0,2*pi,n_gamma_z_upd+1)); gamma_z_upd_ = gamma_z_upd_(1:end-1);
quad_CTF_R_S_1__ = ti8_build_CTF_R_S_quad_3(1,n_gamma_z_upd,gamma_z_upd_,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,1,0,n_A,quad_P_S_k_p_,1,n_A,quad_P_C_k_p_)/sqrt(2*pi*half_diameter_k_c^2);
disp(sprintf(' %% quad_CTF_R_S_1__ error %0.16f',fnorm(quad_CTF_R_S_1__-1.0d0)/sqrt(n_gamma_z_upd)));
%%%%%%%%
quad_Y_S_k_p_ = zeros(quad_n_A,1); quad_Y_C_k_p_ = zeros(quad_n_A,1);
na=0;
for nr=0:quad_n_r-1;
tmp_k = quad_grid_k_p_r_(1+nr);
tmp_w_ = linspace(0,2*pi,quad_n_w_(1+nr)+1);
for nw=0:quad_n_w_(1+nr)-1;
tmp_w = tmp_w_(1+nw);
quad_Y_S_k_p_(1+na) = tmp_k*exp(-tmp_k^2/(2*half_diameter_k_c^2))*(cos(tmp_w-pi/3) - 0.5*cos(3*(tmp_w+pi/2)) + 0.25*cos(7*(tmp_w-pi/4)) - 0.125*cos(13*(tmp_w+pi/6)));
quad_Y_C_k_p_(1+na) = tmp_k*exp(-tmp_k^2/(2*half_diameter_k_c^2))*(cos(2*(tmp_w-0)) - 0.25*cos(5*(tmp_w+pi/12)) - 0.35*cos(4*(tmp_w-pi/2)) + 0.125*cos(9*(tmp_w+pi/6)) + 0.125*cos(17*(tmp_w-pi/5)));
na=na+1;
end;%for nw=0:quad_n_w_(1+nr)-1;
end;%for nr=0:quad_n_r-1;
%%%%%%%%;
Y_CTF_R_S_0__ = ti8_build_CTF_R_S_quad_3(1,n_gamma_z_upd,gamma_z_upd_,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,1,0,n_A,quad_Y_S_k_p_,1,n_A,quad_Y_C_k_p_)/sqrt(2*pi*half_diameter_k_c^2);
Y_CTF_R_S_1__ = zeros(n_gamma_z_upd,1);
for ngz=0:n_gamma_z_upd-1;
gamma_z_upd = gamma_z_upd_(1+ngz);
quad_Y_T_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_Y_S_k_p_,+gamma_z_upd);
quad_Y_R_k_p_ = quad_Y_C_k_p_.*quad_Y_T_k_p_;
Y_CTF_R_S_1__(1+ngz) = sqrt(sum(conj(quad_Y_R_k_p_).*quad_Y_R_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2));
end;%for ngz=0:n_gamma_z_upd-1;
%%%%%%%%;
n_gamma_z_nuf = 2*n_gamma_z_upd;
gamma_z_nuf_ = linspace(0,1,n_gamma_z_nuf+1);gamma_z_nuf_ = 2*pi*(gamma_z_nuf_(1:end-1).^2);
Y_CTF_R_S_2__ = ti8_build_CTF_R_S_quad_3(1,n_gamma_z_nuf,gamma_z_nuf_,quad_n_r,quad_grid_k_p_r_,quad_weight_k_p_r_,quad_n_w_,quad_n_A,1,0,n_A,quad_Y_S_k_p_,1,n_A,quad_Y_C_k_p_)/sqrt(2*pi*half_diameter_k_c^2);
Y_CTF_R_S_3__ = zeros(n_gamma_z_nuf,1);
for ngz=0:n_gamma_z_nuf-1;
gamma_z_nuf = gamma_z_nuf_(1+ngz);
quad_Y_T_k_p_ = rotate_p2p_fx(quad_n_r,quad_n_w_,quad_n_A,quad_Y_S_k_p_,+gamma_z_nuf);
quad_Y_R_k_p_ = quad_Y_C_k_p_.*quad_Y_T_k_p_;
Y_CTF_R_S_3__(1+ngz) = sqrt(sum(conj(quad_Y_R_k_p_).*quad_Y_R_k_p_.*quad_weight_k_p_)/(pi*half_diameter_k_c^2));
end;%for ngz=0:n_gamma_z_nuf-1;
%%%%%%%%;
%{
subplot(2,2,1); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_Y_S_k_p_),half_diameter_k_c*[-1,+1],colormap(colormap_beach())); title('Y_S','Interpreter','none');
subplot(2,2,2); imagesc_p(quad_n_r,quad_grid_k_p_r_,quad_n_w_,quad_n_A,real(quad_Y_C_k_p_),half_diameter_k_c*[-1,+1],colormap(colormap_beach())); title('Y_C','Interpreter','none');
subplot(2,2,3); plot(gamma_z_upd_,real(Y_CTF_R_S_0__),'k-',gamma_z_upd_,real(Y_CTF_R_S_1__),'ro');title('fftw: Y_CTF_R_S__','Interpreter','none');
subplot(2,2,4); plot(gamma_z_nuf_,real(Y_CTF_R_S_2__),'k-',gamma_z_nuf_,real(Y_CTF_R_S_3__),'ro');title('nufft: Y_CTF_R_S__','Interpreter','none');
figbig;
 %}
disp(sprintf(' %% Y_CTF_R_S_0__ vs Y_CTF_R_S_1__: error %0.16f',fnorm(Y_CTF_R_S_0__ - Y_CTF_R_S_1__)/fnorm(Y_CTF_R_S_1__)));
disp(sprintf(' %% Y_CTF_R_S_2__ vs Y_CTF_R_S_3__: error %0.16f',fnorm(Y_CTF_R_S_2__ - Y_CTF_R_S_3__)/fnorm(Y_CTF_R_S_3__)));

disp('returning');return;


