function M_p_ = rotate_p_to_p_lagrange(n_r,n_w_,n_A,S_p_,gamma);
% Assumes that M_p_ is the same size and dimensions as S_p_;
verbose=0;
% uses n_q==6 nodes. ;
n_q=6;

nt_ = zeros(n_q,1);
F_ = zeros(n_q,1);
q_ = zeros(n_q,1);
x_ = zeros(n_q,1);
d_ = zeros(n_q,1);
e_ = zeros(n_q,1);
Z_p_ = zeros(n_A,1);

x_(1+0) = 0.0d0;
x_(1+1) = 1.0d0;
x_(1+2) = 2.0d0;
x_(1+3) = 3.0d0;
x_(1+4) = 4.0d0;
x_(1+5) = 5.0d0;
d_(1+0) = ((x_(1+0)-x_(1+1))*(x_(1+0)-x_(1+2)) *(x_(1+0)-x_(1+3))*(x_(1+0)-x_(1+4))*(x_(1+0)-x_(1+5)));
d_(1+1) = ((x_(1+1)-x_(1+0))*(x_(1+1)-x_(1+2)) *(x_(1+1)-x_(1+3))*(x_(1+1)-x_(1+4))*(x_(1+1)-x_(1+5)));
d_(1+2) = ((x_(1+2)-x_(1+0))*(x_(1+2)-x_(1+1)) *(x_(1+2)-x_(1+3))*(x_(1+2)-x_(1+4))*(x_(1+2)-x_(1+5)));
d_(1+3) = ((x_(1+3)-x_(1+0))*(x_(1+3)-x_(1+1)) *(x_(1+3)-x_(1+2))*(x_(1+3)-x_(1+4))*(x_(1+3)-x_(1+5)));
d_(1+4) = ((x_(1+4)-x_(1+0))*(x_(1+4)-x_(1+1)) *(x_(1+4)-x_(1+2))*(x_(1+4)-x_(1+3))*(x_(1+4)-x_(1+5)));
d_(1+5) = ((x_(1+5)-x_(1+0))*(x_(1+5)-x_(1+1)) *(x_(1+5)-x_(1+2))*(x_(1+5)-x_(1+3))*(x_(1+5)-x_(1+4)));
e_(1+0) = 1.0d0/d_(1+0);
e_(1+1) = 1.0d0/d_(1+1);
e_(1+2) = 1.0d0/d_(1+2);
e_(1+3) = 1.0d0/d_(1+3);
e_(1+4) = 1.0d0/d_(1+4);
e_(1+5) = 1.0d0/d_(1+5);
pi2i = 1.0d0/(2.0d0*pi);

ic=0;
icstart=0;
for nr=0:n_r-1;
for nw=0:n_w_(1+nr)-1;
W_c = 0.0 + nw*(2*pi)/(n_w_(1+nr)) - gamma;
W_c = periodize(W_c,0.0,2.0*pi);
nt_pre = floor(W_c*n_w_(1+nr)/(2*pi));
nt_(1+0) = nt_pre - ceil(n_q*0.5d0) + 1 + 0;
nt_(1+1) = nt_pre - ceil(n_q*0.5d0) + 1 + 1;
nt_(1+2) = nt_pre - ceil(n_q*0.5d0) + 1 + 2;
nt_(1+3) = nt_pre - ceil(n_q*0.5d0) + 1 + 3;
nt_(1+4) = nt_pre - ceil(n_q*0.5d0) + 1 + 4;
nt_(1+5) = nt_pre - ceil(n_q*0.5d0) + 1 + 5;
nt_(1+0) = periodize(nt_(1+0),0,n_w_(1+nr));
nt_(1+1) = periodize(nt_(1+1),0,n_w_(1+nr));
nt_(1+2) = periodize(nt_(1+2),0,n_w_(1+nr));
nt_(1+3) = periodize(nt_(1+3),0,n_w_(1+nr));
nt_(1+4) = periodize(nt_(1+4),0,n_w_(1+nr));
nt_(1+5) = periodize(nt_(1+5),0,n_w_(1+nr));
F_(1+0) = S_p_(1 + icstart + nt_(1+0));
F_(1+1) = S_p_(1 + icstart + nt_(1+1));
F_(1+2) = S_p_(1 + icstart + nt_(1+2));
F_(1+3) = S_p_(1 + icstart + nt_(1+3));
F_(1+4) = S_p_(1 + icstart + nt_(1+4));
F_(1+5) = S_p_(1 + icstart + nt_(1+5));
x_tmp = W_c*n_w_(1+nr)*pi2i - (nt_pre - ceil(n_q*0.5d0) + 1 + 0);
q_(1+0) = ((x_tmp-x_(1+1))*(x_tmp-x_(1+2))*(x_tmp-x_(1+3))*(x_tmp-x_(1+4))*(x_tmp-x_(1+5)))*e_(1+0);
q_(1+1) = ((x_tmp-x_(1+0))*(x_tmp-x_(1+2))*(x_tmp-x_(1+3))*(x_tmp-x_(1+4))*(x_tmp-x_(1+5)))*e_(1+1);
q_(1+2) = ((x_tmp-x_(1+0))*(x_tmp-x_(1+1))*(x_tmp-x_(1+3))*(x_tmp-x_(1+4))*(x_tmp-x_(1+5)))*e_(1+2);
q_(1+3) = ((x_tmp-x_(1+0))*(x_tmp-x_(1+1))*(x_tmp-x_(1+2))*(x_tmp-x_(1+4))*(x_tmp-x_(1+5)))*e_(1+3);
q_(1+4) = ((x_tmp-x_(1+0))*(x_tmp-x_(1+1))*(x_tmp-x_(1+2))*(x_tmp-x_(1+3))*(x_tmp-x_(1+5)))*e_(1+4);
q_(1+5) = ((x_tmp-x_(1+0))*(x_tmp-x_(1+1))*(x_tmp-x_(1+2))*(x_tmp-x_(1+3))*(x_tmp-x_(1+4)))*e_(1+5);
if (verbose); disp(sprintf(' %% icstart %d; nr %d; n_w_(1+nr) %d; nw %d; W_c %f vs %f; nt_pre %d; nt_: %d %d %d %d %d %d; x %0.4f; q_ %0.2f %0.2f %0.2f %0.2f %0.2f %0.2f',icstart,nr,n_w_(1+nr),nw,W_c,nw*(2*pi)/n_w_(1+nr),nt_pre,nt_,x_tmp,q_)); end% if (verbose);
Z_p_(1+ic) = F_(1+0)*q_(1+0) + F_(1+1)*q_(1+1) + F_(1+2)*q_(1+2) + F_(1+3)*q_(1+3) + F_(1+4)*q_(1+4) + F_(1+5)*q_(1+5);
ic = ic + 1;
end;%for nw=0:n_w_(1+nr)-1;
icstart = icstart + n_w_(1+nr);
end;%for nr=0:n_r-1;
M_p_ = Z_p_;

