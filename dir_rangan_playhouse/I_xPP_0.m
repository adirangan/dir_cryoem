function ...
[ ...
 output ...
] = ...
I_xPP_0( ...
 K ...
,phi_S ...
,delta_S_ ...
,delta_E_ ...
);
%%%%%%%%;
% calculates the integral: ;
% \int_{k=0}^{K} \int_{psi=0}^{2*pi} conj[CTF * S] * E dpsi * kdk ;
% where: ;
% CTF = 2*k*cos(psi - phi_S) ;
% S   = exp( +i*2*pi*k*delta_S * cos(psi - omega_S) ) ;
% E   = exp( +i*2*pi*k*delta_E * cos(psi - omega_E) ) ;
% where: ;
% delta_S_ = delta_S * [cos(omega_S);sin(omega_S)] ;
% delta_E_ = delta_E * [cos(omega_E);sin(omega_E)] ;
%%%%%%%%;
str_thisfunction = 'I_xPP_0';

if nargin<1;
flag_verbose=1; flag_disp=0; nf=0;
if flag_verbose>0; disp(sprintf(' %% testing %s',str_thisfunction)); end;
%%%%%%%%;
% Now set up polar-quadrature-weights on disk. ;
%%%%%%%%;
k_int = 48;
k_eq_d_double = 0.25;
n_w_int = 4;
k_p_r_max = k_int/(2*pi); k_eq_d = k_eq_d_double/(2*pi); str_L = 'L';
[ ...
 n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
] = ...
get_weight_3d_1( ...
 flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_L ...
);
%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = n_w_int*2*(l_max_max+1); n_w_0in = n_w_max; n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%%%%%;
% Generate images, template and integral. ;
%%%%%%%%;
rng(3);
K = k_p_r_max;
phi_S = 2*pi*rand();
delta_S_ = 1e-1*2*pi*rand(2,1); delta_S = fnorm(delta_S_); omega_S = atan2(delta_S_(1+1),delta_S_(1+0));
delta_E_ = 1e-1*2*pi*rand(2,1); delta_E = fnorm(delta_E_); omega_E = atan2(delta_E_(1+1),delta_E_(1+0));
S_k_p_wk_ = exp(2*pi*i*k_p_r_wk_.*delta_S.*cos(k_p_w_wk_ - omega_S));
CTF_k_p_wk_ = 2*k_p_r_wk_.*cos(k_p_w_wk_ - phi_S);
E_k_p_wk_ = exp(2*pi*i*k_p_r_wk_.*delta_E.*cos(k_p_w_wk_ - omega_E));
%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig; p_row=2;p_col=2;np=0;
Slim_ = max(abs(S_k_p_wk_),[],'all')*[-1,+1];
Elim_ = max(abs(E_k_p_wk_),[],'all')*[-1,+1];
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(CTF_k_p_wk_.*S_k_p_wk_),Slim_); axis image; axisnotick; title('real(CTF_k_p_wk_.*S_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(CTF_k_p_wk_.*S_k_p_wk_),Slim_); axis image; axisnotick; title('imag(CTF_k_p_wk_.*S_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(E_k_p_wk_),Elim_); axis image; axisnotick; title('real(E_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(E_k_p_wk_),Elim_); axis image; axisnotick; title('imag(E_k_p_wk_)','Interpreter','none');
end;%if flag_disp;
%%%%;
output_qua = sum(conj(CTF_k_p_wk_.*S_k_p_wk_).*E_k_p_wk_.*weight_2d_wk_,'all')*(2*pi)^2;
[ ...
 output_mid ...
] = ...
I_xPP_0( ...
 K ...
,phi_S ...
,delta_S_ ...
,delta_E_ ...
);
%%%%;
fnorm_disp(flag_verbose,'output_qua',output_qua,'output_mid',output_mid,' %<-- should be small (e.g., <1e-6 if quadrature resolved)');
%%%%;
if flag_verbose>0; disp(sprintf(' %% returning')); end; return;
end;%if nargin<1;

na=0;
if (nargin<1+na); K=[]; end; na=na+1;
if (nargin<1+na); phi_S=[]; end; na=na+1;
if (nargin<1+na); delta_S_=[]; end; na=na+1;
if (nargin<1+na); delta_E_=[]; end; na=na+1;

if isempty(K); K = 48.0/(2*pi); end;
if isempty(phi_S); phi_S = 0.0*pi; end;
if isempty(delta_S_); delta_S_ = [1.0;0.0]; end;
if isempty(delta_E_); delta_E_ = [0.0;1.0]; end;

flag_1 = 1;

delta_T_ = delta_E_ - delta_S_ ;
delta_T = sqrt(delta_T_(1+0).^2 + delta_T_(1+1).^2) ;
omega_T = atan2(delta_T_(1+1),delta_T_(1+0)) ;
phi = phi_S - omega_T ;
t = 2*pi*delta_T ;
tK = t*K ;
b1 = besselj(1,tK);
b3 = besselj(3,tK);
output = i*pi*K.^3*cos(phi)*(b1 + b3);
