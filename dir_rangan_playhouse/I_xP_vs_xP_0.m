function ...
[ ...
 ssnll ...
,da_ssnll ...
,db_ssnll ...
,dc_ssnll ...
,dada_ssnll ...
,dadb_ssnll ...
,dadc_ssnll ...
,dbdb_ssnll ...
,dbdc_ssnll ...
,dcdc_ssnll ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da_delta_S_ ...
,db_delta_S_ ...
,dc_delta_S_ ...
,dada_delta_S_ ...
,dadb_delta_S_ ...
,dadc_delta_S_ ...
,dbdb_delta_S_ ...
,dbdc_delta_S_ ...
,dcdc_delta_S_ ...
);
%%%%%%%%;
% calculates the following integral: ;
% \int_{k=0}^{K} \int_{psi=0}^{2*pi} conj[CTF*S - M] * [CTF*S - M] dpsi * kdk ;
% where: ;
% CTF = 2*k*cos(psi - phi_S) ;
% S   = exp( +i*2*pi*k*delta_S * cos(psi - omega_S) ) ;
% M   = 2*k*cos(psi - phi_M) * exp( +i*2*pi*k*delta_M * cos(psi - omega_M) ) ;
% where: ;
% delta_S_ = delta_S * [cos(omega_S);sin(omega_S)] ;
% delta_M_ = delta_M * [cos(omega_M);sin(omega_M)] ;
%%%%;
% Derivatives are calculated with respect to perturbations in: ;
% delta_S_(1+0) and delta_S_(1+1). ;
%%%%%%%%;
str_thisfunction = 'I_xP_vs_xP_0';

if nargin<1;
flag_verbose=1; flag_disp=0; nf=0;
if flag_verbose>0; disp(sprintf(' %% testing %s',str_thisfunction)); end;
tolerance_dtau = 1e-5;
%%%%%%%%;
% Now set up polar-quadrature-weights on disk. ;
%%%%%%%%;
k_int = 48;
k_eq_d_double = 0.25;
n_w_int = 4;
k_p_r_max = k_int/(2*pi); k_eq_d = k_eq_d_double/(2*pi); str_L = 'L';
[ ...
 n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
] = ...
get_weight_3d_1( ...
 flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_L ...
);
%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = n_w_int*2*(l_max_max+1); n_w_0in = n_w_max; n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%%%%%;
% Generate images, template and integral. ;
%%%%%%%%;
rng(2);
K = k_p_r_max;
v_source_S = rand();
phi_S = 2*pi*rand();
delta_S_ = 1e-1*2*pi*rand(2,1); delta_S = fnorm(delta_S_); omega_S = atan2(delta_S_(1+1),delta_S_(1+0));
v_source_M = rand();
phi_M = 2*pi*rand();
delta_M_ = 1e-1*2*pi*rand(2,1); delta_M = fnorm(delta_M_); omega_M = atan2(delta_M_(1+1),delta_M_(1+0));
S_k_p_wk_ = v_source_S .* exp(2*pi*i*k_p_r_wk_.*delta_S.*cos(k_p_w_wk_ - omega_S));
CTF_k_p_wk_ = 2*k_p_r_wk_.*cos(k_p_w_wk_ - phi_S);
M_k_p_wk_ = 2*k_p_r_wk_.*cos(k_p_w_wk_ - phi_M) .* v_source_M .* exp(2*pi*i*k_p_r_wk_.*delta_M.*cos(k_p_w_wk_ - omega_M));
%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig; p_row=2;p_col=2;np=0;
Slim_ = max(abs(S_k_p_wk_),[],'all')*[-1,+1];
Mlim_ = max(abs(M_k_p_wk_),[],'all')*[-1,+1];
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(S_k_p_wk_),Slim_); axis image; axisnotick; title('real(S_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(S_k_p_wk_),Slim_); axis image; axisnotick; title('imag(S_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(M_k_p_wk_),Mlim_); axis image; axisnotick; title('real(M_k_p_wk_)','Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1; imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(M_k_p_wk_),Mlim_); axis image; axisnotick; title('imag(M_k_p_wk_)','Interpreter','none');
end;%if flag_disp;
%%%%;
ssnll_qua = sum(conj(CTF_k_p_wk_.*S_k_p_wk_ - M_k_p_wk_).*(CTF_k_p_wk_.*S_k_p_wk_ - M_k_p_wk_).*weight_2d_wk_,'all')*(2*pi)^2;
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing function-evaluation')); end;
%%%%%%%%;
[ ...
 ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
fnorm_disp(flag_verbose,'ssnll_qua',ssnll_qua,'ssnll_mid',ssnll_mid,' %<-- should be small (e.g., <1e-6 if quadrature resolved)');
%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing first-derivative (directional-derivative only, difference-quotient)')); end;
%%%%%%%%;
da = 1*0.6*tolerance_dtau;
db = 1*1.2*tolerance_dtau;
dc = 1*2.4*tolerance_dtau;
da_delta_S_ = rand(2,1);
db_delta_S_ = rand(2,1);
dc_delta_S_ = rand(2,1);
[ ...
 ssnll_mid ...
,da_ssnll_mid ...
,db_ssnll_mid ...
,dc_ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da_delta_S_ ...
,db_delta_S_ ...
,dc_delta_S_ ...
);
delta_S_pos_ = delta_S_ + da*da_delta_S_ + db*db_delta_S_ + dc*dc_delta_S_ ;
[ ...
 ssnll_pos ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_pos_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
delta_S_neg_ = delta_S_ - da*da_delta_S_ - db*db_delta_S_ - dc*dc_delta_S_ ;
[ ...
 ssnll_neg ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_neg_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
dtau_ssnll_dif = (+ ssnll_pos - ssnll_neg)/max(1e-12,2*fnorm((delta_S_pos_ - delta_S_neg_)/2));
dtau_ssnll_mid = (da*da_ssnll_mid + db*db_ssnll_mid + dc*dc_ssnll_mid)/max(1e-12,fnorm([da*da_delta_S_ + db*db_delta_S_ + dc*dc_delta_S_]));
fnorm_disp(flag_verbose,'dtau_ssnll_dif',dtau_ssnll_dif,'dtau_ssnll_mid',dtau_ssnll_mid);
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing first-derivative (directional-derivative only, taylor-series)')); end;
%%%%%%%%;
da = 1*0.6*tolerance_dtau;
db = 1*1.2*tolerance_dtau;
dc = 1*2.4*tolerance_dtau;
da_delta_S_ = rand(2,1);
db_delta_S_ = rand(2,1);
dc_delta_S_ = rand(2,1);
[ ...
 ssnll_mid ...
,da_ssnll_mid ...
,db_ssnll_mid ...
,dc_ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da*da_delta_S_ ...
,db*db_delta_S_ ...
,dc*dc_delta_S_ ...
);
delta_S_pos_ = delta_S_ + da*da_delta_S_ + db*db_delta_S_ + dc*dc_delta_S_ ;
[ ...
 ssnll_pos ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_pos_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
delta_S_neg_ = delta_S_ - da*da_delta_S_ - db*db_delta_S_ - dc*dc_delta_S_ ;
[ ...
 ssnll_neg ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_neg_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
ssnll_pos_est = ssnll_mid + da_ssnll_mid + db_ssnll_mid + dc_ssnll_mid ;
fnorm_disp(flag_verbose,'ssnll_pos',ssnll_pos,'ssnll_pos_est',ssnll_pos_est);
ssnll_neg_est = ssnll_mid - da_ssnll_mid - db_ssnll_mid - dc_ssnll_mid ;
fnorm_disp(flag_verbose,'ssnll_neg',ssnll_neg,'ssnll_neg_est',ssnll_neg_est);
ssnll_dif_est = ssnll_pos_est - ssnll_neg_est;
ssnll_dif_emp = ssnll_pos     - ssnll_neg    ;
fnorm_disp(flag_verbose,'ssnll_dif_emp',ssnll_dif_emp,'ssnll_dif_est',ssnll_dif_est);
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing second-derivative (directional-derivative only, mini difference-quotient)')); end;
%%%%%%%%;
da = 1*0.6*tolerance_dtau;
db = 1*1.2*tolerance_dtau;
dc = 1*2.4*tolerance_dtau;
da_delta_S_ = rand(2,1);
db_delta_S_ = rand(2,1);
dc_delta_S_ = rand(2,1);
[ ...
 ssnll_mid ...
,da_ssnll_mid ...
,db_ssnll_mid ...
,dc_ssnll_mid ...
,dada_ssnll_mid ...
,dadb_ssnll_mid ...
,dadc_ssnll_mid ...
,dbdb_ssnll_mid ...
,dbdc_ssnll_mid ...
,dcdc_ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da_delta_S_ ...
,db_delta_S_ ...
,dc_delta_S_ ...
);
delta_S_pos_ = ...
+ delta_S_ ...
+ da*da_delta_S_ ...
+ db*db_delta_S_ ...
+ dc*dc_delta_S_ ...
;
[ ...
 ssnll_pos ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_pos_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
delta_S_neg_ = ...
+ delta_S_ ...
- da*da_delta_S_ ...
- db*db_delta_S_ ...
- dc*dc_delta_S_ ...
;
[ ...
 ssnll_neg ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_neg_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
dtau_dtau_ssnll_dif = (+ ssnll_pos - 2*ssnll_mid + ssnll_neg)/max(1e-12,fnorm((delta_S_pos_ - delta_S_neg_)/2).^2);
dtau_dtau_ssnll_mid = ...
+ da*dada_ssnll_mid*da ...
+ da*dadb_ssnll_mid*db ...
+ da*dadc_ssnll_mid*dc ...
+ db*dadb_ssnll_mid*da ...
+ db*dbdb_ssnll_mid*db ...
+ db*dbdc_ssnll_mid*dc ...
+ dc*dadc_ssnll_mid*da ...
+ dc*dbdc_ssnll_mid*db ...
+ dc*dcdc_ssnll_mid*dc ...
;
dtau_dtau_ssnll_mid = dtau_dtau_ssnll_mid/max(1e-12,fnorm([da*da_delta_S_ + db*db_delta_S_ + dc*dc_delta_S_]).^2);
fnorm_disp(flag_verbose,'dtau_dtau_ssnll_dif',dtau_dtau_ssnll_dif,'dtau_dtau_ssnll_mid',dtau_dtau_ssnll_mid);
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing second-derivative (directional-derivative only, taylor-series)')); end;
%%%%%%%%;
da = 1*3.6*tolerance_dtau;
db = 1*1.2*tolerance_dtau;
dc = 1*2.4*tolerance_dtau;
da_delta_S_ = rand(2,1);
db_delta_S_ = rand(2,1);
dc_delta_S_ = rand(2,1);
dada_delta_S_ = rand(2,1);
dadb_delta_S_ = rand(2,1);
dadc_delta_S_ = rand(2,1);
dbdb_delta_S_ = rand(2,1);
dbdc_delta_S_ = rand(2,1);
dcdc_delta_S_ = rand(2,1);
[ ...
 ssnll_mid ...
,da_ssnll_mid ...
,db_ssnll_mid ...
,dc_ssnll_mid ...
,dada_ssnll_mid ...
,dadb_ssnll_mid ...
,dadc_ssnll_mid ...
,dbdb_ssnll_mid ...
,dbdc_ssnll_mid ...
,dcdc_ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da*da_delta_S_ ...
,db*db_delta_S_ ...
,dc*dc_delta_S_ ...
,da*dada_delta_S_*da ...
,da*dadb_delta_S_*db ...
,da*dadc_delta_S_*dc ...
,db*dbdb_delta_S_*db ...
,db*dbdc_delta_S_*dc ...
,dc*dcdc_delta_S_*dc ...
);
delta_S_pos_ = ...
+ delta_S_ ...
+ da*da_delta_S_ ...
+ db*db_delta_S_ ...
+ dc*dc_delta_S_ ...
+ 1.0*0.5*da*dada_delta_S_*da ...
+ 1.0*0.5*da*dadb_delta_S_*db ...
+ 1.0*0.5*da*dadc_delta_S_*dc ...
+ 1.0*0.5*db*dadb_delta_S_*da ...
+ 1.0*0.5*db*dbdb_delta_S_*db ...
+ 1.0*0.5*db*dbdc_delta_S_*dc ...
+ 1.0*0.5*dc*dadc_delta_S_*da ...
+ 1.0*0.5*dc*dbdc_delta_S_*db ...
+ 1.0*0.5*dc*dcdc_delta_S_*dc ...
;
[ ...
 ssnll_pos ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_pos_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
delta_S_neg_ = ...
+ delta_S_ ...
- da*da_delta_S_ ...
- db*db_delta_S_ ...
- dc*dc_delta_S_ ...
+ 1.0*0.5*da*dada_delta_S_*da ...
+ 1.0*0.5*da*dadb_delta_S_*db ...
+ 1.0*0.5*da*dadc_delta_S_*dc ...
+ 1.0*0.5*db*dadb_delta_S_*da ...
+ 1.0*0.5*db*dbdb_delta_S_*db ...
+ 1.0*0.5*db*dbdc_delta_S_*dc ...
+ 1.0*0.5*dc*dadc_delta_S_*da ...
+ 1.0*0.5*dc*dbdc_delta_S_*db ...
+ 1.0*0.5*dc*dcdc_delta_S_*dc ...
;
[ ...
 ssnll_neg ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_neg_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
ssnll_pos_est = ...
 + ssnll_mid ...
 + da_ssnll_mid ...
 + db_ssnll_mid ...
 + dc_ssnll_mid ...
 + 0.5*dada_ssnll_mid ...
 + 1.0*dadb_ssnll_mid ...
 + 1.0*dadc_ssnll_mid ...
 + 0.5*dbdb_ssnll_mid ...
 + 1.0*dbdc_ssnll_mid ...
 + 0.5*dcdc_ssnll_mid ...
;
fnorm_disp(flag_verbose,'ssnll_pos',ssnll_pos,'ssnll_pos_est',ssnll_pos_est);
ssnll_neg_est = ...
 + ssnll_mid ...
 - da_ssnll_mid ...
 - db_ssnll_mid ...
 - dc_ssnll_mid ...
 + 0.5*dada_ssnll_mid ...
 + 1.0*dadb_ssnll_mid ...
 + 1.0*dadc_ssnll_mid ...
 + 0.5*dbdb_ssnll_mid ...
 + 1.0*dbdc_ssnll_mid ...
 + 0.5*dcdc_ssnll_mid ...
;
fnorm_disp(flag_verbose,'ssnll_neg',ssnll_neg,'ssnll_neg_est',ssnll_neg_est);
ssnll_nabla_est = + ssnll_pos_est - 2*ssnll_mid + ssnll_neg_est;
ssnll_nabla_emp = + ssnll_pos     - 2*ssnll_mid + ssnll_neg    ;
fnorm_disp(flag_verbose,'ssnll_nabla_emp',ssnll_nabla_emp,'ssnll_nabla_est',ssnll_nabla_est);
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_verbose>0; disp(sprintf(' %% testing second-derivative (directional-derivative only, full difference-quotient)')); end;
%%%%%%%%;
da = 1*0.6*tolerance_dtau;
db = 1*1.2*tolerance_dtau;
dc = 1*2.4*tolerance_dtau;
da_delta_S_ = rand(2,1);
db_delta_S_ = rand(2,1);
dc_delta_S_ = rand(2,1);
dada_delta_S_ = rand(2,1);
dadb_delta_S_ = rand(2,1);
dadc_delta_S_ = rand(2,1);
dbdb_delta_S_ = rand(2,1);
dbdc_delta_S_ = rand(2,1);
dcdc_delta_S_ = rand(2,1);
[ ...
 ssnll_mid ...
,da_ssnll_mid ...
,db_ssnll_mid ...
,dc_ssnll_mid ...
,dada_ssnll_mid ...
,dadb_ssnll_mid ...
,dadc_ssnll_mid ...
,dbdb_ssnll_mid ...
,dbdc_ssnll_mid ...
,dcdc_ssnll_mid ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
,da_delta_S_ ...
,db_delta_S_ ...
,dc_delta_S_ ...
,dada_delta_S_ ...
,dadb_delta_S_ ...
,dadc_delta_S_ ...
,dbdb_delta_S_ ...
,dbdc_delta_S_ ...
,dcdc_delta_S_ ...
);
delta_S_pos_ = ...
+ delta_S_ ...
+ da*da_delta_S_ ...
+ db*db_delta_S_ ...
+ dc*dc_delta_S_ ...
+ 1.0*0.5*da*dada_delta_S_*da ...
+ 1.0*0.5*da*dadb_delta_S_*db ...
+ 1.0*0.5*da*dadc_delta_S_*dc ...
+ 1.0*0.5*db*dadb_delta_S_*da ...
+ 1.0*0.5*db*dbdb_delta_S_*db ...
+ 1.0*0.5*db*dbdc_delta_S_*dc ...
+ 1.0*0.5*dc*dadc_delta_S_*da ...
+ 1.0*0.5*dc*dbdc_delta_S_*db ...
+ 1.0*0.5*dc*dcdc_delta_S_*dc ...
;
[ ...
 ssnll_pos ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_pos_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
delta_S_neg_ = ...
+ delta_S_ ...
- da*da_delta_S_ ...
- db*db_delta_S_ ...
- dc*dc_delta_S_ ...
+ 1.0*0.5*da*dada_delta_S_*da ...
+ 1.0*0.5*da*dadb_delta_S_*db ...
+ 1.0*0.5*da*dadc_delta_S_*dc ...
+ 1.0*0.5*db*dadb_delta_S_*da ...
+ 1.0*0.5*db*dbdb_delta_S_*db ...
+ 1.0*0.5*db*dbdc_delta_S_*dc ...
+ 1.0*0.5*dc*dadc_delta_S_*da ...
+ 1.0*0.5*dc*dbdc_delta_S_*db ...
+ 1.0*0.5*dc*dcdc_delta_S_*dc ...
;
[ ...
 ssnll_neg ...
] = ...
I_xP_vs_xP_0( ...
 K ...
,v_source_S ...
,phi_S ...
,delta_S_neg_ ...
,v_source_M ...
,phi_M ...
,delta_M_ ...
);
dtau_dtau_ssnll_dif = (+ ssnll_pos - 2*ssnll_mid + ssnll_neg)/max(1e-12,fnorm((delta_S_pos_ - delta_S_neg_)/2).^2);
dtau_dtau_ssnll_mid = ...
+ da*dada_ssnll_mid*da ...
+ da*dadb_ssnll_mid*db ...
+ da*dadc_ssnll_mid*dc ...
+ db*dadb_ssnll_mid*da ...
+ db*dbdb_ssnll_mid*db ...
+ db*dbdc_ssnll_mid*dc ...
+ dc*dadc_ssnll_mid*da ...
+ dc*dbdc_ssnll_mid*db ...
+ dc*dcdc_ssnll_mid*dc ...
;
dtau_dtau_ssnll_mid = dtau_dtau_ssnll_mid/max(1e-12,fnorm([da*da_delta_S_ + db*db_delta_S_ + dc*dc_delta_S_]).^2);
fnorm_disp(flag_verbose,'dtau_dtau_ssnll_dif',dtau_dtau_ssnll_dif,'dtau_dtau_ssnll_mid',dtau_dtau_ssnll_mid);
%%%%%%%%;

if flag_verbose>0; disp(sprintf(' %% returning')); end; return;
end;%if nargin<1;

na=0;
if (nargin<1+na); K=[]; end; na=na+1;
if (nargin<1+na); v_source_S=[]; end; na=na+1;
if (nargin<1+na); phi_S=[]; end; na=na+1;
if (nargin<1+na); delta_S_=[]; end; na=na+1;
if (nargin<1+na); v_source_M=[]; end; na=na+1;
if (nargin<1+na); phi_M=[]; end; na=na+1;
if (nargin<1+na); delta_M_=[]; end; na=na+1;
if (nargin<1+na); da_delta_S_=[]; end; na=na+1;
if (nargin<1+na); db_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dc_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dada_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dadb_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dadc_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dbdb_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dbdc_delta_S_=[]; end; na=na+1;
if (nargin<1+na); dcdc_delta_S_=[]; end; na=na+1;

if isempty(K); K = 48.0/(2*pi); end;
if isempty(phi_S); v_source_S = 1.0; end;
if isempty(phi_S); phi_S = 0.0*pi; end;
if isempty(delta_S_); delta_S_ = [1.0;0.0]; end;
if isempty(phi_S); v_source_M = 1.0; end;
if isempty(phi_M); phi_M = 0.5*pi; end;
if isempty(delta_M_); delta_M_ = [0.0;1.0]; end;
if isempty(da_delta_S_); da_delta_S_ = zeros(2,1); end;
if isempty(db_delta_S_); db_delta_S_ = zeros(2,1); end;
if isempty(dc_delta_S_); dc_delta_S_ = zeros(2,1); end;
if isempty(dada_delta_S_); dada_delta_S_ = zeros(2,1); end;
if isempty(dadb_delta_S_); dadb_delta_S_ = zeros(2,1); end;
if isempty(dadc_delta_S_); dadc_delta_S_ = zeros(2,1); end;
if isempty(dbdb_delta_S_); dbdb_delta_S_ = zeros(2,1); end;
if isempty(dbdc_delta_S_); dbdc_delta_S_ = zeros(2,1); end;
if isempty(dcdc_delta_S_); dcdc_delta_S_ = zeros(2,1); end;

flag_1 = 1;
flag_d = nargout>=1+1;
flag_dd = nargout>=1+4;

ssnll = 0.0;
da_ssnll = 0.0;
db_ssnll = 0.0;
dc_ssnll = 0.0;
dada_ssnll = 0.0;
dadb_ssnll = 0.0;
dadc_ssnll = 0.0;
dbdb_ssnll = 0.0;
dbdc_ssnll = 0.0;
dcdc_ssnll = 0.0;

%%%%%%%%%%%%%%%%;
for ntype=0:4-1;
%%%%%%%%%%%%%%%%;
if ntype==0; tab_XS = 1; tab_XM = 0; tab_YS = 1; tab_YM = 0; tab_sgn = +1; end;
if ntype==1; tab_XS = 1; tab_XM = 0; tab_YS = 0; tab_YM = 1; tab_sgn = -1;  end;
if ntype==2; tab_XS = 0; tab_XM = 1; tab_YS = 1; tab_YM = 0; tab_sgn = -1;  end;
if ntype==3; tab_XS = 0; tab_XM = 1; tab_YS = 0; tab_YM = 1; tab_sgn = +1;  end;
%%%%%%%%;
tmp_v_source_X = tab_XS*v_source_S + tab_XM*v_source_M;
tmp_delta_X_ = tab_XS*delta_S_ + tab_XM*delta_M_; tmp_phi_X = tab_XS*phi_S + tab_XM*phi_M;
if flag_d;
da_delta_X_ = tab_XS*da_delta_S_ + tab_XM*zeros(2,1);
db_delta_X_ = tab_XS*db_delta_S_ + tab_XM*zeros(2,1);
dc_delta_X_ = tab_XS*dc_delta_S_ + tab_XM*zeros(2,1);
end;%if flag_d;
if flag_dd;
dada_delta_X_ = tab_XS*dada_delta_S_ + tab_XM*zeros(2,1);
dadb_delta_X_ = tab_XS*dadb_delta_S_ + tab_XM*zeros(2,1);
dadc_delta_X_ = tab_XS*dadc_delta_S_ + tab_XM*zeros(2,1);
dbdb_delta_X_ = tab_XS*dbdb_delta_S_ + tab_XM*zeros(2,1);
dbdc_delta_X_ = tab_XS*dbdc_delta_S_ + tab_XM*zeros(2,1);
dcdc_delta_X_ = tab_XS*dcdc_delta_S_ + tab_XM*zeros(2,1);
end;%if flag_dd;
%%%%%%%%;
tmp_v_source_Y = tab_YS*v_source_S + tab_YM*v_source_M;
tmp_delta_Y_ = tab_YS*delta_S_ + tab_YM*delta_M_; tmp_phi_Y = tab_YS*phi_S + tab_YM*phi_M;
if flag_d;
da_delta_Y_ = tab_YS*da_delta_S_ + tab_YM*zeros(2,1);
db_delta_Y_ = tab_YS*db_delta_S_ + tab_YM*zeros(2,1);
dc_delta_Y_ = tab_YS*dc_delta_S_ + tab_YM*zeros(2,1);
end;%if flag_d;
if flag_dd;
dada_delta_Y_ = tab_YS*dada_delta_S_ + tab_YM*zeros(2,1);
dadb_delta_Y_ = tab_YS*dadb_delta_S_ + tab_YM*zeros(2,1);
dadc_delta_Y_ = tab_YS*dadc_delta_S_ + tab_YM*zeros(2,1);
dbdb_delta_Y_ = tab_YS*dbdb_delta_S_ + tab_YM*zeros(2,1);
dbdc_delta_Y_ = tab_YS*dbdc_delta_S_ + tab_YM*zeros(2,1);
dcdc_delta_Y_ = tab_YS*dcdc_delta_S_ + tab_YM*zeros(2,1);
end;%if flag_dd;
%%%%%%%%;
if  flag_1 & ~flag_d & ~flag_dd;
[ ...
 tmp_output ...
] = ...
I_xPPx_0( ...
 K ...
,tmp_phi_X ...
,tmp_delta_X_ ...
,tmp_phi_Y ...
,tmp_delta_Y_ ...
);
end;%if  flag_1 & ~flag_d & ~flag_dd;
%%%%%%%%;
if  flag_1 &  flag_d & ~flag_dd;
[ ...
 tmp_output ...
,dX0_output ...
,dX1_output ...
,dY0_output ...
,dY1_output ...
] = ...
I_xPPx_0( ...
 K ...
,tmp_phi_X ...
,tmp_delta_X_ ...
,tmp_phi_Y ...
,tmp_delta_Y_ ...
);
end;%if  flag_1 &  flag_d & ~flag_dd;
%%%%%%%%;
if  flag_1 &  flag_d &  flag_dd;
[ ...
 tmp_output ...
,dX0_output ...
,dX1_output ...
,dY0_output ...
,dY1_output ...
,dX0dX0_output ...
,dX0dX1_output ...
,dX1dX0_output ...
,dX1dX1_output ...
,dX0dY0_output ...
,dX0dY1_output ...
,dX1dY0_output ...
,dX1dY1_output ...
,dY0dX0_output ...
,dY0dX1_output ...
,dY1dX0_output ...
,dY1dX1_output ...
,dY0dY0_output ...
,dY0dY1_output ...
,dY1dY0_output ...
,dY1dY1_output ...
] = ...
I_xPPx_0( ...
 K ...
,tmp_phi_X ...
,tmp_delta_X_ ...
,tmp_phi_Y ...
,tmp_delta_Y_ ...
);
end;%if  flag_1 &  flag_d &  flag_dd;
%%%%%%%%;
output = 0.0;
da_output = 0.0;
db_output = 0.0;
dc_output = 0.0;
dada_output = 0.0;
dadb_output = 0.0;
dadc_output = 0.0;
dbdb_output = 0.0;
dbdc_output = 0.0;
dcdc_output = 0.0;
%%%%%%%%;
output = output + tmp_output;
ssnll = ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * output;
if flag_d;
da_output = da_output ...
 + dX0_output*da_delta_X_(1+0) + dX1_output*da_delta_X_(1+1) ...
 + dY0_output*da_delta_Y_(1+0) + dY1_output*da_delta_Y_(1+1) ...
;
db_output = db_output ...
 + dX0_output*db_delta_X_(1+0) + dX1_output*db_delta_X_(1+1) ...
 + dY0_output*db_delta_Y_(1+0) + dY1_output*db_delta_Y_(1+1) ...
;
dc_output = dc_output ...
 + dX0_output*dc_delta_X_(1+0) + dX1_output*dc_delta_X_(1+1) ...
 + dY0_output*dc_delta_Y_(1+0) + dY1_output*dc_delta_Y_(1+1) ...
;
da_ssnll = da_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * da_output;
db_ssnll = db_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * db_output;
dc_ssnll = dc_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dc_output;
end;%if flag_d;
if flag_dd;
%%%%;
dada_output = dada_output ...
 + dX0_output*dada_delta_X_(1+0) ...
 + dX0dX0_output*da_delta_X_(1+0)*da_delta_X_(1+0) ...
 + dX1dX0_output*da_delta_X_(1+1)*da_delta_X_(1+0) ...
 + dY0dX0_output*da_delta_Y_(1+0)*da_delta_X_(1+0) ...
 + dY1dX0_output*da_delta_Y_(1+1)*da_delta_X_(1+0) ...
 + dX1_output*dada_delta_X_(1+1) ...
 + dX0dX1_output*da_delta_X_(1+0)*da_delta_X_(1+1) ...
 + dX1dX1_output*da_delta_X_(1+1)*da_delta_X_(1+1) ...
 + dY0dX1_output*da_delta_Y_(1+0)*da_delta_X_(1+1) ...
 + dY1dX1_output*da_delta_Y_(1+1)*da_delta_X_(1+1) ...
 + dY0_output*dada_delta_Y_(1+0) ...
 + dX0dY0_output*da_delta_X_(1+0)*da_delta_Y_(1+0) ...
 + dX1dY0_output*da_delta_X_(1+1)*da_delta_Y_(1+0) ...
 + dY0dY0_output*da_delta_Y_(1+0)*da_delta_Y_(1+0) ...
 + dY1dY0_output*da_delta_Y_(1+1)*da_delta_Y_(1+0) ...
 + dY1_output*dada_delta_Y_(1+1) ...
 + dX0dY1_output*da_delta_X_(1+0)*da_delta_Y_(1+1) ...
 + dX1dY1_output*da_delta_X_(1+1)*da_delta_Y_(1+1) ...
 + dY0dY1_output*da_delta_Y_(1+0)*da_delta_Y_(1+1) ...
 + dY1dY1_output*da_delta_Y_(1+1)*da_delta_Y_(1+1) ...
;
%%%%;
dadb_output = dadb_output ...
 + dX0_output*dadb_delta_X_(1+0) ...
 + dX0dX0_output*da_delta_X_(1+0)*db_delta_X_(1+0) ...
 + dX1dX0_output*da_delta_X_(1+1)*db_delta_X_(1+0) ...
 + dY0dX0_output*da_delta_Y_(1+0)*db_delta_X_(1+0) ...
 + dY1dX0_output*da_delta_Y_(1+1)*db_delta_X_(1+0) ...
 + dX1_output*dadb_delta_X_(1+1) ...
 + dX0dX1_output*da_delta_X_(1+0)*db_delta_X_(1+1) ...
 + dX1dX1_output*da_delta_X_(1+1)*db_delta_X_(1+1) ...
 + dY0dX1_output*da_delta_Y_(1+0)*db_delta_X_(1+1) ...
 + dY1dX1_output*da_delta_Y_(1+1)*db_delta_X_(1+1) ...
 + dY0_output*dadb_delta_Y_(1+0) ...
 + dX0dY0_output*da_delta_X_(1+0)*db_delta_Y_(1+0) ...
 + dX1dY0_output*da_delta_X_(1+1)*db_delta_Y_(1+0) ...
 + dY0dY0_output*da_delta_Y_(1+0)*db_delta_Y_(1+0) ...
 + dY1dY0_output*da_delta_Y_(1+1)*db_delta_Y_(1+0) ...
 + dY1_output*dadb_delta_Y_(1+1) ...
 + dX0dY1_output*da_delta_X_(1+0)*db_delta_Y_(1+1) ...
 + dX1dY1_output*da_delta_X_(1+1)*db_delta_Y_(1+1) ...
 + dY0dY1_output*da_delta_Y_(1+0)*db_delta_Y_(1+1) ...
 + dY1dY1_output*da_delta_Y_(1+1)*db_delta_Y_(1+1) ...
;
%%%%;
dadc_output = dadc_output ...
 + dX0_output*dadc_delta_X_(1+0) ...
 + dX0dX0_output*da_delta_X_(1+0)*dc_delta_X_(1+0) ...
 + dX1dX0_output*da_delta_X_(1+1)*dc_delta_X_(1+0) ...
 + dY0dX0_output*da_delta_Y_(1+0)*dc_delta_X_(1+0) ...
 + dY1dX0_output*da_delta_Y_(1+1)*dc_delta_X_(1+0) ...
 + dX1_output*dadc_delta_X_(1+1) ...
 + dX0dX1_output*da_delta_X_(1+0)*dc_delta_X_(1+1) ...
 + dX1dX1_output*da_delta_X_(1+1)*dc_delta_X_(1+1) ...
 + dY0dX1_output*da_delta_Y_(1+0)*dc_delta_X_(1+1) ...
 + dY1dX1_output*da_delta_Y_(1+1)*dc_delta_X_(1+1) ...
 + dY0_output*dadc_delta_Y_(1+0) ...
 + dX0dY0_output*da_delta_X_(1+0)*dc_delta_Y_(1+0) ...
 + dX1dY0_output*da_delta_X_(1+1)*dc_delta_Y_(1+0) ...
 + dY0dY0_output*da_delta_Y_(1+0)*dc_delta_Y_(1+0) ...
 + dY1dY0_output*da_delta_Y_(1+1)*dc_delta_Y_(1+0) ...
 + dY1_output*dadc_delta_Y_(1+1) ...
 + dX0dY1_output*da_delta_X_(1+0)*dc_delta_Y_(1+1) ...
 + dX1dY1_output*da_delta_X_(1+1)*dc_delta_Y_(1+1) ...
 + dY0dY1_output*da_delta_Y_(1+0)*dc_delta_Y_(1+1) ...
 + dY1dY1_output*da_delta_Y_(1+1)*dc_delta_Y_(1+1) ...
;
%%%%;
dbdb_output = dbdb_output ...
 + dX0_output*dbdb_delta_X_(1+0) ...
 + dX0dX0_output*db_delta_X_(1+0)*db_delta_X_(1+0) ...
 + dX1dX0_output*db_delta_X_(1+1)*db_delta_X_(1+0) ...
 + dY0dX0_output*db_delta_Y_(1+0)*db_delta_X_(1+0) ...
 + dY1dX0_output*db_delta_Y_(1+1)*db_delta_X_(1+0) ...
 + dX1_output*dbdb_delta_X_(1+1) ...
 + dX0dX1_output*db_delta_X_(1+0)*db_delta_X_(1+1) ...
 + dX1dX1_output*db_delta_X_(1+1)*db_delta_X_(1+1) ...
 + dY0dX1_output*db_delta_Y_(1+0)*db_delta_X_(1+1) ...
 + dY1dX1_output*db_delta_Y_(1+1)*db_delta_X_(1+1) ...
 + dY0_output*dbdb_delta_Y_(1+0) ...
 + dX0dY0_output*db_delta_X_(1+0)*db_delta_Y_(1+0) ...
 + dX1dY0_output*db_delta_X_(1+1)*db_delta_Y_(1+0) ...
 + dY0dY0_output*db_delta_Y_(1+0)*db_delta_Y_(1+0) ...
 + dY1dY0_output*db_delta_Y_(1+1)*db_delta_Y_(1+0) ...
 + dY1_output*dbdb_delta_Y_(1+1) ...
 + dX0dY1_output*db_delta_X_(1+0)*db_delta_Y_(1+1) ...
 + dX1dY1_output*db_delta_X_(1+1)*db_delta_Y_(1+1) ...
 + dY0dY1_output*db_delta_Y_(1+0)*db_delta_Y_(1+1) ...
 + dY1dY1_output*db_delta_Y_(1+1)*db_delta_Y_(1+1) ...
;
%%%%;
dbdc_output = dbdc_output ...
 + dX0_output*dbdc_delta_X_(1+0) ...
 + dX0dX0_output*db_delta_X_(1+0)*dc_delta_X_(1+0) ...
 + dX1dX0_output*db_delta_X_(1+1)*dc_delta_X_(1+0) ...
 + dY0dX0_output*db_delta_Y_(1+0)*dc_delta_X_(1+0) ...
 + dY1dX0_output*db_delta_Y_(1+1)*dc_delta_X_(1+0) ...
 + dX1_output*dbdc_delta_X_(1+1) ...
 + dX0dX1_output*db_delta_X_(1+0)*dc_delta_X_(1+1) ...
 + dX1dX1_output*db_delta_X_(1+1)*dc_delta_X_(1+1) ...
 + dY0dX1_output*db_delta_Y_(1+0)*dc_delta_X_(1+1) ...
 + dY1dX1_output*db_delta_Y_(1+1)*dc_delta_X_(1+1) ...
 + dY0_output*dbdc_delta_Y_(1+0) ...
 + dX0dY0_output*db_delta_X_(1+0)*dc_delta_Y_(1+0) ...
 + dX1dY0_output*db_delta_X_(1+1)*dc_delta_Y_(1+0) ...
 + dY0dY0_output*db_delta_Y_(1+0)*dc_delta_Y_(1+0) ...
 + dY1dY0_output*db_delta_Y_(1+1)*dc_delta_Y_(1+0) ...
 + dY1_output*dbdc_delta_Y_(1+1) ...
 + dX0dY1_output*db_delta_X_(1+0)*dc_delta_Y_(1+1) ...
 + dX1dY1_output*db_delta_X_(1+1)*dc_delta_Y_(1+1) ...
 + dY0dY1_output*db_delta_Y_(1+0)*dc_delta_Y_(1+1) ...
 + dY1dY1_output*db_delta_Y_(1+1)*dc_delta_Y_(1+1) ...
;
%%%%;
dcdc_output = dcdc_output ...
 + dX0_output*dcdc_delta_X_(1+0) ...
 + dX0dX0_output*dc_delta_X_(1+0)*dc_delta_X_(1+0) ...
 + dX1dX0_output*dc_delta_X_(1+1)*dc_delta_X_(1+0) ...
 + dY0dX0_output*dc_delta_Y_(1+0)*dc_delta_X_(1+0) ...
 + dY1dX0_output*dc_delta_Y_(1+1)*dc_delta_X_(1+0) ...
 + dX1_output*dcdc_delta_X_(1+1) ...
 + dX0dX1_output*dc_delta_X_(1+0)*dc_delta_X_(1+1) ...
 + dX1dX1_output*dc_delta_X_(1+1)*dc_delta_X_(1+1) ...
 + dY0dX1_output*dc_delta_Y_(1+0)*dc_delta_X_(1+1) ...
 + dY1dX1_output*dc_delta_Y_(1+1)*dc_delta_X_(1+1) ...
 + dY0_output*dcdc_delta_Y_(1+0) ...
 + dX0dY0_output*dc_delta_X_(1+0)*dc_delta_Y_(1+0) ...
 + dX1dY0_output*dc_delta_X_(1+1)*dc_delta_Y_(1+0) ...
 + dY0dY0_output*dc_delta_Y_(1+0)*dc_delta_Y_(1+0) ...
 + dY1dY0_output*dc_delta_Y_(1+1)*dc_delta_Y_(1+0) ...
 + dY1_output*dcdc_delta_Y_(1+1) ...
 + dX0dY1_output*dc_delta_X_(1+0)*dc_delta_Y_(1+1) ...
 + dX1dY1_output*dc_delta_X_(1+1)*dc_delta_Y_(1+1) ...
 + dY0dY1_output*dc_delta_Y_(1+0)*dc_delta_Y_(1+1) ...
 + dY1dY1_output*dc_delta_Y_(1+1)*dc_delta_Y_(1+1) ...
;
%%%%;
dada_ssnll = dada_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dada_output;
dadb_ssnll = dadb_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dadb_output;
dadc_ssnll = dadc_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dadc_output;
dbdb_ssnll = dbdb_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dbdb_output;
dbdc_ssnll = dbdc_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dbdc_output;
dcdc_ssnll = dcdc_ssnll + tab_sgn * tmp_v_source_X * tmp_v_source_Y * dcdc_output;
%%%%;
end;%if flag_dd;
%%%%%%%%%%%%%%%%;
end;%for ntype=0:4-1;
%%%%%%%%%%%%%%%%;
