
weight_2d_k_all_scaled_ = weight_2d_k_all_*4*pi^2;
CTF_k_p_r_xavg_k_ = mean(CTF_k_p_r_kC__(:,1+index_nCTF_from_nM_),2);
S_k_q_wkS___ = reshape(S_k_q_wkS__,[n_w_max,n_k_p_r,n_S]);
CTF_S_k_q_wkS___ = bsxfun(@times,S_k_q_wkS___,reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1]));
CTF_S_k_q_kwS___ = permute(CTF_S_k_q_wkS___,[2,1,3]);
M_k_q_wkM___ = reshape(M_k_q_wkM__,[n_w_max,n_k_p_r,n_M]);
M_k_q_kwM___ = permute(M_k_q_wkM___,[2,1,3]);
%%%%%%%%;
set temporary array dimensions. ;
tmp_n_S = n_S;
tmp_n_M = n_M;
tmp_n_S = min(tmp_n_S,n_S);
tmp_n_M = min(tmp_n_M,n_M);
%%%%%%%%;
tot_t_fill_ = zeros(n_UX_rank,1);
tot_t_mult_ = zeros(n_UX_rank,1);
tot_t_ifft_ = zeros(n_UX_rank,1);
tot_o_fill_ = zeros(n_UX_rank,1);
tot_o_mult_ = zeros(n_UX_rank,1);
tot_o_ifft_ = zeros(n_UX_rank,1);
X_wSMe___ = zeros(n_w_max,n_S,n_M);
X_wSM0___ = zeros(n_w_max,n_S,n_M);
corr_X_X_n_ = zeros(n_UX_rank,1);
prct_X_X_n_ = zeros(n_UX_rank,1);
for nUX_rank=[n_UX_rank-1:-1:0];%for nUX_rank=n_UX_rank-1:-1:0
pm_n_UX_rank = 1+nUX_rank;
if (verbose); disp(sprintf(' %% pm_n_UX_rank %d/%d',pm_n_UX_rank,n_UX_rank)); end;
tmp_UX_weight_kn__ = diag(X_weight_r_)*UX_S_avg_kn__(:,1:pm_n_UX_rank);
tmp_SX_k_ = SX_S_avg_k_(1:pm_n_UX_rank);
%%%%%%%%;
%%%%;
n_M_batch = ceil(n_M/tmp_n_M); n_S_batch = ceil(n_S/tmp_n_S);
for nS_batch=0:n_S_batch-1;
tmp_index_nS_ = nS_batch*tmp_n_S + [0:tmp_n_S-1]; tmp_index_nS_ = intersect(tmp_index_nS_,[0:n_S-1]);
tmp_CTF_S_k_q_kwS___ = CTF_S_k_q_kwS___(:,:,1+tmp_index_nS_);
tmp_t = tic();
UX_weight_CTF_S_k_q_nwS___ = reshape(transpose(tmp_UX_weight_kn__)*reshape(tmp_CTF_S_k_q_kwS___,[n_k_p_r,n_w_max*tmp_n_S]),[pm_n_UX_rank,n_w_max,tmp_n_S]);
UX_weight_conj_CTF_S_k_q_Snw___ = conj(permute(UX_weight_CTF_S_k_q_nwS___,[3,1,2]));
tmp_o = pm_n_UX_rank*n_k_p_r*n_w_max*(tmp_n_M + tmp_n_S);
tmp_t = toc(tmp_t); if (verbose>2); disp(sprintf(' %% fill: %0.3fs --> %0.2fGHz',tmp_t,tmp_o/tmp_t/1e9)); end;
tot_o_fill_(1+nUX_rank) = tot_o_fill_(1+nUX_rank) + tmp_o;
tot_t_fill_(1+nUX_rank) = tot_t_fill_(1+nUX_rank) + tmp_t;
for nM_batch=0:n_M_batch-1;
tmp_index_nM_ = nM_batch*tmp_n_M + [0:tmp_n_M-1]; tmp_index_nM_ = intersect(tmp_index_nM_,[0:n_M-1]);
tmp_M_k_q_kwM___ = M_k_q_kwM___(:,:,1+tmp_index_nM_);
%%%%;
tmp_t = tic();
UX_weight_M_k_q_nwM___ = reshape(transpose(tmp_UX_weight_kn__)*reshape(tmp_M_k_q_kwM___,[n_k_p_r,n_w_max*tmp_n_M]),[pm_n_UX_rank,n_w_max,tmp_n_M]);
UX_weight_M_k_q_nMw___ = permute(UX_weight_M_k_q_nwM___,[1,3,2]);
tmp_o = pm_n_UX_rank*n_k_p_r*n_w_max*(tmp_n_M + tmp_n_S);
tmp_t = toc(tmp_t); if (verbose>2); disp(sprintf(' %% fill: %0.3fs --> %0.2fGHz',tmp_t,tmp_o/tmp_t/1e9)); end;
tot_o_fill_(1+nUX_rank) = tot_o_fill_(1+nUX_rank) + tmp_o;
tot_t_fill_(1+nUX_rank) = tot_t_fill_(1+nUX_rank) + tmp_t;
%%%%;
tmp_t = tic();
conj_S_CTF_weight_weight_M_k_q_SMw___ = zeros(tmp_n_S,tmp_n_M,n_w_max);
for nw=0:n_w_max-1;
conj_S_CTF_weight_weight_M_k_q_SMw___(:,:,1+nw) = UX_weight_conj_CTF_S_k_q_Snw___(:,:,1+nw) * UX_weight_M_k_q_nMw___(:,:,1+nw);
end;%for nw=0:n_w_max-1;
tmp_o = n_w_max * tmp_n_S * tmp_n_M * pm_n_UX_rank;
tmp_t = toc(tmp_t); if (verbose>2); disp(sprintf(' %% mult: %0.3fs --> %0.2fGHz',tmp_t,tmp_o/tmp_t/1e9)); end;
tot_o_mult_(1+nUX_rank) = tot_o_mult_(1+nUX_rank) + tmp_o;
tot_t_mult_(1+nUX_rank) = tot_t_mult_(1+nUX_rank) + tmp_t;
%%%%;
tmp_t = tic();
ifft_conj_S_CTF_weight_weight_M_k_q_wSM___ = ifft(permute(conj_S_CTF_weight_weight_M_k_q_SMw___,[3,1,2]),[],1);
tmp_o = tmp_n_S * tmp_n_M * n_w_max * log(n_w_max);
tmp_t = toc(tmp_t); if (verbose>2); disp(sprintf(' %% ifft: %0.3fs --> %0.2fGHz',tmp_t,tmp_o/tmp_t/1e9)); end;
tot_o_ifft_(1+nUX_rank) = tot_o_ifft_(1+nUX_rank) + tmp_o;
tot_t_ifft_(1+nUX_rank) = tot_t_ifft_(1+nUX_rank) + tmp_t;
X_wSM___(:,1+tmp_index_nS_,1+tmp_index_nM_) = real(ifft_conj_S_CTF_weight_weight_M_k_q_wSM___);
%%%%;
end;end;%for nM_batch=0:n_M_batch-1; for nS_batch=0:n_S_batch-1;
if (verbose>1); disp(sprintf(' %% tot_t_fill %0.3fs --> %0.2fGH',tot_t_fill_(1+nUX_rank),tot_o_fill_(1+nUX_rank)/tot_t_fill_(1+nUX_rank)/1e9)); end;
if (verbose>1); disp(sprintf(' %% tot_t_mult %0.3fs --> %0.2fGH',tot_t_mult_(1+nUX_rank),tot_o_mult_(1+nUX_rank)/tot_t_mult_(1+nUX_rank)/1e9)); end;
if (verbose>1); disp(sprintf(' %% tot_t_ifft %0.3fs --> %0.2fGH',tot_t_ifft_(1+nUX_rank),tot_o_ifft_(1+nUX_rank)/tot_t_ifft_(1+nUX_rank)/1e9)); end;
if (nUX_rank==n_UX_rank-1);
X_wSMe___ = X_wSM___;
end;%if (nUX_rank==n_UX_rank-1);
X_wSM0___ = X_wSM___; 
corr_X_X = corr(X_wSMe___(:),X_wSM0___(:));
corr_X_X_n_(1+nUX_rank) = corr_X_X;
[~,tmp_nw_SM_] = max(X_wSM0___,[],1); tmp_nw_SM_ = tmp_nw_SM_-1;
tmp_X_SM___ = zeros(1,n_S,n_M);
for nM=0:n_M-1; for nS=0:n_S-1;
tmp_nw = tmp_nw_SM_(1,1+nS,1+nM);
tmp_X = X_wSMe___(1+tmp_nw,1+nS,1+nM);
tmp_X_SM___(1,1+nS,1+nM) = tmp_X;
end;end;%for nM=0:n_M-1; for nS=0:n_S-1;
tmp_X_SM___ = repmat(tmp_X_SM___,[n_w_max,1,1]);
tmp_X_SM___ = X_wSMe___ > tmp_X_SM___;
tmp_p__ = sum(tmp_X_SM___,1)/n_w_max;
tmp_p = mean(tmp_p__,'all');
prct_X_X_n_(1+nUX_rank) = tmp_p;
%%%%%%%%;
tmp_t = tic();
gamma_z_ = 2*pi*[0:n_w_max-1]/n_w_max;
nS=3; nM=1;
X1_w_ = X_wSM___(:,1+nS,1+nM);
X0_w_ = zeros(n_w_max,1);
for nw=0:n_w_max-1;
gamma_z = 2*pi*nw/n_w_max;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS); M_k_p_wk_ = M_k_p_wkM__(:,1+nM);
T_k_p_wk_ = reshape(reshape(S_k_p_wk_,[n_w_max,n_k_p_r])*diag(CTF_k_p_r_xavg_k_),[n_w_max*n_k_p_r,1]);
N_k_p_wk_ = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,M_k_p_wk_,-gamma_z);
X0_w_(1+nw) = real(sum(conj(T_k_p_wk_).*N_k_p_wk_.*weight_2d_k_all_scaled_));
end;%for nw=0:n_w_max-1;
tmp_o = n_w_max * n_k_p_r * n_w_max;
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% test: %0.3fs --> %0.2fGHz',tmp_t,tmp_o/tmp_t/1e9)); end;
if (verbose); disp(sprintf(' %% X0_w_ vs X1_w_: %0.16f',fnorm(X0_w_-X1_w_)/fnorm(X0_w_))); end;
end;%for nUX_rank=0:n_UX_rank-1;
