str_thisfunction = 'test_interpolate_template_gpu_5';

platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;

flag_verbose = 1; %<-- verbosity level. ;
flag_disp=1; nf=0; %<-- display level. ;

k_int = 16; %<-- highest frequency (2*pi*k_p_r_max), watch out for aliasing! ;
k_eq_d_double = 1.0; %<-- prefactor for k_eq_d, determines density of sampling in frequency-space. ;
template_k_eq_d_double = 1.0; %<-- prefactor for template_k_eq_d, determines density of sampling in frequency-space. ;
n_w_int = 1.0; %<-- prefactor for n_w_max, determines the number of distinct angles (i.e., n_gamma_z) used in frequency-space 2d-polar-grid. ;

dir_base = sprintf('/%s/rangan/dir_cryoem/dir_rangan_gpu',string_root);
dir_jpg = sprintf('%s/dir_jpg',dir_base);
if (~exist(dir_jpg,'dir')); disp(sprintf(' %% mkdir %s',dir_jpg)); mkdir(dir_jpg); end;

%%%%%%%%;
% First define integral of <f,f>. ;
%%%%%%%%;
h2d_ = @(kd) 4*pi^2*(besselj(0,kd) + besselj(2,kd)); % calculates <f_j,f_k>, normalized so that <f,f> = (4*pi^2);
dh2d_ = @(kd) 4*pi^3*(besselj(-1,kd) - besselj(+3,kd));
h3d_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3;
dh3d_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;

%%%%%%%%;
% Set up quadrature on the sphere. ;
%%%%%%%%;
k_p_r_max = 48.0/(2*pi); 
k_eq_d_double = 1.0/1.0;
k_eq_d = k_eq_d_double/(2*pi);
flag_uniform_over_n_k_p_r = 1;
flag_uniform_over_polar_a = 0;
str_T_vs_L = 'C2';
n_order = 13;
[ ...
 n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,~ ...
,~ ...
,~ ...
,~ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
] = ...
sample_sphere_7( ...
 0*flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_T_vs_L ...
,flag_uniform_over_n_k_p_r ...
,flag_uniform_over_polar_a ...
) ;
%%%%%%%%;

%%%%%%%%;
% define a_k_p_form_. ;
%%%%%%%%;
delta_a_c_3s__ = [  ...
 +1.5 , -0.5 ...
;-0.5 , -1.5 ...
;+0.3 , +2.0 ...
] / 2 / k_p_r_max ;
delta_b_c_3s__ = [  ...
 -0.5 , +0.8 ...
;-1.0 , +0.2 ...
;+1.2 , -0.7 ...
] / 2 / k_p_r_max ;
n_source = size(delta_a_c_3s__,2);
a_k_p_form_ = zeros(n_qk,1);
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c_3s__(:,1+nsource);
a_k_p_form_ = a_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*delta_a_c_(1+0) + k_c_1_qk_*delta_a_c_(1+1) + k_c_2_qk_*delta_a_c_(1+2)));
end;%for nsource=0:n_source-1;
I_a_quad = sum(a_k_p_form_.*weight_3d_k_p_qk_);
I_a_form = 0;
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c_3s__(:,1+nsource);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c_);
I_a_form = I_a_form + h3d_(tmp_kd)*k_p_r_max^3;
end;%for nsource=0:n_source-1;
fnorm_disp(flag_verbose,'I_a_form',I_a_form,'I_a_quad',I_a_quad,' %%<-- should be <1e-6');
%%%%%%%%;
a_k_p_l2_quad = sum(conj(a_k_p_form_).*a_k_p_form_.*weight_3d_k_p_qk_);
a_k_p_l2_form = 0;
for nsource0=0:n_source-1;
for nsource1=0:n_source-1;
delta_a_c_0_ = delta_a_c_3s__(:,1+nsource0);
delta_a_c_1_ = delta_a_c_3s__(:,1+nsource1);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c_0_ - delta_a_c_1_);
tmp_h3d = 4*pi/3; if abs(tmp_kd)>1e-12; tmp_h3d = h3d_(tmp_kd); end;
a_k_p_l2_form = a_k_p_l2_form + tmp_h3d*k_p_r_max^3;
end;%for nsource1=0:n_source-1;
end;%for nsource0=0:n_source-1;
fnorm_disp(flag_verbose,'a_k_p_l2_form',a_k_p_l2_form,'a_k_p_l2_quad',a_k_p_l2_quad,' %%<-- should be <1e-6');
%%%%%%%%;
a_k_p_qk_ = a_k_p_form_;

%%%%%%%%;
% Now set up and test polar-quadrature-weights on disk. ;
%%%%%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = n_w_int*2*(l_max_max+1); n_w_0in_ = n_w_max*ones(n_k_p_r,1); n_w_0in = n_w_max;
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%%%%%;
tmp_S_delta_x_c_ = [cos(pi/4);sin(pi/4)]/max(1e-12,k_p_r_max);
tmp_S_phi = +1*pi/5;
tmp_T_delta_x_c_ = [cos(-pi/3);sin(-pi/3)]/max(1e-12,k_p_r_max);
tmp_T_phi = -3*pi/7;
tmp_S_k_p_wk_ = exp(+2*pi*i*(k_c_0_wk_*tmp_S_delta_x_c_(1+0) + k_c_1_wk_*tmp_S_delta_x_c_(1+1)));
tmp_plane_S_k_p_wk_ = 2*k_p_r_wk_.*cos(k_p_w_wk_ - tmp_S_phi);
tmp_T_k_p_wk_ = exp(+2*pi*i*(k_c_0_wk_*tmp_T_delta_x_c_(1+0) + k_c_1_wk_*tmp_T_delta_x_c_(1+1)));
tmp_plane_T_k_p_wk_ = 2*k_p_r_wk_.*cos(k_p_w_wk_ - tmp_T_phi);
I_quad = sum(conj(tmp_plane_S_k_p_wk_.*tmp_S_k_p_wk_).*(tmp_plane_T_k_p_wk_.*tmp_T_k_p_wk_).*weight_2d_wk_)*(2*pi)^2;
I_form = I_xPPx_0(k_p_r_max,tmp_S_phi,tmp_S_delta_x_c_,tmp_T_phi,tmp_T_delta_x_c_);
fnorm_disp(flag_verbose,'I_form',I_form,'I_quad',I_quad,' %%<-- should be <1e-6');
%%%%%%%%;

%%%%%%%%;
% define some viewing-angles. ;
%%%%%%%%;
k_p_r_1 = 1;
viewing_k_eq_d = template_k_eq_d_double/max(1e-12,k_p_r_max);
template_k_eq_d = -1;
[ ...
 n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,~ ...
,~ ...
,~ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
sample_shell_5( ...
 k_p_r_1 ...
,viewing_k_eq_d ...
,'L' ...
) ; %<-- obtain viewing angles. ;
n_S = n_viewing_S;

%%%%%%%%;
% define rotations. ;
%%%%%%%%;
R2 = @(gamma_z) ...
[ +cos(gamma_z) -sin(gamma_z) ; ...
  +sin(gamma_z) +cos(gamma_z) ; ...
] ;
%%%%%%%%;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;

%%%%%%%%;
% Now checking speeds of interpolate_template_5 vs interpolate_template_gpu_5 ;
% for various numbers of n_S_sub. ;
%%%%%%%%;
viewing_gamma_z_S_ = zeros(n_S,1);
n_S_sub = 4;
nS_sub_ = max(0,min(n_S-1,round(n_S*linspace(0,1,n_S_sub))));
n_S_sub = numel(nS_sub_);
if (flag_verbose>1); disp(sprintf(' %% n_S_sub %d/%d',n_S_sub,n_S)); end;
n_viewing_S_sub = n_S_sub;
viewing_azimu_b_S_sub_ = viewing_azimu_b_S_(1+nS_sub_);
viewing_polar_a_S_sub_ = viewing_polar_a_S_(1+nS_sub_);
viewing_weight_S_sub_ = viewing_weight_S_(1+nS_sub_);
viewing_gamma_z_S_sub_ = viewing_gamma_z_S_(1+nS_sub_);
%%%%%%%%;
% Now form templates from a_k_p_form_. ;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_verbose = 0*flag_verbose;
parameter.flag_attend = 0;
parameter.tolerance_pinv = 1e-6;
tmp_t = tic();
[ ...
 parameter ...
,S_sub_k_p_wkS_sub__ ...
] = ...
interpolate_template_5( ...
 parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template S_sub: time %0.6fs',tmp_t)); end;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_verbose = 0*flag_verbose;
parameter.flag_attend = 0;
parameter.tolerance_pinv = 1e-6;
tmp_t = tic();
[ ...
 parameter ...
,S_sub_k_p_gpu_wkS_sub__ ...
] = ...
interpolate_template_gpu_5( ...
 parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_gpu S_sub: time %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
T_k_p_l2_quad_S_sub_ = zeros(n_S_sub,1);
T_k_p_l2_form_S_sub_ = zeros(n_S_sub,1);
T_k_p_wkS_sub__ = zeros(n_w_sum,n_S_sub);
for nS_sub=0:n_S_sub-1;
S_sub_k_p_wk_ = S_sub_k_p_wkS_sub__(:,1+nS_sub);
tmp_azimu_b = viewing_azimu_b_S_sub_(1+nS_sub);
tmp_polar_a = viewing_polar_a_S_sub_(1+nS_sub);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
T_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_R__*delta_a_c_3s__(:,1+nsource);
T_k_p_wk_ = T_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
T_k_p_l2_quad_S_sub_(1+nS_sub) = sum(conj(T_k_p_wk_).*T_k_p_wk_.*weight_2d_wk_)*(2*pi)^2;
for nsource0=0:n_source-1;
for nsource1=0:n_source-1;
tmp_delta_a_c_0_ = tmp_R__*delta_a_c_3s__(:,1+nsource0);
tmp_delta_a_c_1_ = tmp_R__*delta_a_c_3s__(:,1+nsource1);
tmp_kd = 2*pi*k_p_r_max*fnorm(tmp_delta_a_c_0_(1:2) - tmp_delta_a_c_1_(1:2));
tmp_h2d = (2*pi)^2; if abs(tmp_kd)>1e-12; tmp_h2d = h2d_(tmp_kd); end;
T_k_p_l2_form_S_sub_(1+nS_sub) = T_k_p_l2_form_S_sub_(1+nS_sub) + tmp_h2d/(2*pi)^2 * (pi*k_p_r_max^2);
end;%for nsource1=0:n_source-1;
end;%for nsource0=0:n_source-1;
T_k_p_wkS_sub__(:,1+nS_sub) = T_k_p_wk_;
end;%for nS_sub=0:n_S_sub-1;
fnorm_disp(flag_verbose,'T_k_p_wkS_sub__',T_k_p_wkS_sub__,'S_sub_k_p_wkS_sub__',S_sub_k_p_wkS_sub__,' %%<-- should be <1e-2');
fnorm_disp(flag_verbose,'T_k_p_wkS_sub__',T_k_p_wkS_sub__,'S_sub_k_p_gpu_wkS_sub__',S_sub_k_p_gpu_wkS_sub__,' %%<-- should be <1e-2');
fnorm_disp(flag_verbose,'S_sub_k_p_wkS_sub__',S_sub_k_p_wkS_sub__,'S_sub_k_p_wkS_sub__',S_sub_k_p_wkS_sub__,' %%<-- should be very small');
fnorm_disp(flag_verbose,'T_k_p_l2_form_S_sub_',T_k_p_l2_form_S_sub_,'T_k_p_l2_quad_S_sub_',T_k_p_l2_quad_S_sub_,' %%<-- should be <1e-2');
%%%%%%%%;

%%%%%%%%;
% Now calling with precomputation. ;
%%%%%%%%;
n_run = 3;
n_S_sub_ = max(1,min(n_S,0:32:256)); n_n_S_sub = numel(n_S_sub_);
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
p_row = 1; p_col = 2;
subplot(p_row,p_col,1+0); xlabel('n_S','Interpreter','none'); ylabel('time (s)'); title('not precomputation'); 
subplot(p_row,p_col,1+1); xlabel('n_S','Interpreter','none'); ylabel('time (s)'); title('yes precomputation'); 
c_cpu_ = [0.0,0.3,1.0];
c_gpu_ = [1.0,0.3,0.0];
markersize_big = 12;
end;%if flag_disp;
%%%%%%%%%%%%%%%%;
for nn_S_sub=0:n_n_S_sub-1;
%%%%%%%%%%%%%%%%;
n_S_sub = n_S_sub_(1+nn_S_sub);
nS_sub_ = max(0,min(n_S-1,round(n_S*linspace(0,1,n_S_sub))));
n_S_sub = numel(nS_sub_);
if (flag_verbose>1); disp(sprintf(' %% n_S_sub %d/%d',n_S_sub,n_S)); end;
n_viewing_S_sub = n_S_sub;
viewing_azimu_b_S_sub_ = viewing_azimu_b_S_(1+nS_sub_);
viewing_polar_a_S_sub_ = viewing_polar_a_S_(1+nS_sub_);
viewing_weight_S_sub_ = viewing_weight_S_(1+nS_sub_);
viewing_gamma_z_S_sub_ = viewing_gamma_z_S_(1+nS_sub_);
%%%%%%%%;
clear wS_sub_from_single_shell_sba__ ;
clear dwS_subda_from_single_shell_sba__ ;
clear dwS_subdb_from_single_shell_sba__ ;
clear ddwS_subdaa_from_single_shell_sba__ ;
clear ddwS_subdab_from_single_shell_sba__ ;
clear ddwS_subdbb_from_single_shell_sba__ ;
for nrun=0:n_run-1;
if ~exist('wS_sub_from_single_shell_sba__','var'); wS_sub_from_single_shell_sba__=[]; end;
if ~exist('dwS_subda_from_single_shell_sba__','var'); dwS_subda_from_single_shell_sba__=[]; end;
if ~exist('dwS_subdb_from_single_shell_sba__','var'); dwS_subdb_from_single_shell_sba__=[]; end;
if ~exist('ddwS_subdaa_from_single_shell_sba__','var'); ddwS_subdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwS_subdab_from_single_shell_sba__','var'); ddwS_subdab_from_single_shell_sba__=[]; end;
if ~exist('ddwS_subdbb_from_single_shell_sba__','var'); ddwS_subdbb_from_single_shell_sba__=[]; end;
parameter = struct('type','parameter');
parameter.flag_verbose = 0*flag_verbose;
parameter.flag_attend = 0;
parameter.tolerance_pinv = 1e-6;
tmp_t = tic();
[ ...
 parameter ...
,template_wkS_sub__ ...
,n_w ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
,wS_sub_from_single_shell_sba__ ...
,dtemplateda_wkS_sub__ ...
,dtemplatedb_wkS_sub__ ...
,dtemplatedc_wkS_sub__ ...
,dwS_subda_from_single_shell_sba__ ...
,dwS_subdb_from_single_shell_sba__ ...
,ddtemplatedaa_wkS_sub__ ...
,ddtemplatedab_wkS_sub__ ...
,ddtemplatedac_wkS_sub__ ...
,ddtemplatedbb_wkS_sub__ ...
,ddtemplatedbc_wkS_sub__ ...
,ddtemplatedcc_wkS_sub__ ...
,ddwS_subdaa_from_single_shell_sba__ ...
,ddwS_subdab_from_single_shell_sba__ ...
,ddwS_subdbb_from_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
,wS_sub_from_single_shell_sba__ ...
,dwS_subda_from_single_shell_sba__ ...
,dwS_subdb_from_single_shell_sba__ ...
,ddwS_subdaa_from_single_shell_sba__ ...
,ddwS_subdab_from_single_shell_sba__ ...
,ddwS_subdbb_from_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template S_sub: time %0.6fs',tmp_t)); end;
if flag_disp;
if nrun==0; subplot(p_row,p_col,1+0); hold on; end; if nrun>=1; subplot(p_row,p_col,1+1); hold on; end;
plot(n_S_sub,tmp_t,'ko','MarkerSize',markersize_big,'MarkerFaceColor',c_cpu_); drawnow();
end;%if flag_disp;
end;%for nrun=0:n_run-1;
%%%%%%%%;
clear wS_sub_from_single_shell_gpu_sba__ ;
clear dwS_subda_from_single_shell_gpu_sba__ ;
clear dwS_subdb_from_single_shell_gpu_sba__ ;
clear ddwS_subdaa_from_single_shell_gpu_sba__ ;
clear ddwS_subdab_from_single_shell_gpu_sba__ ;
clear ddwS_subdbb_from_single_shell_gpu_sba__ ;
for nrun=0:n_run-1;
if ~exist('wS_sub_from_single_shell_gpu_sba__','var'); wS_sub_from_single_shell_gpu_sba__=[]; end;
if ~exist('dwS_subda_from_single_shell_gpu_sba__','var'); dwS_subda_from_single_shell_gpu_sba__=[]; end;
if ~exist('dwS_subdb_from_single_shell_gpu_sba__','var'); dwS_subdb_from_single_shell_gpu_sba__=[]; end;
if ~exist('ddwS_subdaa_from_single_shell_gpu_sba__','var'); ddwS_subdaa_from_single_shell_gpu_sba__=[]; end;
if ~exist('ddwS_subdab_from_single_shell_gpu_sba__','var'); ddwS_subdab_from_single_shell_gpu_sba__=[]; end;
if ~exist('ddwS_subdbb_from_single_shell_gpu_sba__','var'); ddwS_subdbb_from_single_shell_gpu_sba__=[]; end;
parameter = struct('type','parameter');
parameter.flag_verbose = 0*flag_verbose;
parameter.flag_attend = 0;
parameter.tolerance_pinv = 1e-6;
tmp_t = tic();
[ ...
 parameter ...
,template_gpu_wkS_sub__ ...
,n_w ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
,wS_sub_from_single_shell_gpu_sba__ ...
,dtemplateda_gpu_wkS_sub__ ...
,dtemplatedb_gpu_wkS_sub__ ...
,dtemplatedc_gpu_wkS_sub__ ...
,dwS_subda_from_single_shell_gpu_sba__ ...
,dwS_subdb_from_single_shell_gpu_sba__ ...
,ddtemplatedaa_gpu_wkS_sub__ ...
,ddtemplatedab_gpu_wkS_sub__ ...
,ddtemplatedac_gpu_wkS_sub__ ...
,ddtemplatedbb_gpu_wkS_sub__ ...
,ddtemplatedbc_gpu_wkS_sub__ ...
,ddtemplatedcc_gpu_wkS_sub__ ...
,ddwS_subdaa_from_single_shell_gpu_sba__ ...
,ddwS_subdab_from_single_shell_gpu_sba__ ...
,ddwS_subdbb_from_single_shell_gpu_sba__ ...
] = ...
interpolate_template_gpu_5( ...
 parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S_sub ...
,viewing_azimu_b_S_sub_ ...
,viewing_polar_a_S_sub_ ...
,viewing_weight_S_sub_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_sub_ ...
,wS_sub_from_single_shell_gpu_sba__ ...
,dwS_subda_from_single_shell_gpu_sba__ ...
,dwS_subdb_from_single_shell_gpu_sba__ ...
,ddwS_subdaa_from_single_shell_gpu_sba__ ...
,ddwS_subdab_from_single_shell_gpu_sba__ ...
,ddwS_subdbb_from_single_shell_gpu_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_gpu S_sub: time %0.6fs',tmp_t)); end;
%%%%%%%%;
if flag_disp;
if nrun==0; subplot(p_row,p_col,1+0); hold on; end; if nrun>=1; subplot(p_row,p_col,1+1); hold on; end;
plot(n_S_sub,tmp_t,'ko','MarkerSize',markersize_big,'MarkerFaceColor',c_gpu_); drawnow();
end;%if flag_disp;
end;%for nrun=0:n_run-1;
%%%%%%%%%%%%%%%%;
fnorm_disp(flag_verbose,'template_wkS_sub__',template_wkS_sub__,'template_gpu_wkS_sub__',template_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'wS_sub_from_single_shell_sba__',wS_sub_from_single_shell_sba__,'wS_sub_from_single_shell_gpu_sba__',wS_sub_from_single_shell_gpu_sba__);
fnorm_disp(flag_verbose,'dtemplateda_wkS_sub__',dtemplateda_wkS_sub__,'dtemplateda_gpu_wkS_sub__',dtemplateda_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'dtemplatedb_wkS_sub__',dtemplatedb_wkS_sub__,'dtemplatedb_gpu_wkS_sub__',dtemplatedb_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'dtemplatedc_wkS_sub__',dtemplatedc_wkS_sub__,'dtemplatedc_gpu_wkS_sub__',dtemplatedc_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'dwS_subda_from_single_shell_sba__',dwS_subda_from_single_shell_sba__,'dwS_subda_from_single_shell_gpu_sba__',dwS_subda_from_single_shell_gpu_sba__);
fnorm_disp(flag_verbose,'dwS_subdb_from_single_shell_sba__',dwS_subdb_from_single_shell_sba__,'dwS_subdb_from_single_shell_gpu_sba__',dwS_subdb_from_single_shell_gpu_sba__);
fnorm_disp(flag_verbose,'ddtemplatedaa_wkS_sub__',ddtemplatedaa_wkS_sub__,'ddtemplatedaa_gpu_wkS_sub__',ddtemplatedaa_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddtemplatedab_wkS_sub__',ddtemplatedab_wkS_sub__,'ddtemplatedab_gpu_wkS_sub__',ddtemplatedab_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddtemplatedac_wkS_sub__',ddtemplatedac_wkS_sub__,'ddtemplatedac_gpu_wkS_sub__',ddtemplatedac_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddtemplatedbb_wkS_sub__',ddtemplatedbb_wkS_sub__,'ddtemplatedbb_gpu_wkS_sub__',ddtemplatedbb_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddtemplatedbc_wkS_sub__',ddtemplatedbc_wkS_sub__,'ddtemplatedbc_gpu_wkS_sub__',ddtemplatedbc_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddtemplatedcc_wkS_sub__',ddtemplatedcc_wkS_sub__,'ddtemplatedcc_gpu_wkS_sub__',ddtemplatedcc_gpu_wkS_sub__);
fnorm_disp(flag_verbose,'ddwS_subdaa_from_single_shell_sba__',ddwS_subdaa_from_single_shell_sba__,'ddwS_subdaa_from_single_shell_gpu_sba__',ddwS_subdaa_from_single_shell_gpu_sba__);
fnorm_disp(flag_verbose,'ddwS_subdab_from_single_shell_sba__',ddwS_subdab_from_single_shell_sba__,'ddwS_subdab_from_single_shell_gpu_sba__',ddwS_subdab_from_single_shell_gpu_sba__);
fnorm_disp(flag_verbose,'ddwS_subdbb_from_single_shell_sba__',ddwS_subdbb_from_single_shell_sba__,'ddwS_subdbb_from_single_shell_gpu_sba__',ddwS_subdbb_from_single_shell_gpu_sba__);
%%%%%%%%%%%%%%%%;
end;%for nn_S_sub=0:n_n_S_sub-1;
%%%%%%%%%%%%%%%%;
if flag_disp;
fname_fig_pre = sprintf('%s/%s_FIGA',dir_jpg,str_thisfunction);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
if (flag_verbose>0); disp(sprintf(' %% writing %s',fname_fig_pre)); end;
print('-djpeg',fname_fig_jpg);
print('-depsc',fname_fig_eps);
end;%if flag_disp;
%%%%%%%%;

flag_check=1;
if flag_check;
disp(sprintf(' %% %d: isgpuarray(template_gpu_wkS_sub__)',isgpuarray(template_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(n_w)',isgpuarray(n_w)));
disp(sprintf(' %% %d: isgpuarray(n_viewing_S_sub)',isgpuarray(n_viewing_S_sub)));
disp(sprintf(' %% %d: isgpuarray(viewing_azimu_b_S_sub_)',isgpuarray(viewing_azimu_b_S_sub_)));
disp(sprintf(' %% %d: isgpuarray(viewing_polar_a_S_sub_)',isgpuarray(viewing_polar_a_S_sub_)));
disp(sprintf(' %% %d: isgpuarray(viewing_weight_S_sub_)',isgpuarray(viewing_weight_S_sub_)));
disp(sprintf(' %% %d: isgpuarray(n_viewing_polar_a)',isgpuarray(n_viewing_polar_a)));
disp(sprintf(' %% %d: isgpuarray(viewing_polar_a_)',isgpuarray(viewing_polar_a_)));
disp(sprintf(' %% %d: isgpuarray(n_viewing_azimu_b_)',isgpuarray(n_viewing_azimu_b_)));
disp(sprintf(' %% %d: isgpuarray(viewing_gamma_z_S_sub_)',isgpuarray(viewing_gamma_z_S_sub_)));
disp(sprintf(' %% %d: isgpuarray(wS_sub_from_single_shell_gpu_sba__)',isgpuarray(wS_sub_from_single_shell_gpu_sba__)));
disp(sprintf(' %% %d: isgpuarray(dtemplateda_gpu_wkS_sub__)',isgpuarray(dtemplateda_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(dtemplatedb_gpu_wkS_sub__)',isgpuarray(dtemplatedb_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(dtemplatedc_gpu_wkS_sub__)',isgpuarray(dtemplatedc_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(dwS_subda_from_single_shell_gpu_sba__)',isgpuarray(dwS_subda_from_single_shell_gpu_sba__)));
disp(sprintf(' %% %d: isgpuarray(dwS_subdb_from_single_shell_gpu_sba__)',isgpuarray(dwS_subdb_from_single_shell_gpu_sba__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedaa_gpu_wkS_sub__)',isgpuarray(ddtemplatedaa_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedab_gpu_wkS_sub__)',isgpuarray(ddtemplatedab_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedac_gpu_wkS_sub__)',isgpuarray(ddtemplatedac_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedbb_gpu_wkS_sub__)',isgpuarray(ddtemplatedbb_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedbc_gpu_wkS_sub__)',isgpuarray(ddtemplatedbc_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddtemplatedcc_gpu_wkS_sub__)',isgpuarray(ddtemplatedcc_gpu_wkS_sub__)));
disp(sprintf(' %% %d: isgpuarray(ddwS_subdaa_from_single_shell_gpu_sba__)',isgpuarray(ddwS_subdaa_from_single_shell_gpu_sba__)));
disp(sprintf(' %% %d: isgpuarray(ddwS_subdab_from_single_shell_gpu_sba__)',isgpuarray(ddwS_subdab_from_single_shell_gpu_sba__)));
disp(sprintf(' %% %d: isgpuarray(ddwS_subdbb_from_single_shell_gpu_sba__)',isgpuarray(ddwS_subdbb_from_single_shell_gpu_sba__)));
end;%if flag_check;


disp('returning'); return;
