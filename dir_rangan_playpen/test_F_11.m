% test svd-expansion. ;

verbose=1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% generate grids. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_point = 128; max_x_c = 1; max_k_c = n_point/max_x_c; max_k_p = max_k_c/2;
% realspace carte grid ; 
grid_x_c_ = linspace(0,max_x_c,n_point+1); grid_x_c_ = grid_x_c_(1:end-1); d_x_c = mean(diff(grid_x_c_));
% freqspace carte grid ; 
grid_k_c_ = (0:n_point-1)/max_x_c; d_k_c = mean(diff(grid_k_c_));
% realspace carte meshgrid ;
[X_x_c_,Y_x_c_] = meshgrid(grid_x_c_,grid_x_c_); X_x_c_(:,n_point/2+1:end) = X_x_c_(:,n_point/2+1:end)-max_x_c; Y_x_c_(n_point/2+1:end,:) = Y_x_c_(n_point/2+1:end,:)-max_x_c;
R_x_c_ = sqrt(X_x_c_.^2 + Y_x_c_.^2); W_x_c_ = atan2(Y_x_c_,X_x_c_);
% freqspace carte meshgrid ;
[X_k_c_,Y_k_c_] = meshgrid(grid_k_c_,grid_k_c_); X_k_c_(:,n_point/2+1:end) = X_k_c_(:,n_point/2+1:end)-max_k_c; Y_k_c_(n_point/2+1:end,:) = Y_k_c_(n_point/2+1:end,:)-max_k_c;
R_k_c_ = sqrt(X_k_c_.^2 + Y_k_c_.^2); W_k_c_ = atan2(Y_k_c_,X_k_c_);
% realspace polar meshgrid ;
grid_x_r = linspace(0,max_x_c/2,n_point+1); grid_x_r = grid_x_r(1:end-1); grid_x_w = linspace(0,2*pi,n_point+1); grid_x_w = grid_x_w(1:end-1); 
[R_x_p_,W_x_p_] = meshgrid(grid_x_r,grid_x_w);
% freqspace polar meshgrid ;
grid_k_r_ = linspace(0,max_k_p,n_point+1); grid_k_r_ = grid_k_r_(1:end-1); d_k_r = mean(diff(grid_k_r_));
grid_k_w_ = linspace(0,2*pi,n_point+1); grid_k_w_ = grid_k_w_(1:end-1); d_k_w = mean(diff(grid_k_w_));
[R_k_p_,W_k_p_] = meshgrid(grid_k_r_,grid_k_w_);
X_k_p_ = R_k_p_.*cos(W_k_p_); Y_k_p_ = R_k_p_.*sin(W_k_p_);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Determine svd expansion ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
l_max = 16;
eps_target = 1.0;
N_pixel = 1.5;
K_max = max_k_p;
R_target = K_max-0.5;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
n_r = 128 ; n_d = 128 ;
r_tmp_ = linspace(0,2*pi*R_target,n_r);
d_tmp_ = linspace(0,D_target,n_d);
clear S_l_ S_u_ S_s_ S_v_ ;
[R_TMP_,D_TMP_] = meshgrid(r_tmp_,d_tmp_); Z_TMP_ = R_TMP_.*D_TMP_;
l = 0; n_S = 0; continue_flag=1;
while (continue_flag);
if (l==0); l_ = [0]; else l_ = [-l,+l] ; end;
for l_tmp = l_;
J_tmp = besselj(l_tmp,Z_TMP_);
[U,S,V] = svds(J_tmp,l_max); S = diag(S); [S_ret] = find(S>eps_target) ;
if ~isempty(S_ret);
if (verbose>1); disp(sprintf(' %% l %+.2d, found %d terms [%0.2f,..,%0.2f];',l_tmp,length(S_ret),S(S_ret(1)),S(S_ret(end)))); end;%if
for ij = 1:length(S_ret);
S_l_(1+n_S) = l_tmp;
S_u_(:,1+n_S) = U(:,S_ret(ij));
S_s_(1,1+n_S) = S(S_ret(ij),1);
S_v_(:,1+n_S) = V(:,S_ret(ij));
n_S = n_S + 1;
end;%for ij = 1:length(S_ret);
end;%if ~isempty(S_ret);
end;% for l_tmp = l_;
l=l+1;
if (l>l_max); continue_flag=0; else continue_flag=1; end;
end;%while (continue_flag);
if (verbose>1); disp(sprintf(' %% total of n_S %d terms found;',n_S)); end%if;
n_svd_r = n_r;
svd_r_ = r_tmp_;
n_svd_d = n_d;
svd_d_ = d_tmp_;
n_svd_l = n_S;
svd_l_ = S_l_;
svd_U_d_ = S_u_;
svd_s_ = S_s_;
svd_V_r_ = S_v_;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% compare T with cropped bessel-expansion. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
delta_d = svd_d_(end); delta_w = 1*pi/6; delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
T_k_p_ = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w)); Tlim_k = [-1,+1];
phi_k_p_ = W_k_p_-delta_w;
rd_k_p_ = delta_d*2*pi*R_k_p_;
for l_max=[3:16];
J_k_p_ = 0*T_k_p_;
for l=0:l_max;
if (l==0); J_k_p_ = J_k_p_ + besselj(0,rd_k_p_); end;
if (l>0); J_k_p_ = J_k_p_ + exp(+i*l*pi/2).*besselj(-l,rd_k_p_).*exp(-i*l*phi_k_p_) + exp(-i*l*pi/2).*besselj(+l,rd_k_p_).*exp(+i*l*phi_k_p_); end;
end;%for l=0:l_max;
Jlim_k = [-1,+1];
%Dlim_k = eps_target/svd_s_(1)*[-1,+1]*1e-3;
%tmp_ = abs(T_k_p_-J_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp); Dlim_k = tmp*[-1,+1];
tmp_ = abs(T_k_p_-J_k_p_); Dlim_k = 2.5*std(tmp_(:))*[-1,+1];
cra = colormap_pm(64);
figure(1); clf;
subplot(2,3,1); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('real(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,4); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('imag(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,2); clim = polarpatch(R_k_p_,W_k_p_,real(J_k_p_),Jlim_k,0,0,1,cra);  title(sprintf('real(T^{bes}) [%0.1f,%0.1f]',Jlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Jlim_k); 
subplot(2,3,5); clim = polarpatch(R_k_p_,W_k_p_,imag(J_k_p_),Jlim_k,0,0,1,cra);  title(sprintf('imag(T^{bes}) [%0.1f,%0.1f]',Jlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Jlim_k); 
subplot(2,3,3); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_-J_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('real(T-T^{bes}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
subplot(2,3,6); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_-J_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('imag(T-T^{bes}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
%suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.2f(%f)',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1)));
suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d N^{pixel} %0.1f l_{max} %d',n_point,max_k_p,N_pixel,l_max));
set(gcf,'Position',1+[0,0,1024*1.5,1024]); 
fname_base = sprintf('J_n%d_K%d_N%.2d_l%d',n_point,max_k_p,round(10*N_pixel),l_max);
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
end;%for l_max=[3:16];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% calculate real-space error for cropped bessel-expansion. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
delta_d = 2/n_point; delta_w = 0*pi/6; delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
T_k_c_ = exp(-i*delta_d*2*pi*R_k_c_.*cos(W_k_c_-delta_w)); Tlim_k = [-1,+1];
phi_k_c_ = W_k_c_-delta_w;
rd_k_c_ = delta_d*2*pi*R_k_c_;
for l_max=[3:16];
J_k_c_ = 0*T_k_c_;
for l=0:l_max;
if (l==0); J_k_c_ = J_k_c_ + besselj(0,rd_k_c_); end;
if (l>0); J_k_c_ = J_k_c_ + exp(+i*l*pi/2).*besselj(-l,rd_k_c_).*exp(-i*l*phi_k_c_) + exp(-i*l*pi/2).*besselj(+l,rd_k_c_).*exp(+i*l*phi_k_c_); end;
end;%for l=0:l_max;
T_x_c_ = ifft2((T_k_c_))./d_x_c./d_x_c; 
J_x_c_ = ifft2((J_k_c_))./d_x_c./d_x_c;
Tlim_x = [-1,+1]; Jlim_x = [-1,+1];
figure(2); clf;
colormap('hot');
imagesc(abs(recenter2((T_x_c_-J_x_c_)))); colorbar; title(sprintf('abs(ifft(T-T^{bes}), l_{max} %d)',l_max));
set(gca,'XTick',[],'YTick',[]);
suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d N^{pixel} %0.2f l_{max} %d',n_point,max_k_p,N_pixel*delta_d/svd_d_(end),l_max));
set(gcf,'Position',1+[0,0,1024*1.5,1024]); 
fname_base = sprintf('J_Dx_n%d_K%d_N%.2d_l%d',n_point,max_k_p,round(10*N_pixel),l_max);
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
end;%for l_max=[3:16];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% compare T with svd-expansion. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
delta_d = svd_d_(end); delta_w = 1*pi/6; delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
T_k_p_ = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w)); Tlim_k = [-1,+1];
phi_k_p_ = W_k_p_-delta_w;
rd_k_p_ = delta_d*2*pi*R_k_p_;
for eps_target=[10,1,0.1,0.01];
%%%%%%%%%%%%%%%%;
l_max = 16;
N_pixel = 1.5;
K_max = max_k_p;
R_target = K_max-0.5;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
n_r = 128 ; n_d = 128 ;
r_tmp_ = linspace(0,2*pi*R_target,n_r);
d_tmp_ = linspace(0,D_target,n_d);
clear n_svd_r svd_r_ n_svd_d svd_d_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_r_ ;
clear S_l_ S_u_ S_s_ S_v_ ;
[R_TMP_,D_TMP_] = meshgrid(r_tmp_,d_tmp_); Z_TMP_ = R_TMP_.*D_TMP_;
l = 0; n_S = 0; continue_flag=1;
while (continue_flag);
if (l==0); l_ = [0]; else l_ = [-l,+l] ; end;
for l_tmp = l_;
J_tmp = besselj(l_tmp,Z_TMP_);
[U,S,V] = svds(J_tmp,l_max); S = diag(S); [S_ret] = find(S>eps_target) ;
if ~isempty(S_ret);
if (verbose>1); disp(sprintf(' %% l %+.2d, found %d terms [%0.2f,..,%0.2f];',l_tmp,length(S_ret),S(S_ret(1)),S(S_ret(end)))); end;%if
for ij = 1:length(S_ret);
S_l_(1+n_S) = l_tmp;
S_u_(:,1+n_S) = U(:,S_ret(ij));
S_s_(1,1+n_S) = S(S_ret(ij),1);
S_v_(:,1+n_S) = V(:,S_ret(ij));
n_S = n_S + 1;
end;%for ij = 1:length(S_ret);
end;%if ~isempty(S_ret);
end;% for l_tmp = l_;
l=l+1;
if (l>l_max); continue_flag=0; else continue_flag=1; end;
end;%while (continue_flag);
if (verbose>1); disp(sprintf(' %% total of n_S %d terms found;',n_S)); end%if;
n_svd_r = n_r;
svd_r_ = r_tmp_;
n_svd_d = n_d;
svd_d_ = d_tmp_;
n_svd_l = n_S;
svd_l_ = S_l_;
svd_U_d_ = S_u_;
svd_s_ = S_s_;
svd_V_r_ = S_v_;
%%%%%%%%%%%%%%%%;
X_k_p_ = 0*T_k_p_;
phi_k_p_ = W_k_p_-delta_w;
ij_par = find(abs(svd_d_-delta_d)<1e-7);
if (~isempty(ij_par)); svd_U_d_2_ = svd_U_d_(ij_par,:); end;
if (isempty(ij_par));
ij_pre = max(find(svd_d_<delta_d));
ij_pos = min(find(svd_d_>delta_d));
d_pre = delta_d - svd_d_(ij_pre);
d_pos = svd_d_(ij_pos) - delta_d;
w_pre = d_pos/(d_pos+d_pre);
w_pos = d_pre/(d_pos+d_pre);
svd_U_d_2_ = w_pre*svd_U_d_(ij_pre,:) + w_pos*svd_U_d_(ij_pos,:);
end;%if (isempty(ij_par));
for ns=1:n_S;
l = svd_l_(ns);
S = svd_s_(ns);
U_d = svd_U_d_2_(1,ns);
V_r_ = svd_V_r_(:,ns);
X_k_p_ = X_k_p_ + exp(-i*l*pi/2).*U_d.*S.*(ones(n_point,1)*transpose(V_r_)).*exp(+i*l*phi_k_p_);
end;%for ns=1:n_S;
%%%%%%%%%%%%%%%%;
Tlim_k = [-1,+1]; Xlim_k = [-1,+1];
tmp_ = abs(T_k_p_-X_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp/(pi*max_k_p.^2)); Dlim_k = 0.25*tmp*[-1,+1];
cra = colormap_pm(64);
figure(1); clf;
subplot(2,3,1); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('real(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,4); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('imag(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,2); clim = polarpatch(R_k_p_,W_k_p_,real(X_k_p_),Xlim_k,0,0,1,cra);  title(sprintf('real(T^{svd}) [%0.1f,%0.1f]',Xlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Xlim_k); 
subplot(2,3,5); clim = polarpatch(R_k_p_,W_k_p_,imag(X_k_p_),Xlim_k,0,0,1,cra);  title(sprintf('imag(T^{svd}) [%0.1f,%0.1f]',Xlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Xlim_k); 
subplot(2,3,3); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_-X_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('real(T-T^{svd}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
subplot(2,3,6); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_-X_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('imag(T-T^{svd}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.2f(%f)',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1)));
set(gcf,'Position',1+[0,0,1024*1.5,1024]); 
fname_base = sprintf('X_n%d_K%d_N%.2d_e%.4d',n_point,max_k_p,round(10*N_pixel),round(100*eps_target));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
%%%%%%%%%%%%%%%%;
end;%for eps_target=[10,1,0.1,0.01];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot stack of error-maps for various delta_d. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(5); clf; hold on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
d_ij_ = 1:14:127;
for nd=1:length(d_ij_);
d_ij = d_ij_(nd);
%%%%%%%%%%%%%%%% ;
delta_d = svd_d_(d_ij);
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
T_k_p_ = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w));
%%%%%%%%%%%%%%%% ;
X_k_p_ = 0*T_k_p_;
phi_k_p_ = W_k_p_-delta_w;
ij_par = find(abs(svd_d_-delta_d)<1e-7);
if (~isempty(ij_par)); 
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_par %d',nd,delta_d,ij_par)); end;
svd_U_d_2_ = svd_U_d_(ij_par,:); 
end;%if (~isempty(ij_par)); 
if (isempty(ij_par));
ij_pre = max(find(svd_d_<delta_d));
ij_pos = min(find(svd_d_>delta_d));
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_pre %d ij_pos %d',nd,delta_d,ij_pre,ij_pos)); end;
d_pre = delta_d - svd_d_(ij_pre);
d_pos = svd_d_(ij_pos) - delta_d;
w_pre = d_pos/(d_pos+d_pre);
w_pos = d_pre/(d_pos+d_pre);
svd_U_d_2_ = w_pre*svd_U_d_(ij_pre,:) + w_pos*svd_U_d_(ij_pos,:);
end;%if (isempty(ij_par));
for ns=1:n_S;
l = svd_l_(ns);
S = svd_s_(ns);
U_d = svd_U_d_2_(1,ns);
V_r_ = svd_V_r_(:,ns);
X_k_p_ = X_k_p_ + exp(-i*l*pi/2).*U_d.*S.*(ones(n_point,1)*transpose(V_r_)).*exp(+i*l*phi_k_p_);
end;%for ns=1:n_S;
%tmp_ = abs(T_k_p_-X_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp/(pi*max_k_p.^2)); Dlim_k = 0.25*tmp*[0,+1];
Dlim_k = 0.1*[0,1];
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-X_k_p_),Dlim_k,1,[0,0,nd]); 
%%%%%%%%%%%%%%%% ;
end;%for nd=1:length(d_ij_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
hold off;
colorbar_handle = colorbar('h'); set(colorbar_handle,'XTick',0.5+0.499*[-1,+1],'XTickLabel',Dlim_k); 
title('abs(T-T^{svd})');
suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.2f(%f)',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1)));
set(gcf,'Position',1+[680 44 562 1051]);
view([29.2,7.6]);
fname_base = sprintf('X_Dx_stack_n%d_K%d_N%.2d_e%.4d',n_point,max_k_p,round(10*N_pixel),round(100*eps_target));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot pages of error-maps for various delta_d. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(6); clf; hold on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
d_ij_ = 1:1:127;
E_svd_ = zeros(length(d_ij_),1);
for nd=1:length(d_ij_);
d_ij = d_ij_(nd);
%%%%%%%%%%%%%%%% ;
delta_d = svd_d_(d_ij);
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
T_k_p_ = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w));
%%%%%%%%%%%%%%%% ;
X_k_p_ = 0*T_k_p_;
phi_k_p_ = W_k_p_-delta_w;
ij_par = find(abs(svd_d_-delta_d)<1e-7);
if (~isempty(ij_par)); 
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_par %d',nd,delta_d,ij_par)); end;
svd_U_d_2_ = svd_U_d_(ij_par,:); 
end;%if (~isempty(ij_par)); 
if (isempty(ij_par));
ij_pre = max(find(svd_d_<delta_d));
ij_pos = min(find(svd_d_>delta_d));
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_pre %d ij_pos %d',nd,delta_d,ij_pre,ij_pos)); end;
d_pre = delta_d - svd_d_(ij_pre);
d_pos = svd_d_(ij_pos) - delta_d;
w_pre = d_pos/(d_pos+d_pre);
w_pos = d_pre/(d_pos+d_pre);
svd_U_d_2_ = w_pre*svd_U_d_(ij_pre,:) + w_pos*svd_U_d_(ij_pos,:);
end;%if (isempty(ij_par));
for ns=1:n_S;
l = svd_l_(ns);
S = svd_s_(ns);
U_d = svd_U_d_2_(1,ns);
V_r_ = svd_V_r_(:,ns);
X_k_p_ = X_k_p_ + exp(-i*l*pi/2).*U_d.*S.*(ones(n_point,1)*transpose(V_r_)).*exp(+i*l*phi_k_p_);
end;%for ns=1:n_S;
Dlim_k = 10*eps_target/svd_s_(1)*[0,+1];
E_svd_(nd) = norm(T_k_p_-X_k_p_,'fro');
subplot(4,8,nd);
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-X_k_p_),Dlim_k,1,[0,0,0]); 
%polarpatch_stack(R_k_p_,W_k_p_,real(X_k_p_),Xlim_k,1,[0,0,0]); 
%%%%%%%%%%%%%%%% ;
end;%for nd=1:length(d_ij_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
hold off;
%colorbar_handle = colorbar('v'); set(colorbar_handle,'XTick',0.5+0.499*[-1,+1],'XTickLabel',Dlim_k); 

% pages of error maps for brute-force + interpolation;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
disp_flag=0;
if disp_flag;
figure(7); clf; hold on;
end%if disp_flag;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_node = 8;
node_ij_ = round(linspace(1,127,n_node));
T_k_p__ = cell(length(node_ij_),1);
for nnode=1:length(node_ij_);
node_ij = node_ij_(nnode);
delta_d = svd_d_(node_ij); delta_w = 1*pi/6;
T_k_p__{nnode} = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w));
end;%for nnode=1:length(node_ij_);
d_ij_ = 1:1:127;
E_int_ = zeros(length(d_ij_),1);
for nd=1:length(d_ij_);
d_ij = d_ij_(nd);
%%%%%%%%%%%%%%%% ;
delta_d = svd_d_(d_ij);
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
T_k_p_ = exp(-i*delta_d*2*pi*R_k_p_.*cos(W_k_p_-delta_w));
%%%%%%%%%%%%%%%% ;
ij_par = find(abs(node_ij_-d_ij)<1e-7);
if (~isempty(ij_par)); 
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_par %d',nd,delta_d,ij_par)); end;
B_k_p_ = T_k_p__{ij_par};
end;%if (~isempty(ij_par)); 
if (isempty(ij_par));
ij_pre = max(find(node_ij_<d_ij));
ij_pos = min(find(node_ij_>d_ij));
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_pre %d ij_pos %d',nd,delta_d,ij_pre,ij_pos)); end;
d_pre = d_ij - node_ij_(ij_pre); d_pos = node_ij_(ij_pos) - d_ij;
w_pre = d_pos/(d_pos+d_pre); w_pos = d_pre/(d_pos+d_pre);
B_k_p_ = w_pre*T_k_p__{ij_pre} + w_pos*T_k_p__{ij_pos};
end;%if (isempty(ij_par));
Dlim_k = 10*eps_target/svd_s_(1)*[0,+1];
E_int_(nd) = norm(T_k_p_-B_k_p_,'fro');
if disp_flag;
subplot(4,8,nd);
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-B_k_p_),Dlim_k,1,[0,0,0]); 
%polarpatch_stack(R_k_p_,W_k_p_,real(B_k_p_),Xlim_k,1,[0,0,0]); 
end;%if disp_flag;
%%%%%%%%%%%%%%%% ;
end;%for nd=1:length(d_ij_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
if disp_flag;
hold off;
%colorbar_handle = colorbar('v'); set(colorbar_handle,'XTick',0.5+0.499*[-1,+1],'XTickLabel',Dlim_k); 
end;%if disp_flag;

figure(8);clf;
hold on;
plot(svd_d_(d_ij_)*max_k_p,E_int_,'k.-','LineWidth',2);
plot(svd_d_(d_ij_)*max_k_p,E_svd_,'ro-','LineWidth',2);
hold off;
xlabel('displacement (in wavelengths)');
ylabel('l2-error in displacement');
legend('linear-interpolation','svd-expansion');
title('error as function of displacement');

