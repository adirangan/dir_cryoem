clear; setup; verbose=1; n_figure = 1;
dir_fig = sprintf('%s/dir_fig',pwd); if (~exist(dir_fig,'dir')); sprintf(' %% making %s'); mkdir(dir_fig); end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% generate grids. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_point = 128; max_x_c = 1; 
[max_k_c,max_k_p,grid_x_c_,d_x_c,X_x_c_,Y_x_c_,R_x_c_,W_x_c_,grid_k_c_,d_k_c,X_k_c_,Y_k_c_,R_k_c_,W_k_c_,grid_x_r_,grid_x_w_,R_x_p_,W_x_p_,grid_k_r_,d_k_r,grid_k_w_,d_k_w,R_k_p_,W_k_p_,X_k_p_,Y_k_p_] = test_F_grid_0(n_point,max_x_c);
n_x_c = length(grid_x_c_); max_x_c = 1;     n_x_r = length(grid_x_r_); n_x_w = length(grid_x_w_); n_x_w_ = n_x_w*ones(n_x_r,1); n_x_A = sum(n_x_w_);
n_k_c = length(grid_k_c_); max_k_c = n_k_c; n_k_r = length(grid_k_r_); n_k_w = length(grid_k_w_); n_k_w_ = n_k_w*ones(n_k_r,1); n_k_A = sum(n_k_w_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Set parameters for svd expansion ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
N_pixel = 16.0; % number of wavelengths allowed in displacement grid. ;
eps_target = 0.001; % tolerance used for svd-expansion. ;
if (N_pixel<=5.0); l_max = 32; n_k_degree = 63; n_d_degree = 65; end;
if (N_pixel> 5.0); l_max=96; n_k_degree = 94; n_d_degree = 98; end;
%l_max = 8; n_k_degree = 12; n_d_degree = 13;
K_target = max_k_p-0.5; z_target = N_pixel*pi*sqrt(2); D_target = z_target/(2*pi*K_target);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Calculate svd-expansion. ; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
clear n_svd_k svd_k_ svd_k_m svd_k_c svd_k_w_ svd_k_Jv_ n_svd_d svd_d_ svd_d_m svd_d_c svd_d_w_ svd_d_Jv_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_k_;
[n_svd_k,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Jv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Jv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_k_] = gen_Jsvd_5b(max_k_p,N_pixel,eps_target,l_max,n_k_degree,n_d_degree);
svd_k_ = svd_r_/(2*pi); svd_k_m = svd_r_m/(2*pi); svd_k_c = svd_r_c/(2*pi); svd_k_w_ = svd_r_w_;
if (max(svd_l_==l_max)); disp(sprintf(' %% Warning! svd_l_ equals l_max, you may want to increase l_max in test_F_23c')); end;
%%%%%%%%;
n_eta_max = 0; for nl=-l_max:l_max; n_eta_max = max(n_eta_max,length(find(svd_l_==nl))); end;
svd_s__ = zeros(2*l_max+1,n_eta_max);
for nl=-l_max:l_max; 
tmp_ij_ = find(svd_l_==nl);
tmp_s_ = sort(svd_s_(tmp_ij_),'descend');
assert(length(tmp_s_)<=n_eta_max);
svd_s__(1+l_max+nl,1:length(tmp_s_)) = tmp_s_;
end;%for nl=-l_max:l_max; 
flag_plot=0;
if flag_plot;
colormap('hot');
imagesc(log10(svd_s__),[-10,1]); %colorbar;
set(gca,'YTick',1:2*l_max+1,'YTickLabel',-l_max:l_max,'XTick',1:n_eta_max,'XTickLabel',1:n_eta_max);
xlabel('term number'); ylabel('bessel order'); title('magnitude of \Sigma');
set(gcf,'Position',1+[0,0,512,1024]);
end;%if flag_plot;
%%%%%%%%;
grid_d_r_ = svd_d_; n_d_r = length(grid_d_r_); n_d_w = max(3,ceil(2*pi*n_d_degree)); n_d_w_ = n_d_w*ones(n_svd_d,1);
d_p_quad_weight_ = ( (2*pi/n_d_w)*ones(n_d_w,1) * transpose(svd_d_w_) ) .* ((D_target).^2/4);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Redefine frequency-space polar grid. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
grid_k_r_ = svd_k_; n_k_r = length(grid_k_r_); n_k_w = max(3,ceil(2*pi*n_k_degree)); n_k_w_ = n_k_w*ones(n_svd_k,1); n_k_A = sum(n_k_w_);
grid_k_w_ = linspace(0,2*pi,n_k_w+1); grid_k_w_ = reshape(grid_k_w_(1:end-1),n_k_w,1);
k_p_quad_weight_ = ( (2*pi/n_k_w)*ones(n_k_w,1) * transpose(svd_k_w_) ) .* ((K_target).^2/4);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% generate blobs. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
F_x_c_ = zeros(n_x_c,n_x_c);
G_x_c_ = zeros(n_x_c,n_x_c);
tic;
n_F = 32;
for nF=1:n_F;
tmp_t = 1.5 + (nF-1)/(n_F-1);
tmp_x_c = 0*max_x_c/2 -0.1 + 0.0625*(tmp_t-1).^2.25 + 0.125*tmp_t*cos(+13.0*2*pi*tmp_t); 
tmp_y_c = 0*max_x_c/2 + 0.125*tmp_t*sin(+14.0*2*pi*tmp_t); 
tmp_sx = 1/64; tmp_sx = (1/48) * (1.50 + (2-tmp_t)*sin(+5.0*2*pi*tmp_t));
tmp_sy = 1/64; tmp_sy = (1/64) * (1.50 + (2-tmp_t)*cos(+2.0*2*pi*tmp_t));
tmp_sx = tmp_sx / 1.5; tmp_sy = tmp_sy / 1.5;
tmp_gamma = 2*pi*tmp_t; tmp_c = cos(tmp_gamma); tmp_s = sin(tmp_gamma);
tmp_X_x_c_ = X_x_c_ - (tmp_x_c); tmp_Y_x_c_ = Y_x_c_ - (tmp_y_c);
tmp_X2_x_c_ = tmp_c*tmp_X_x_c_ - tmp_s*tmp_Y_x_c_; tmp_Y2_x_c_ = tmp_s*tmp_X_x_c_ + tmp_c*tmp_Y_x_c_;
tmp_R_x_c_ = exp( - tmp_X2_x_c_.^2/2/tmp_sx.^2 - tmp_Y2_x_c_.^2/2/tmp_sy.^2); tmp_W_x_c_ = atan2(tmp_Y_x_c_,tmp_X_x_c_);
F_x_c_ = F_x_c_ + 1/(2*pi*tmp_sx*tmp_sy) * tmp_R_x_c_ ;
tmp_x_c = 0*max_x_c/2 -0.1 + 0.0625*(tmp_t-1).^2.25 + 0.125*tmp_t*cos(+13.0*2*pi*tmp_t) + 0.01*tmp_t*sin(+16.0*2*pi*tmp_t);
tmp_y_c = 0*max_x_c/2 + 0.125*tmp_t*sin(+14.0*2*pi*tmp_t) + 0.01*tmp_t*cos(+3.0*2*pi*tmp_t); 
tmp_sx = 1/64; tmp_sx = (1/48) * (1.50 + (2-tmp_t)*sin(+5.0*2*pi*tmp_t));
tmp_sy = 1/64; tmp_sy = (1/64) * (1.50 + (2-tmp_t)*cos(+2.0*2*pi*tmp_t));
tmp_sx = tmp_sx / 1.5; tmp_sy = tmp_sy / 1.5;
tmp_gamma = 2*pi*tmp_t; tmp_c = cos(tmp_gamma); tmp_s = sin(tmp_gamma);
tmp_X_x_c_ = X_x_c_ - (tmp_x_c); tmp_Y_x_c_ = Y_x_c_ - (tmp_y_c);
tmp_X2_x_c_ = tmp_c*tmp_X_x_c_ - tmp_s*tmp_Y_x_c_; tmp_Y2_x_c_ = tmp_s*tmp_X_x_c_ + tmp_c*tmp_Y_x_c_;
tmp_R_x_c_ = exp( - tmp_X2_x_c_.^2/2/tmp_sx.^2 - tmp_Y2_x_c_.^2/2/tmp_sy.^2); tmp_W_x_c_ = atan2(tmp_Y_x_c_,tmp_X_x_c_);
G_x_c_ = G_x_c_ + 1/(2*pi*tmp_sx*tmp_sy) * tmp_R_x_c_ ;
end;%for nF=1:n_F;
n_E = 128;
for nE=1:n_E;
tmp_t = (nE-1)/(n_E-1);
tmp_x_c = 0*max_x_c/2 + 0.05*(tmp_t-1) + 0.5*tmp_t*cos(+22.7*2*pi*tmp_t) - 0.06; 
tmp_y_c = 0*max_x_c/2 + 0.05*(tmp_t-1) + 0.5*tmp_t*sin(+28.2*2*pi*tmp_t) + 0.01; 
tmp_sx = 1/64; tmp_sy = 1/64;
tmp_gamma = 0; tmp_c = cos(tmp_gamma); tmp_s = sin(tmp_gamma);
tmp_X_x_c_ = X_x_c_ - (tmp_x_c); tmp_Y_x_c_ = Y_x_c_ - (tmp_y_c);
tmp_X2_x_c_ = tmp_c*tmp_X_x_c_ - tmp_s*tmp_Y_x_c_; tmp_Y2_x_c_ = tmp_s*tmp_X_x_c_ + tmp_c*tmp_Y_x_c_;
tmp_R_x_c_ = exp( - tmp_X2_x_c_.^2/2/tmp_sx.^2 - tmp_Y2_x_c_.^2/2/tmp_sy.^2); tmp_W_x_c_ = atan2(tmp_Y_x_c_,tmp_X_x_c_);
F_x_c_ = F_x_c_ + 0.125 * 1/(2*pi*tmp_sx*tmp_sy) * tmp_R_x_c_ ;
tmp_x_c = 0*max_x_c/2 + 0.05*(tmp_t-1) + 0.5*tmp_t*cos(+9.4*2*pi*tmp_t) + 0.03; 
tmp_y_c = 0*max_x_c/2 + 0.05*(tmp_t-1) + 0.5*tmp_t*sin(+4.9*2*pi*tmp_t) - 0.02; 
tmp_sx = 1/64; tmp_sy = 1/64;
tmp_gamma = 0; tmp_c = cos(tmp_gamma); tmp_s = sin(tmp_gamma);
tmp_X_x_c_ = X_x_c_ - (tmp_x_c); tmp_Y_x_c_ = Y_x_c_ - (tmp_y_c);
tmp_X2_x_c_ = tmp_c*tmp_X_x_c_ - tmp_s*tmp_Y_x_c_; tmp_Y2_x_c_ = tmp_s*tmp_X_x_c_ + tmp_c*tmp_Y_x_c_;
tmp_R_x_c_ = exp( - tmp_X2_x_c_.^2/2/tmp_sx.^2 - tmp_Y2_x_c_.^2/2/tmp_sy.^2); tmp_W_x_c_ = atan2(tmp_Y_x_c_,tmp_X_x_c_);
G_x_c_ = G_x_c_ + 0.125 * 1/(2*pi*tmp_sx*tmp_sy) * tmp_R_x_c_ ;
end;%for nE=1:n_E;
tmp_gamma = -1*pi/12; G_x_c_ = rotate_c_to_c(n_x_c,max_x_c,n_x_c,max_x_c,G_x_c_,tmp_gamma);
F_x_c_ = F_x_c_ - mean(F_x_c_(:));
G_x_c_ = G_x_c_ - mean(G_x_c_(:));
Flim_x = max(0,mean(F_x_c_(:)) + 1.0*std(F_x_c_(:))*[-1,+1]);
Glim_x = max(0,mean(G_x_c_(:)) + 1.0*std(G_x_c_(:))*[-1,+1]);
disp(sprintf(' %% calculating F_x_c_ G_x_c_: time %f',toc));
%%%%%%%%;
tic;
F_x_p_ = interp_c_to_p(n_x_c,max_x_c,n_x_c,max_x_c,F_x_c_,n_x_r,grid_x_r_,n_x_w_,n_x_A);
G_x_p_ = interp_c_to_p(n_x_c,max_x_c,n_x_c,max_x_c,G_x_c_,n_x_r,grid_x_r_,n_x_w_,n_x_A);
disp(sprintf(' %% calculating F_x_p_ G_x_p_: time %f',toc));
flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
colormap(1-colormap('gray'));
subplot(2,2,1);imagesc(recenter2(real(transpose(F_x_c_))),Flim_x);title('A1','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square;
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);
subplot(2,2,2);imagesc(recenter2(real(transpose(G_x_c_))),Glim_x);title('A2','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square;
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);
subplot(2,2,3); polarpatch_adaptive(grid_x_r_,n_x_w_,real(F_x_p_(:)),colormap(1-colormap('gray')),Flim_x,0,0,1); title('real(F)'); set(gca,'Xtick',[],'Ytick',[]); axis equal;
subplot(2,2,4); polarpatch_adaptive(grid_x_r_,n_x_w_,real(G_x_p_(:)),colormap(1-colormap('gray')),Glim_x,0,0,1); title('real(G)'); set(gca,'Xtick',[],'Ytick',[]); axis equal;
set(gcf,'Position',1+[0,0,512,512]);
end;%if flag_plot;
%%%%%%%%;
tic;
F_k_c_ = fft2(F_x_c_)/n_x_c.^2;
G_k_c_ = fft2(G_x_c_)/n_x_c.^2;
F_k_p_ = interp_c_to_p(n_k_c,max_k_c,n_k_c,max_k_c,F_k_c_,n_k_r,grid_k_r_,n_k_w_,n_k_A); F_k_p_ = reshape(F_k_p_,n_k_w,n_k_degree);
G_k_p_ = interp_c_to_p(n_k_c,max_k_c,n_k_c,max_k_c,G_k_c_,n_k_r,grid_k_r_,n_k_w_,n_k_A); G_k_p_ = reshape(G_k_p_,n_k_w,n_k_degree);
Flim_k = max(0,mean(abs(F_k_c_(:))) + 0.5*std(abs(F_k_c_(:)))*[-1,+1]);
Glim_k = max(0,mean(abs(G_k_c_(:))) + 0.5*std(abs(G_k_c_(:)))*[-1,+1]);
disp(sprintf(' %% calculating F_k_p_ G_k_p_: time %f',toc));
flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
colormap(colormap_beach());
subplot(2,2,1);imagesc(recenter2(real(transpose(F_k_c_))),Flim_k);title('A1','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_k_c]); ylim([1,n_k_c]); axis square;
set(gca,'XTick',[1,n_k_c/2+1,n_k_c],'XTickLabel',[grid_k_c_(1),grid_k_c_(end/2+1),floor(10*grid_k_c_(end))/10]-max_k_c/2);set(gca,'YTick',[1,n_k_c/2+1,n_k_c],'YTickLabel',[grid_k_c_(1),grid_k_c_(end/2+1),floor(10*grid_k_c_(end))/10]-max_k_c/2);
subplot(2,2,2);imagesc(recenter2(real(transpose(G_k_c_))),Glim_k);title('A2','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_k_c]); ylim([1,n_k_c]); axis square;
set(gca,'XTick',[1,n_k_c/2+1,n_k_c],'XTickLabel',[grid_k_c_(1),grid_k_c_(end/2+1),floor(10*grid_k_c_(end))/10]-max_k_c/2);set(gca,'YTick',[1,n_k_c/2+1,n_k_c],'YTickLabel',[grid_k_c_(1),grid_k_c_(end/2+1),floor(10*grid_k_c_(end))/10]-max_k_c/2);
subplot(2,2,3); polarpatch_adaptive(grid_k_r_,n_k_w_,real(F_k_p_(:)),colormap(colormap_beach()),Flim_k,0,0,1); title('real(F)'); set(gca,'Xtick',[],'Ytick',[]); axis equal;
subplot(2,2,4); polarpatch_adaptive(grid_k_r_,n_k_w_,real(G_k_p_(:)),colormap(colormap_beach()),Glim_k,0,0,1); title('real(G)'); set(gca,'Xtick',[],'Ytick',[]); axis equal;
set(gcf,'Position',1+[0,0,512,512]);
end;%if flag_plot;
%%%%%%%%;
tic;
F_k_q_ = interp_p_to_q(n_k_r,n_k_w_,n_k_A,F_k_p_(:)); F_k_q_ = reshape(F_k_q_,n_k_w,n_k_degree);
G_k_q_ = interp_p_to_q(n_k_r,n_k_w_,n_k_A,G_k_p_(:)); G_k_q_ = reshape(G_k_q_,n_k_w,n_k_degree);
disp(sprintf(' %% calculating F_k_q_ G_k_q_: time %f',toc));

flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
colormap(1-colormap('gray'));
subplot(1,2,1);imagesc(recenter2(real(F_x_c_)),Flim_x);title('A1','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square;
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);
subplot(1,2,2);imagesc(recenter2(real(G_x_c_)),Glim_x);title('A2','interpreter','none'); set(gca,'Ydir','normal'); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square;
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);
set(gcf,'Position',1+[0,0,512*2,512]);
fname_fig = sprintf('%s/blob_FIGA_0',dir_fig);
if flag_plot; print('-djpeg',sprintf('%s.jpg',fname_fig)); end;
if flag_plot; print('-depsc',sprintf('%s.eps',fname_fig)); end;
%disp('return');return;
end;% if flag_plot;

X_delta_ = real(ifft2(conj(F_k_c_).*G_k_c_));
%Xlim_ = [0,1.5*max(X_delta_(:))];
Xlim_ = [1.0*min(X_delta_(:)),1.0*max(X_delta_(:))];
%Xlim_ = [max(Xlim_) - 1.0*diff(Xlim_) , max(Xlim_)];
%Xlim_ = mean(X_delta_(:)) + std(X_delta_(:))*3.5*[0,+1];
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
colormap(colormap_beach());
subplot(1,2,1);
imagesc(recenter2(X_delta_),Xlim_); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square; title('X(delta)');
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);
subplot(1,2,2);
[C,h] = contourf(recenter2(X_delta_),linspace(min(Xlim_),max(Xlim_),32)); set(h,'LineWidth',0.25); xlim([1,n_x_c]); ylim([1,n_x_c]); axis square; set(gca,'Ydir','reverse'); title('contours of X(delta)');
set(gca,'XTick',[1,n_x_c/2+1,n_x_c],'XTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2);set(gca,'YTick',[1,n_x_c/2+1,n_x_c],'YTickLabel',[grid_x_c_(1),grid_x_c_(end/2+1),floor(10*grid_x_c_(end))/10]-max_x_c/2); 
%subplot(1,3,3);
%X_delta_sub_ = recenter2(X_delta_); 
%X_delta_sub_ = X_delta_sub_(end/2 + (-32:+32),end/2 + (-32:+32));
%Xlim_sub_ = [1.0*min(X_delta_sub_(:)),1.0*max(X_delta_sub_(:))];
%[C,h] = contourf(X_delta_sub_,linspace(min(Xlim_sub_),max(Xlim_sub_),48)); set(h,'LineWidth',0.25); xlim([1,size(X_delta_sub_,2)]); ylim([1,size(X_delta_sub_,1)]); axis square; set(gca,'Ydir','reverse'); title('contours of Xsub(delta)');
%set(gca,'XTick',[],'YTick',[]);
set(gcf,'Position',1+[0,0,512*2,512]);
fname_fig = sprintf('%s/blob_FIGC_0',dir_fig);
if flag_plot; print('-djpeg',sprintf('%s.jpg',fname_fig)); end;
if flag_plot; print('-depsc','-painters',sprintf('%s.eps',fname_fig)); end;
%disp('return');return;
end;%if flag_plot;
%%%%%%%%;

tic;
C_q_ = innerproduct_q__k_only(n_k_r,grid_k_r_,n_k_w_,n_k_A,F_k_q_,G_k_q_)*n_k_r*2*pi;
disp(sprintf(' %% calculating C_q_: time %f',toc));
C_p_ = real(ifft(C_q_));
gamma_ = linspace(-pi,+pi,n_k_w_(end)+1); gamma_ = gamma_(1:end-1);
flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
plot(gamma_,recenter1(C_p_)); xlabel('gamma'); ylabel('X(gamma)');
xlim([-pi,+pi]);
set(gca,'YTick',[]);
set(gcf,'Position',1+[0,0,512*1,512]);
fname_fig = sprintf('%s/blob_FIGD_0',dir_fig);
if flag_plot; print('-djpeg',sprintf('%s.jpg',fname_fig)); end;
if flag_plot; print('-depsc',sprintf('%s.eps',fname_fig)); end;
%disp('return');return;
end;%if flag_plot;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Now test out innerproduct for multiple translations. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
ngamma = 0;%ngamma = round(n_k_w*0.125);
gamma_w = 2*pi*ngamma/n_k_w;
%%%%%%%%;
n_delta_x = 1+64; n_delta_y = 1+64; n_delta = n_delta_x*n_delta_y; 
delta_x_ = linspace(-1,1,n_delta_x)*D_target/sqrt(2);
delta_y_ = linspace(-1,1,n_delta_x)*D_target/sqrt(2);
delta_r_ = zeros(n_delta,1); delta_w_ = zeros(n_delta,1);
ndelta=1;
for ndelta_y=1:n_delta_y; for ndelta_x=1:n_delta_x; 
delta_x = delta_x_(ndelta_x); delta_y = delta_y_(ndelta_y);
delta_r = sqrt(delta_x^2 + delta_y^2); delta_w = atan2(delta_y,delta_x);
delta_r_(ndelta) = delta_r; delta_w_(ndelta) = delta_w;
ndelta = ndelta+1;
end;end;%for ndelta_y=1:n_delta_y; for ndelta_x=1:n_delta_x; 
%%%%%%%%;
tic;
X_0_ = zeros(n_delta,1); %<-- true innerproduct for one particular rotation. ;
for ndelta=1:n_delta;
delta_r = delta_r_(ndelta); delta_w = delta_w_(ndelta);
T_tru_ = transpose(exp(-i*(delta_r*svd_r_) * cos(transpose(grid_k_w_) - delta_w)));
H_k_p_ = G_k_p_( 1 + periodize( [0:n_k_w-1] + ngamma , 0 , n_k_w ) , : );
X_0 = sum(conj( F_k_p_(:) .* T_tru_(:) ).*H_k_p_(:).*k_p_quad_weight_(:));
X_0_(ndelta) = X_0;
end;%for ndelta=1:n_delta;
disp(sprintf(' %% calculating X_0_: time %f',toc));
%%%%%%%%;
tic;
U_d__ = zeros(n_delta,n_svd_l);
for ns=1:n_svd_l;
for nd=0:n_d_degree-1;
tmp_b_ = svd_d_Jv_{1+nd}((delta_r_ - svd_d_m)/svd_d_c);
U_d__(:,ns) = U_d__(:,ns) + svd_U_d_(1+nd,ns)*tmp_b_;
end;%for nd=0:n_d_degree-1;
end;%for ns=1:n_svd_l;
disp(sprintf(' %% calculating U_d__: time %f',toc));
%%%%%%%%;
tic;
V_k__ = zeros(n_svd_l,n_k_degree);
for ns=1:n_svd_l;
V_k_ = zeros(1,n_k_degree);
for nk=0:n_k_degree-1;
tmp_a_ = svd_r_Jv_{1+nk}((reshape(svd_k_,1,n_k_degree) - svd_k_m)/svd_k_c);
V_k_ = V_k_ + svd_V_k_(1+nk,ns)*tmp_a_;
end;%for nk=0:n_k_degree-1;
V_k__(ns,:) = V_k_;
end;%for ns=1:n_svd_l;
disp(sprintf(' %% calculating V_k__: time %f',toc));
%%%%%%%%;
tic;
X_1_ = zeros(n_delta,1); %<-- svd-approximation to innerproduct for one particular rotation. ;
tmp_v_ = zeros(n_svd_l,1);
tmp_v__ = zeros(n_svd_l,n_k_w);
for ns=1:n_svd_l;
tmp_l = svd_l_(ns); nq1 = tmp_l;
for nq0=0:n_k_w-1;
nq3 = periodize(nq0-nq1,0,n_k_w);
tmp_v__(ns,1+nq0) = tmp_v__(ns,1+nq0) + svd_s_(ns) .* sum(conj(F_k_q_(1+nq3,:)).*G_k_q_(1+nq0,:).*V_k__(ns,:) .* k_p_quad_weight_(1,:));
end;%for nq0=0:n_k_w-1;
end;%for ns=1:n_svd_l;
tmp_v_ = ifft(tmp_v__,[],2)*n_k_w; tmp_v_ = tmp_v_(:,1+ngamma);
tmp_u__ = U_d__ .* exp(+i*(delta_w_ + pi/2)*svd_l_);
X_1_ = tmp_u__*tmp_v_;
disp(sprintf(' %% calculating X_1_: time %f',toc));
%%%%%%%%;
Xlim_ = [min(real(X_0_)),max(real(X_0_))];
D_1_ = (X_0_-X_1_)./abs(X_0_);
Dlim_ = [min(real(D_1_)),max(real(D_1_))];
flag_plot=1;
if flag_plot;
figure(n_figure); clf; n_figure = n_figure + 1;
subplot(2,3,1);imagesc(reshape(real(X_0_),n_delta_x,n_delta_y),Xlim_); title('X_0');
subplot(2,3,2);imagesc(reshape(real(X_1_),n_delta_x,n_delta_y),Xlim_); title('X_1');
subplot(2,3,3);imagesc(reshape(real(D_1_),n_delta_x,n_delta_y),Dlim_); title('\Delta X');
subplot(2,3,4);imagesc(reshape(imag(X_0_),n_delta_x,n_delta_y),Xlim_); title('X_0');
subplot(2,3,5);imagesc(reshape(imag(X_1_),n_delta_x,n_delta_y),Xlim_); title('X_1');
subplot(2,3,6);imagesc(reshape(imag(D_1_),n_delta_x,n_delta_y),Dlim_); title('\Delta X');
end;%if flag_plot;
%%%%%%%%;

disp('returning'); return;
