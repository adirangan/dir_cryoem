% test 2d-fourier transform ; 
% The tmplt S is perfectly centered ;
% The image M is slightly rotated and shifted ;

% generate tmplt S ;
ng = 64; max_x_c = 1; max_k_c = ng/max_x_c;
% realspace carte grid ; 
grid_x_c = linspace(0,max_x_c,ng+1); grid_x_c = grid_x_c(1:end-1); d_x_c = mean(diff(grid_x_c));
% freqspace carte grid ; 
grid_k_c = (0:ng-1)/max_x_c; d_k_c = mean(diff(grid_k_c));
% xxxxspace qring grid ;
grid_q = (0:ng-1) ; max_q = ng; qlim = [-2,+2]; grid_q2 = grid_q; grid_q2(ng/2:end) = grid_q2(ng/2:end)-ng;
% realspace carte meshgrid ;
[X_x_c,Y_x_c] = meshgrid(grid_x_c,grid_x_c); X_x_c(:,ng/2+1:end) = X_x_c(:,ng/2+1:end)-max_x_c; Y_x_c(ng/2+1:end,:) = Y_x_c(ng/2+1:end,:)-max_x_c;
R_x_c = sqrt(X_x_c.^2 + Y_x_c.^2); W_x_c = atan2(Y_x_c,X_x_c);
% freqspace carte meshgrid ;
[X_k_c,Y_k_c] = meshgrid(grid_k_c,grid_k_c); X_k_c(:,ng/2+1:end) = X_k_c(:,ng/2+1:end)-max_k_c; Y_k_c(ng/2+1:end,:) = Y_k_c(ng/2+1:end,:)-max_k_c;
R_k_c = sqrt(X_k_c.^2 + Y_k_c.^2); W_k_c = atan2(Y_k_c,X_k_c);
% realspace polar meshgrid ;
grid_x_r = linspace(0,max_x_c/2,ng+1); grid_x_r = grid_x_r(1:end-1); grid_x_w = linspace(0,2*pi,ng+1); grid_x_w = grid_x_w(1:end-1); 
[R_x_p,W_x_p] = meshgrid(grid_x_r,grid_x_w);
% freqspace polar meshgrid ;
grid_k_r = linspace(0,max_k_c/2,ng+1); grid_k_r = grid_k_r(1:end-1); grid_k_w = linspace(0,2*pi,ng+1); grid_k_w = grid_k_w(1:end-1); 
[R_k_p,W_k_p] = meshgrid(grid_k_r,grid_k_w);
% set up tmplt on realspace carte meshgrid ;
rng(1); tmp_h = 0.*X_x_c + 0.*Y_x_c;
for ni=1:16;
sx=0.05 + 0.05*rand();mx=rand()-0.5;sy=0.05 + 0.05*rand();my=rand()-0.5;
tmp_h = tmp_h + (1/16)*1/(2*pi*max_x_c*sx*max_x_c*sy)*exp(-(X_x_c - max_x_c*mx).^2/2/(max_x_c*sx).^2).*exp(-(Y_x_c - max_x_c*my).^2/2/(max_x_c*sy).^2);
end;%for ni=1:16;
tmp_crop = 0.5*(1+erf(-16.0*(R_x_c-0.25*(1 + 0.5*cos(5*W_x_c)))));
%tmp_crop = R_x_c<0.25*(1 + 0.5*cos(5*W_x_c));
S_x_c = tmp_crop.*tmp_h; Slim_x = max(0,mean(S_x_c(:)) + 1.0*std(S_x_c(:))*[-1,+1]);
L_S_x_c = sum(abs(S_x_c(:)).^2)*d_x_c*d_x_c;
% calculate tmplt values on realspace polar meshgrid ;
S_x_p = interp2(recenter(X_x_c),recenter(Y_x_c),recenter(S_x_c),R_x_p.*cos(W_x_p),R_x_p.*sin(W_x_p));
% calculate tmplt values on realspace qring meshgrid ;
S_x_q = fft(S_x_p);
% calculate tmplt values on freqspace carte meshgrid ;
S_k_c = fft2(S_x_c) * d_x_c*d_x_c; Slim_k  = mean(abs(S_k_c(:))) + 1.0*std(abs(S_k_c(:)))*[-1,+1];
L_S_k_c = sum(abs(S_k_c(:)).^2)*d_k_c*d_k_c;
% calculate tmplt falues on freqspace polar meshgrid ;
S_k_p = interp2(recenter(X_k_c),recenter(Y_k_c),recenter(S_k_c),R_k_p.*cos(W_k_p),R_k_p.*sin(W_k_p));
% calculate tmplt values on realspace qring meshgrid ;
S_k_q = fft(S_k_p);
disp(sprintf(' %% L_S_x_c %f L_S_k_c %f',L_S_x_c,L_S_k_c));

disp_flag=1;
if disp_flag;
figure;
% plot tmplt in realspace ;
subplot(3,3,1);imagesc(recenter(real(S_x_c)),Slim_x);title('real(S_x_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);
subplot(3,3,4);polarpatch(R_x_p,W_x_p,S_x_p,Slim_x);title('real(S_x_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Slim_x(1),Slim_x(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,7);imagesc(abs(S_x_q([ng/2:ng,1:ng/2-1],:))); title('abs(S_x_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_x_r(end/2+1),grid_x_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
% plot tmplt in freqspace ;
subplot(3,3,2);imagesc(recenter(real(S_k_c)),Slim_k);title('real(S_k_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);
subplot(3,3,3);imagesc(recenter(imag(S_k_c)),Slim_k);title('imag(S_k_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);
subplot(3,3,5);polarpatch(R_k_p,W_k_p,real(S_k_p),Slim_k);title('real(S_k_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Slim_k(1),Slim_k(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,6);polarpatch(R_k_p,W_k_p,imag(S_k_p),Slim_k);title('imag(S_k_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Slim_k(1),Slim_k(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,8);imagesc(real(S_k_q([ng/2:ng,1:ng/2-1],:)),qlim); title('real(S_k_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
subplot(3,3,9);imagesc(imag(S_k_q([ng/2:ng,1:ng/2-1],:)),qlim); title('imag(S_k_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
return;
end;%if disp_flag;

% generate image M ;
M_x_c = S_x_c; Mlim_x = max(0,mean(M_x_c(:)) + 1.0*std(M_x_c(:))*[-1,+1]);
gamma_true = -3*2*pi/10; M_x_c = recenter(interp2(recenter(X_x_c),recenter(Y_x_c),recenter(M_x_c),recenter(X_x_c)*cos(gamma_true) - recenter(Y_x_c)*sin(gamma_true),recenter(X_x_c)*sin(gamma_true) + recenter(Y_x_c)*cos(gamma_true),'nearest',0));
delta_x_true = 3.5*max_x_c/64; delta_y_true = 1.5*max_x_c/64; M_x_c = recenter(interp2(recenter(X_x_c),recenter(Y_x_c),recenter(M_x_c),recenter(X_x_c)-delta_x_true,recenter(Y_x_c)-delta_y_true,'nearest',0));
L_M_x_c = sum(abs(M_x_c(:)).^2)*d_x_c*d_x_c;
% calculate image values on realspace polar meshgrid ;
M_x_p = interp2(recenter(X_x_c),recenter(Y_x_c),recenter(M_x_c),R_x_p.*cos(W_x_p),R_x_p.*sin(W_x_p));
% calculate image values on realspace qring meshgrid ;
M_x_q = fft(M_x_p);
% calculate image values on freqspace carte meshgrid ;
M_k_c = fft2(M_x_c) * d_x_c*d_x_c; Mlim_k  = mean(abs(M_k_c(:))) + 1.0*std(abs(M_k_c(:)))*[-1,+1];
L_M_k_c = sum(abs(M_k_c(:)).^2)*d_k_c*d_k_c;
% calculate image falues on freqspace polar meshgrid ;
M_k_p = interp2(recenter(X_k_c),recenter(Y_k_c),recenter(M_k_c),R_k_p.*cos(W_k_p),R_k_p.*sin(W_k_p));
% calculate image values on realspace qring meshgrid ;
M_k_q = fft(M_k_p);
disp(sprintf(' %% L_M_x_c %f L_M_k_c %f',L_M_x_c,L_M_k_c));

disp_flag=0;
if disp_flag;
figure;
% plot image in realspace ;
subplot(3,3,1);imagesc(recenter(real(M_x_c)),Mlim_x);title('real(M_x_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);
subplot(3,3,4);polarpatch(R_x_p,W_x_p,M_x_p,Mlim_x);title('real(M_x_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Mlim_x(1),Mlim_x(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,7);imagesc(abs(M_x_q([ng/2:ng,1:ng/2-1],:))); title('abs(M_x_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_x_r(end/2+1),grid_x_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
% plot image in freqspace ;
subplot(3,3,2);imagesc(recenter(real(M_k_c)),Mlim_k);title('real(M_k_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);
subplot(3,3,3);imagesc(recenter(imag(M_k_c)),Mlim_k);title('imag(M_k_c)'); colorbar; set(gca,'Ydir','normal');
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),grid_k_c(end)]-ng/2);
subplot(3,3,5);polarpatch(R_k_p,W_k_p,real(M_k_p),Mlim_k);title('real(M_k_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Mlim_k(1),Mlim_k(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,6);polarpatch(R_k_p,W_k_p,imag(M_k_p),Mlim_k);title('imag(M_k_p)'); c = colorbar; %set(c,'Ticks',0.025 + 0.95*linspace(0,1,4),'TickLabels',linspace(Mlim_k(1),Mlim_k(2),4));set(gca,'XTick',[],'Ytick',[]);
subplot(3,3,8);imagesc(real(M_k_q([ng/2:ng,1:ng/2-1],:)),qlim); title('real(M_k_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
subplot(3,3,9);imagesc(imag(M_k_q([ng/2:ng,1:ng/2-1],:)),qlim); title('imag(M_k_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
end;%if disp_flag;

% generate array of rotations ; 
gamma_ = linspace(0,2*pi,11); gamma_ = gamma_(1:end-1);
% generate array of translations delta_(j1).*[cos(omega_(j2)) ; sin(omega_(j2))]; 
delta_ = linspace(0,max_x_c/16,8); omega_ = linspace(0,2*pi,13); omega_ = omega_(1:end-1);
[Delta_,Omega_] = meshgrid(delta_,omega_);

% factorized calculation of overlap integrals $C_f = \sum_{\eta} \int m_{\eta,k} \bar{s}_{\eta,k} kdk $ ;
tmp_n2 = [zeros(2,length(grid_k_r));M_k_q(1:end-2,:);].*(ones(length(grid_q),1)*(grid_k_r.^2));
tmp_n1 = [zeros(1,length(grid_k_r));M_k_q(1:end-1,:);].*(ones(length(grid_q),1)*(grid_k_r.^1));
tmp_01 = [M_k_q(1:end,:)].*(ones(length(grid_q),1)*(grid_k_r.^0));
tmp_00 = [M_k_q(1:end,:)].*(ones(length(grid_q),1)*(grid_k_r.^2));
tmp_p1 = [M_k_q(2:end,:);zeros(1,length(grid_k_r))].*(ones(length(grid_q),1)*(grid_k_r.^1));
tmp_p2 = [M_k_q(3:end,:);zeros(2,length(grid_k_r))].*(ones(length(grid_q),1)*(grid_k_r.^2));
tm2_n2 = (tmp_n2(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm2_n1 = (tmp_n1(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm2_01 = (tmp_01(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm2_00 = (tmp_00(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm2_p1 = (tmp_p1(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm2_p2 = (tmp_p2(:,1:end-1).*conj(S_k_q(:,1:end-1)))*ones(length(grid_k_r)-1,1)/(length(grid_k_r)-1);
tm3_n2 = zeros(1,length(gamma_));
tm3_n1 = zeros(1,length(gamma_));
tm3_01 = zeros(1,length(gamma_));
tm3_00 = zeros(1,length(gamma_));
tm3_p1 = zeros(1,length(gamma_));
tm3_p2 = zeros(1,length(gamma_));
for ng=1:length(gamma_); gamma = gamma_(ng);
tmp_gg = transpose(exp(i*grid_q2*gamma)); tmp_gg = tmp_gg / length(tmp_gg);
tm3_n2(ng) = transpose(tm2_n2)*tmp_gg;
tm3_n1(ng) = transpose(tm2_n1)*tmp_gg;
tm3_01(ng) = transpose(tm2_01)*tmp_gg;
tm3_00(ng) = transpose(tm2_00)*tmp_gg;
tm3_p1(ng) = transpose(tm2_p1)*tmp_gg;
tm3_p2(ng) = transpose(tm2_p2)*tmp_gg;
end;%for ng=1:length(gamma_);
tm4 = [tm3_n2 ; tm3_n1 ; tm3_01 ; tm3_00 ; tm3_p1 ; tm3_p2 ];
C_f_ = zeros(length(omega_),length(delta_),length(gamma_));
for n_delta = 1:length(delta_); for n_omega = 1:length(omega_); delta = delta_(n_delta); omega = omega_(n_omega);
tm5_n2 = -1*(delta^2/8*exp(-i*2*(omega+pi)));
tm5_n1 = +i*(delta^1/2*exp(-i*1*(omega+pi)));
tm5_01 = +1*(1.0                           );
tm5_00 = -1*(delta^2/4*exp( 0*0*(omega+pi)));
tm5_p1 = +i*(delta^1/2*exp(+i*1*(omega+pi)));
tm5_p2 = -1*(delta^2/8*exp(+i*2*(omega+pi)));
tm5 = [tm5_n2 , tm5_n1 , tm5_01 , tm5_00 , tm5_p1 , tm5_p2];
C_f_(n_omega,n_delta,:) = real(tm5 * tm4); 
end;end;%for n_delta = 1:length(delta_); for n_omega = 1:length(omega_); 

% direct calculation of all overlap integrals $C_k = \int\int \hat{M}\cdot\bar{\hat{S}}d\vec{k}$ for each gamma, delta ;
C_x_ = zeros(length(omega_),length(delta_),length(gamma_));
C_k_ = zeros(length(omega_),length(delta_),length(gamma_));
C_q_ = zeros(length(omega_),length(delta_),length(gamma_));
for n_gamma = 1:length(gamma_); gamma = gamma_(n_gamma);
for n_delta = 1:length(delta_); for n_omega = 1:length(omega_); delta = delta_(n_delta); omega = omega_(n_omega);
delta_x = delta*cos(omega); delta_y = delta*sin(omega);
N_x_c = M_x_c;
N_x_c = recenter(interp2(recenter(X_x_c),recenter(Y_x_c),recenter(N_x_c),recenter(X_x_c)-delta_x,recenter(Y_x_c)-delta_y,'nearest',0));
N_x_c = recenter(interp2(recenter(X_x_c),recenter(Y_x_c),recenter(N_x_c),recenter(X_x_c)*cos(gamma) - recenter(Y_x_c)*sin(gamma),recenter(X_x_c)*sin(gamma) + recenter(Y_x_c)*cos(gamma),'nearest',0));
C_x_(n_omega,n_delta,n_gamma) = sum(abs(N_x_c(:) - S_x_c(:)).^2)*d_x_c*d_x_c;
N_k_c = M_k_c;
N_k_c = N_k_c.*exp(-i*X_k_c*delta_x + -i*Y_k_c*delta_y); % +i or -i? ; 
N_k_c = recenter(interp2(recenter(X_k_c),recenter(Y_k_c),recenter(N_k_c),recenter(X_k_c)*cos(gamma) - recenter(Y_k_c)*sin(gamma),recenter(X_k_c)*sin(gamma) + recenter(Y_k_c)*cos(gamma),'nearest',0));
C_k_(n_omega,n_delta,n_gamma) = sum(abs(N_k_c(:) - S_k_c(:)).^2)*d_k_c*d_k_c;
N_k_q = M_k_q;
%N_k_q = N_k_q.*(transpose(exp(i*grid_q2*gamma))*ones(1,length(grid_k_r)));
tmp_n2 = [zeros(2,length(grid_k_r));N_k_q(1:end-2,:);];
tmp_n1 = [zeros(1,length(grid_k_r));N_k_q(1:end-1,:);];
tmp_00 = [N_k_q(1:end,:)];
tmp_p1 = [N_k_q(2:end,:);zeros(1,length(grid_k_r))];
tmp_p2 = [N_k_q(3:end,:);zeros(2,length(grid_k_r))];
tm2_n2 = -1*(delta^2/8*exp(-i*2*(omega+pi)))*tmp_n2.*(ones(length(grid_q),1)*(grid_k_r.^2));
tm2_n1 = +i*(delta^1/2*exp(-i*1*(omega+pi)))*tmp_n1.*(ones(length(grid_q),1)*(grid_k_r.^1));
tm2_01 = +1*(1.0                       )*tmp_00.*(ones(length(grid_q),1)*(grid_k_r.^0));
tm2_00 = -1*(delta^2/4*exp( 0*0*(omega+pi)))*tmp_00.*(ones(length(grid_q),1)*(grid_k_r.^2));
tm2_p1 = +i*(delta^1/2*exp(+i*1*(omega+pi)))*tmp_p1.*(ones(length(grid_q),1)*(grid_k_r.^1));
tm2_p2 = -1*(delta^2/8*exp(+i*2*(omega+pi)))*tmp_p2.*(ones(length(grid_q),1)*(grid_k_r.^2));
N_k_q = tm2_n2 + tm2_n1 + tm2_01 + tm2_00 + tm2_p1 + tm2_p2;
N_k_q = N_k_q.*(transpose(exp(i*grid_q2*gamma))*ones(1,length(grid_k_r)));
C_q_(n_omega,n_delta,n_gamma) = real(ones(1,length(grid_q))*((N_k_q(:,1:end-1).*conj(S_k_q(:,1:end-1))).*(ones(length(grid_q),1)*grid_k_r(1:end-1)))*ones(length(grid_k_r)-1,1)*mean(diff(grid_q))*mean(diff(grid_k_r)));
% show overlap integrals as they are being calculated ;
disp_flag=0;
if disp_flag; clf;
subplot(3,3,1); imagesc(recenter(real(S_x_c)),Slim_x); title(sprintf('S_x_c'));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);
subplot(3,3,2); imagesc(recenter(real(N_x_c)),Slim_x); title(sprintf('N_x_c (%d,%d,%d)',n_delta,n_omega,n_gamma));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);
subplot(3,3,3); imagesc(recenter(real(N_x_c - S_x_c)),Slim_x); title(sprintf('Difference: C=%0.2f',C_x_(n_omega,n_delta,n_gamma)));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_x_c(1),grid_x_c(end/2+1),floor(10*grid_x_c(end))/10]-max_x_c/2);
subplot(3,3,4); imagesc(recenter(real(S_k_c)),Slim_k); title(sprintf('S_k_c'));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);
subplot(3,3,5); imagesc(recenter(real(N_k_c)),Slim_k); title(sprintf('N_k_c (%d,%d,%d)',n_delta,n_omega,n_gamma));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);
subplot(3,3,6); imagesc(recenter(real(N_k_c - S_k_c)),Slim_k); title(sprintf('Difference: C=%0.2f',C_k_(n_omega,n_delta,n_gamma)));
set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_k_c(1),grid_k_c(end/2+1),floor(10*grid_k_c(end))/10]-max_k_c/2);
subplot(3,3,7);imagesc(abs(S_k_q([ng/2:ng,1:ng/2-1],:)),[0,1]); title('abs(S_k_q)'); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
subplot(3,3,8);imagesc(abs(N_k_q([ng/2:ng,1:ng/2-1],:)),[0,1]); title(sprintf('abs(N_k_q) (%d,%d,%d)',n_delta,n_omega,n_gamma)); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
subplot(3,3,9);imagesc(abs(S_k_q([ng/2:ng,1:ng/2-1],:) - N_k_q([ng/2:ng,1:ng/2-1],:)),[0,1]); title(sprintf('-C=%0.2f',-C_q_(n_omega,n_delta,n_gamma))); colorbar; set(gca,'Ydir','normal'); set(gca,'XTick',[1,ng/2+1,ng],'XTickLabel',[0,grid_k_r(end/2+1),grid_k_r(end)]); set(gca,'YTick',[1,ng/2+1,ng],'YTickLabel',[grid_q(1),grid_q(end/2+1),grid_q(end)]-max_q/2);
drawnow(); %pause();
end;%if disp_flag;
end;end;% for delta and omega ; 
end;%for n_gamma = 1:length(gamma_);

% show overlap integrals after calculation (gamma -> delta) ;
disp_flag=1;
if disp_flag;
clf; 
subplot(2,2,1);
hold on;
for n_gamma = 1:length(gamma_); gamma = gamma_(n_gamma);
tmp = squeeze(+C_x_(:,:,n_gamma)); tlim = mean(tmp(:)) + 1.5*std(tmp(:))*[-1,+1];
polarpatch(Delta_,Omega_,tmp,tlim,1.0*cos(gamma),1.0*sin(gamma),2*pi/max(delta_)/length(gamma_)/2);
end;%for n_gamma = 1:length(gamma_);
hold off; set(gca,'Xtick',[],'Ytick',[]); axis off; title('+C_x');
subplot(2,2,2);
hold on;
for n_gamma = 1:length(gamma_); gamma = gamma_(n_gamma);
tmp = squeeze(+C_k_(:,:,n_gamma)); tlim = mean(tmp(:)) + 1.5*std(tmp(:))*[-1,+1];
polarpatch(Delta_,Omega_,tmp,tlim,1.0*cos(gamma),1.0*sin(gamma),2*pi/max(delta_)/length(gamma_)/2);
end;%for n_gamma = 1:length(gamma_);
hold off; set(gca,'Xtick',[],'Ytick',[]); axis off; title('+C_k');
subplot(2,2,3);
hold on;
for n_gamma = 1:length(gamma_); gamma = gamma_(n_gamma);
tmp = squeeze(-C_q_(:,:,n_gamma)); tlim = mean(tmp(:)) + 1.5*std(tmp(:))*[-1,+1];
polarpatch(Delta_,Omega_,tmp,tlim,1.0*cos(gamma),1.0*sin(gamma),2*pi/max(delta_)/length(gamma_)/2);
end;%for n_gamma = 1:length(gamma_);
hold off; set(gca,'Xtick',[],'Ytick',[]); axis off; title('-C_q');
subplot(2,2,4);
hold on;
for n_gamma = 1:length(gamma_); gamma = gamma_(n_gamma);
tmp = squeeze(-C_f_(:,:,n_gamma)); tlim = mean(tmp(:)) + 1.5*std(tmp(:))*[-1,+1];
polarpatch(Delta_,Omega_,tmp,tlim,1.0*cos(gamma),1.0*sin(gamma),2*pi/max(delta_)/length(gamma_)/2);
end;%for n_gamma = 1:length(gamma_);
hold off; set(gca,'Xtick',[],'Ytick',[]); axis off; title('-C_f');
end;%if disp_flag;
%subplot(3,1,1); plot(-C_f_(:)); subplot(3,1,2); plot(C_k_(:)); subplot(3,1,3); plot(C_x_(:));


