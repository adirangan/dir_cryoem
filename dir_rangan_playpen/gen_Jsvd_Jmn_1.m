function [S__,F__] = gen_Jsvd_Jmn_1(N_pixel,eps_target,weight_f_,flag_plot);
% returns ortho-polynomial coefficients of J_{l}. ;
% F__(m,n,l) = \int \int J_{l}(\delta k) P_{m}(\delta) P_{n}(k) \deltad\delta kdk ; 
% In this expression P_{m}(\delta) is the jacobian polynomial with alpha=0,beta=1. ;
% However, P_{n}(k) is the orthonormal polynomial with weight given by function handle weight_f_ ;
% Try: ;
%{

  %%%%%%%%;
  % weight: exponential ;
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); 
  eps_target_ = 10.^[-4:0.125:-1]; n_eps_target = length(eps_target_); eps_final = min(eps_target_);
  lambda_ = 10*10.^[0:-0.125:-2]; n_lambda = length(lambda_);
  H__ = zeros(n_eps_target,n_lambda);
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_f_ = @(x) (1+x).*exp((-1-x)/lambda); 
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*exp((-1-x)/lambda) / tmp_s; 
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  for neps_target=1:n_eps_target;
  eps_target = eps_target_(neps_target);
  H__(neps_target,nlambda) = length(find(S__(:)>eps_target));
  end;%for neps_target=1:n_eps_target;
  end;%for nlambda = 1:n_lambda;
  %%%%%%%%;
  subplot(1,2,1);
  colormap(colormap_beach());
  imagesc(H__); colorbar;
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  set(gca,'YTick',1:n_eps_target,'YTickLabel',log10(eps_target_)); ylabel('log10(eps)');
  title(sprintf('W %0.1f: H',N_pixel/sqrt(2)));
  subplot(1,2,2);
  neps_target = find(abs(log10(eps_target_)-(-2))<0.01);
  plot(1:n_lambda,H__(neps_target,:),'ko-','LineWidth',2,'MarkerSize',25);
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  ylabel('H');
  title(sprintf('W %0.1f: eps=0.01',N_pixel/sqrt(2)));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d_lamda_0',pwd,round(100*N_pixel));
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % weight: gaussian ;
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); 
  eps_target_ = 10.^[-4:0.125:-1]; n_eps_target = length(eps_target_); eps_final = min(eps_target_);
  lambda_ = 10*10.^[0:-0.125:-2]; n_lambda = length(lambda_);
  H__ = zeros(n_eps_target,n_lambda);
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_f_ = @(x) (1+x).*exp(-((-1-x)/lambda).^2); 
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*exp(-((-1-x)/lambda).^2) / tmp_s;
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  for neps_target=1:n_eps_target;
  eps_target = eps_target_(neps_target);
  H__(neps_target,nlambda) = length(find(S__(:)>eps_target));
  end;%for neps_target=1:n_eps_target;
  end;%for nlambda = 1:n_lambda;
  %%%%%%%%;
  subplot(1,2,1);
  colormap(colormap_beach());
  imagesc(H__); colorbar;
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  set(gca,'YTick',1:n_eps_target,'YTickLabel',log10(eps_target_)); ylabel('log10(eps)');
  title(sprintf('W %0.1f: H',N_pixel/sqrt(2)));
  subplot(1,2,2);
  neps_target = find(abs(log10(eps_target_)-(-2))<0.01);
  plot(1:n_lambda,H__(neps_target,:),'ko-','LineWidth',2,'MarkerSize',25);
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  ylabel('H');
  title(sprintf('W %0.1f: eps=0.01',N_pixel/sqrt(2)));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d_lamda2_0',pwd,round(100*N_pixel));
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % weight: 1/k^2 ;
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); 
  eps_target_ = 10.^[-4:0.125:-1]; n_eps_target = length(eps_target_); eps_final = min(eps_target_);
  lambda_ = 10*10.^[0:-0.125:-2]; n_lambda = length(lambda_);
  H__ = zeros(n_eps_target,n_lambda);
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_f_ = @(x) (1+x).*(1./(1 + ((1+x)/lambda).^2));
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*(1./(1 + ((1+x)/lambda).^2)) / tmp_s;
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  for neps_target=1:n_eps_target;
  eps_target = eps_target_(neps_target);
  H__(neps_target,nlambda) = length(find(S__(:)>eps_target));
  end;%for neps_target=1:n_eps_target;
  end;%for nlambda = 1:n_lambda;
  %%%%%%%%;
  subplot(1,2,1);
  colormap(colormap_beach());
  imagesc(H__); colorbar;
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  set(gca,'YTick',1:n_eps_target,'YTickLabel',log10(eps_target_)); ylabel('log10(eps)');
  title(sprintf('W %0.1f: H',N_pixel/sqrt(2)));
  subplot(1,2,2);
  neps_target = find(abs(log10(eps_target_)-(-2))<0.01);
  plot(1:n_lambda,H__(neps_target,:),'ko-','LineWidth',2,'MarkerSize',25);
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  ylabel('H');
  title(sprintf('W %0.1f: eps=0.01',N_pixel/sqrt(2)));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d_lamda3_0',pwd,round(100*N_pixel));
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % weight: 1/k^1 ;
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); 
  eps_target_ = 10.^[-4:0.125:-1]; n_eps_target = length(eps_target_); eps_final = min(eps_target_);
  lambda_ = 10*10.^[0:-0.125:-2]; n_lambda = length(lambda_);
  H__ = zeros(n_eps_target,n_lambda);
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_f_ = @(x) (1+x).*(1./(1 + ((1+x)/lambda).^1));
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*(1./(1 + ((1+x)/lambda).^1)) / tmp_s;
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  for neps_target=1:n_eps_target;
  eps_target = eps_target_(neps_target);
  H__(neps_target,nlambda) = length(find(S__(:)>eps_target));
  end;%for neps_target=1:n_eps_target;
  end;%for nlambda = 1:n_lambda;
  %%%%%%%%;
  subplot(1,2,1);
  colormap(colormap_beach());
  imagesc(H__); colorbar;
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  set(gca,'YTick',1:n_eps_target,'YTickLabel',log10(eps_target_)); ylabel('log10(eps)');
  title(sprintf('W %0.1f: H',N_pixel/sqrt(2)));
  subplot(1,2,2);
  neps_target = find(abs(log10(eps_target_)-(-2))<0.01);
  plot(1:n_lambda,H__(neps_target,:),'ko-','LineWidth',2,'MarkerSize',25);
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  ylabel('H');
  title(sprintf('W %0.1f: eps=0.01',N_pixel/sqrt(2)));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d_lamda4_0',pwd,round(100*N_pixel));
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % weight: k .* 1./(1+(k/lambda).^2) * (1-cos(2*pi*4*(k/kmax).^2)) ;
  %%%%%%%%;
  N_pixel = 5.0*sqrt(2); 
  x_ = linspace(-1,+1,513);
  eps_target_ = 10.^[-4:0.125:-1]; n_eps_target = length(eps_target_); eps_final = min(eps_target_);
  lambda_ = 10*10.^[0:-0.125:-2]; n_lambda = length(lambda_);
  %%%%%%%%;
  flag_disp=0;
  if flag_disp;
  figure(1);clf;
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_ctf_ = @(x) (1./(1 + ((1+x)/lambda).^2)) .* 0.5 .* (1+cos(2*pi*4*(1+x).^2));
  tmp_s = 1;
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  subplot(3,6,nlambda); 
  hold on;
  plot(x_,weight_ctf_(x_)/weight_ctf_(-0.5),'g-');
  xlim([-1,+1]); ylim([-0.125,+1.625]); title(sprintf('lambda %0.2f',lambda));
  hold off; drawnow();
  end;%for nlambda = 1:n_lambda;
  set(gcf,'Position',1+[0,0,512*4,512*2]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_ctf_0',pwd);
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  
  end;% if flag_disp;
  %%%%%%%%;
  H__ = zeros(n_eps_target,n_lambda);
  for nlambda = 1:n_lambda;
  lambda = lambda_(nlambda);
  disp(sprintf(' %% nlambda %d/%d lambda %0.2f',nlambda,n_lambda,lambda));
  weight_ctf_ = @(x) (1./(1 + ((1+x)/lambda).^2)) .* 0.5 .* (1+cos(2*pi*4*(1+x).^2));
  tmp_s = 1;
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  for neps_target=1:n_eps_target;
  eps_target = eps_target_(neps_target);
  H__(neps_target,nlambda) = length(find(S__(:)>eps_target));
  end;%for neps_target=1:n_eps_target;
  end;%for nlambda = 1:n_lambda;
  %%%%%%%%;
  figure(2);clf;
  subplot(1,2,1);
  colormap(colormap_beach());
  imagesc(H__); colorbar;
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  set(gca,'YTick',1:n_eps_target,'YTickLabel',log10(eps_target_)); ylabel('log10(eps)');
  title(sprintf('W %0.1f: H',N_pixel/sqrt(2)));
  subplot(1,2,2);
  neps_target = find(abs(log10(eps_target_)-(-2))<0.01);
  plot(1:n_lambda,H__(neps_target,:),'ko-','LineWidth',2,'MarkerSize',25);
  set(gca,'XTick',1:n_lambda,'XTickLabel',round(100*lambda_)/100); xtickangle(90); xlabel('lambda');
  ylabel('H');
  title(sprintf('W %0.1f: eps=0.01',N_pixel/sqrt(2)));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d_ctfH_0',pwd,round(100*N_pixel));
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % Estimate ratio saved? ;
  %%%%%%%%;
  % weight: k .* 1./(1+(k/lambda).^2) * (1-cos(2*pi*4*(k/kmax).^2)) ;
  %%%%%%%%;
  x_ = linspace(-1,+1,513);
  eps_target = 10.^-2; eps_final = eps_target; 
  lambda=0.1;
  weight_ctf_ = @(x) (1./(1 + ((1+x)/lambda).^2)) .* 0.5 .* (1+cos(2*pi*4*(1+x).^2));
  tmp_s = 1;
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  N_pixel_ = [1:2:35]*sqrt(2);
  H_ = zeros(length(N_pixel_),1);
  for npixel=1:length(N_pixel_);
  N_pixel = N_pixel_(npixel);
  disp(sprintf(' %% npixel %d/%d W %0.2f',npixel,length(N_pixel_),N_pixel/sqrt(2)));
  [S__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,@(x) (1+x));
  [T__] = gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_);
  H_(npixel) = length(find(T__(:)>eps_target))./length(find(S__(:)>eps_target));
  end;%for npixel=1:length(N_pixel_);
  %%%%%%%%;
  figure(3);clf;
  subplot(1,1,1);
  plot(N_pixel_/sqrt(2),H_(:,1),'ko-','LineWidth',2,'MarkerSize',25);
  ylim([0,1]); xlim([1,N_pixel_(end)/sqrt(2)]);
  xlabel('W'); ylabel('work %');
  title(sprintf('work vs W, eps=0.01'));
  set(gcf,'Position',1+[0,0,512*2,512*1]);
  fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_ctfW_0',pwd);
  print('-djpeg',sprintf('%s.jpg',fname_fig));
  print('-depsc',sprintf('%s.eps',fname_fig));  

  %%%%%%%%;
  % plot various approximations. ;
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); eps_final = 0.01; flag_plot=1;
  weight_f_ = @(x) (1+x);
  gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_,flag_plot);
  %%%%%%%%;
  N_pixel = 3.0*sqrt(2); eps_final = 0.01; flag_plot=1;
  lambda=0.1;
  weight_ctf_ = @(x) (1./(1 + ((1+x)/lambda).^2)) .* 0.5 .* (1+cos(2*pi*4*(1+x).^2));
  tmp_s = 1;
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  weight_T_ = chebfun(weight_f_); tmp_s = sum(weight_T_);
  weight_f_ = @(x) (1+x).*weight_ctf_(x) / tmp_s;
  gen_Jsvd_Jmn_1(N_pixel,eps_final,weight_f_,flag_plot);

 %}

if nargin<1; N_pixel = 3.0*sqrt(2); end;
if nargin<2; eps_target = 1e-14; end;
if nargin<3; weight_f_ = @(x) (1+x).*exp((-1-x)/100); end;
if nargin<4; flag_plot=0; end;

%N_pixel = 3.0*sqrt(2); eps_target = 1e-2; weight_f_ = @(x) (1+x).*exp((-1-x)/100); flag_plot=1;
setup; verbose=2; K_max = 1.0; 
if (N_pixel<=5); l_max = 64;a_K = 48;b_K=48; end;
if (N_pixel> 5); l_max = 96;a_K = 96;b_K=96; end;

%%%%%%%%;
K_target = K_max;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*K_target);
%%%%%%%%;
r_max = 2*pi*K_target;
d_max = D_target;
a_m = r_max/2; a_r = a_m;
b_m = d_max/2; b_r = b_m;
%%%%%%%%;
disp(sprintf(' %% finding orthonormal polynomials...')); tic;
weight_T_ = chebfun(weight_f_); %<-- represent weight_f_ using a chebfun. ;
P__ = cell(a_K+1,1); %<-- cell array for orthonormal polynomials. ;
for nkA=0:a_K+1-1; P__{1+nkA} = chebpoly(nkA); end;
% Now use simple graham schmidt. ;
for nkA1=0:a_K+1-1;
tmp_P1_ = P__{1+nkA1}; tmp_Z = sum(tmp_P1_*weight_T_*tmp_P1_); tmp_P1_ = tmp_P1_/sqrt(tmp_Z);
for nkA2=0:nkA1-1;
tmp_P2_ = P__{1+nkA2}; %<-- assumed orthonormal already. ;
tmp_Z = sum(tmp_P2_*weight_T_*tmp_P1_);
tmp_P1_ = tmp_P1_ - tmp_Z*tmp_P2_; tmp_Z = sum(tmp_P1_*weight_T_*tmp_P1_); tmp_P1_ = tmp_P1_/sqrt(tmp_Z);
end;%for nkA2=0:nkA1-1;
P__{1+nkA1} = tmp_P1_;
end;%for nkA1=0:a_K+1-1;
flag_check=0;
if flag_check;
tmp_C_ = zeros(a_K+1,a_K+1); %<-- check orthonormality. ;
for nkA1=0:a_K+1-1;
tmp_P1_ = P__{1+nkA1};
for nkA2=0:nkA2;
tmp_P2_ = P__{1+nkA2};
tmp_Z = sum(tmp_P1_*weight_T_*tmp_P2_);
tmp_C_(1+nkA1,1+nkA2) = tmp_Z; tmp_C_(1+nkA2,1+nkA1) = tmp_Z;
end;%for nkA2=0:nkA2;
end;%for nkA1=0:a_K+1-1;
end;%if flag_check;
a_jx = roots(P__{a_K+1});
if (length(a_jx)~=a_K); disp(sprintf(' %% Warning! could not determine orthonormal polynomial of degree %d in gen_Jsvd_Jmn_1.m, found %d/%d roots',a_K,length(a_jx),a_K)); end;
if (length(a_jx)<a_K); a_jx = sort([a_jx;2*rand(a_K-length(a_jx))-1]); end;
if (length(a_jx)>a_K); tmp_p_ = randperm(length(a_jx)); a_jx = a_jx(tmp_p_(1:a_K)); end;
a_ji = zeros(a_K,1); %<-- integral of P__. ;
tmp_C_ = zeros(a_K,a_K); %<-- vandermonde matrix. ;
for nkA1=0:a_K-1;
tmp_P1_ = P__{1+nkA1};
a_ji(1+nkA1) = sum(tmp_P1_*weight_T_);
tmp_C_(1+nkA1,:) = transpose(tmp_P1_(a_jx));
end;%for nkA1=0:a_K-1;
disp(sprintf(' %% a_K: %d; condition number of tmp_C_: %0.2f',a_K,cond(tmp_C_)));
a_jw = tmp_C_\a_ji;
disp(sprintf(' %% finding orthonormal polynomials total time %0.2f',toc));
%%%%%%%%;
a_Jv_ = cell(1+a_K,1+a_K); a_Jx = zeros(a_K,a_K);
for nkA=0:a_K;
aj = P__{1+nkA};
if (nkA<a_K); a_Jx(1+nkA,:) = aj(a_jx); end;
a_Jv_{1+nkA} = aj;
end;%for nkA=1:a_K;
a_jt = a_jx*a_r + a_m;
%%%%%%%%;
[b_jx,b_jw] = jacpts(b_K,0,1); b_jw=transpose(b_jw);
b_Jv_ = cell(1+b_K,1+b_K); b_Jx = zeros(b_K,b_K);
for nkB=0:b_K;
bj = jacpoly(nkB,0,1)*sqrt(nkB+1)/sqrt(2);
if (nkB<b_K); b_Jx(1+nkB,:) = bj(b_jx); end;
b_Jv_{1+nkB} = bj;
end;%for nkB=1:b_K;
b_jt = b_jx*b_r + b_m;
%%%%%%%%;
[A_jt_,B_jt_] = meshgrid(a_jt,b_jt);
%%%%%%%%;
F__ = zeros(b_K,a_K,2*l_max+1);
for tmp_l = -l_max:+l_max;
F = @(a,b) besselj(tmp_l,a.*b);
F_jt_ = F(A_jt_,B_jt_);
F_ = zeros(b_K,a_K);
jw_ = b_jw*transpose(a_jw);
for nkA=0:a_K-1;for nkB=0:b_K-1;
J_tmp_ = transpose(b_Jx(1+nkB,:))*a_Jx(1+nkA,:);
S_tmp = F_jt_.*J_tmp_.*jw_;
F_(1+nkB,1+nkA) = sum(S_tmp(:));
end;end;%for nkA=0:a_K-1;for nkB=0:b_K-1;
F__(:,:,1+l_max+tmp_l) = F_;
end;%for tmp_l = -l_max:+l_max;
%%%%%%%%;
S__ = zeros(max(b_K,a_K),2*l_max+1);
for tmp_l = -l_max:+l_max;
tmp_F_ = F__(:,:,1+l_max+tmp_l);
[tmp_U_,tmp_S_,tmp_V_] = svd(tmp_F_);
S__(:,1+l_max+tmp_l) = diag(tmp_S_);
end;%for tmp_l = -l_max:+l_max;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Compare F with svd-approximation. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_plot;
%%%%%%%%;
clear S_l_ S_u_ S_s_ S_v_ ;
l=0; n_S=0; continue_flag=1;
while (continue_flag);
if (l==0); l_ = [0]; else l_ = [-l,+l]; end;
for l_tmp = l_;
F = @(a,b) besselj(l_tmp,a.*b);
F_jt_ = F(A_jt_,B_jt_);
F_ = zeros(b_K,a_K);
jw_ = b_jw*transpose(a_jw);
for nkA=0:a_K-1;for nkB=0:b_K-1;
J_tmp_ = transpose(b_Jx(1+nkB,:))*a_Jx(1+nkA,:);
S_tmp = F_jt_.*J_tmp_.*jw_;
F_(1+nkB,1+nkA) = sum(S_tmp(:));
end;end;%for nkA=0:a_K-1;for nkB=0:b_K-1;
n_svds = min([b_K,a_K]);
[U_,S_,V_] = svds(F_,n_svds); S_ = diag(S_); [ij_ret_] = find(S_>eps_target) ;
if ~isempty(ij_ret_);
if (verbose>1); disp(sprintf(' %% l %+.2d, found %d terms [%0.2f,..,%0.2f];',l_tmp,length(ij_ret_),S_(ij_ret_(1)),S_(ij_ret_(end)))); end;%if
for ij = 1:length(ij_ret_);
S_l_(1+n_S) = l_tmp;
S_u_(:,1+n_S) = U_(:,ij_ret_(ij));
S_s_(1,1+n_S) = S_(ij_ret_(ij),1);
S_v_(:,1+n_S) = V_(:,ij_ret_(ij));
n_S = n_S + 1;
end;%for ij = 1:length(ij_ret_);
end;%if ~isempty(ij_ret_);
end;%for l_tmp = l_;
l=l+1;
if (l>l_max); continue_flag=0; else continue_flag=1; end;
end;%while (continue_flag);
if (verbose>1); disp(sprintf(' %% total of n_S %d terms found;',n_S)); end%if;
%%%%%%%%;
n_svd_r = length(a_jt); svd_r_ = a_jt;
svd_r_m = a_m; svd_r_c = a_r; svd_r_w_ = a_jw; svd_r_Jv_ = a_Jv_;
n_svd_d = length(b_jt); svd_d_ = b_jt;
svd_d_m = b_m; svd_d_c = b_r; svd_d_w_ = b_jw; svd_d_Jv_ = b_Jv_;
n_svd_l = n_S;
svd_l_ = []; if (exist('S_l_','var')); svd_l_ = S_l_; end;
svd_U_d_ = []; if (exist('S_u_','var')); svd_U_d_ = S_u_; end;
svd_s_ = []; if (exist('S_s_','var')); svd_s_ = S_s_; end;
svd_V_r_ = []; if (exist('S_v_','var')); svd_V_r_ = S_v_; end;
%%%%%%%%;
%N_pixel = 3.0*sqrt(2);
n_point = 256; max_x_c = n_point/2;
[max_k_c,max_k_p,grid_x_c_,d_x_c,X_x_c_,Y_x_c_,R_x_c_,W_x_c_,grid_k_c_,d_k_c,X_k_c_,Y_k_c_,R_k_c_,W_k_c_,grid_x_r_,grid_x_w_,R_x_p_,W_x_p_,grid_k_r_,d_k_r,grid_k_w_,d_k_w,R_k_p_,W_k_p_,X_k_p_,Y_k_p_] = test_F_grid_0(n_point,max_x_c);
%R_target = max_k_p-0*0.5; z_target = N_pixel*pi*sqrt(2); D_target = z_target/(2*pi*R_target);
delta_d = D_target; delta_w = 1*pi/6; 
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
Tlim_k = [-1,+1]; 
[X_k_p_] = test_F_X_k_p_5(n_point,max_x_c,delta_d,delta_w,n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Jv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Jv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_);
Xlim_k = [-1,+1]; 
E_k_p_ = T_k_p_ - X_k_p_;
Elim_k = [-1,+1]*1.5*std(abs(E_k_p_(:)));
figure();
cra = colormap_beach();
subplot(1,3,1); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_),Tlim_k,0,0,1,cra);  
title(sprintf('real(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
subplot(1,3,2); clim = polarpatch(R_k_p_,W_k_p_,real(X_k_p_),Xlim_k,0,0,1,cra);  
title(sprintf('real(X) [%0.1f,%0.1f]',Xlim_k)); axis equal;
subplot(1,3,3); clim = polarpatch(R_k_p_,W_k_p_,real(E_k_p_),Elim_k,0,0,1,cra);  
title(sprintf('real(E) +/- 10^(%0.2f)',log10(max(Elim_k))),'Interpreter','none'); axis equal;
%%%%%%%%;
end;%if flag_plot;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Finished. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%flag_plot=0;
if flag_plot>1;
G__ = F__(:,:,1+l_max:1+2*l_max); llim_ = [log10(eps_target),0];
c_ = colormap(colormap_beach()); n_c = size(c_,1);
figure();clf;
%%%%%%%%;
subplot(2,2,4); tmp_x_ = linspace(-1,+1,512); plot(tmp_x_,weight_T_(tmp_x_),'k.-'); title('weight'); xlim([-1,+1]);
subplot(2,2,1);
hold on; 
eps_contour_ = 10.^[-2,-4,-6,-8];
for ne=1:length(eps_contour_);
eps_contour = eps_contour_(ne);
nx = (log10(eps_contour)-min(llim_))/diff(llim_);
tmp_X = min(llim_) + nx*diff(llim_);
disp(sprintf(' %% contour at level %0.4f',tmp_X));
hpatch = patch(isosurface(0:b_K-1,0:a_K-1,0:+l_max,log10(abs(G__)),tmp_X));
isonormals(0:b_K-1,0:a_K-1,0:+l_max,log10(abs(G__)),hpatch);
nc = max(1,min(n_c,floor(n_c*nx)));
hpatch.FaceColor = c_(nc,:);
hpatch.EdgeColor = 'none';
hpatch.FaceAlpha = 0.45;
end;%for ne=1:length(eps_contour_);
xlim([1,b_K]-1);ylim([1,a_K]-1);zlim([0,+l_max]);
xlabel('m');ylabel('n');zlabel('l');
set(gca,'Xtick',[1,b_K]-1,'Ytick',[1,a_K]-1,'Ztick',[0,+l_max]);
tmp_l = line([0;b_K-1],[0;0],[0;0]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',2);
tmp_l = line([0;0],[0;a_K-1],[0;0]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',2);
tmp_l = line([0;0],[0;0],[0;+l_max]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',2);
for na=0:4:a_K-1;
tmp_l = line([0;b_K-1],[na;na],[0;0]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
tmp_l = line([0;0],[na;na],[0;+l_max]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
end;%for na=0:4:a_K-1;
for nb=0:4:b_K-1;
tmp_l = line([nb;nb],[0;a_K-1],[0;0]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
tmp_l = line([nb;nb],[0;0],[0;+l_max]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
end;%for nb=0:4:b_K-1;
for nl=0:4:l_max;
tmp_l = line([0;b_K-1],[0;0],[nl;nl]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
tmp_l = line([0;0],[0;a_K-1],[nl;nl]); set(tmp_l,'Color',0.85*[1,1,1],'LineWidth',0.5);
end;%for nl=0:4:l_max;
hold off;
view([-45+90+90,20]); 
axis vis3d; camlight right; lighting gouraud;
title(sprintf('W %0.2f',N_pixel/sqrt(2)));
%%%%%%%%;
subplot(2,2,2);
G_ = squeeze(G__(:,1,:));
colormap(colormap_beach());
imagesc(log10(abs(transpose(G_))),llim_); colorbar;
set(gca,'YDir','normal');
axis image;
xlabel('m'); ylabel('l');
title(sprintf('W %0.2f',N_pixel/sqrt(2)));
%%%%%%%%;
subplot(2,2,3);
G_ = squeeze(G__(:,:,1));
colormap(colormap_beach());
imagesc(log10(abs(G_)),llim_); colorbar;
set(gca,'YDir','normal');
xlabel('n'); ylabel('m');
axis image;
title(sprintf('W %0.2f',N_pixel/sqrt(2)));
%%%%%%%%;
set(gcf,'Position',1+[0,0,512*3,512*1]);
%fname_fig = sprintf('%s/dir_svd/gen_Jsvd_Jmn_N%3d',pwd,round(100*N_pixel));
%print('-djpeg',sprintf('%s.jpg',fname_fig));
%print('-depsc',sprintf('%s.eps',fname_fig));
end;%if flag_plot>1;

