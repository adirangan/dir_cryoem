% test functional svd-expansion. ;

verbose=1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% generate grids. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_point = 128; max_x_c = 1; 
[max_k_c,max_k_p,grid_x_c_,d_x_c,X_x_c_,Y_x_c_,R_x_c_,W_x_c_,grid_k_c_,d_k_c,X_k_c_,Y_k_c_,R_k_c_,W_k_c_,grid_x_r_,grid_x_w_,R_x_p_,W_x_p_,grid_k_r_,d_k_r,grid_k_w_,d_k_w,R_k_p_,W_k_p_,X_k_p_,Y_k_p_] = test_F_grid_0(n_point,max_x_c);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Determine svd expansion ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
N_pixel = 1.5; % number of wavelengths allowed in displacement grid. ;
eps_target = 0.1; % tolerance used for svd-expansion. ;
l_max = 16; % maximum order of bessel-functions to retain. ;
n_r_degree = 18; % degree of orthonormal-polynomial to use for r = |k|. ;
n_d_degree = 18; % degree of orthonormal-polynomial to use for d = |delta|. ;
k_polycoef_ = [1,1]; % polynomial-coefficients for the weight function associated with r (k). ;
d_polycoef_ = [1,1]; % polynomial-coefficients for the weight function associated with d (delta). ;
R_target = max_k_p-0.5; z_target = N_pixel*pi*sqrt(2); D_target = z_target/(2*pi*R_target);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% use to generate svd-expansion. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
%[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_Jsvd_4(max_k_p,N_pixel,eps_target,l_max,n_r_degree,n_d_degree,k_polycoef_,d_polycoef_);

flag_skip=0;
if ~flag_skip;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% compare T with svd-expansion. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
delta_d = D_target; delta_w = 1*pi/6; 
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
Tlim_k = [-1,+1]; 
for eps_target=[0.01];%for eps_target=[0.1,0.01,0.001];
clear n_svd_r svd_r_ svd_r_m svd_r_c svd_r_w_ svd_r_Lv_ n_svd_d svd_d_ svd_d_m svd_d_c svd_d_w_ svd_d_Lv_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_r_;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_Jsvd_4(max_k_p,N_pixel,eps_target,l_max,n_r_degree,n_d_degree,k_polycoef_,d_polycoef_);
[X_k_p_] = test_F_X_k_p_4(n_point,max_x_c,delta_d,delta_w,n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_);
Xlim_k = [-1,+1];
tmp_ = abs(T_k_p_-X_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp/(pi*max_k_p.^2)); Dlim_k = 0.25*tmp*[-1,+1];
cra = colormap_pm(64);
figure(1); clf;
subplot(2,3,1); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('real(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,4); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_),Tlim_k,0,0,1,cra);  title(sprintf('imag(T) [%0.1f,%0.1f]',Tlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Tlim_k); 
subplot(2,3,2); clim = polarpatch(R_k_p_,W_k_p_,real(X_k_p_),Xlim_k,0,0,1,cra);  title(sprintf('real(T^{svd}) [%0.1f,%0.1f]',Xlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Xlim_k); 
subplot(2,3,5); clim = polarpatch(R_k_p_,W_k_p_,imag(X_k_p_),Xlim_k,0,0,1,cra);  title(sprintf('imag(T^{svd}) [%0.1f,%0.1f]',Xlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Xlim_k); 
subplot(2,3,3); clim = polarpatch(R_k_p_,W_k_p_,real(T_k_p_-X_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('real(T-T^{svd}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
subplot(2,3,6); clim = polarpatch(R_k_p_,W_k_p_,imag(T_k_p_-X_k_p_),Dlim_k,0,0,1,cra);  title(sprintf('imag(T-T^{svd}) [%f,%f]',Dlim_k)); axis equal;
%colorbar_handle = colorbar('v'); tmp = get(colorbar_handle,'Limits'); set(colorbar_handle,'XTick',[min(tmp),max(tmp)],'XTickLabel',Dlim_k); 
%suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.3f(%f)',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1)));
set(gcf,'Position',1+[0,0,1024*1.5,1024]); 
fname_base = sprintf('X_n%d_K%d_N%.2d_e%.3d',n_point,max_k_p,round(10*N_pixel),round(1000*eps_target));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
%%%%%%%%%%%%%%%% ;
end;%for eps_target=[0.1,0.01,0.001];
disp('returning');return;
end;%if ~flag_skip;

flag_skip=1;
if ~flag_skip;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot stack of error-maps for various delta_d. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
for eps_target = [0.1,0.01,0.001];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(5); clf; hold on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
clear n_svd_r svd_r_ svd_r_m svd_r_c svd_r_w_ svd_r_Lv_ n_svd_d svd_d_ svd_d_m svd_d_c svd_d_w_ svd_d_Lv_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_r_;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_Jsvd_4(max_k_p,N_pixel,eps_target,l_max,n_r_degree,n_d_degree,k_polycoef_,d_polycoef_);
Dlim_k = eps_target*[0,1];
n_d = 10;
for nd=1:n_d;
%%%%%%%%%%%%%%%% ;
delta_d = D_target * ((nd-1)/(n_d-1));
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
[X_k_p_] = test_F_X_k_p_4(n_point,max_x_c,delta_d,delta_w,n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_);
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-X_k_p_),Dlim_k,1,[0,0,nd]); 
%%%%%%%%%%%%%%%% ;
end;%for nd=1:n_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
hold off;
colorbar_handle = colorbar('h'); set(colorbar_handle,'XTick',0.5+0.499*[-1,+1],'XTickLabel',Dlim_k); 
title('abs(T-T^{svd})');
%suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.2f(%f)',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1)));
set(gcf,'Position',1+[680 44 562 1051]);
view([29.2,7.6]);
fname_base = sprintf('X_Dx_stack_n%d_K%d_N%.2d_e%.4d',n_point,max_k_p,round(10*N_pixel),round(1000*eps_target));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
end;%for eps_target = [0.1,0.01,0.001];
end;%if ~flag_skip;

flag_skip=1;
if ~flag_skip;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% plot pages of error-maps for various delta_d. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
for eps_target = [0.1,0.01,0.001];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(6); clf; hold on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
clear n_svd_r svd_r_ svd_r_m svd_r_c svd_r_w_ svd_r_Lv_ n_svd_d svd_d_ svd_d_m svd_d_c svd_d_w_ svd_d_Lv_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_r_;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_Jsvd_4(max_k_p,N_pixel,eps_target,l_max,n_r_degree,n_d_degree,k_polycoef_,d_polycoef_);
Dlim_k = eps_target*[0,1];
n_d = 32;
for nd=1:n_d;
%%%%%%%%%%%%%%%% ;
delta_d = D_target * ((nd-1)/(n_d-1));
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
[X_k_p_] = test_F_X_k_p_4(n_point,max_x_c,delta_d,delta_w,n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_);
subplot(4,8,nd);
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-X_k_p_),Dlim_k,1,[0,0,0]); 
%polarpatch_stack(R_k_p_,W_k_p_,real(X_k_p_),Xlim_k,1,[0,0,0]); 
%%%%%%%%%%%%%%%% ;
end;%for nd=1:n_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
hold off;
%suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  eps %0.2f(%f) Dlim %f',n_point,max_k_p,N_pixel,eps_target,eps_target/svd_s_(1),max(Dlim_k)));
set(gcf,'Position',1+[0,0,1024*2,1024]);
fname_base = sprintf('X_Dx_page_n%d_K%d_N%.2d_e%.4d',n_point,max_k_p,round(10*N_pixel),round(1000*eps_target));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
end;%for eps_target = [0.1,0.01,0.001];
end;%if ~flag_skip;

flag_skip=1;
if ~flag_skip;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% pages of error maps for brute-force + interpolation;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
for n_node = [8,16,24];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(7); clf; hold on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
verbose=1;
Dlim_k = 0.1*[0,+1];
T_k_p__ = cell(n_node,1);
delta_d_ = zeros(n_node,1);
for nnode=1:n_node;
delta_d = D_target * ((nnode-1)/(n_node-1)); delta_w = 1*pi/6;
delta_d_(nnode) = delta_d;
T_k_p__{nnode} = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
end;%for nnode=1:n_node;
n_d = 32;
for nd=1:n_d;
%%%%%%%%%%%%%%%% ;
delta_d = D_target * ((nd-1)/(n_d-1));
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w));
%%%%%%%%%%%%%%%% ;
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
%%%%%%%%%%%%%%%% ;
ij_par = find(abs(delta_d_ - delta_d)<1e-7);
if (~isempty(ij_par)); 
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_par %d',nd,delta_d,ij_par)); end;
B_k_p_ = T_k_p__{ij_par};
end;%if (~isempty(ij_par)); 
if (isempty(ij_par));
ij_pre = max(find(delta_d_<delta_d));
ij_pos = min(find(delta_d_>delta_d));
if (verbose); disp(sprintf(' %% nd %d delta_d %f ij_pre %d ij_pos %d',nd,delta_d,ij_pre,ij_pos)); end;
d_pre = delta_d - delta_d_(ij_pre); d_pos = delta_d_(ij_pos) - delta_d;
w_pre = d_pos/(d_pos+d_pre); w_pos = d_pre/(d_pos+d_pre);
B_k_p_ = w_pre*T_k_p__{ij_pre} + w_pos*T_k_p__{ij_pos};
end;%if (isempty(ij_par));
subplot(4,8,nd);
polarpatch_stack(R_k_p_,W_k_p_,abs(T_k_p_-B_k_p_),Dlim_k,1,[0,0,0]); 
%polarpatch_stack(R_k_p_,W_k_p_,real(B_k_p_),Xlim_k,1,[0,0,0]); 
%%%%%%%%%%%%%%%% ;
end;%for nd=1:n_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
hold off;
%colorbar_handle = colorbar('v'); set(colorbar_handle,'XTick',0.5+0.499*[-1,+1],'XTickLabel',Dlim_k); 
suptitle(sprintf('n_{point} %d  K_{max} 2*pi*%d  N^{pixel} %0.1f  n_{node} %d Dlim %f',n_point,max_k_p,N_pixel,n_node,max(Dlim_k)));
set(gcf,'Position',1+[0,0,1024*2,1024]);
fname_base = sprintf('I_Dx_page_n%d_K%d_N%.2d_n%d',n_point,max_k_p,round(10*N_pixel),n_node);
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
end;% for n_node = [8,16,24];
end;%if ~flag_skip;

flag_skip=0;
if ~flag_skip;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% compare error for svd-expansion vs brute-force+linear-interpolation ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% First svd-expansion; 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
verbose=1;
n_d = 128;
d_ = linspace(0,D_target,n_d);
eps_target_ = [0.1,0.01,0.001,0.0001];
E_svd_ = zeros(length(d_),length(eps_target_));
n_S_ = zeros(length(eps_target_),1);
for neps=1:length(eps_target_);
eps_target = eps_target_(neps);
clear n_svd_r svd_r_ svd_r_m svd_r_c svd_r_w_ svd_r_Lv_ n_svd_d svd_d_ svd_d_m svd_d_c svd_d_w_ svd_d_Lv_ n_svd_l svd_l_ svd_U_d_ svd_s_ svd_V_r_;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_Jsvd_4(max_k_p,N_pixel,eps_target,l_max,n_r_degree,n_d_degree,k_polycoef_,d_polycoef_);
n_S_(neps) = n_svd_l;
if (verbose); disp(sprintf(' %% eps_target %f, n_svd_l %d',eps_target,n_svd_l)); end;
for nd=1:length(d_);
delta_d = d_(nd);
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
[X_k_p_] = test_F_X_k_p_4(n_point,max_x_c,delta_d,delta_w,n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Lv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Lv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_);
tmp_ = abs(T_k_p_-X_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp/(pi*max_k_p.^2)); 
E_svd_(nd,neps) = tmp;
end;%for nd=1:length(d_ij_);
end;%for neps=1:length(eps_target_);
% ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Now brute-force + linear-interpolation;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
verbose=1;
n_d = 128;
d_ = linspace(0,D_target,n_d);
n_node_ = [8,16,24,32];
E_int_ = zeros(length(d_),length(n_node_));
for nnode_=1:length(n_node_);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
n_node = n_node_(nnode_);
if (verbose); disp(sprintf(' %% n_node %f',n_node)); end;
T_k_p__ = cell(n_node,1);
delta_d_ = zeros(n_node,1);
for nnode=1:n_node;
delta_d = D_target * ((nnode-1)/(n_node-1)); delta_w = 1*pi/6;
delta_d_(nnode) = delta_d;
T_k_p__{nnode} = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
end;%for nnode=1:n_node;
for nd=1:n_d;
%%%%%%%%%%%%%%%% ;
delta_d = D_target * ((nd-1)/(n_d-1));
delta_w = 1*pi/6;
delta_x = delta_d*cos(delta_w); delta_y = delta_d*sin(delta_w);
if (verbose>1); disp(sprintf(' %% delta_x_c (%f,%f) delta_x_p (%f,%f)',delta_x,delta_y,delta_d,delta_w)); end;
%%%%%%%%%%%%%%%% ;
[T_k_p_] = test_F_T_k_p_0(n_point,max_x_c,delta_d,delta_w);
%%%%%%%%%%%%%%%% ;
ij_par = find(abs(delta_d_ - delta_d)<1e-7);
if (~isempty(ij_par)); 
if (verbose>1); disp(sprintf(' %% nd %d delta_d %f ij_par %d',nd,delta_d,ij_par)); end;
B_k_p_ = T_k_p__{ij_par};
end;%if (~isempty(ij_par)); 
if (isempty(ij_par));
ij_pre = max(find(delta_d_<delta_d));
ij_pos = min(find(delta_d_>delta_d));
if (verbose>2); disp(sprintf(' %% nd %d delta_d %f ij_pre %d ij_pos %d',nd,delta_d,ij_pre,ij_pos)); end;
d_pre = delta_d - delta_d_(ij_pre); d_pos = delta_d_(ij_pos) - delta_d;
w_pre = d_pos/(d_pos+d_pre); w_pos = d_pre/(d_pos+d_pre);
B_k_p_ = w_pre*T_k_p__{ij_pre} + w_pos*T_k_p__{ij_pos};
end;%if (isempty(ij_par));
%%%%%%%%%%%%%%%% ;
tmp_ = abs(T_k_p_-B_k_p_).^2; tmp_ = tmp_*diag(2*pi*grid_k_r_); tmp = sum(tmp_(:)).*(2*pi*d_k_r)*d_k_w; tmp = sqrt(tmp/(pi*max_k_p.^2)); 
E_int_(nd,nnode_) = tmp;
%%%%%%%%%%%%%%%% ;
end;%for nd=1:n_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
end;%for nnode_=1:length(n_node_);
% ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
% Now plot. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ;
figure(9);clf;
n_node2_ = 1 + floor(pi*((n_node_-1).^2));
hold on;
plot(d_*max_k_p,log10(E_int_(:,1)),'-','LineWidth',2);
plot(d_*max_k_p,log10(E_int_(:,2)),'-','LineWidth',2);
plot(d_*max_k_p,log10(E_int_(:,3)),'-','LineWidth',2);
plot(d_*max_k_p,log10(E_int_(:,4)),'-','LineWidth',2);
plot(d_*max_k_p,log10(E_svd_(:,1)),'--','LineWidth',2);
plot(d_*max_k_p,log10(E_svd_(:,2)),'--','LineWidth',2);
plot(d_*max_k_p,log10(E_svd_(:,3)),'--','LineWidth',2);
plot(d_*max_k_p,log10(E_svd_(:,4)),'--','LineWidth',2);
hold off;
xlim([0,max(d_)*max_k_p]);
xlabel('displacement (in wavelengths)');
ylabel('l2-error in displacement');
legend(...
sprintf('bf+li(%d/%d)',n_node_(1),n_node2_(1)),...
sprintf('bf+li(%d/%d)',n_node_(2),n_node2_(2)),...
sprintf('bf+li(%d/%d)',n_node_(3),n_node2_(3)),...
sprintf('bf+li(%d/%d)',n_node_(4),n_node2_(4)),...
sprintf('svd(%0.4f/%d)',eps_target_(1),n_S_(1)),...
sprintf('svd(%0.4f/%d)',eps_target_(2),n_S_(2)),...
sprintf('svd(%0.4f/%d)',eps_target_(3),n_S_(3)),...
sprintf('svd(%0.4f/%d)',eps_target_(4),n_S_(4)),...
'Location','SouthEast');
title(sprintf('log10(error) as function of displacement: n_{point} %d K_{max} %d N^{pixel} %0.1f',n_point,max_k_p,N_pixel));
set(gcf,'Position',1+[0,0,1024*1.5,1024]);
fname_base = sprintf('X_vs_I_l10error_n%d_K%d_N%.2d',n_point,max_k_p,round(10*N_pixel));
print('-djpeg',sprintf('./dir_svd/%s.jpg',fname_base));
print('-depsc',sprintf('./dir_svd/%s.eps',fname_base));
end;%if ~flag_skip;

