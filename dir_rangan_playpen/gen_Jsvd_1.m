function gen_Jsvd_1(K_max,N_pixels,eps_target);
% Generating svd-expansion of F_ (note that this factorizes by construction) ; 
% the maximum delta is chosen so that the expansion works from ;
% K_max to K_max-1 ;
% try: ;
%{

  if exist('./dir_gen_Jsvd_1/gen_Jsvd_svddecl.txt','file'); delete('./dir_gen_Jsvd_1/gen_Jsvd_svddecl.txt'); end;
  if exist('./dir_gen_Jsvd_1/gen_Jsvd_svdfree.txt','file'); delete('./dir_gen_Jsvd_1/gen_Jsvd_svdfree.txt'); end;
  if exist('./dir_gen_Jsvd_1/gen_Jsvd_svdpick.txt','file'); delete('./dir_gen_Jsvd_1/gen_Jsvd_svdpick.txt'); end;
  if exist('./dir_gen_Jsvd_1/gen_Jsvd_svdload.txt','file'); delete('./dir_gen_Jsvd_1/gen_Jsvd_svdload.txt'); end;
  %eps_target_ = [10]; N_pixels_ = 3; K_max_ = 18;
  eps_target_ = [0.1,1,10]; N_pixels_ = 1:1:3; K_max_ = 2:2:96;
  for ne=1:length(eps_target_); for nn=1:length(N_pixels_); for nk=1:length(K_max_); % Note: loop-order important for svdpick ;
  eps_target = eps_target_(ne); K_max = K_max_(nk); N_pixels = N_pixels_(nn);  
  gen_Jsvd_1(K_max,N_pixels,eps_target);
  end;end;end;%for ne=1:length(eps_target_); for nn=1:1:3; for nk=2:2:96;

 %}

% Generate svd-expansion ;
l_max = 15; % maximum order ;
eps_target = eps_target;
R_target = ceil(2*pi*K_max) ;
R_preget = ceil(2*pi*max(1,(K_max-1))) ;
z_target = N_pixels*pi*sqrt(2)*R_target/R_preget ;
D_target = z_target/R_target;
n_r = 128 ; n_d = 128 ;
r_ = linspace(0,R_target,n_r);
d_ = linspace(0,D_target,n_d);
clear S_l_ S_u_ S_s_ S_v_ ;
[R_,D_] = meshgrid(r_,d_); Z_ = R_.*D_;
l = 0; n_S = 0; continue_flag=1;
while (continue_flag);
if (l==0); l_ = [0]; else l_ = [-l,+l] ; end;
for l_tmp = l_;
J_tmp = besselj(l_tmp,Z_);
[U,S,V] = svds(J_tmp,8); S = diag(S); [S_ret] = find(S>eps_target) ;
if ~isempty(S_ret);
disp(sprintf(' %% l %+.2d, found %d terms [%0.2f,..,%0.2f];',l_tmp,length(S_ret),S(S_ret(1)),S(S_ret(end))));
for ij = 1:length(S_ret);
S_l_(1+n_S) = l_tmp;
S_u_(:,1+n_S) = U(:,S_ret(ij));
S_s_(1,1+n_S) = S(S_ret(ij),1);
S_v_(:,1+n_S) = V(:,S_ret(ij));
n_S = n_S + 1;
end;%for ij = 1:length(S_ret);
end;%if ~isempty(S_ret);
end;% for l_tmp = l_;
l=l+1;
if (l>l_max); continue_flag=0; else continue_flag=1; end;
end;%while (continue_flag);
disp(sprintf(' %% total of n_S %d terms found;',n_S));

dpos = 'dir_gen_Jsvd_1';
dname = sprintf('%s/%s',pwd,dpos); if (~exist(dname,'dir')); mkdir(dname); end;
ftag = sprintf('K%.3dN%.1de%.4d',floor(K_max),floor(N_pixels),floor(100*eps_target));

fname = sprintf('%s/gen_Jsvd_svddecl.txt',dname);
if (~exist(fname,'file'));
fp = fopen(fname,'w');
fprintf(fp,'      integer *4 n_svd_r,n_svd_d,n_svd_l\n');
fprintf(fp,'      integer *4 nsvd_r,nsvd_d,nsvd_l\n');
fprintf(fp,'      real *8, allocatable :: svd_r_(:)\n');
fprintf(fp,'      real *8, allocatable :: svd_d_(:)\n');
fprintf(fp,'      integer *4, allocatable :: svd_l_(:)\n');
fprintf(fp,'      real *8, allocatable :: svd_U_d_(:)\n');
fprintf(fp,'      real *8, allocatable :: svd_s_(:)\n');
fprintf(fp,'      real *8, allocatable :: svd_V_r_(:)\n');
fprintf(fp,'      integer *4 svd_unitnumber\n');
fprintf(fp,'      parameter (svd_unitnumber=143857)\n');
fprintf(fp,'      character(len=64) svd_fname,svd_format_string\n');
fclose(fp);
end;%if (~exist(fname,'file')); 

fname = sprintf('%s/gen_Jsvd_svdfree.txt',dname);
if (~exist(fname,'file'));
fp = fopen(fname,'w');
fprintf(fp,'      deallocate(svd_V_r_)\n');
fprintf(fp,'      deallocate(svd_s_)\n');
fprintf(fp,'      deallocate(svd_U_d_)\n');
fprintf(fp,'      deallocate(svd_l_)\n');
fprintf(fp,'      deallocate(svd_d_)\n');
fprintf(fp,'      deallocate(svd_r_)\n');
fclose(fp);
end;%if (~exist(fname,'file')); 

fname = sprintf('%s/gen_Jsvd_svdpick.txt',dname);
fp = fopen(fname,'a');
fprintf(fp,'      else if (K_max.le.%d .and. N_pixels.le.%d .and. \n',K_max,N_pixels);
fprintf(fp,'     $        eps_target.le.%0.3fd0) then\n',eps_target);
fprintf(fp,'      if (verbose.gt.0) then\n');
fprintf(fp,'         write(6,''(A,I0)'') ''using: gen_Jsvd_%s, n_S='',%d\n',ftag,n_S);
fprintf(fp,'      end if\n');
fprintf(fp,'      write(svd_fname,''(A)'') \n');
fprintf(fp,'     $ ''./%s/gen_Jsvd_%s.txt''\n',dpos,ftag);
fclose(fp);

fname = sprintf('%s/gen_Jsvd_svdload.txt',dname);
if (~exist(fname,'file'));
fp = fopen(fname,'w');
fprintf(fp,'      open(svd_unitnumber,file=svd_fname,status=''old'',\n');
fprintf(fp,'     $ form=''formatted'',action=''read'')\n');
fprintf(fp,'      read(svd_unitnumber,*) n_svd_r\n');
fprintf(fp,'      read(svd_unitnumber,*) n_svd_d\n');
fprintf(fp,'      read(svd_unitnumber,*) n_svd_l\n');
fprintf(fp,'      allocate(svd_r_(0:n_svd_r-1))\n');
fprintf(fp,'      read(svd_unitnumber,*) (svd_r_(nsvd_r),nsvd_r=0,n_svd_r-1)\n');
fprintf(fp,'      allocate(svd_d_(0:n_svd_d-1))\n');
fprintf(fp,'      read(svd_unitnumber,*) (svd_d_(nsvd_d),nsvd_d=0,n_svd_d-1)\n');
fprintf(fp,'      allocate(svd_l_(0:n_svd_l-1))\n');
fprintf(fp,'      read(svd_unitnumber,*) (svd_l_(nsvd_l),nsvd_l=0,n_svd_l-1)\n');
fprintf(fp,'      allocate(svd_U_d_(0:n_svd_d*n_svd_l-1))\n');
fprintf(fp,'      read(svd_unitnumber,*)\n');
fprintf(fp,'     $ (svd_U_d_(nsvd_d),nsvd_d=0,n_svd_d*n_svd_l-1)\n');
fprintf(fp,'      allocate(svd_s_(0:n_svd_l-1))\n');
fprintf(fp,'      read(svd_unitnumber,*) (svd_s_(nsvd_l),nsvd_l=0,n_svd_l-1)\n');
fprintf(fp,'      allocate(svd_V_r_(0:n_svd_r*n_svd_l-1))\n');
fprintf(fp,'      read(svd_unitnumber,*)\n');
fprintf(fp,'     $ (svd_V_r_(nsvd_r),nsvd_r=0,n_svd_r*n_svd_l-1)\n');
fprintf(fp,'      close(svd_unitnumber,status=''keep'')\n');
fclose(fp);
end;%if (~exist(fname,'file'));

fname = sprintf('%s/gen_Jsvd_%s.txt',dname,ftag);
fp = fopen(fname,'w');
fprintf(fp,'%d\n',n_r);fprintf(fp,'%d\n',n_d);fprintf(fp,'%d\n',n_S);
fprintf(fp,'%0.16f\n',r_);
fprintf(fp,'%0.16f\n',d_);
fprintf(fp,'%d\n',S_l_(:));
fprintf(fp,'%0.16f\n',S_u_(:));
fprintf(fp,'%0.16f\n',S_s_(:));
fprintf(fp,'%0.16f\n',S_v_(:));
fclose(fp);
