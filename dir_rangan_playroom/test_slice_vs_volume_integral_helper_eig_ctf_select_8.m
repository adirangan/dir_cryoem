%%%%%%%%;
% intended for use with test_slice_vs_volume_integral_trpv1_11.m ;
% and test_slice_vs_volume_integral_12.m ;
% not limiting to principal-modes. ;
%%%%%%%%;

[~,str_hostname] = system('hostname');
flag_256G = 0 ...
| ~isempty(strfind(str_hostname,'crunchy')) ...
| ~isempty(strfind(str_hostname,'linserv')) ...
;
flag_128G = 0 ...
| ~isempty(strfind(str_hostname,'crunchy')) ...
| ~isempty(strfind(str_hostname,'linserv')) ...
| ~isempty(strfind(str_hostname,'xcalibr8')) ...
| ~isempty(strfind(str_hostname,'snappy')) ...
;

n_3 = 3;
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('Ylm_uklma___','var'); Ylm_uklma___=[]; end;
if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__=[]; end;
if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__=[]; end;
if ~exist('l_max_uk_','var'); l_max_uk_=[]; end;
if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__=[]; end;
if ~exist('V_lmm___','var'); V_lmm___=[]; end;
if ~exist('L_lm__','var'); L_lm__=[]; end;
if ~exist('d0W_betazeta_mlma____','var'); d0W_betazeta_mlma____=[]; end;
if ~exist('d1W_betazeta_mlma____','var'); d1W_betazeta_mlma____=[]; end;
if ~exist('d2W_betazeta_mlma____','var'); d2W_betazeta_mlma____=[]; end;

%%%%%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
c_use__ = colormap_beach(); n_c_use = size(c_use__,1); 
subplot(1,2,1);
hold on;
for nCTF=0:n_CTF-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(DefocusV_CTF_(1+nCTF)-min(DefocusV_CTF_))/(max(DefocusV_CTF_)-min(DefocusV_CTF_)))));
plot(k_p_r_,CTF_k_p_r_kC__(:,1+nCTF),'-','Color',c_use__(1+nc_use,:));
end;%for nCTF=0:n_CTF-1;
hold off;
xlim([0,k_p_r_max]); xlabel('k'); ylabel('CTF');
title('colored by DefocusV_CTF_','Interpreter','none');
subplot(1,2,2);
hold on;
for nCTF=0:n_CTF-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(DefocusU_CTF_(1+nCTF)-min(DefocusU_CTF_))/(max(DefocusU_CTF_)-min(DefocusU_CTF_)))));
plot(k_p_r_,CTF_k_p_r_kC__(:,1+nCTF),'-','Color',c_use__(1+nc_use,:));
end;%for nCTF=0:n_CTF-1;
hold off;
xlim([0,k_p_r_max]); xlabel('k'); ylabel('CTF');
title('colored by DefocusU_CTF_','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
n_ctf_select = 3; n_ctf_per = 2;
[~,tmp_ij_] = sort(DefocusV_CTF_,'ascend');
tmp_ij_use__ = zeros(n_ctf_per,n_ctf_select);
tmp_ij_use__(1,:) = max(1,floor(linspace(1,n_CTF-n_ctf_per,n_ctf_select)));
for nctf_per=1:n_ctf_per-1;
tmp_ij_use__(1+nctf_per,:) = tmp_ij_use__(1+nctf_per-1,:)+1;
end;%for nctf_per=0:n_ctf_per-1;
n_CTF_select_s_ = n_ctf_per*ones(n_ctf_select,1);
DefocusV_CTF_select_Cs__ = zeros(n_ctf_per,n_ctf_select);
CTF_select_k_p_r_kCs___ = zeros(n_k_p_r,n_ctf_per,n_ctf_select);
CTF_select_k_p_wkCs___ = zeros(n_w_sum,n_ctf_per,n_ctf_select);
for nctf_select=0:n_ctf_select-1;
for nctf_per=0:n_ctf_per-1;
tmp_ij_use = tmp_ij_use__(1+nctf_per,1+nctf_select);
DefocusV_CTF_select_Cs__(1+nctf_per,1+nctf_select) = DefocusV_CTF_(tmp_ij_use);
CTF_select_k_p_r_kCs___(:,1+nctf_per,1+nctf_select) = CTF_k_p_r_kC__(:,tmp_ij_use);
CTF_select_k_p_wkCs___(:,1+nctf_per,1+nctf_select) = CTF_k_p_wkC__(:,tmp_ij_use);
end;%for nctf_per=0:n_ctf_per-1;
end;%for nctf_select=0:n_ctf_select-1;
%%%%%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
p_row = 1;p_col = n_ctf_select; np=0;
for nctf_select=0:n_ctf_select-1;
subplot(p_row,p_col,1+np);np=np+1;
plot(k_p_r_,CTF_select_k_p_r_kCs___(:,:,1+nctf_select),'k-','LineWidth',2);
xlim([0,k_p_r_max]); xlabel('k'); ylabel('CTF'); ylim([-1,+1]);
title(sprintf('nctf_select %d',nctf_select),'Interpreter','none');
end;%for nctf_select=0:n_ctf_select-1;
fname_fig_pre = sprintf('%s_jpg/ctf_select_FIGA',dir_ssnll);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
disp(sprintf(' %% %s not found, creating',fname_fig_pre));
disp(sprintf(' %% writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
print('-depsc',fname_fig_eps);
end;%if (~exist(fname_fig_jpg,'file'));
close(gcf);
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% not limiting to principal-modes. ;
%%%%%%%%;
X_weight_r_ = ones(n_k_p_r,1);
n_UX_rank = n_k_p_r;
pm_n_UX_rank = n_UX_rank;
pm_n_k_all = n_k_all; pm_n_k_all_csum_ = n_k_all_csum_;
pm_k_p_r_all_ = k_p_r_all_; pm_k_p_azimu_b_all_ = k_p_azimu_b_all_; pm_k_p_polar_a_all_ = k_p_polar_a_all_;
pm_weight_3d_k_all_ = weight_3d_k_all_; pm_weight_shell_k_ = weight_shell_k_;
pm_n_k_p_r = n_k_p_r; pm_k_p_r_ = k_p_r_; pm_k_p_r_max = k_p_r_max;
pm_weight_3d_k_p_r_ = weight_3d_k_p_r_;
pm_l_max_ = l_max_;
pm_Ylm_uklma___ = Ylm_uklma___;
pm_k_p_azimu_b_sub_uka__ = k_p_azimu_b_sub_uka__;
pm_k_p_polar_a_sub_uka__ = k_p_polar_a_sub_uka__;
pm_l_max_uk_ = l_max_uk_;
pm_index_nu_n_k_per_shell_from_nk_p_r_ = index_nu_n_k_per_shell_from_nk_p_r_;
pm_index_k_per_shell_uka__ = index_k_per_shell_uka__;
pm_X_weight_r_ = X_weight_r_;
pm_n_w_ = n_w_; pm_n_w_max = n_w_max; pm_n_w_sum = n_w_sum; pm_n_w_csum_ = n_w_csum_;
pm_weight_2d_k_p_r_ = weight_2d_k_p_r_; pm_weight_2d_wk_ = weight_2d_wk_;

%%%%%%%%;
% Use identity for principal-modes. ;
%%%%%%%%;
X_kk__ = eye(n_k_p_r,n_k_p_r);
UX_kn__ = eye(n_k_p_r,n_k_p_r);
SX_k_ = ones(n_k_p_r,1);
tolerance_pm = 0;
nlt = -log10(tolerance_pm);
str_tolerance_pm = sprintf('nltInfpm%d',pm_n_UX_rank);
if (flag_verbose>0); disp(sprintf(' %% tolerance_pm %0.6f: pm_n_UX_rank %d/%d --> %s',tolerance_pm,pm_n_UX_rank,n_UX_rank,str_tolerance_pm)); end;
%%%%%%%%;
pm_n_w_max = max(pm_n_w_);
pm_n_w_sum = sum(pm_n_w_);
pm_n_w_csum_ = cumsum([0;pm_n_w_]);
pm_n_lm_ = (pm_l_max_+1).^2;
pm_n_lm_max = max(pm_n_lm_);
pm_n_lm_sum = sum(pm_n_lm_);
pm_n_lm_csum_ = cumsum([0;pm_n_lm_]);
pm_l_max_max = max(pm_l_max_);
%%%%%%%%;

%%%%%%%%;
% Now form a_x1_UX_Y_reco_empi_yn__ ;
%%%%%%%%;
a_x1_UX_Y_reco_empi_yn__ = zeros(n_lm_max,pm_n_UX_rank);
for nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_l_max = l_max_(1+nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank) = a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank) + UX_kn__(1+nk_p_r,1+nUX_rank)*X_weight_r_(1+nk_p_r)*a_k_Y_reco_empi_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nUX_rank=0:pm_n_UX_rank-1;
a_x1_UX_Y_reco_empi_yn_ = local_yk_from_yk__(pm_n_k_p_r,pm_l_max_,a_x1_UX_Y_reco_empi_yn__);
pm_a_k_Y_reco_empi_yk__ = a_x1_UX_Y_reco_empi_yn__;
pm_a_k_Y_reco_empi_yk_ = a_x1_UX_Y_reco_empi_yn_;
%%%%;
flag_check=1;
if flag_check;
a_k_Y_reco_frompm_yk_ = zeros(n_lm_sum,1);
for nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_l_max = l_max_(1+nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
a_k_Y_reco_frompm_yk_(1+tmp_index_) = a_k_Y_reco_frompm_yk_(1+tmp_index_) + UX_kn__(1+nk_p_r,1+nUX_rank)/max(1e-12,X_weight_r_(1+nk_p_r))*a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nUX_rank=0:pm_n_UX_rank-1;
a_k_Y_diff_empi_yk_ = a_k_Y_reco_empi_yk_ - a_k_Y_reco_frompm_yk_;
[~,~,a_k_Y_reco_empi_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_reco_empi_yk_,0);
[~,~,a_k_Y_reco_frompm_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_reco_frompm_yk_,0);
[~,~,a_k_Y_diff_empi_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_diff_empi_yk_,0);
[~,~,a_k_Y_reco_empi_l2] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_2d_k_p_r_,l_max_,a_k_Y_reco_empi_yk_,0);
[~,~,a_k_Y_reco_frompm_l2] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_2d_k_p_r_,l_max_,a_k_Y_reco_frompm_yk_,0);
[~,~,pm_a_k_Y_reco_empi_l2] = spharm_normalize_2(pm_n_k_p_r,pm_k_p_r_,pm_weight_3d_k_p_r_,pm_l_max_,pm_a_k_Y_reco_empi_yk_,0);
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_yk_ vs a_k_Y_reco_frompm_yk_: %0.16f %%<-- will not be small if tolerance_pm> 0',a_k_Y_diff_empi_l3/max(1e-12,a_k_Y_reco_empi_l3))); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_l3 %0.6f',a_k_Y_reco_empi_l3)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_frompm_l3 %0.6f',a_k_Y_reco_frompm_l3)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_l2 %0.6f',a_k_Y_reco_empi_l2)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_frompm_l2 %0.6f',a_k_Y_reco_frompm_l2)); end;
if (flag_verbose>0); disp(sprintf(' %% pm_a_k_Y_reco_empi_l2 %0.6f',pm_a_k_Y_reco_empi_l2)); end;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Use a_k_Y_reco_empi_yk_ to generate pm_S_use_k_p_wkS__ := S_x1_UX_k_p_wnS__. ;
% Note that poles are included for subsequent interpolation (when estimating ddssnll_lsq). ;
%%%%%%%%;
a_k_Y_reco_empi_yk__ = local_yk__from_yk_(pm_n_k_p_r,pm_l_max_,a_k_Y_reco_empi_yk_);
[ ...
 n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,viewing_k_c_0_S_use_ ...
,viewing_k_c_1_S_use_ ...
,viewing_k_c_2_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,1.0/k_p_r_max ...
,'C' ...
,1 ...
) ;
%%%%;
tmp_t = tic();
[ ...
 pm_S_use_k_p_wkS___ ...
,~ ...
,n_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,pm_n_k_p_r ...
,a_k_Y_reco_empi_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
);
pm_S_use_k_p_wkS__ = reshape(pm_S_use_k_p_wkS___,[pm_n_w_sum,n_S_use]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% pm_S_use_k_p_wkS__ (pm_template_2): %0.6fs',tmp_t)); end;
%%%%%%%%;
% Test.; 
%%%%%%%%;
flag_check=1;
if flag_check;
tmp_t = tic();
[ ...
 S_use_k_p_wkS___ ...
,~ ...
,n_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,a_k_Y_reco_empi_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
);
S_use_k_p_wkS__ = reshape(S_use_k_p_wkS___,[n_w_sum,n_S_use]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_use_k_p_wkS__ (pm_template_2): %0.6fs',tmp_t)); end;
nS_use = 13;
pm_S_use_k_p_wk__ = pm_S_use_k_p_wkS___(:,:,1+nS_use);
pm_T_use_k_p_wk__ = zeros(n_w_max,pm_n_UX_rank);
S_use_k_p_wk__ = S_use_k_p_wkS___(:,:,1+nS_use);
for pm_nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
pm_T_use_k_p_wk__(:,1+pm_nUX_rank) = pm_T_use_k_p_wk__(:,1+pm_nUX_rank) + UX_kn__(1+nk_p_r,1+pm_nUX_rank)*X_weight_r_(1+nk_p_r)*S_use_k_p_wk__(:,1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for pm_nUX_rank=0:pm_n_UX_rank-1;
if (flag_verbose>0); disp(sprintf(' %% nS_use %d/%d: pm_T_use_k_p_wk__ vs pm_S_use_k_p_wk__: %0.16f',nS_use,n_S_use,fnorm(pm_T_use_k_p_wk__-pm_S_use_k_p_wk__)/max(1e-12,fnorm(pm_T_use_k_p_wk__)))); end;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Now define pm_M_use_k_p_wkM__. ;
% Note that poles are excluded (to allow for finite derivatives in U_SmallRotation_2). ;
%%%%%%%%;
tmp_index_ = efind( abs(viewing_polar_a_S_use_-0*pi)>1e-6 & abs(viewing_polar_a_S_use_-1*pi)>1e-6 );
%%%%%%%%;
n_M_one = numel(tmp_index_);
viewing_weight_M_one_ = viewing_weight_S_use_(1+tmp_index_);
viewing_weight_M_one_ = viewing_weight_M_one_*sum(viewing_weight_S_use_)/max(1e-12,sum(viewing_weight_M_one_));
pm_M_one_k_p_wkM__ = pm_S_use_k_p_wkS__(:,1+tmp_index_);
euler_polar_a_M_one_ = viewing_polar_a_S_use_(1+tmp_index_);
euler_azimu_b_M_one_ = viewing_azimu_b_S_use_(1+tmp_index_);
euler_gamma_z_M_one_ = zeros(n_M_one,1);
%%%%%%%%;
n_M_use = n_ctf_per * numel(tmp_index_);
viewing_weight_M_use_ = repmat(viewing_weight_S_use_(1+tmp_index_),[n_ctf_per,1]);
viewing_weight_M_use_ = viewing_weight_M_use_*sum(viewing_weight_S_use_)/max(1e-12,sum(viewing_weight_M_use_));
pm_M_tri_k_p_wkM__ = repmat(pm_S_use_k_p_wkS__(:,1+tmp_index_),[1,n_ctf_per]);
euler_polar_a_M_use_ = repmat(viewing_polar_a_S_use_(1+tmp_index_),[n_ctf_per,1]);
euler_azimu_b_M_use_ = repmat(viewing_azimu_b_S_use_(1+tmp_index_),[n_ctf_per,1]);
euler_gamma_z_M_use_ = zeros(n_M_use,1);
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%lsigma_dist_ = [NaN,-3:0.5:+3]; n_lsigma_dist = numel(lsigma_dist_);
lsigma_dist_ = [NaN]; n_lsigma_dist = numel(lsigma_dist_);
factor_imagecount_M_one_s__ = zeros(n_M_one,n_lsigma_dist);
factor_imagecount_Ms__ = zeros(n_M_use,n_lsigma_dist);
for nlsigma_dist=0:n_lsigma_dist-1;
lsigma_dist = lsigma_dist_(1+nlsigma_dist);
sigma_dist = exp(-abs(lsigma_dist));
if abs(lsigma_dist)<1e-12; factor_imagecount_M_one_ = 1/sqrt(2*pi)^2; end;
if lsigma_dist< 0;
factor_imagecount_M_one_ = 1/sqrt(2*pi)^2/sigma_dist^2*exp(-min((euler_polar_a_M_one_-0).^2,(euler_polar_a_M_one_-pi).^2)/(2*sigma_dist^2));
end;%if lsigma_dist< 0;
if lsigma_dist> 0;
factor_imagecount_M_one_ = 1/sqrt(2*pi)^2/sigma_dist^2*exp(-(euler_polar_a_M_one_-pi/2).^2/(2*sigma_dist^2));
end;%if lsigma_dist> 0;
if ~isfinite(lsigma_dist);
[ ...
 tmp_h_raw_ab_ ...
 tmp_h_w3d_ab_ ...
] = ...
hist2d_polar_a_azimu_b_0( ...
 euler_polar_a_M_one_ ...
,euler_azimu_b_M_one_ ...
,viewing_weight_M_one_ ...
,euler_polar_a_tavg_(:) ...
,euler_azimu_b_tavg_(:) ...
,[] ...
,[] ...
,-1 ...
);
factor_imagecount_M_one_ = tmp_h_w3d_ab_;
end;%if ~isfinite(lsigma_dist);
tmp_f = sum(factor_imagecount_M_one_.*viewing_weight_M_one_);
factor_imagecount_M_one_ = factor_imagecount_M_one_./max(1e-12,tmp_f);
factor_imagecount_M_one_s__(:,1+nlsigma_dist) = factor_imagecount_M_one_;
end;%for nlsigma_dist=0:n_lsigma_dist-1;
%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figsml;
p_row = 1; p_col = ceil(n_lsigma_dist/p_row); np=0;
%flim_ = prctile(factor_imagecount_M_one_s__,[  0,100],'all');
flim_ = 4.0*[0,2.0/(4*pi)];
flag_2d_vs_3d=0;
for nlsigma_dist=0:n_lsigma_dist-1;
lsigma_dist = lsigma_dist_(1+nlsigma_dist);
subplot(p_row,p_col,1+np);np=np+1;
imagesc_polar_a_azimu_b_0( ...
 euler_polar_a_M_one_ ... 
,euler_azimu_b_M_one_ ... 
,factor_imagecount_M_one_s__(:,1+nlsigma_dist) ...
,flim_ ... 
,colormap_beach ... 
,flag_2d_vs_3d ...
,k_p_r_max ...
);
axisnotick3d; axis equal; axis vis3d;
title(sprintf('lsigma %0.2f',lsigma_dist),'Interpreter','none');
end;%for nlsigma_dist=0:n_lsigma_dist-1;
drawnow();
fname_fig_pre = sprintf('%s_jpg/ctf_select_FIGB',dir_ssnll);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
disp(sprintf(' %% %s not found, creating',fname_fig_pre));
disp(sprintf(' %% writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
print('-depsc',fname_fig_eps);
end;%if (~exist(fname_fig_jpg,'file'));
close(gcf);
end;%if flag_disp;
%%%%%%%%;
factor_imagecount_Ms__ = repmat(factor_imagecount_M_one_s__,[n_ctf_per,1]);
if (flag_verbose>0); disp(sprintf(' %% sum(factor_imagecount_M_one_.*viewing_weight_M_one_): %0.6f',sum(factor_imagecount_M_one_.*viewing_weight_M_one_))); end;
if (flag_verbose>0); disp(sprintf(' %% sum(factor_imagecount_Ms__(:,1+0).*viewing_weight_M_use_): %0.6f',sum(factor_imagecount_Ms__(:,1+0).*viewing_weight_M_use_))); end;

flag_calc = flag_256G | (k_int<=32 & flag_128G);
if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
for nctf_select=0:n_ctf_select-1;
for nlsigma_dist=0:n_lsigma_dist-1;
for flag_implicit_dtau = 1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
n_CTF_select = n_CTF_select_s_(1+nctf_select);
CTF_select_k_p_r_kC__ = CTF_select_k_p_r_kCs___(:,:,1+nctf_select);
CTF_select_k_p_wkC__ = CTF_select_k_p_wkCs___(:,:,1+nctf_select);
pm_n_CTF = n_CTF_select;
pm_index_nCTF_from_nM_use_ = reshape(ones(n_M_one,1)*[0:pm_n_CTF-1],[n_M_use,1]);
pm_CTF_k_p_r_kC__ = CTF_select_k_p_r_kC__;
pm_CTF_k_p_wkC__ = CTF_select_k_p_wkC__;
pm_M_use_k_p_wkM__ = pm_M_tri_k_p_wkM__.*pm_CTF_k_p_wkC__(:,1+pm_index_nCTF_from_nM_use_);
DefocusV_CTF_select_C_ = DefocusV_CTF_select_Cs__(:,1+nctf_select);
DefocusV_CTF_select_avg = mean(DefocusV_CTF_select_C_);
str_ctf_select = sprintf('DefV%d',round(DefocusV_CTF_select_avg));
lsigma_dist = lsigma_dist_(1+nlsigma_dist);
factor_imagecount_M_use_ = factor_imagecount_Ms__(:,1+nlsigma_dist);
weight_imagecount_M_use_ = viewing_weight_M_use_ .* factor_imagecount_M_use_ ;
if ~isfinite(lsigma_dist); str_infix = sprintf('p_empirical'); end;
if lsigma_dist< -1e-12; str_infix = sprintf('lsigma_n%.3d',fix(100*abs(lsigma_dist))); end;
if lsigma_dist>=-1e-12; str_infix = sprintf('lsigma_p%.3d',fix(100*abs(lsigma_dist))); end;
if (flag_verbose>0); disp(sprintf(' %% nlsigma_dist %.2d/%.2d %+0.2f %s',nlsigma_dist,n_lsigma_dist,lsigma_dist,str_infix)); end;
str_dir_mat = sprintf('%s_mat',dir_ssnll);
str_dir_jpg = sprintf('%s_jpg',dir_ssnll);
if flag_implicit_dtau==0; str_fname_nopath_prefix = sprintf('eig_from_synth_%s_%s_%s',str_tolerance_pm,str_infix,str_ctf_select); end;
if flag_implicit_dtau==1; str_fname_nopath_prefix = sprintf('eig_i1_from_synth_%s_%s_%s',str_tolerance_pm,str_infix,str_ctf_select); end;
%%%%;
fname_pre = sprintf('%s/%s',str_dir_mat,str_fname_nopath_prefix);
[flag_skip,fname_mat] = open_fname_tmp(fname_pre);
%%%%%%%%%%%%%%%%;
if flag_recalc | ~flag_skip
%%%%%%%%%%%%%%%%;
tmp_lanczos_n_iteration_max = 0;
if ( exist(fname_mat,'file'));
tmp_ = load(fname_mat);
if isfield(tmp_,'alph_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_i_); end;
if isfield(tmp_,'alph_tilde_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_tilde_i_); end;
clear tmp_;
disp(sprintf(' %% %s found, tmp_lanczos_n_iteration_max %.2d',fname_mat,tmp_lanczos_n_iteration_max));
end;%if ( exist(fname_mat,'file'));
if (flag_recalc | ~exist(fname_mat,'file') | tmp_lanczos_n_iteration_max< lanczos_n_iteration_max);
disp(sprintf(' %% %s not complete, calculating',fname_mat));
parameter_eig = struct('type','eig');
parameter_eig.flag_verbose = flag_verbose;
parameter_eig.flag_implicit_dtau = flag_implicit_dtau;
parameter_eig.flag_check = 1;
parameter_eig.flag_disp = 1;
parameter_eig.flag_kernel_qpro_d0 = 1;
parameter_eig.flag_kernel_qpro_d1 = 1;
parameter_eig.kernel_qpro_polar_a_pole_north=KAPPA_pole_north_double;
parameter_eig.kernel_qpro_polar_a_pole_south=KAPPA_pole_south_double;
parameter_eig.kernel_qpro_qref_k_eq_d_double=KAPPA_qref_k_eq_d_double;
parameter_eig.kernel_qpro_l_max_use = pm_l_max_max;
parameter_eig.lanczos_n_iteration_max = lanczos_n_iteration_max;
pm_U_SmallRotation_Delta_ykabc3__ = []; %<-- construct internally. ;
pm_U_tilde_SmallRotation_Delta_ykabc3__ = []; %<-- construct internally. ;
%%%%;
if ( flag_recalc | ~exist(fname_mat,'file'));
tmp_lanczos_n_iteration_max = 0;
rng(0);
pm_v_tilde_ykabci__=[];
pm_w_tilde_ykabc_=[];
alph_tilde_i_=[];
beta_tilde_i_=[];
dvol_a_k_Y_quad_yki__=[];
dtau_euler_polar_a_Mi__=[];
dtau_euler_azimu_b_Mi__=[];
dtau_euler_gamma_z_Mi__=[];
end;%if (~exist(fname_mat,'file'));
%%%%;
if (~flag_recalc &  exist(fname_mat,'file'));
tmp_ = load(fname_mat);
if isfield(tmp_,'alph_tilde_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_tilde_i_); end;
if isfield(tmp_,'pm_U_tilde_SmallRotation_Delta_ykabc3__'); pm_U_tilde_SmallRotation_Delta_ykabc3__ = tmp_.pm_U_tilde_SmallRotation_Delta_ykabc3__; end;
if isfield(tmp_,'pm_v_tilde_ykabci__'); pm_v_tilde_ykabci__ = tmp_.pm_v_tilde_ykabci__; end;
if isfield(tmp_,'pm_w_tilde_ykabc_'); pm_w_tilde_ykabc_ = tmp_.pm_w_tilde_ykabc_; end;
if isfield(tmp_,'alph_tilde_i_'); alph_tilde_i_ = tmp_.alph_tilde_i_; end;
if isfield(tmp_,'beta_tilde_i_'); beta_tilde_i_ = tmp_.beta_tilde_i_; end;
if isfield(tmp_,'dvol_a_k_Y_quad_yki__'); dvol_a_k_Y_quad_yki__ = tmp_.dvol_a_k_Y_quad_yki__; end;
if isfield(tmp_,'dtau_euler_polar_a_Mi__'); dtau_euler_polar_a_Mi__ = tmp_.dtau_euler_polar_a_Mi__; end;
if isfield(tmp_,'dtau_euler_azimu_b_Mi__'); dtau_euler_azimu_b_Mi__ = tmp_.dtau_euler_azimu_b_Mi__; end;
if isfield(tmp_,'dtau_euler_gamma_z_Mi__'); dtau_euler_gamma_z_Mi__ = tmp_.dtau_euler_gamma_z_Mi__; end;
clear tmp_;
end;%if ( exist(fname_mat,'file'));
%%%%;
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('pm_Ylm_uklma___','var'); pm_Ylm_uklma___=[]; end;
if ~exist('pm_k_p_azimu_b_sub_uka__','var'); pm_k_p_azimu_b_sub_uka__=[]; end;
if ~exist('pm_k_p_polar_a_sub_uka__','var'); pm_k_p_polar_a_sub_uka__=[]; end;
if ~exist('pm_l_max_uk_','var'); pm_l_max_uk_=[]; end;
if ~exist('pm_index_nu_n_k_per_shell_from_nk_p_r_','var'); pm_index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('pm_index_k_per_shell_uka__','var'); pm_index_k_per_shell_uka__=[]; end;
if ~exist('pm_V_lmm___','var'); pm_V_lmm___=[]; end;
if ~exist('pm_L_lm__','var'); pm_L_lm__=[]; end;
if ~exist('pm_d0W_betazeta_mlma____','var'); pm_d0W_betazeta_mlma____=[]; end;
if ~exist('pm_d1W_betazeta_mlma____','var'); pm_d1W_betazeta_mlma____=[]; end;
if ~exist('pm_d2W_betazeta_mlma____','var'); pm_d2W_betazeta_mlma____=[]; end;
if ~exist('pm_U_tilde_SmallRotation_Delta_ykabc3__','var'); pm_pm_U_tilde_SmallRotation_Delta_ykabc3__=[]; end;
%%%%;
pm_a_k_p_quad_ = [];
[ ...
 parameter_eig ...
,pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,pm_v_tilde_ykabci__  ...
,pm_w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
,dvol_pm_a_k_Y_quad_yki__ ...
,dtau_euler_polar_a_Mi__ ...
,dtau_euler_azimu_b_Mi__ ...
,dtau_euler_gamma_z_Mi__ ...
] = ...
eig_ddssnll_lanczos_3( ...
 parameter_eig ...
,pm_n_k_p_r ...
,pm_k_p_r_ ...
,pm_k_p_r_max ...
,pm_l_max_ ...
,pm_a_k_Y_reco_empi_yk_ ...
,pm_n_k_all ...
,pm_n_k_all_csum_ ...
,pm_k_p_r_all_ ...
,pm_k_p_azimu_b_all_ ...
,pm_k_p_polar_a_all_ ...
,pm_weight_3d_k_all_ ...
,pm_weight_shell_k_ ...
,pm_weight_3d_k_p_r_ ...
,pm_a_k_p_quad_ ...
,pm_n_w_ ...
,pm_weight_2d_k_p_r_ ...
,pm_weight_2d_wk_ ...
,n_S_use ...
,pm_S_use_k_p_wkS__ ...
,viewing_polar_a_S_use_ ...
,viewing_azimu_b_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
,n_M_use ...
,weight_imagecount_M_use_ ...
,pm_M_use_k_p_wkM__ ...
,pm_n_CTF ...
,pm_index_nCTF_from_nM_use_ ...
,pm_CTF_k_p_r_kC__ ...
,pm_CTF_k_p_wkC__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,euler_polar_a_M_use_ ...
,euler_azimu_b_M_use_ ...
,euler_gamma_z_M_use_ ...
,KAPPA ...
,pm_Ylm_uklma___ ...
,pm_k_p_azimu_b_sub_uka__ ...
,pm_k_p_polar_a_sub_uka__ ...
,pm_l_max_uk_ ...
,pm_index_nu_n_k_per_shell_from_nk_p_r_ ...
,pm_index_k_per_shell_uka__ ...
,pm_V_lmm___ ...
,pm_L_lm__ ...
,pm_d0W_betazeta_mlma____ ...
,pm_d1W_betazeta_mlma____ ...
,pm_d2W_betazeta_mlma____ ...
,pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,pm_v_tilde_ykabci__  ...
,pm_w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
);
save(fname_mat ...
     ,'parameter_eig' ...
     ,'pm_n_k_p_r' ...
     ,'pm_k_p_r_' ...
     ,'pm_k_p_r_max' ...
     ,'pm_l_max_' ...
     ,'pm_n_k_all' ...
     ,'pm_n_k_all_csum_' ...
     ,'pm_k_p_r_all_' ...
     ,'pm_k_p_azimu_b_all_' ...
     ,'pm_k_p_polar_a_all_' ...
     ,'pm_weight_3d_k_all_' ...
     ,'pm_weight_shell_k_' ...
     ,'pm_weight_3d_k_p_r_' ...
     ,'pm_n_w_' ...
     ,'pm_weight_2d_k_p_r_' ...
     ,'pm_weight_2d_wk_' ...
     ,'n_S_use' ...
     ,'pm_S_use_k_p_wkS__' ...
     ,'viewing_polar_a_S_use_' ...
     ,'viewing_azimu_b_S_use_' ...
     ,'viewing_weight_S_use_' ...
     ,'n_viewing_polar_a_use' ...
     ,'viewing_polar_a_use_' ...
     ,'n_viewing_azimu_b_use_' ...
     ,'pm_U_tilde_SmallRotation_Delta_ykabc3__' ...
     ,'pm_v_tilde_ykabci__'  ...
     ,'pm_w_tilde_ykabc_' ...
     ,'alph_tilde_i_' ...
     ,'beta_tilde_i_' ... 
     ,'dvol_pm_a_k_Y_quad_yki__' ...
     ,'dtau_euler_polar_a_Mi__' ...
     ,'dtau_euler_azimu_b_Mi__' ...
     ,'dtau_euler_gamma_z_Mi__' ...
     ,'n_M_use' ...
     ,'viewing_weight_M_use_' ...
     ,'weight_imagecount_M_use_' ...
     ,'factor_imagecount_M_use_' ...
     ,'pm_M_use_k_p_wkM__' ...
     ,'pm_n_CTF' ...
     ,'pm_index_nCTF_from_nM_use_' ...
     ,'pm_CTF_k_p_r_kC__' ...
     ,'pm_CTF_k_p_wkC__' ...
     ,'euler_polar_a_M_use_' ...
     ,'euler_azimu_b_M_use_' ...
     ,'euler_gamma_z_M_use_' ...
     );
close_fname_tmp(fname_pre);
%%%%%%%%;
end;%if (flag_recalc | ~exist(fname_mat,'file') | tmp_lanczos_n_iteration_max< lanczos_n_iteration_max);
%%%%%%%%%%%%%%%%;
end;%if flag_recalc | ~flag_skip
%%%%%%%%%%%%%%%%;
if ( exist(fname_mat,'file'));
disp(sprintf(' %% %s found, not creating',fname_mat));
end;%if ( exist(fname_mat,'file'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%for flag_implicit_dtau = 1;
end;%for nlsigma_dist=0:n_lsigma_dist-1;
end;%for nctf_select=0:n_ctf_select-1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%disp(sprintf(' %% returning before diagnostic')); return;

if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
for nctf_select=0:n_ctf_select-1;
for nlsigma_dist=0:n_lsigma_dist-1;
for flag_implicit_dtau = 1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
n_CTF_select = n_CTF_select_s_(1+nctf_select);
CTF_select_k_p_r_kC__ = CTF_select_k_p_r_kCs___(:,:,1+nctf_select);
CTF_select_k_p_wkC__ = CTF_select_k_p_wkCs___(:,:,1+nctf_select);
pm_n_CTF = n_CTF_select;
pm_index_nCTF_from_nM_use_ = reshape(ones(n_M_one,1)*[0:pm_n_CTF-1],[n_M_use,1]);
pm_CTF_k_p_r_kC__ = CTF_select_k_p_r_kC__;
pm_CTF_k_p_wkC__ = CTF_select_k_p_wkC__;
pm_M_use_k_p_wkM__ = pm_M_tri_k_p_wkM__.*pm_CTF_k_p_wkC__(:,1+pm_index_nCTF_from_nM_use_);
DefocusV_CTF_select_C_ = DefocusV_CTF_select_Cs__(:,1+nctf_select);
DefocusV_CTF_select_avg = mean(DefocusV_CTF_select_C_);
str_ctf_select = sprintf('DefV%d',round(DefocusV_CTF_select_avg));
lsigma_dist = lsigma_dist_(1+nlsigma_dist);
factor_imagecount_M_use_ = factor_imagecount_Ms__(:,1+nlsigma_dist);
weight_imagecount_M_use_ = viewing_weight_M_use_ .* factor_imagecount_M_use_ ;
if ~isfinite(lsigma_dist); str_infix = sprintf('p_empirical'); end;
if lsigma_dist< -1e-12; str_infix = sprintf('lsigma_n%.3d',fix(100*abs(lsigma_dist))); end;
if lsigma_dist>=-1e-12; str_infix = sprintf('lsigma_p%.3d',fix(100*abs(lsigma_dist))); end;
if (flag_verbose>0); disp(sprintf(' %% nlsigma_dist %.2d/%.2d %+0.2f %s',nlsigma_dist,n_lsigma_dist,lsigma_dist,str_infix)); end;
str_dir_mat = sprintf('%s_mat',dir_ssnll);
str_dir_jpg = sprintf('%s_jpg',dir_ssnll);
if flag_implicit_dtau==0; str_fname_nopath_prefix = sprintf('eig_from_synth_%s_%s_%s',str_tolerance_pm,str_infix,str_ctf_select); end;
if flag_implicit_dtau==1; str_fname_nopath_prefix = sprintf('eig_i1_from_synth_%s_%s_%s',str_tolerance_pm,str_infix,str_ctf_select); end;
fname_mat = sprintf('%s/%s.mat',str_dir_mat,str_fname_nopath_prefix);
if ~exist(fname_mat,'file');
disp(sprintf(' %% Warning, %s not found, not running diagnostic',fname_mat));
end;%if ~exist(fname_mat,'file');
if  exist(fname_mat,'file');
tmp_ = load(fname_mat);
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('pm_Ylm_uklma___','var'); pm_Ylm_uklma___=[]; end;
if ~exist('pm_k_p_azimu_b_sub_uka__','var'); pm_k_p_azimu_b_sub_uka__=[]; end;
if ~exist('pm_k_p_polar_a_sub_uka__','var'); pm_k_p_polar_a_sub_uka__=[]; end;
if ~exist('pm_l_max_uk_','var'); pm_l_max_uk_=[]; end;
if ~exist('pm_index_nu_n_k_per_shell_from_nk_p_r_','var'); pm_index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('pm_index_k_per_shell_uka__','var'); pm_index_k_per_shell_uka__=[]; end;
if ~exist('pm_V_lmm___','var'); pm_V_lmm___=[]; end;
if ~exist('pm_L_lm__','var'); pm_L_lm__=[]; end;
if ~exist('pm_d0W_betazeta_mlma____','var'); pm_d0W_betazeta_mlma____=[]; end;
if ~exist('pm_d1W_betazeta_mlma____','var'); pm_d1W_betazeta_mlma____=[]; end;
if ~exist('pm_d2W_betazeta_mlma____','var'); pm_d2W_betazeta_mlma____=[]; end;
if ~exist('pm_U_tilde_SmallRotation_Delta_ykabc3__','var'); pm_U_tilde_SmallRotation_Delta_ykabc3__=[]; end;
parameter_eig_diagnostic = struct('type','eig_diagnostic');
parameter_eig_diagnostic.flag_verbose = flag_verbose;
parameter_eig_diagnostic.flag_implicit_dtau = flag_implicit_dtau;
parameter_eig_diagnostic.flag_recalc = 0;
parameter_eig_diagnostic.flag_check = 1;
parameter_eig_diagnostic.flag_disp = 1;
parameter_eig_diagnostic.flag_replot = 0;
parameter_eig_diagnostic.flag_kernel_qpro_d0 = 1;
parameter_eig_diagnostic.flag_kernel_qpro_d1 = 1;
parameter_eig_diagnostic.kernel_qpro_polar_a_pole_north=KAPPA_pole_north_double;
parameter_eig_diagnostic.kernel_qpro_polar_a_pole_south=KAPPA_pole_south_double;
parameter_eig_diagnostic.kernel_qpro_qref_k_eq_d_double=KAPPA_qref_k_eq_d_double;
parameter_eig_diagnostic.kernel_qpro_l_max_use = pm_l_max_max;
parameter_eig_diagnostic.lanczos_n_iteration_max = lanczos_n_iteration_max;
eig_ddssnll_lanczos_diagnostic_4( ...
 parameter_eig_diagnostic ...
,pm_n_k_p_r ...
,pm_k_p_r_ ...
,pm_k_p_r_max ...
,pm_l_max_ ...
,pm_a_k_Y_reco_empi_yk_ ...
,pm_n_k_all ...
,pm_n_k_all_csum_ ...
,pm_k_p_r_all_ ...
,pm_k_p_azimu_b_all_ ...
,pm_k_p_polar_a_all_ ...
,pm_weight_3d_k_all_ ...
,pm_weight_shell_k_ ...
,pm_weight_3d_k_p_r_ ...
,[] ...
,pm_n_w_ ...
,pm_weight_2d_k_p_r_ ...
,pm_weight_2d_wk_ ...
,n_S_use ...
,pm_S_use_k_p_wkS__ ...
,viewing_polar_a_S_use_ ...
,viewing_azimu_b_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
,n_M_use ...
,weight_imagecount_M_use_ ...
,pm_M_use_k_p_wkM__ ...
,pm_n_CTF ...
,pm_index_nCTF_from_nM_use_ ...
,pm_CTF_k_p_r_kC__ ...
,pm_CTF_k_p_wkC__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,euler_polar_a_M_use_ ...
,euler_azimu_b_M_use_ ...
,euler_gamma_z_M_use_ ...
,KAPPA ...
,pm_Ylm_uklma___ ...
,pm_k_p_azimu_b_sub_uka__ ...
,pm_k_p_polar_a_sub_uka__ ...
,pm_l_max_uk_ ...
,pm_index_nu_n_k_per_shell_from_nk_p_r_ ...
,pm_index_k_per_shell_uka__ ...
,pm_V_lmm___ ...
,pm_L_lm__ ...
,pm_d0W_betazeta_mlma____ ...
,pm_d1W_betazeta_mlma____ ...
,pm_d2W_betazeta_mlma____ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
,UX_kn__ ...
,X_weight_r_ ...
,n_x_u_pack ...
,tmp_.pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,tmp_.pm_v_tilde_ykabci__  ...
,tmp_.pm_w_tilde_ykabc_  ...
,tmp_.alph_tilde_i_ ...
,tmp_.beta_tilde_i_ ... 
,str_dir_mat ...
,str_dir_jpg ...
,str_fname_nopath_prefix ...
);
clear tmp_;
end;%if  exist(fname_mat,'file');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%for flag_implicit_dtau = 1;
end;%for nlsigma_dist=0:n_lsigma_dist-1;
end;%for nctf_select=0:n_ctf_select-1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_calc;



disp(sprintf(' %% returning after diagnostic')); return;


