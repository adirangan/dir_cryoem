%%%%%%%%;
% trying to debug ddssnll_from_a_k_p_4. ;
%%%%%%%%;

% plot(euler_polar_a_M_/pi,'o'); grid on;
% index_nM_ = [ 0:27]; %<-- polar_a/pi <  0.5. ;
% index_nM_ = [28:35]; %<-- polar_a/pi == 0.5. ;
% index_nM_ = [36:63]; %<-- polar_a/pi >  0.5. ;
index_nM_ = [ 0:63]; %<-- all. ;
n_M_sub = numel(index_nM_);
M_k_p_wkM_sub__ = M_k_p_wkM__(:,1+index_nM_);
index_nCTF_from_nM_sub_ = index_nCTF_from_nM_(1+index_nM_);
index_neta_from_nM_sub_ = index_neta_from_nM_(1+index_nM_);
fromb_polar_a_M_sub_ = fromb_polar_a_M_(1+index_nM_);
fromb_azimu_b_M_sub_ = fromb_azimu_b_M_(1+index_nM_);
fromb_gamma_z_M_sub_ = fromb_gamma_z_M_(1+index_nM_);
euler_polar_a_M_sub_ = euler_polar_a_M_(1+index_nM_);
euler_azimu_b_M_sub_ = euler_azimu_b_M_(1+index_nM_);
euler_gamma_z_M_sub_ = euler_gamma_z_M_(1+index_nM_);
dtau_euler_polar_a_M_sub_ = dtau_euler_polar_a_M_(1+index_nM_);
dtau_euler_azimu_b_M_sub_ = dtau_euler_azimu_b_M_(1+index_nM_);
dtau_euler_gamma_z_M_sub_ = dtau_euler_gamma_z_M_(1+index_nM_);
tmp_dtau_euler_polar_a_M_sub_ = 1*dtau_euler_polar_a_M_sub_;
tmp_dtau_euler_azimu_b_M_sub_ = 1*dtau_euler_azimu_b_M_sub_;
tmp_dtau_euler_gamma_z_M_sub_ = 1*dtau_euler_gamma_z_M_sub_;

%%%%%%%%;
% Calculate derivative using ssnll_from_plane_wave_expansion_1. ;
%%%%%%%%;
n_source_a = n_source; v_source_a_ = ones(n_source_a,1);
n_source_b = n_source; v_source_b_ = ones(n_source_b,1);
n_source_dvol_a = n_source; v_source_dvol_a_ = ones(n_source_dvol_a,1);
viewing_gamma_z_S_ = zeros(n_S,1);
parameter_ssnll = struct('type','parameter');
[ ...
 ~ ...
,ssnll_pw1_M_sub_ ...
,ssnll_pw1 ...
,S_k_p_pw1_wkS__ ...
,dvol_ssnll_pw1_M_sub_ ...
,dvol_ssnll_pw1 ...
,dvol_S_k_p_pw1_wkS__ ...
,dvol_dvol_ssnll_pw1 ...
,dtau_ssnll_pw1_M_sub3__ ...
,dtau_ssnll_pw1 ...
,dtau_S_k_p_pw1_wkS3___ ...
,dtau_dvol_ssnll_pw1_M_sub3__ ...
,dtau_dvol_ssnll_pw1 ...
,dtau_dvol_S_k_p_pw1_wkS3___ ...
,dtau_dtau_ssnll_pw1_M_sub33___ ...
,dtau_dtau_ssnll_pw1 ...
,dtau_dtau_S_k_p_pw1_wkS33____ ...
] = ...
ssnll_from_plane_wave_expansion_1( ...
 parameter_ssnll ...
,n_source_a ...
,v_source_a_ ...
,delta_a_c__ ...
,n_source_b ...
,v_source_b_ ...
,delta_b_c__ ...
,n_source_dvol_a ...
,v_source_dvol_a_ ...
,delta_dvol_a_c__ ...
,n_k_p_r ...
,k_p_r_ ...
,n_w_max ...
,weight_2d_wk_ ...
,n_CTF ...
,index_nCTF_from_nM_sub_ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_sub_ ...
,eta_k_p_wke__ ...
,n_M_sub ...
,euler_polar_a_M_sub_ ...
,euler_azimu_b_M_sub_ ...
,euler_gamma_z_M_sub_ ...
,tmp_dtau_euler_polar_a_M_sub_ ...
,tmp_dtau_euler_azimu_b_M_sub_ ...
,tmp_dtau_euler_gamma_z_M_sub_ ...
,fromb_polar_a_M_sub_ ...
,fromb_azimu_b_M_sub_ ...
,fromb_gamma_z_M_sub_ ...
,n_S ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
);
%%%%%%%%;

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_p_14. ;
%%%%%%%%;
tmp_t = tic();
parameter_ssnll = struct('type','parameter');
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
[ ...
 parameter_ssnll ...
,ssnll_q2d_M_sub_ ...
,ssnll_q2d ...
,S_k_p_q2d_wkS__ ...
,dvol_ssnll_q2d_M_sub_ ...
,dvol_ssnll_q2d ...
,dvol_S_k_p_q2d_wkS__ ...
,dvol_dvol_ssnll_q2d ...
,dtau_ssnll_q2d_M_sub3__ ...
,dtau_ssnll_q2d ...
,dtau_S_k_p_q2d_wkS3___ ...
,dtau_dvol_ssnll_q2d_M_sub3__ ...
,dtau_dvol_ssnll_q2d ...
,dtau_dvol_S_k_p_q2d_wkS3___ ...
,dtau_dtau_ssnll_q2d_M_sub33___ ...
,dtau_dtau_ssnll_q2d ...
,dtau_dtau_S_k_p_q2d_wkS33____ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M_sub ...
,[] ...
,M_k_p_wkM_sub__ ...
,index_nCTF_from_nM_sub_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_sub_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_sub_ ...
,euler_azimu_b_M_sub_ ...
,euler_gamma_z_M_sub_ ...
,tmp_dtau_euler_polar_a_M_sub_ ...
,tmp_dtau_euler_azimu_b_M_sub_ ...
,tmp_dtau_euler_gamma_z_M_sub_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: time %0.6fs',tmp_t)); end;
%%%%%%%%;

if flag_disp>1;
%%%%%%%%;
% plot errors as function of viewing_angle for all nS. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 6; p_col = 10; np=0;
for ntype=0:1+3+6-1;
na=0;
if ntype==na; tmp_pw1_wkS__ = S_k_p_pw1_wkS__; tmp_q2d_wkS__ = S_k_p_q2d_wkS__; tmp_str = 'S'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_S_k_p_pw1_wkS3___(:,:,1+0); tmp_q2d_wkS__ = dtau_S_k_p_q2d_wkS3___(:,:,1+0); tmp_str = 'dSda'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_S_k_p_pw1_wkS3___(:,:,1+1); tmp_q2d_wkS__ = dtau_S_k_p_q2d_wkS3___(:,:,1+1); tmp_str = 'dSdb'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_S_k_p_pw1_wkS3___(:,:,1+2); tmp_q2d_wkS__ = dtau_S_k_p_q2d_wkS3___(:,:,1+2); tmp_str = 'dSdc'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+0,1+0); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+0,1+0); tmp_str = 'ddSdaa'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+0,1+1); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+0,1+1); tmp_str = 'ddSdab'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+0,1+2); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+0,1+2); tmp_str = 'ddSdac'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+1,1+1); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+1,1+1); tmp_str = 'ddSdbb'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+1,1+2); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+1,1+2); tmp_str = 'ddSdbc'; end; na=na+1;
if ntype==na; tmp_pw1_wkS__ = dtau_dtau_S_k_p_pw1_wkS33____(:,:,1+2,1+2); tmp_q2d_wkS__ = dtau_dtau_S_k_p_q2d_wkS33____(:,:,1+2,1+2); tmp_str = 'ddSdcc'; end; na=na+1;
Slim_ = max(abs(tmp_pw1_wkS__),[],'all')*[-1,+1]; 
tmp_errabs_S_ = reshape(sum(bsxfun(@times,abs(tmp_pw1_wkS__ - 1*tmp_q2d_wkS__).^2,reshape(weight_2d_wk_,[n_w_sum,1])),1),[n_S,1]);
tmp_errrel_S_ = tmp_errabs_S_./max(1e-12,reshape(sum(bsxfun(@times,abs(tmp_pw1_wkS__ - 0*tmp_q2d_wkS__).^2,reshape(weight_2d_wk_,[n_w_sum,1])),1),[n_S,1]));
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_polar_a_S_/pi,-0,+1),log10(tmp_errabs_S_),'o');
xlim([-0,+1]); xlabel('euler_polar_a_S_/pi','Interpreter','none'); title(tmp_str,'Interpreter','none');
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_azimu_b_S_/pi,-1,+1),log10(tmp_errabs_S_),'o');
xlim([-1,+1]); xlabel('euler_azimu_b_S_/pi','Interpreter','none');
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_gamma_z_S_/pi,-1,+1),log10(tmp_errabs_S_),'o');
xlim([-1,+1]); xlabel('euler_gamma_z_S_/pi','Interpreter','none');
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_polar_a_S_/pi,-0,+1),log10(tmp_errrel_S_),'o');
xlim([-0,+1]); xlabel('euler_polar_a_S_/pi','Interpreter','none');
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_azimu_b_S_/pi,-1,+1),log10(tmp_errrel_S_),'o');
xlim([-1,+1]); xlabel('euler_azimu_b_S_/pi','Interpreter','none');
subplot_t(p_row,p_col,1+np);np=np+1;cla;
plot(periodize(viewing_gamma_z_S_/pi,-1,+1),log10(tmp_errrel_S_),'o');
xlim([-1,+1]); xlabel('euler_gamma_z_S_/pi','Interpreter','none');
drawnow();
end;%for ntype=0:1+3+9-1;
end;%if flag_disp>1;

%disp('returning before calling ddssnll_from_a_k_p_4'); return;

if flag_disp>1;
%%%%%%%%;
% plot errors on polar-grid for a particular nS. ;
%%%%%%%%;
nS = max(efind(abs(viewing_polar_a_S_-pi/2)<1e-6))+0;
S_k_p_pw1_wk_ = S_k_p_pw1_wkS__(:,1+nS);
S_k_p_q2d_wk_ = S_k_p_q2d_wkS__(:,1+nS);
dtau_S_k_p_pw1_wk3__ = squeeze(dtau_S_k_p_pw1_wkS3___(:,1+nS,:));
dtau_S_k_p_q2d_wk3__ = squeeze(dtau_S_k_p_q2d_wkS3___(:,1+nS,:));
dtau_dtau_S_k_p_pw1_wk33___ = squeeze(dtau_dtau_S_k_p_pw1_wkS33____(:,1+nS,:,:));
dtau_dtau_S_k_p_q2d_wk33___ = squeeze(dtau_dtau_S_k_p_q2d_wkS33____(:,1+nS,:,:));
figure(1+nf);nf=nf+1;clf;figbig;
%p_row = 8; p_col = 8; np=0;
p_row = 2; p_col = 5; np=0;
for ntype=0:1+3+6-1;
na=0;
if ntype==na; tmp_pw1_wk_ = S_k_p_pw1_wk_; tmp_str_pw1 = 'S_k_p_pw1_wk_'; tmp_q2d_wk_ = S_k_p_q2d_wk_; tmp_str_q2d = 'S_k_p_q2d_wk_'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_S_k_p_pw1_wk3__(:,1+0); tmp_str_pw1 = 'dtau_S_k_p_pw1_wk3__(:,1+0)'; tmp_q2d_wk_ = dtau_S_k_p_q2d_wk3__(:,1+0); tmp_str_q2d = 'dtau_S_k_p_q2d_wk3__(:,1+0)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_S_k_p_pw1_wk3__(:,1+1); tmp_str_pw1 = 'dtau_S_k_p_pw1_wk3__(:,1+1)'; tmp_q2d_wk_ = dtau_S_k_p_q2d_wk3__(:,1+1); tmp_str_q2d = 'dtau_S_k_p_q2d_wk3__(:,1+1)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_S_k_p_pw1_wk3__(:,1+2); tmp_str_pw1 = 'dtau_S_k_p_pw1_wk3__(:,1+2)'; tmp_q2d_wk_ = dtau_S_k_p_q2d_wk3__(:,1+2); tmp_str_q2d = 'dtau_S_k_p_q2d_wk3__(:,1+2)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+0); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+0)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+0); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+0)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+1); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+1)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+1); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+1)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+2); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+0,1+2)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+2); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+0,1+2)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+1,1+1); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+1,1+1)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+1,1+1); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+1,1+1)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+1,1+2); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+1,1+2)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+1,1+2); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+1,1+2)'; end; na=na+1;
if ntype==na; tmp_pw1_wk_ = dtau_dtau_S_k_p_pw1_wk33___(:,1+2,1+2); tmp_str_pw1 = 'dtau_dtau_S_k_p_pw1_wk33___(:,1+2,1+2)'; tmp_q2d_wk_ = dtau_dtau_S_k_p_q2d_wk33___(:,1+2,1+2); tmp_str_q2d = 'dtau_dtau_S_k_p_q2d_wk33___(:,1+2,1+2)'; end; na=na+1;
Slim_ = max(abs(tmp_pw1_wk_))*[-1,+1]; 
%{
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(tmp_pw1_wk_),Slim_,colormap_beach());
axis image; axisnotick; title(sprintf('real(%s)',tmp_str_pw1),'Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(tmp_pw1_wk_),Slim_,colormap_beach());
axis image; axisnotick; title(sprintf('imag(%s)',tmp_str_pw1),'Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(tmp_q2d_wk_),Slim_,colormap_beach());
axis image; axisnotick; title(sprintf('real(%s)',tmp_str_q2d),'Interpreter','none');
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(tmp_q2d_wk_),Slim_,colormap_beach());
axis image; axisnotick; title(sprintf('imag(%s)',tmp_str_q2d),'Interpreter','none');
%}
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,abs(tmp_pw1_wk_ - tmp_q2d_wk_),Slim_,colormap_beach());
axis image; axisnotick; title(sprintf('r:%s',tmp_str_q2d),'Interpreter','none');
drawnow();
end;%for ntype=0:1+3+9-1;
end;%if flag_disp>1;

%disp('returning before calling ddssnll_from_a_k_p_4'); return;

%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
if ~exist('KAPPA','var'); KAPPA = []; end;
parameter_ddssnll = struct('type','parameter');
parameter_ddssnll.flag_verbose = flag_verbose;
parameter_ddssnll.flag_check = 1;
parameter_ddssnll.flag_disp = 1;
parameter_ddssnll.n_order = n_order;
parameter.ddssnll.kernel_basic_qref_k_eq_d_double = k_eq_d_double;
parameter.ddssnll.kernel_basic_l_max_use = l_max;
weight_imagecount_M_ = ones(n_M,1);
weight_imagecount_M_sub_ = ones(n_M_sub,1);
[ ...
 parameter_ddssnll ...
,Hvt_qkabc_ ...
,Hv_q3d_k_p_qk_ ...
,Ht_q2d_M_sub3__ ...
,a_restore_C2M0_k_p_qk__ ...
,Hvv_q3d_k_p_qk_ ...
,Hvt_q3d_k_p_qk_ ...
,Htv_q2d_M_sub3__ ...
,Htt_q2d_M_sub3__ ...
,tmp_dtau_euler_polar_a_M_sub_ ...
,tmp_dtau_euler_azimu_b_M_sub_ ...
,tmp_dtau_euler_gamma_z_M_sub_ ...
,n_dvt ... 
,dvt_ ... 
,dvt ... 
,ssnll_tmp_q2d_dvt_ ... 
,dssnll_mid_q2d ... 
,dssnll_dif_q2d ... 
,dssnll_lsq_q2d ... 
,ddssnll_mid_q2d ... 
,ddssnll_dif_q2d ... 
,ddssnll_lsq_q2d ... 
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ddssnll_from_a_k_p_4( ...
 parameter_ddssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,qref_k_eq_d ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,S_k_p_q2d_wkS__ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M_sub ...
,weight_imagecount_M_sub_ ...
,M_k_p_wkM_sub__ ...
,n_CTF ...
,index_nCTF_from_nM_sub_ ...
,CTF_k_p_r_kC__ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_sub_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_sub_ ...
,euler_azimu_b_M_sub_ ...
,euler_gamma_z_M_sub_ ...
,tmp_dtau_euler_polar_a_M_sub_ ...
,tmp_dtau_euler_azimu_b_M_sub_ ...
,tmp_dtau_euler_gamma_z_M_sub_ ...
,KAPPA ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ddssnll_from_a_k_p_4: time %0.6fs',tmp_t)); end;
%%%%%%%%;

disp('returning'); return;

%%%%%%%%;
% trying to use ssnll_from_a_k_p_14 in two frames. ;
%%%%%%%%;

%clear; test_ssnll_from_a_k_p_14_ongrid_0;

if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;

ori_R_use__ =          (R_use__);
inv_R_use__ = transpose(R_use__);

%%%%%%%%;
% Rotate the template-angles. ;
%%%%%%%%;
[ ...
 ~ ...
,viewing_R_polar_a_S_ ...
,viewing_R_azimu_b_S_ ...
,viewing_R_gamma_z_S_ ...
] = ...
euler_to_euler_0( ...
 [] ...
,n_viewing_S ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
,R_use__ ...
);

%%%%%%%%;
% Rotate the images. ;
%%%%%%%%;
N_k_p_wkM__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
N_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,M_k_p_wkM__(:,1+nM),-euler_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
euler_gamma_z_N_ = zeros(n_M,1);

%%%%%%%%;
% Rotate the image-angles. ;
%%%%%%%%;
[ ...
 ~ ...
,euler_R_polar_a_M_ ...
,euler_R_azimu_b_M_ ...
,euler_R_gamma_z_N_ ...
] = ...
euler_to_euler_0( ...
 [] ...
,n_M ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_N_ ...
,R_use__ ...
);

%%%%%%%%;
% Do not need to rotate the images again. ;
%%%%%%%%;
euler_R_gamma_z_O_ = zeros(n_M,1);
O_k_p_wkM__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
O_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,N_k_p_wkM__(:,1+nM),+euler_R_gamma_z_O_(1+nM));
end;%for nM=0:n_M-1;

%%%%%%%%;
% Now rotate the quadrature-grid. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid.')); end;
tmp_t = tic();
tmp_qk3__ = cat(2,k_c_0_qk_,k_c_1_qk_,k_c_2_qk_)*transpose(R_use__);
R_k_c_0_qk_ = tmp_qk3__(:,1+0); R_k_c_1_qk_ = tmp_qk3__(:,1+1); R_k_c_2_qk_ = tmp_qk3__(:,1+2);
R_k_p_r01_qk_ = sqrt(R_k_c_0_qk_.^2 + R_k_c_1_qk_.^2);
R_k_p_polar_a_qk_ = atan2(R_k_p_r01_qk_,R_k_c_2_qk_);
R_k_p_azimu_b_qk_ = atan2(R_k_c_1_qk_,R_k_c_0_qk_);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid: %0.6fs',tmp_t)); end;
%%%%%%%%;

flag_disp=0;
if flag_disp;
%%%%%%%%;
% visualize a single shell. ;
%%%%%%%%;
nk_p_r = n_k_p_r-1;
tmp_index_ = n_qk_csum_(1+nk_p_r):n_qk_csum_(1+nk_p_r+1)-1;
assert(n_q==numel(tmp_index_));
a_k_p_single_shell_ = a_k_p_qk_(1+tmp_index_);
k_c_0_single_shell_ = k_c_0_qk_(1+tmp_index_);
k_c_1_single_shell_ = k_c_1_qk_(1+tmp_index_);
k_c_2_single_shell_ = k_c_2_qk_(1+tmp_index_);
a_R_k_p_single_shell_ = a_R_k_p_qk_(1+tmp_index_);
R_k_c_0_single_shell_ = R_k_c_0_qk_(1+tmp_index_);
R_k_c_1_single_shell_ = R_k_c_1_qk_(1+tmp_index_);
R_k_c_2_single_shell_ = R_k_c_2_qk_(1+tmp_index_);
alim_ = max(abs(a_k_p_single_shell_))*[-1,+1];
figure(1+nf);nf=nf+1;clf;figmed;
markersize_use=24;
c_use__ = colormap_beach(); n_c_use = size(c_use__,1);
subplot(1,2,1);
hold on;
for nq=0:n_q-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(real(a_k_p_single_shell_(1+nq))-min(alim_))/diff(alim_))));
plot3(k_c_0_single_shell_(1+nq),k_c_1_single_shell_(1+nq),k_c_2_single_shell_(1+nq),'.','Color',c_use__(1+nc_use,:),'MarkerSize',markersize_use);
end;%for nq=0:n_q-1;
hold off;
axis equal; axis vis3d; axisnotick3d;
subplot(1,2,2);
hold on;
for nq=0:n_q-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(real(a_R_k_p_single_shell_(1+nq))-min(alim_))/diff(alim_))));
plot3(R_k_c_0_single_shell_(1+nq),R_k_c_1_single_shell_(1+nq),R_k_c_2_single_shell_(1+nq),'.','Color',c_use__(1+nc_use,:),'MarkerSize',markersize_use);
end;%for nq=0:n_q-1;
hold off;
axis equal; axis vis3d; axisnotick3d;
%%%%%%%%;
end;%if flag_disp;

%%%%%%%%;
% Now rotate the dtau_euler_. ;
%%%%%%%%;
% With this notation we assume: ;
% R__ = Rz(azimu_b)*Ry(polar_a)*Rz(gamma_z), ;
% for which the resulting matrix is: ;
% [ +cb*ca*cc - sb*sc , -cb*ca*sc -sb*cc , +cb*sa ];
% [ +sb*ca*cc + cb*sc , -sb*ca*sc +cb*cc , +sb*sa ];
% [ -sa*cc            , +sa*sc           , +ca    ];
% as used in get_template_1.m ;
% So k_p_r01 is [ (+cb*ca*cc - sb*sc).^2 + (+sb*ca*cc + cb*sc).^2 ] = ca^2*cc^2 + sc^2 ;
%%%%%%%%;
tab_a = 0; tab_b = 1; tab_c = 2;
x_from_t_ = @(t_) ...
[ ...
  +cos(t_(1+tab_b))*cos(t_(1+tab_a))*cos(t_(1+tab_c)) - sin(t_(1+tab_b))*sin(t_(1+tab_c))  ...
; +sin(t_(1+tab_b))*cos(t_(1+tab_a))*cos(t_(1+tab_c)) + cos(t_(1+tab_b))*sin(t_(1+tab_c)) ...
; -sin(t_(1+tab_a))*cos(t_(1+tab_c))  ...
];
J_xt__ = @(t_) ...
[ ...
  -cos(t_(1+tab_b))*sin(t_(1+tab_a))*cos(t_(1+tab_c))  ...
, -sin(t_(1+tab_b))*cos(t_(1+tab_a))*cos(t_(1+tab_c)) - cos(t_(1+tab_b))*sin(t_(1+tab_c))  ...
, -cos(t_(1+tab_b))*cos(t_(1+tab_a))*sin(t_(1+tab_c)) - sin(t_(1+tab_b))*cos(t_(1+tab_c))  ...
; -sin(t_(1+tab_b))*sin(t_(1+tab_a))*cos(t_(1+tab_c)) ...
, +cos(t_(1+tab_b))*cos(t_(1+tab_a))*cos(t_(1+tab_c)) - sin(t_(1+tab_b))*sin(t_(1+tab_c)) ...
, -sin(t_(1+tab_b))*cos(t_(1+tab_a))*sin(t_(1+tab_c)) + cos(t_(1+tab_b))*cos(t_(1+tab_c)) ...
; -cos(t_(1+tab_a))*cos(t_(1+tab_c))  ...
, 0  ...
, +sin(t_(1+tab_a))*sin(t_(1+tab_c))  ...
];  
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% rotating dtau_euler_.')); end;
dtau_euler_R_polar_a_M_ = zeros(n_M,1);
dtau_euler_R_azimu_b_M_ = zeros(n_M,1);
dtau_euler_R_gamma_z_M_ = zeros(n_M,1);
tmp_t = tic();
tolerance_pinv = 1e-6;
sign_polar_a = +1;
sign_azimu_b = +1;
sign_gamma_z = -1;
for nM=0:n_M-1;
%%%%;
t_ori_ = [sign_polar_a*euler_polar_a_M_(1+nM);sign_azimu_b*euler_azimu_b_M_(1+nM);sign_gamma_z*euler_gamma_z_M_(1+nM)];
euler_polar_a_sub = euler_polar_a_M_(1+nM);
euler_azimu_b_sub = euler_azimu_b_M_(1+nM);
euler_gamma_z_sub = euler_gamma_z_M_(1+nM);
euler_sub_ = [ ...
 sign_gamma_z*euler_gamma_z_sub ...
,sign_polar_a*euler_polar_a_sub ...
,sign_azimu_b*euler_azimu_b_sub ...
]; %<-- note sign. ;
tmp_R_sub__ = euler_to_R_0(euler_sub_);
tmp_R_rot__ = transpose(R_use__)*tmp_R_sub__;
euler_rot_ = R_to_euler_0(tmp_R_rot__);
euler_gamma_z_rot = euler_rot_(1+0);
euler_polar_a_rot = euler_rot_(1+1);
euler_azimu_b_rot = euler_rot_(1+2);
euler_R_polar_a_M_(1+nM) = sign_polar_a*euler_polar_a_rot;
euler_R_azimu_b_M_(1+nM) = sign_azimu_b*euler_azimu_b_rot;
euler_R_gamma_z_M_(1+nM) = sign_gamma_z*euler_gamma_z_rot; %<-- note sign. ;
t_rot_ = [sign_polar_a*euler_R_polar_a_M_(1+nM);sign_azimu_b*euler_R_azimu_b_M_(1+nM);sign_gamma_z*euler_R_gamma_z_M_(1+nM)];
x_ori_ = x_from_t_(t_ori_);
x_rot_ = x_from_t_(t_rot_);
assert(fnorm(x_rot_-transpose(R_use__)*x_ori_)<1e-3);
%%%%;
dt_ori_ = [sign_polar_a*dtau_euler_polar_a_M_(1+nM);sign_azimu_b*dtau_euler_azimu_b_M_(1+nM);sign_gamma_z*dtau_euler_gamma_z_M_(1+nM)];
tmp_J_xt__ = J_xt__(t_ori_);
tmp_J_tx__ = pinv(J_xt__(t_rot_),tolerance_pinv);
dt_rot_ = tmp_J_tx__*transpose(R_use__)*tmp_J_xt__*dt_ori_;
dtau_euler_R_polar_a_M_(1+nM) = sign_polar_a*dt_rot_(1+tab_a);
dtau_euler_R_azimu_b_M_(1+nM) = sign_azimu_b*dt_rot_(1+tab_b);
dtau_euler_R_gamma_z_M_(1+nM) = sign_gamma_z*dt_rot_(1+tab_c);
%%%%;
end;%for nM=0:n_M-1;
%%%%%%%%;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% rotating dtau_euler_: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_p_14. ;
%%%%%%%%;
tmp_t = tic();
weight_imagecount_M_ = ones(n_M,1);
[ ...
 parameter_ssnll ...
,ssnll_tst_ori_M_ ...
,ssnll_tst_ori ...
,S_k_p_tst_ori_wkS__ ...
,dvol_ssnll_tst_ori_M_ ...
,dvol_ssnll_tst_ori ...
,dvol_S_k_p_tst_ori_wkS__ ...
,dvol_dvol_ssnll_tst_ori ...
,dtau_ssnll_tst_ori_M3__ ...
,dtau_ssnll_tst_ori ...
,dtau_S_k_p_tst_ori_wkS3___ ...
,dtau_dvol_ssnll_tst_ori_M3__ ...
,dtau_dvol_ssnll_tst_ori ...
,dtau_dvol_S_k_p_tst_ori_wkS3___ ...
,dtau_dtau_ssnll_tst_ori_M33___ ...
,dtau_dtau_ssnll_tst_ori ...
,dtau_dtau_S_k_p_tst_ori_wkS33____ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_form_ ...
,dvol_a_k_p_form_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,N_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_N_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,ori_R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_p_14. ;
%%%%%%%%;
tmp_t = tic();
weight_imagecount_M_ = ones(n_M,1);
[ ...
 parameter_ssnll ...
,ssnll_tst_rot_M_ ...
,ssnll_tst_rot ...
,S_k_p_tst_rot_wkS__ ...
,dvol_ssnll_tst_rot_M_ ...
,dvol_ssnll_tst_rot ...
,dvol_S_k_p_tst_rot_wkS__ ...
,dvol_dvol_ssnll_tst_rot ...
,dtau_ssnll_tst_rot_M3__ ...
,dtau_ssnll_tst_rot ...
,dtau_S_k_p_tst_rot_wkS3___ ...
,dtau_dvol_ssnll_tst_rot_M3__ ...
,dtau_dvol_ssnll_tst_rot ...
,dtau_dvol_S_k_p_tst_rot_wkS3___ ...
,dtau_dtau_ssnll_tst_rot_M33___ ...
,dtau_dtau_ssnll_tst_rot ...
,dtau_dtau_S_k_p_tst_rot_wkS33____ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,R_k_p_azimu_b_qk_ ...
,R_k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,R_k_c_0_qk_ ...
,R_k_c_1_qk_ ...
,R_k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_R_k_p_form_ ...
,dvol_a_R_k_p_form_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_R_polar_a_S_ ...
,viewing_R_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,O_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_R_polar_a_M_ ...
,euler_R_azimu_b_M_ ...
,euler_R_gamma_z_O_ ...
,dtau_euler_R_polar_a_M_ ...
,dtau_euler_R_azimu_b_M_ ...
,dtau_euler_R_gamma_z_M_ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
,inv_R_use__ ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: %0.6fs',tmp_t)); end;
%%%%%%%%;


disp('returning'); return;

dtau = 0.0d0;

clear ssnll_tst_M_ ssnll_tst_pos_M_

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_p_14. ;
%%%%%%%%;
tmp_t = tic();
weight_imagecount_M_ = ones(n_M,1);
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
[ ...
 parameter_ssnll ...
,ssnll_tst_M_ ...
,ssnll_tst ...
,S_k_p_tst_wkS__ ...
,dvol_ssnll_tst_M_ ...
,dvol_ssnll_tst ...
,dvol_S_k_p_tst_wkS__ ...
,dvol_dvol_ssnll_tst ...
,dtau_ssnll_tst_M3__ ...
,dtau_ssnll_tst ...
,dtau_S_k_p_tst_wkS3___ ...
,dtau_dvol_ssnll_tst_M3__ ...
,dtau_dvol_ssnll_tst ...
,dtau_dvol_S_k_p_tst_wkS3___ ...
,dtau_dtau_ssnll_tst_M33___ ...
,dtau_dtau_ssnll_tst ...
,dtau_dtau_S_k_p_tst_wkS33____ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_form_ ...
,dvol_a_k_p_form_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
tmp_parameter_ssnll = parameter_ssnll;
tmp_parameter_ssnll.flag_verbose = 0*flag_verbose;
tmp_parameter_ssnll.tolerance_pinv = 1e-6;
tmp_parameter_ssnll.viewing_k_eq_d = viewing_k_eq_d;
tmp_parameter_ssnll.template_k_eq_d = template_k_eq_d;
%tmp_parameter_ssnll.n_order = n_order;
[ ...
 tmp_parameter_ssnll ...
,ssnll_tst_pos_M_ ...
,ssnll_tst_pos ...
,S_k_p_tst_pos_wkS__ ...
,dvol_ssnll_tst_pos_M_ ...
,dvol_ssnll_tst_pos ...
,dvol_S_k_p_tst_pos_wkS__ ...
,dvol_dvol_ssnll_tst_pos ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ssnll_from_a_k_p_14( ...
 tmp_parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,S_k_p_tst_wkS__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,+(euler_polar_a_M_ + 1.0*dtau*dtau_euler_polar_a_M_) ...
,+(euler_azimu_b_M_ + 1.0*dtau*dtau_euler_azimu_b_M_) ...
,+(euler_gamma_z_M_ + 1.0*dtau*dtau_euler_gamma_z_M_) ...
,[] ...
,[] ...
,[] ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: time %0.2fs',tmp_t)); end;
%%%%%%%%;

plot(1:n_M,ssnll_tst_pos_M_,'bs',1:n_M,ssnll_tst_M_,'kx');

disp('returning'); return;

%%%%%%%%;
% trying to debug ddssnll_from_a_k_p_4. ;
%%%%%%%%;

%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
if ~exist('KAPPA','var'); KAPPA = []; end;
parameter_ddssnll = struct('type','parameter');
parameter_ddssnll.flag_verbose = flag_verbose;
parameter_ddssnll.flag_check = 1;
parameter_ddssnll.flag_disp = flag_disp;
parameter_ddssnll.n_order = n_order;
parameter.ddssnll.kernel_basic_qref_k_eq_d_double = k_eq_d_double;
parameter.ddssnll.kernel_basic_l_max_use = l_max;
weight_imagecount_M_ = ones(n_M,1);
[ ...
 parameter_ddssnll ...
,Hvt_qkabc_ ...
,Hv_q3d_k_p_qk_ ...
,Ht_q2d_M3__ ...
,a_restore_C2M0_k_p_qk__ ...
,Hvv_q3d_k_p_qk_ ...
,Hvt_q3d_k_p_qk_ ...
,Htv_q2d_M3__ ...
,Htt_q2d_M3__ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,n_dvt ... 
,dvt_ ... 
,dvt ... 
,ssnll_tmp_q2d_dvt_ ... 
,dssnll_mid_q2d ... 
,dssnll_dif_q2d ... 
,dssnll_lsq_q2d ... 
,ddssnll_mid_q2d ... 
,ddssnll_dif_q2d ... 
,ddssnll_lsq_q2d ... 
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ddssnll_from_a_k_p_4( ...
 parameter_ddssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,qref_k_eq_d ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,S_k_p_q2d_wkS__ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,KAPPA ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ddssnll_from_a_k_p_4: time %0.6fs',tmp_t)); end;
%%%%%%%%;

return;

%%%%%%%%;
% Now working on Feng, Wang, Yang, Jin, 2015. ;
%%%%%%%%;

l_max = 3; n_l = l_max;
m_max_ = transpose(-l_max:+l_max);
n_m_max = numel(m_max_);
beta = pi/6;
d0V_ = wignerd_b(l_max,beta);
tmp_V__ = d0V_{1+l_max};

l_val = l_max;
m_val_ = transpose([-l_val:+l_val]);
n_m_val = numel(m_val_);
X_ = sqrt( (l_val + m_val_) .* (1 + l_val - m_val_) ); 
D__ = spdiags([-X_ , +flip(X_)],[+1,-1],n_m_val,n_m_val);
[V__,D__] = eigs(D__,n_m_val);
%%%%%%%%;
% see tmp10.m ;
%%%%%%%%;


disp('returning'); return;
 
%%%%%%%%;
% setting up sparse link operator. ;
% +[d^{m0}_{l}H^{m0+1,m1}_{l} - d^{m0-1}_{l}H^{m0-1,m1}_{l}] - [d^{m1}_{l}H^{m0,m1+1}_{l} - d^{m1-1}_{l}H^{m0,m1-1}_{l}] = 0 ;
% bsxfun(@times,H__(:),sparse_link__) \cdot d_ = 0_ ;
% Verdict: looks as though it is full rank? Unsure how to fix. ;
%%%%%%%%;
d0U_ = cell(1+l_max,1);
for l_val=0:l_max-1;
d0U_{1+l_val} = zeros(1+2*l_val,1+2*l_val);
for m_val=-l_val:+l_val;
d0U_{1+l_val}(1+l_val+m_val,:) = d0V_{1+l_val}(1+l_val+m_val,:)*sqrt(2*(l_val+abs(m_val)) + 1);
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max-1;  
%%%%;
l_val = 10; tmp_n_m = 1+2*l_val;
nl=0;
index_H0_=[];
index_H1_=[];
index_d_ = [];
sgn_ = [];
for m0_val=-l_val:+l_val;
for m1_val=-l_val:+l_val;
%%%%;
if (abs(m0_val+1)<=l_val); 
index_H0_(1+nl) = l_val+(m0_val+1);
index_H1_(1+nl) = l_val+(m1_val+0);
index_d_(1+nl) = l_val+(m0_val+0);
sgn_(1+nl) = +1;
nl=nl+1;
end;%if (abs(m0_val+1)<=l_val); 
%%%%;
if (abs(m0_val-1)<=l_val); 
index_H0_(1+nl) = l_val+(m0_val-1);
index_H1_(1+nl) = l_val+(m1_val+0);
index_d_(1+nl) = l_val+(m0_val-1);
sgn_(1+nl) = -1;
nl=nl+1;
end;%if (abs(m0_val+1)<=l_val); 
%%%%;
if (abs(m1_val+1)<=l_val); 
index_H0_(1+nl) = l_val+(m0_val+0);
index_H1_(1+nl) = l_val+(m1_val+1);
index_d_(1+nl) = l_val+(m1_val+0);
sgn_(1+nl) = -1;
nl=nl+1;
end;%if (abs(m1_val+1)<=l_val); 
%%%%;
if (abs(m1_val-1)<=l_val); 
index_H0_(1+nl) = l_val+(m0_val+0);
index_H1_(1+nl) = l_val+(m1_val-1);
index_d_(1+nl) = l_val+(m1_val-1);
sgn_(1+nl) = +1;
nl=nl+1;
end;%if (abs(m1_val-1)<=l_val); 
%%%%;
end;%for m1_val=-l_val:+l_val;
end;%for m0_val=-l_val:+l_val;
index_H_ = index_H0_ + index_H1_*tmp_n_m;
sparse_link__ = sparse(1+index_H_,1+index_d_,sgn_,tmp_n_m^2,tmp_n_m);
%%%%;
tmp_U__ = d0U_{1+l_val};
D__ = bsxfun(@times,reshape(tmp_U__,[tmp_n_m^2,1]),sparse_link__);
rank(full(D__)),;


%%%%%%%%;
% Trying to determine recursion in Guraimov and Duraiswami 2014.
% See wignerd_c.m. ;
% d^{m0}_{l}H^{m0+1,m1}_{l} - d^{m0-1}_{l}H^{m0-1,m1}_{l} = d^{m1}_{l}H^{m0,m1+1}_{l} - d^{m1-1}_{l}H^{m0,m1-1}_{l} ;
%%%%%%%%;
d0U_ = cell(1+l_max,1);
for l_val=0:l_max-1;
d0U_{1+l_val} = zeros(1+2*l_val,1+2*l_val);
for m_val=-l_val:+l_val;
d0U_{1+l_val}(1+l_val+m_val,:) = d0V_{1+l_val}(1+l_val+m_val,:)*sqrt(2*(l_val+abs(m_val)) + 1);
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max-1;  
%%%%%%%%;
nf=0;
l_val = 10; tmp_n_m = 1+2*l_val;
tmp_U__ = d0U_{1+l_val};
tmp_d_ = d_lm__(1+l_val,1+l_max+[-l_val:+l_val]);
tmp_D0__ = ...
+bsxfun(@times,reshape(circshift(tmp_d_,+1),[tmp_n_m,1]),circshift(tmp_U__,+1,1)) ...
-bsxfun(@times,reshape(circshift(tmp_d_,-0),[tmp_n_m,1]),circshift(tmp_U__,-1,1)) ...
;
tmp_D1__ = ...
+bsxfun(@times,reshape(circshift(tmp_d_,+1),[1,tmp_n_m]),circshift(tmp_U__,+1,2)) ...
-bsxfun(@times,reshape(circshift(tmp_d_,-0),[1,tmp_n_m]),circshift(tmp_U__,-1,2)) ...
;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,3,1); imagesc(tmp_D0__,[-1,1]); axis image; axisnotick; fig80s; title('tmp_D0__','Interpreter','none'); colorbar;
subplot(1,3,2); imagesc(tmp_D1__,[-1,1]); axis image; axisnotick; fig80s; title('tmp_D1__','Interpreter','none'); colorbar;
subplot(1,3,3); imagesc(abs(tmp_D1__)-abs(tmp_D0__),[-1,1]); axis image; axisnotick; fig80s; title('diff','Interpreter','none'); colorbar;
%%%%%%%%;
disp('returning');return;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Now we try and set up a template-operator ;
% for a collection of azimu_b associated with a single polar_a. ;
%%%%%%%%;
polar_a_use = viewing_polar_a_S_(round(n_S/4));
tmp_index_ = efind(abs(viewing_polar_a_S_-polar_a_use)<1e-6);
n_azimu_b_use = numel(tmp_index_);
azimu_b_use_ = viewing_azimu_b_S_(1+tmp_index_);
S_k_p_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
T_k_p_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
S_k_q_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
T_k_q_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
for nazimu_b_use=0:n_azimu_b_use-1;
nS = tmp_index_(1+nazimu_b_use);
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0; %<-- default. ;
tmp_gamma_z = pi/12;
S_k_p_wk_ = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,S_k_p_wk_,-tmp_gamma_z);
S_k_p_sub_wkb__(:,1+nazimu_b_use) = S_k_p_wk_;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
T_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_R__*delta_a_c__(:,1+nsource);
T_k_p_wk_ = T_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
T_k_p_sub_wkb__(:,1+nazimu_b_use) = T_k_p_wk_;
S_k_q_wk_ = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,S_k_p_wk_);
T_k_q_wk_ = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,T_k_p_wk_);
S_k_q_sub_wkb__(:,1+nazimu_b_use) = S_k_q_wk_;
T_k_q_sub_wkb__(:,1+nazimu_b_use) = T_k_q_wk_;
clear S_k_p_wk_ T_k_p_wk_;
end;%for nazimu_b_use=0:n_azimu_b_use-1;
disp(sprintf(' %% S_k_p_sub_wkb__ vs T_k_p_sub_wkb__: %0.16f %%<-- should be <1e-2',fnorm(S_k_p_sub_wkb__-T_k_p_sub_wkb__)/fnorm(S_k_p_sub_wkb__)));
disp(sprintf(' %% S_k_q_sub_wkb__ vs T_k_q_sub_wkb__: %0.16f %%<-- should be <1e-2',fnorm(S_k_q_sub_wkb__-T_k_q_sub_wkb__)/fnorm(S_k_q_sub_wkb__)));
%%%%;
flag_plot=0;
if flag_plot;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 6; p_col = ceil(n_azimu_b_use/p_row); np=0;
for nazimu_b_use=0:n_azimu_b_use-1;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(S_k_p_sub_wkb__(:,1+nazimu_b_use))); axis image; axisnotick;
%title(sprintf('real(S_k_p_sub_wkb__(:,1+%d))',nazimu_b_use),'Interpreter','none');
title(sprintf('nazimu_b_use %d',nazimu_b_use),'Interpreter','none');
end;%for nazimu_b_use=0:n_azimu_b_use-1;
end;%if flag_plot;
%%%%;
tmp_t = tic();
W_beta__ = wignerd_b(l_max_max,-polar_a_use);
zeta_lm__ = zeros(1+l_max_max,n_m_max);
for l_val=0:l_max_max;
a1=((2*l_val+1)/(4*pi));
Llm__ = legendre(l_val,0,'unnorm');
for m_val=-l_val:+l_val;
if (l_val >0); Llm_ = Llm__(1+abs(m_val),:); end; if (l_val==0); Llm_ = Llm__; end; assert(numel(Llm_)==1);
a2=exp(lfactorial(l_val-abs(m_val)) - lfactorial(l_val+abs(m_val))); c=sqrt(a1*a2); s=1; % original phase ;
zeta_lm__(1+l_val,1+l_max_max+m_val) = s*c*Llm_(1+0);
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max_max;
%%%%;
W_betazeta_mlm___ = zeros(n_m_max,1+l_max_max,n_m_max);
for l_val=0:l_max_max;
for m0_val=-l_val:+l_val;
for m1_val=-l_val:+l_val;
W_betazeta_mlm___(1+l_max_max+m0_val,1+l_val,1+l_max_max+m1_val) = ...
 W_beta__{1+l_val}(1+l_val+m0_val,1+l_val+m1_val) ...
*zeta_lm__(1+l_val,1+l_max_max+m0_val) ...
 ;
end;%for m1_val=-l_val:+l_val;
end;%for m0_val=-l_val:+l_val;
end;%for l_val=0:l_max_max;
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% W_betazeta_mlm___: %0.2fs',tmp_t)); end;
%%%%;
flag_check=1;
if flag_check;
tmp_w_ = crandn(n_m_max);
tmp_azimu_b_use_ = 2*pi*rand(n_azimu_b_use,1);
tmp_f__ = exp(-i*(-reshape(tmp_azimu_b_use_,[n_azimu_b_use,1]))*reshape(m_max_,[1,n_m_max]));
tmp_fw_0_ = tmp_f__*tmp_w_;
tmp_fw_1_ = xxnufft1d2(n_azimu_b_use,tmp_azimu_b_use_,+1,1e-6,n_m_max,tmp_w_);
disp(sprintf(' %% tmp_fw_0_ vs tmp_fw_1_: %0.16f %%<-- should be <1e-6',fnorm(tmp_fw_0_-tmp_fw_1_)/fnorm(tmp_fw_0_)));
clear tmp_azimu_b_use_ tmp_w_ tmp_f__ tmp_fw_0_ tmp_fw_1_ ;
end;%if flag_check;
%%%%;
tmp_t = tic();
W_caza_mkm___ = zeros(n_m_max,n_k_p_r,n_m_max); %<-- diag(exp(+i*m0_val_*tmp_gamma_z))*W_betazeta_ml__*a_k_Y_form_lk__ for each m1_val. ;
for m1_val=-l_max_max:+l_max_max;
W_caza_mkm___(:,:,1+l_max_max+m1_val) = ...
 (pi^2) ...
 *diag(exp(-i*m_max_*(-tmp_gamma_z))) ...
 *reshape(W_betazeta_mlm___(:,:,1+l_max_max+m1_val),[n_m_max,1+l_max_max]) ...
 *reshape(a_k_Y_form_lkm___(:,:,1+l_max_max+m1_val),[1+l_max_max,n_k_p_r]) ...
 ;
end;%for m1_val=-l_max_max:+l_max_max;
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% W_caza_mkm___: %0.2fs',tmp_t)); end;
tmp_t = tic();
W_caza_mmk___ = permute(W_caza_mkm___,[3,1,2]);
W_caza_bmk___ = reshape(xxnufft1d2(n_azimu_b_use,azimu_b_use_,+1,1e-6,n_m_max,reshape(W_caza_mmk___,[n_m_max,n_m_max*n_k_p_r])),[n_azimu_b_use,n_m_max,n_k_p_r]);
W_caza_mkb___ = permute(W_caza_bmk___,[2,3,1]);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% W_caza_mkb___: %0.2fs',tmp_t)); end;
%%%%%%%%;
R_k_q_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
R_k_p_sub_wkb__ = zeros(n_w_sum,n_azimu_b_use);
for nazimu_b_use=0:n_azimu_b_use-1;
R_k_p_wk_ = zeros(n_w_sum,1);
R_k_q_wk_ = zeros(n_w_sum,1);
for nk_p_r=0:n_k_p_r-1;
for m_val=-l_max_max:+l_max_max;
nq = m_val; if (nq<0); nq=nq+n_w_max; end;
R_k_q_wk_(1+nq+nk_p_r*n_w_max) = W_caza_mkb___(1+l_max_max+m_val,1+nk_p_r,1+nazimu_b_use);
end;%for m_val=-l_max_max:+l_max_max;
end;%for nk_p_r=0:n_k_p_r-1;
R_k_q_sub_wkb__(:,1+nazimu_b_use) = R_k_q_wk_;
R_k_p_wk_ = interp_q_to_p(n_k_p_r,n_w_,n_w_sum,R_k_q_wk_);
R_k_p_sub_wkb__(:,1+nazimu_b_use) = R_k_p_wk_;
end;%for nazimu_b_use=0:n_azimu_b_use-1;
disp(sprintf(' %% S_k_p_sub_wkb__ vs T_k_p_sub_wkb__: %0.16f %%<-- should be <1e-2',fnorm(S_k_p_sub_wkb__ - T_k_p_sub_wkb__)/fnorm(S_k_p_sub_wkb__)));
disp(sprintf(' %% S_k_p_sub_wkb__ vs R_k_p_sub_wkb__: %0.16f %%<-- should be <1e-2',fnorm(S_k_p_sub_wkb__ - R_k_p_sub_wkb__)/fnorm(S_k_p_sub_wkb__)));
disp(sprintf(' %% T_k_p_sub_wkb__ vs R_k_p_sub_wkb__: %0.16f %%<-- should be <1e-2',fnorm(T_k_p_sub_wkb__ - R_k_p_sub_wkb__)/fnorm(T_k_p_sub_wkb__)));
%%%%;
flag_plot=0;
if flag_plot;
%%;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 6; p_col = ceil(n_azimu_b_use/p_row); np=0;
for nazimu_b_use=0:n_azimu_b_use-1;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(S_k_p_sub_wkb__(:,1+nazimu_b_use))); axis image; axisnotick;
title(sprintf('nazimu_b_use %d',nazimu_b_use),'Interpreter','none');
end;%for nazimu_b_use=0:n_azimu_b_use-1;
%%;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 6; p_col = ceil(n_azimu_b_use/p_row); np=0;
for nazimu_b_use=0:n_azimu_b_use-1;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(R_k_p_sub_wkb__(:,1+nazimu_b_use))); axis image; axisnotick;
title(sprintf('nazimu_b_use %d',nazimu_b_use),'Interpreter','none');
end;%for nazimu_b_use=0:n_azimu_b_use-1;
%%;
end;%if flag_plot;
%%%%%%%%;
%%%%%%%%;
[ ...
 U_k_p_sub_wkb__ ...
,tmp_W_betazeta_mlm___ ...
,tmp_a_k_Y_lkm___ ...
,tmp_W_caza_mkm___ ...
] = ...
sph_template_single_polar_a_3( ...
 verbose ...
,l_max ...
,n_k_p_r ...
,a_k_Y_form_lkm___ ...
,n_w_max ...
,polar_a_use ...
,n_azimu_b_use ...
,azimu_b_use_ ...
,tmp_gamma_z ...
);
%%%%%%%%;
figure(1+nf);nf=nf+1;plot(W_betazeta_mlm___(:),tmp_W_betazeta_mlm___(:),'.');
figure(1+nf);nf=nf+1;plot(a_k_Y_form_lkm___(:),tmp_a_k_Y_lkm___(:),'.');
figure(1+nf);nf=nf+1;plot(W_caza_mkm___(:),tmp_W_caza_mkm___(:),'.');

disp('returning'); return;

verbose=1;
flag_disp=1;

equa_band_dilated_amplitude = 0.15;
g_dilation = @(point_pole_predilated_azimu_b) equa_band_dilated_amplitude*sin(2*point_pole_predilated_azimu_b); %<-- approximation holds well for first nontrivial mode. ;
f_dilation = @(point_pole_predilated_azimu_b) point_pole_predilated_azimu_b + g_dilation(point_pole_predilated_azimu_b);

npoint_a = 32;
npoint_b = 12;
markersize_sml = 8;
markersize_big = 16;

if flag_disp;
figure(1+nf);nf=nf+1;clf;figsml;
plot_sphere_grid_0;
axis equal; axis vis3d;
hold on;
end;%if flag_disp;

point_output_azimu_b = point_output_azimu_b_b_(1+npoint_b); %<-- yes periodic. ;
point_output_polar_a = -pi/2 + point_output_polar_a_a_(1+npoint_a); %<-- not periodic. ;
point_output_gamma_z = 0;
point_output_k_c_ = Rz(point_output_azimu_b) * Ry(point_output_polar_a) * Rz(point_output_gamma_z) * [1;0;0];
point_pole_k_c__ = Rz(point_output_azimu_b) * Ry(point_output_polar_a) * Rz(point_output_gamma_z) * [zeros(1,n_w_max);transpose(sc_);transpose(cc_)];
%%%%%%%%;
if flag_disp;
plot3(point_output_k_c_(1+0),point_output_k_c_(1+1),point_output_k_c_(1+2),'mo','MarkerFaceColor',0.85*[1,1,1],'MarkerSize',markersize_big);
end;%if flag_disp;
%%%%%%%%%%%%%%%%;
for npole=floor(n_w_max/3);%for npole=0:n_w_max-1;
%%%%%%%%%%%%%%%%;
% Now we step through each of the templates associated with the point point_output. ;
%%%%%%%%;
if flag_disp;
nc_hsv = max(0,min(n_c_hsv-1,floor(n_c_hsv*(periodize(npole,0,n_w_max/2)/(n_w_max/2))))); %<-- note double winding (i.e., andipodal templates are the same). ;
end;%if flag_disp;
point_pole_k_c_ = point_pole_k_c__(:,1+npole);
if flag_disp;
plot3(point_pole_k_c_(1+0),point_pole_k_c_(1+1),point_pole_k_c_(1+2),'o','MarkerEdgeColor','g','MarkerFaceColor',c_hsv__(1+nc_hsv,:),'MarkerSize',markersize_big);
end;%if flag_disp;
point_pole_k_r01 = sqrt(point_pole_k_c_(1+0).^2 + point_pole_k_c_(1+1).^2);
point_pole_k_r012 = sqrt(point_pole_k_c_(1+0).^2 + point_pole_k_c_(1+1).^2 + point_pole_k_c_(1+2).^2);
point_pole_azimu_b = atan2(point_pole_k_c_(1+1),point_pole_k_c_(1+0));
point_pole_polar_a = atan2(point_pole_k_r01,point_pole_k_c_(1+2));
[ ...
 point_pole_template_k_c_0_w_ ...
,point_pole_template_k_c_1_w_ ...
,point_pole_template_k_c_2_w_ ...
,point_pole_template_azimu_b_w_ ...
,point_pole_template_polar_a_w_ ...
] = ...
get_template_single_ring_k_c_0( ...
 verbose ...
,1 ...
,point_pole_azimu_b ...
,point_pole_polar_a ...
,n_w_max ...
);
if flag_disp;
plot3( ...
 point_pole_template_k_c_0_w_ ...
,point_pole_template_k_c_1_w_ ...
,point_pole_template_k_c_2_w_ ...
,'go','MarkerFaceColor',0.95*[1,1,1],'MarkerSize',markersize_sml);
end;%if flag_disp;
%%%%%%%%%%%%%%%%;
end;%for npole=0:n_w_max-1;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
% Here we determine the predilated template that is associated with the original template mapped to point_output. ;
%%%%%%%%;
tmp_f_error = @(point_pole_predilated_azimu_b) abs(f_dilation(point_pole_predilated_azimu_b) - point_pole_azimu_b).^2;
point_pole_predilated_azimu_b = fminsearch(tmp_f_error,point_pole_azimu_b);
tmp_point_pole_azimu_b = point_pole_predilated_azimu_b + equa_band_dilated_amplitude*sin(2*point_pole_predilated_azimu_b);
if (verbose>0); disp(sprintf(' %% npole %d/%d, fnorm(point_pole_azimu_b-tmp_point_pole_azimu_b): %0.16f',npole,n_w_max,fnorm(point_pole_azimu_b-tmp_point_pole_azimu_b))); end;
point_pole_predilated_polar_a = point_pole_polar_a;
point_pole_predilated_k_c_ = [ ...
  cos(point_pole_predilated_azimu_b)*sin(point_pole_predilated_polar_a) ...
; sin(point_pole_predilated_azimu_b)*sin(point_pole_predilated_polar_a) ...
; cos(point_pole_predilated_polar_a) ...
];
if flag_disp;
plot3(point_pole_predilated_k_c_(1+0),point_pole_predilated_k_c_(1+1),point_pole_predilated_k_c_(1+2),'o','MarkerEdgeColor','c','MarkerFaceColor',c_hsv__(1+nc_hsv,:),'MarkerSize',markersize_sml);
end;%if flag_disp;
[ ...
 point_pole_predilated_template_k_c_0_w_ ...
,point_pole_predilated_template_k_c_1_w_ ...
,point_pole_predilated_template_k_c_2_w_ ...
,point_pole_predilated_template_azimu_b_w_ ...
,point_pole_predilated_template_polar_a_w_ ...
] = ...
get_template_single_ring_k_c_0( ...
 verbose ...
,1 ...
,point_pole_predilated_azimu_b ...
,point_pole_predilated_polar_a ...
,n_w_max ...
);
if flag_disp;
plot3( ...
 point_pole_predilated_template_k_c_0_w_ ...
,point_pole_predilated_template_k_c_1_w_ ...
,point_pole_predilated_template_k_c_2_w_ ...
,'co','MarkerFaceColor',0.95*[1,1,1],'MarkerSize',markersize_sml);
end;%if flag_disp;
%%%%%%%%;
point_pole_template_gamma0_k_c_ = [...
 +cos(point_pole_azimu_b)*cos(point_pole_polar_a) ...
;+sin(point_pole_azimu_b)*cos(point_pole_polar_a) ...
;-sin(point_pole_polar_a) ...
];
if flag_disp;
plot3( ...
 point_pole_template_gamma0_k_c_(1) ...
,point_pole_template_gamma0_k_c_(2) ...
,point_pole_template_gamma0_k_c_(3) ...
,'ko','MarkerFaceColor',0.95*[1,1,1],'MarkerSize',markersize_big);
end;%if flag_disp;
point_pole_template_sgx_k_c_ = cross(point_pole_template_gamma0_k_c_,point_output_k_c_);
point_pole_template_sgx = dot(point_pole_template_sgx_k_c_,point_pole_k_c_);
point_pole_template_cgx = dot(point_pole_template_gamma0_k_c_,point_output_k_c_);
point_pole_gx = atan2(point_pole_template_sgx,point_pole_template_cgx);
point_pole_template_gammax_k_c_ = [...
 +cos(point_pole_azimu_b)*cos(point_pole_polar_a)*cos(point_pole_gx) - sin(point_pole_azimu_b)*sin(point_pole_gx) ...
;+sin(point_pole_azimu_b)*cos(point_pole_polar_a)*cos(point_pole_gx) + cos(point_pole_azimu_b)*sin(point_pole_gx) ...
;-sin(point_pole_polar_a)*cos(point_pole_gx) ...
];
if flag_disp;
plot3( ...
 point_pole_template_gammax_k_c_(1) ...
,point_pole_template_gammax_k_c_(2) ...
,point_pole_template_gammax_k_c_(3) ...
,'ro','MarkerFaceColor',0.95*[1,1,1],'MarkerSize',markersize_big);
end;%if flag_disp;
% fnorm(point_pole_template_gammax_k_c_ - point_output_k_c_),; %<-- should be 0. ;
point_pole_template_gammax_k_r01 = sqrt(point_pole_template_gammax_k_c_(1+0).^2 + point_pole_template_gammax_k_c_(1+1).^2);
% fnorm((cos(point_pole_polar_a)*cos(point_pole_gx))^2 + (sin(point_pole_gx))^2 - point_pole_template_gammax_k_r01^2),; %<-- should be 0. ;
point_pole_template_gammax_k_r012 = sqrt(point_pole_template_gammax_k_c_(1+0).^2 + point_pole_template_gammax_k_c_(1+1).^2 + point_pole_template_gammax_k_c_(1+2).^2);
point_pole_template_gammax_azimu_b = atan2(point_pole_template_gammax_k_c_(1+1),point_pole_template_gammax_k_c_(1+0));
point_pole_template_gammax_polar_a = atan2(point_pole_template_gammax_k_r01,point_pole_template_gammax_k_c_(1+2));
%%%%%%%%;
% Now we determine the gamma_z (denoted gammax) within predilated template that maps to point_output. ;
%%%%%%%%;
point_pole_predilated_template_gammax_k_c_ = [ ...
 +cos(point_pole_predilated_azimu_b)*cos(point_pole_predilated_polar_a)*cos(point_pole_gx) - sin(point_pole_predilated_azimu_b)*sin(point_pole_gx) ...
;+sin(point_pole_predilated_azimu_b)*cos(point_pole_predilated_polar_a)*cos(point_pole_gx) + cos(point_pole_predilated_azimu_b)*sin(point_pole_gx) ...
;-sin(point_pole_predilated_polar_a)*cos(point_pole_gx) ...
];
if flag_disp;
plot3( ...
 point_pole_predilated_template_gammax_k_c_(1) ...
,point_pole_predilated_template_gammax_k_c_(2) ...
,point_pole_predilated_template_gammax_k_c_(3) ...
,'ro','MarkerFaceColor',0.95*[1,1,1],'MarkerSize',markersize_sml);
end;%if flag_disp;

error('stopping');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% plotting original micrograph Q_x_u_pack_ in test_pm_clathrin_6.m ;
%%%%%%%%;
tmp_Q_x_u_pack_ = Q_x_u_pack_;
tmp_p = prctile(tmp_Q_x_u_pack_,100,'all');
tmp_q = prctile(tmp_Q_x_u_pack_,  0,'all');
n_p = 10;
for np=0:n_p-1;
tmp_index = round(size(Q_x_u_pack_,1)*np/n_p);
tmp_Q_x_u_pack_(1+tmp_index,:) = tmp_q;
tmp_Q_x_u_pack_(:,1+tmp_index) = tmp_q;
end;%for np=0:n_p-1;
tmp_Q_x_u_pack_(min(R_sub_ij_0_),R_sub_ij_1_) = tmp_p;
tmp_Q_x_u_pack_(max(R_sub_ij_0_),R_sub_ij_1_) = tmp_p;
tmp_Q_x_u_pack_(R_sub_ij_0_,min(R_sub_ij_1_)) = tmp_p;
tmp_Q_x_u_pack_(R_sub_ij_0_,max(R_sub_ij_1_)) = tmp_p;
fname_fig = sprintf('%s_jpg/Q_sub_x_u_pack_FIGA',dir_pm);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
figure(1+nf);nf=nf+1;clf;figbig;colormap('gray');
subplot(1,2,1); imagesc(tmp_Q_x_u_pack_); axis image; axisnotick; title('Q','Interpreter','none');
subplot(1,2,2); imagesc(Q_sub_x_u_pack_); axis image; axisnotick; title('Q_sub','Interpreter','none');
sgtitle(fname_fig,'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
%close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s found, not creating',fname_fig));
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));

%%%%%%%%;
% experimenting with str_shape. ;
%%%%%%%%;

%%%%%%%%;
% Sum of gaussians. ;
%%%%%%%%;
%n_source_gaussian = 128;
tmp_prefactor = 1.000;
tmp_sigma_x_c = 0.025;
tmp_sigma_k_p = 1/tmp_sigma_x_c;
%%%%;
if strcmp(str_shape,'');
tmp_delta_2s__ = 1.25/sqrt(2) ...
  *[ ...
   cos(linspace(0,2*pi,1+n_source_gaussian)) ...
 ; sin(linspace(0,2*pi,1+n_source_gaussian)) ...
   ];
tmp_prefactor_ = reshape(sqrt(sum(diff(tmp_delta_2s__,1,2).^2,1)),[n_source_gaussian,1]);
tmp_delta_2s__ = tmp_delta_2s__(:,1:n_source_gaussian);
tmp_sigma_x_c_ = tmp_sigma_x_c*ones(n_source_gaussian,1);
end;%if strcmp(str_shape,'');
%%%%;
if strcmp(str_shape,'C2');
tmp_delta_2s__ = 1.25/sqrt(2) ...
  *[ ...
   cos(1*linspace(0,2*pi,1+n_source_gaussian)) ...
 ; sin(2*linspace(0,2*pi,1+n_source_gaussian)) ...
   ];
tmp_prefactor_ = reshape(sqrt(sum(diff(tmp_delta_2s__,1,2).^2,1)),[n_source_gaussian,1]);
tmp_delta_2s__ = tmp_delta_2s__(:,1:n_source_gaussian);
tmp_sigma_x_c_ = tmp_sigma_x_c*ones(n_source_gaussian,1);
tmp_delta_2s__ = [ tmp_delta_2s__ , [+0.6;+0.45] , [-0.6;-0.45] ];
tmp_sigma_x_c_ = [tmp_sigma_x_c_;0.25;0.25];
tmp_prefactor_ = [tmp_prefactor_;sum(tmp_prefactor_)/2;sum(tmp_prefactor_)/2];
n_source_gaussian = n_source_gaussian + 2;
end;%if strcmp(str_shape,'C2');
%%%%;
if strcmp(str_shape,'C4');
tmp_delta_2s__ = 1.25/sqrt(2) ...
  *[ ...
   cos(1*linspace(0,2*pi,1+n_source_gaussian)) ...
 ; sin(2*linspace(0,2*pi,1+n_source_gaussian)) ...
   ];
tmp_prefactor_ = reshape(sqrt(sum(diff(tmp_delta_2s__,1,2).^2,1)),[n_source_gaussian,1]);
tmp_delta_2s__ = tmp_delta_2s__(:,1:n_source_gaussian);
tmp_sigma_x_c_ = tmp_sigma_x_c*ones(n_source_gaussian,1);
tmp_R__ = [0,-1;+1,0];
tmp_delta_2s__ = [tmp_delta_2s__ , tmp_R__*tmp_delta_2s__];
tmp_prefactor_ = [tmp_prefactor_;tmp_prefactor_];
tmp_sigma_x_c_ = [tmp_sigma_x_c_;tmp_sigma_x_c_];
n_source_gaussian = n_source_gaussian + n_source_gaussian;
tmp_delta_2s__ = [ tmp_delta_2s__ , [+0.6;+0.45] , [+0.45;-0.6] , [-0.6;-0.45] , [-0.45;+0.6] ];
tmp_sigma_x_c_ = [tmp_sigma_x_c_;0.125;0.125;0.125;0.125];
tmp_prefactor_ = [tmp_prefactor_;sum(tmp_prefactor_)/4;sum(tmp_prefactor_)/4;sum(tmp_prefactor_)/4;sum(tmp_prefactor_)/4];
n_source_gaussian = n_source_gaussian + 4;
end;%if strcmp(str_shape,'C4');
%%%%;
tmp_N_x_c_ = zeros(n_x_c,n_x_c);
for nsource_gaussian=0:n_source_gaussian-1;
tmp_delta_ = tmp_delta_2s__(:,1+nsource_gaussian);
tmp_sigma_x_c = tmp_sigma_x_c_(1+nsource_gaussian);
tmp_prefactor = tmp_prefactor_(1+nsource_gaussian);
tmp_M_x_c_ = tmp_prefactor * 1/(sqrt(2*pi)*tmp_sigma_x_c)^2 * exp( -( (x_c_0_01__-tmp_delta_(1+0)).^2 + (x_c_1_01__-tmp_delta_(1+1)).^2 ) / (2*tmp_sigma_x_c^2) );
tmp_N_x_c_ = tmp_N_x_c_ + tmp_M_x_c_;
clear tmp_delta_;
end;%for nsource_gaussian=0:n_source_gaussian-1;
tmp_N_x_c_l2 = sum(tmp_N_x_c_.^2,'all')*dx^2;
disp(sprintf(' %% sum(tmp_N_x_c_*dx^2,''all'') = %0.16f',sum(tmp_N_x_c_*dx^2,'all')));
disp(sprintf(' %% tmp_N_x_c_l2 = %0.16f',tmp_N_x_c_l2));
tmp_N_k_p_ = interp_x_c_to_k_p_xxnufft(n_x_c,diameter_x_c,n_x_c,diameter_x_c,tmp_N_x_c_,n_k_p_r,k_p_r_,n_w_)*sqrt(n_x_c^2)*dx^2;
tmp_N_k_p_l2 = sum(abs(tmp_N_k_p_).^2 .* weight_2d_k_all_) * (2*pi)^2;
disp(sprintf(' %% tmp_N_k_p_l2 = %0.16f',tmp_N_k_p_l2));
tmp_N_k_p_form_ = zeros(n_w_sum,1);
for nsource_gaussian=0:n_source_gaussian-1;
tmp_delta_ = tmp_delta_2s__(:,1+nsource_gaussian);
tmp_sigma_x_c = tmp_sigma_x_c_(1+nsource_gaussian);
tmp_prefactor = tmp_prefactor_(1+nsource_gaussian);
tmp_M_k_p_form_ = zeros(n_w_sum,1);
na=0;
for nk_p_r=0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
n_w = n_w_(1+nk_p_r);
for nw=0:n_w-1;
k_x_c_0 = k_p_r*cos(2*pi*nw/n_w);
k_x_c_1 = k_p_r*sin(2*pi*nw/n_w);
tmp_M_k_p_form_(1+na) = tmp_prefactor * exp( -( (2*pi*k_x_c_0).^2 + (2*pi*k_x_c_1).^2 ) / (2/tmp_sigma_x_c^2) ) .* exp( - 2*pi*i*( k_x_c_0*tmp_delta_(1+0) + k_x_c_1*tmp_delta_(1+1) ) );
na=na+1;
end;%for nw=0:n_w-1;
end;%for nk_p_r=0:n_k_p_r-1;
tmp_N_k_p_form_ = tmp_N_k_p_form_ + tmp_M_k_p_form_;
clear tmp_delta_;
end;%for nsource_gaussian=0:n_source_gaussian-1;
%%%%%%%%;
n_x_p_r = n_k_p_r;
x_p_r_ = k_p_r_*x_p_r_max/k_p_r_max;
x_c_0_all_ = k_c_0_all_*x_p_r_max/k_p_r_max;
x_c_1_all_ = k_c_1_all_*x_p_r_max/k_p_r_max;
%%%%%%%%;
tmp_R_x_p_form_ = ...
radon_k_p_to_x_p_xxnufft( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_ ...
,tmp_N_k_p_form_ ...
);
tmp_N_k_p_form_l2 = sum(abs(tmp_N_k_p_form_).^2 .* weight_2d_k_all_) * (2*pi)^2;
disp(sprintf(' %% tmp_N_k_p_form_l2 = %0.16f',tmp_N_k_p_form_l2));
disp(sprintf(' %% tmp_N_k_p_ vs tmp_N_k_p_form: %0.16f',fnorm(tmp_N_k_p_ - tmp_N_k_p_form_)/fnorm(tmp_N_k_p_)));
tmp_N_x_c_reco_ = interp_k_p_to_x_c_xxnufft(n_x_c,diameter_x_c,n_x_c,diameter_x_c,n_k_p_r,k_p_r_,n_w_,tmp_N_k_p_.*weight_2d_k_all_*(2*pi)^2)*sqrt(n_x_c^2) * n_w_sum;
tmp_N_x_c_reco_l2 = sum(abs(tmp_N_x_c_reco_).^2,'all')*dx^2;
disp(sprintf(' %% tmp_N_x_c_reco_l2 = %0.16f',tmp_N_x_c_reco_l2));
disp(sprintf(' %% tmp_N_x_c_ vs tmp_N_x_c_reco: %0.16f',fnorm(tmp_N_x_c_ - tmp_N_x_c_reco_)/fnorm(tmp_N_x_c_)));
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
subplot(2,2,1);imagesc_c(n_x_c,x_c_0_,n_x_c,x_c_1_,tmp_N_x_c_);axis image;axisnotick;
subplot(2,2,2);imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(tmp_N_k_p_));axis image;axisnotick;
subplot(2,2,3);imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(tmp_N_k_p_form_));axis image;axisnotick;
subplot(2,2,4);imagesc_c(n_x_c,x_c_0_,n_x_c,x_c_1_,real(tmp_N_x_c_reco_));axis image;axisnotick;
error('stopping');
end;%if flag_disp;
%%%%%%%%;

error('stopping');

%%%%%%%%;
% visualize shadowsphere. ;
%%%%%%%%;
gamma_z_ = linspace(0,2*pi,n_w_max+1); gamma_z_ = transpose(gamma_z_(1:n_w_max));
q_ = periodize(transpose(0:n_w_max-1),-n_w_max/2,+n_w_max/2);
%%%%%%%%;
tmp_p_from_q_wq__ = zeros(n_w_max,n_w_max);
for nq=0:n_w_max-1;
tmp_q = q_(1+nq);
tmp_p_from_q_wq__(:,1+nq) = exp(+i*gamma_z_*tmp_q)/sqrt(n_w_max);
end;%for nq=0:n_w_max-1;
tmp_N_k_q_form_ = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,tmp_N_k_p_form_);
tmp_N_k_p_reco_ = reshape(tmp_p_from_q_wq__*reshape(tmp_N_k_q_form_,[n_w_max,n_k_p_r]),[n_w_sum,1]);
disp(sprintf(' %% tmp_N_k_p_form_ vs tmp_N_k_p_reco_: %0.16f',fnorm(tmp_N_k_p_form_-tmp_N_k_p_reco_)/fnorm(tmp_N_k_p_form_)));
%%%%;
tmp_O_k_p_pre_ = tmp_N_k_p_form_;
tmp_O_k_q_pre_ = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,tmp_O_k_p_pre_);
tmp_R_x_p_pre_ = ...
radon_k_p_to_x_p_xxnufft( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_ ...
,tmp_O_k_p_pre_ ...
);
flag_disp=1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_disp;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
N_k_p_form_lim_ = prctile(abs(real(tmp_N_k_p_form_)), 95,'all')*[-1,+1];
N_x_c_reco_lim_ = prctile(abs(real(tmp_N_x_c_reco_)),100,'all')*[-1,+1];
R_x_p_form_lim_ = prctile(abs(real(tmp_R_x_p_form_)), 95,'all')*[-1,+1];
tmp_O_x_c_pre_ = interp_k_p_to_x_c_xxnufft(n_x_c,diameter_x_c,n_x_c,diameter_x_c,n_k_p_r,k_p_r_,n_w_,tmp_O_k_p_pre_.*weight_2d_k_all_*(2*pi)^2)*sqrt(n_x_c^2) * n_w_sum;
figure(1);clf;figbig; strip_width_use = 1/16;
%%%%%%%%%%%%%%%%;
subplot(1,2,1); hold on;
%%%%%%%%;
imagesc_c(n_x_c,x_c_0_,n_x_c,x_c_1_,real(tmp_N_x_c_reco_),N_x_c_reco_lim_);
%%%%%%%%;
n_l = 16;
for nl=flip(0:n_l-1);
tmp_omega = (2*pi)*nl/n_l;
tmp_x_0_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2);
tmp_x_1_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
tmp_parameter = struct('type','parameter');
%tmp_parameter.arrow_head_length = 1.0+2.0*mod(nl,2);
%tmp_parameter.arrow_tail_length = 2.5+1.0*mod(nl,2);
tmp_parameter.arrow_head_length = 2.25+1.0*mod(nl,2);
tmp_parameter.arrow_tail_length = 1.0+2.0*mod(nl,2);
plot_arrow_0(tmp_parameter,[tmp_x_0_offset;tmp_x_1_offset],tmp_omega+pi/2,0.25+0.00*mod(nl,2));
tmp_x_0_offset = sqrt(2.0+1.0*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2); tmp_x_1_offset = sqrt(2.0+1.0*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
imagesc_p_strip_0( ...
 struct('type','parameter','strip_width',strip_width_use,'k_0_offset',tmp_x_0_offset,'k_1_offset',tmp_x_1_offset,'clim_',R_x_p_form_lim_) ...
,n_k_p_r ...
,k_p_r_*x_p_r_max/k_p_r_max ...
,k_p_r_max*x_p_r_max/k_p_r_max ...
,n_w_ ...
,n_w_sum ...
,tmp_R_x_p_pre_ ...
,1 ...
,tmp_omega ...
);
tmp_x_0_offset = (sqrt(2.0+1.0*mod(nl,2))*diameter_x_c + 2*strip_width_use)*cos(tmp_omega+pi/2); tmp_x_1_offset = (sqrt(2.0+1.0*mod(nl,2))*diameter_x_c + 2*strip_width_use)*sin(tmp_omega+pi/2);
imagesc_p_strip_0( ...
 struct('type','parameter','strip_width',strip_width_use,'k_0_offset',tmp_x_0_offset,'k_1_offset',tmp_x_1_offset,'clim_',N_k_p_form_lim_,'c_use__',colormap_80s) ...
,n_k_p_r ...
,k_p_r_*x_p_r_max/k_p_r_max ...
,k_p_r_max*x_p_r_max/k_p_r_max ...
,n_w_ ...
,n_w_sum ...
,tmp_O_k_p_pre_ ...
,1 ...
,tmp_omega ...
);
end;%for nl=flip(0:n_l-1);
%%%%%%%%;
hold off;
xlim([-4,+4]);
ylim([-4,+4]);
axis square;
axisnotick;
%%%%%%%%%%%%%%%%;
subplot(1,2,2); hold on;
%%%%%%%%;
n_l = 16;
for nl=flip(0:n_l-1);
tmp_omega = (2*pi)*nl/n_l;
tmp_x_0_offset = sqrt(1.0+1.0*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2); tmp_x_1_offset = sqrt(1.0+1.0*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
tmp_x_0_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2);
tmp_x_1_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
tmp_parameter = struct('type','parameter');
tmp_parameter.arrow_head_length = 1.0+2.0*mod(nl,2);
tmp_parameter.arrow_tail_length = 2.5+1.0*mod(nl,2);
plot_arrow_0(tmp_parameter,[tmp_x_0_offset;tmp_x_1_offset],tmp_omega+pi/2+pi,0.25+0.00*mod(nl,2));
tmp_x_0_offset = sqrt(2.0+1.0*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2); tmp_x_1_offset = sqrt(2.0+1.0*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
imagesc_p_strip_0( ...
 struct('type','parameter','strip_width',strip_width_use,'k_0_offset',tmp_x_0_offset,'k_1_offset',tmp_x_1_offset,'clim_',R_x_p_form_lim_) ...
,n_k_p_r ...
,k_p_r_*x_p_r_max/k_p_r_max ...
,k_p_r_max*x_p_r_max/k_p_r_max ...
,n_w_ ...
,n_w_sum ...
,tmp_R_x_p_pre_ ...
,1 ...
,tmp_omega ...
);
end;%for nl=flip(0:n_l-1);
imagesc_p_strip_0( ...
 struct('type','parameter','strip_width',strip_width_use/2,'clim_',R_x_p_form_lim_) ...
,n_k_p_r ...
,k_p_r_*x_p_r_max/k_p_r_max ...
,k_p_r_max*x_p_r_max/k_p_r_max ...
,n_w_ ...
,n_w_sum ...
,tmp_R_x_p_pre_ ...
,1+n_l/2 ...
,linspace(-pi/2,+pi/2,1+n_l/2) ...
);
%%%%%%%%;
hold off;
xlim([-4,+4]);
ylim([-4,+4]);
axis square;
axisnotick;
%%%%%%%%%%%%%%%%;
drawnow(); %error('stop');
fname_fig_pre = sprintf('%s/MSA_shape_demonstration_ns%.2d',dir_manuscript_jpg,n_source_gaussian);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if ( flag_replot | ~exist(fname_fig_jpg,'file') );
sgtitle(fname_fig_pre,'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig_pre));
print('-djpeg',fname_fig_jpg);
%close(gcf);
end;%if ( flag_replot | ~exist(fname_fig_jpg,'file') );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_disp;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

error('stopping');

%%%%%%%%;
% try arrows. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figbig;
subplot(1,2,1);
n_l = 16;
for nl=flip(0:n_l-1);
tmp_omega = (2*pi)*nl/n_l;
tmp_x_0_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*cos(tmp_omega+pi/2);
tmp_x_1_offset = sqrt(1.0+0.5*mod(nl,2))*diameter_x_c*sin(tmp_omega+pi/2);
tmp_parameter = struct('type','parameter');
tmp_parameter.arrow_head_length = 1.0;
tmp_parameter.arrow_tail_length = 1.0+2.0*mod(nl,2);
plot_arrow_0(tmp_parameter,[tmp_x_0_offset;tmp_x_1_offset],tmp_omega+pi/2,0.25+0.00*mod(nl,2));
end;%for nl=flip(0:n_l-1);
hold off;
xlim([-4,+4]);
ylim([-4,+4]);
axis square;
axisnotick;
%%%%%%%%;

error('stopping');

%%%%%%%%;
% is max-likelihood with angle-distributions per image convex? ;
%%%%%%%%;
pmxgf = @(a,b,x,m,s) exp( -(a.*x + b - m).^2 ./ (2.*s.^2) ) / sqrt(2*pi) ./ s;
pmgf = @(a,b,xp,xq,p,m,s) p.*pmxgf(a,b,xp,m,s) + (1-p).*pmxgf(a,b,xq,m,s);
pm1m2gf = @(a,b,x1p,x1q,p1,m1,x2p,x2q,p2,m2,s) pmgf(a,b,x1p,x1q,p1,m1,s).*pmgf(a,b,x2p,x2q,p2,m2,s);
pm1m2m3gf = @(a,b,x1p,x1q,p1,m1,x2p,x2q,p2,m2,s) pmgf(a,b,x1p,x1q,p1,m1,s).*pmgf(a,b,x2p,x2q,p2,m2,s);
n_a = 128;
n_b = 128;
a_ = linspace(-5,+5,n_a);
b_ = linspace(-5,+5,n_a);
[a__,b__] = ndgrid(a_,b_);
n_contour = 32;

rseed_ = 48 + (0:48-1); n_rseed = numel(rseed_);
figure(1);clf;figbig;fig80s;
p_row = 6; p_col = ceil(n_rseed/p_row); np=0;
for nrseed=0:n_rseed-1;
rseed = rseed_(1+nrseed);
rng(rseed);
s=1.0;
m1 = 2*rand()-1; m2 = 2*rand()-1; m3 = 2*rand()-1;
x1p = 2*rand()-1; x1q = 2*rand()-1;
x2p = 2*rand()-1; x2q = 2*rand()-1;
x3p = 2*rand()-1; x3q = 2*rand()-1;
p1 = rand(); p2 = rand(); p3 = rand();
pm1m2gf__ = pm1m2gf(a__,b__,x1p,x1q,p1,m1,x2p,x2q,p1,m2,s);
nlpm1m2gf__ = -log(pm1m2gf__);
nlplim_ = prctile(nlpm1m2gf__,linspace(0,50,n_contour),'all');
subplot(p_row,p_col,1+nrseed);
contour(nlpm1m2gf__,nlplim_);
axis image; axisnotick;
drawnow();
end;%for nrseed=0:n_rseed-1;





