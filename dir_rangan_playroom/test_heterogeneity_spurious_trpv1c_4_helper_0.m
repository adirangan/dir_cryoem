%%%%%%%%%%%%%%%%;
rem2_from_R_S_reco_k_p_wkS__ = zeros(n_w_sum,n_S);
rem2_from_R_S_reco_k_q_wkS__ = zeros(n_w_sum,n_S);
%%%%%%%%%%%%%%%%;
if n_R> 0;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
% Now align these R_k_p_ to a_k_Y_norm_rem2_yk_. ;
%%%%%%%%;
R_k_p_wkM__ = R_k_p__;
R_k_q_wkM__ = R_k_q__;
parameter = struct('type','parameter');
parameter.fname_align_a_k_Y_pre = sprintf('%s_mat/test_heterogeneity_spurious_trpv1c_rem2_from_R_R%.4d',dir_pm,n_R);
tmp_fname_mat = sprintf('%s.mat',parameter.fname_align_a_k_Y_pre);
if flag_realign &  exist(tmp_fname_mat,'file'); delete(tmp_fname_mat); end;
parameter.n_iteration = 4;
tmp_n_cluster = 1; %<-- just use the first cluster. ;
tmp_index_ncluster_from_nCTF_ = 0;
tmp_n_CTF = 1;
tmp_index_nCTF_from_nM_ = zeros(n_R,1);
tmp_CTF_k_p_r_kC__ = CTF_k_p_r_kC__(:,1+0); %<-- just use the first cluster. ;
tmp_t = tic();
[ ...
 parameter ...
,rem2_from_R_a_k_Y_reco_yki__ ...
,rem2_from_R_corr_a_k_Y_i_ ...
,rem2_from_R_euler_polar_a_Mi__ ...
,rem2_from_R_euler_azimu_b_Mi__ ...
,rem2_from_R_euler_gamma_z_Mi__ ...
,rem2_from_R_image_delta_x_acc_Mi__ ...
,rem2_from_R_image_delta_y_acc_Mi__ ...
,rem2_from_R_image_delta_x_upd_Mi__ ...
,rem2_from_R_image_delta_y_upd_Mi__ ...
,rem2_from_R_flag_image_delta_upd_Mi__ ...
,rem2_from_R_image_I_value_Mi__ ...
,rem2_from_R_image_X_value_Mi__ ...
,rem2_from_R_image_S_index_Mi__ ...
,rem2_from_R_n_S ...
,rem2_from_R_template_viewing_azimu_b_all_ ...
,rem2_from_R_template_viewing_polar_a_all_ ...
,rem2_from_R_X_SMi___ ...
,rem2_from_R_delta_x_SMi___ ...
,rem2_from_R_delta_y_SMi___ ...
,rem2_from_R_gamma_z_SMi___ ...
,rem2_from_R_I_value_SMi___ ...
] = ...
pm_align_M_k_p_to_a_k_Y_3( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_ ...
,n_R ...
,R_k_p_wkM__(:,1:n_R) ...
,tmp_n_cluster ...
,tmp_index_ncluster_from_nCTF_ ...
,tmp_n_CTF ...
,tmp_index_nCTF_from_nM_(1:n_R) ...
,tmp_CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_norm_rem2_yk_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% pm_align_M_k_p_to_a_k_Y_3: %0.3fs',tmp_t)); end;
%%%%%%%%;
flag_disp=1;
if flag_disp;
fname_fig_pre = sprintf('%s_jpg/test_heterogeneity_spurious_trpv1c_rem2_from_R_R%.4d_FIGA',dir_pm,n_R);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
fname_fig_stripped_jpg = sprintf('%s_stripped.jpg',fname_fig_pre);
fname_fig_stripped_eps = sprintf('%s_stripped.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_fig_jpg)); end;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 2; p_col = ceil(parameter.n_iteration/p_row); np=0;
%%%%;
rem2_from_R_a_x_u_reco_ixxx__ = cell(parameter.n_iteration,1);
for niteration=0:parameter.n_iteration-1;
tmp_t = tic();
[ ... 
  rem2_from_R_a_x_u_reco_ixxx__{1+niteration} ...
] = ...
convert_spharm_to_x_c_4( ...
 k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,rem2_from_R_a_k_Y_reco_yki__(:,1+niteration) ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% a_x_u_norm_refi_xxx_ time %0.2fs',tmp_t)); end;
subplot(p_row,p_col,1+niteration); isosurface_f_x_u_1([],rem2_from_R_a_x_u_reco_ixxx__{1+niteration});
title(sprintf('niteration %d',niteration),'Interpreter','none');
end;%for niteration=0:parameter.n_iteration-1;
%%%%;
print('-djpeg',fname_fig_stripped_jpg);
%print('-depsc',fname_fig_stripped_eps);
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
%print('-depsc',fname_fig_eps);
end;%if (flag_replot | ~exist(fname_fig_jpg,'file'));
%%%%;
close(gcf);
end;%if flag_disp;
%%%%%%%%;
% Now generate templates associated with rem2_from_R_a_k_Y_reco_yk__. ;
%%%%%%%%;
[~,ij_use] = max(real(rem2_from_R_corr_a_k_Y_i_)); niteration_use = ij_use-1;
rem2_from_R_a_k_Y_reco_yk__ = zeros(n_lm_max,n_k_p_r);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
rem2_from_R_a_k_Y_reco_yk__(1:n_lm_(1+nk_p_r),1+nk_p_r) = rem2_from_R_a_k_Y_reco_yki__(1+tmp_index_,1+niteration_use);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
template_k_eq_d = -1;
viewing_k_eq_d = 1.0; %<-- subsample just a few templates for visualization. ;
tmp_t = tic();
[ ...
 rem2_from_R_S_reco_k_p_wkS__ ...
] = ...
pm_template_2( ...
 verbose ...
,l_max_max ...
,n_k_p_r ...
,reshape(rem2_from_R_a_k_Y_reco_yk__,[n_lm_max,n_k_p_r]) ...
,viewing_k_eq_d/k_p_r_max ...
,template_k_eq_d ...
,n_w_max ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% pm_template_2: %0.6fs',tmp_t)); end;
rem2_from_R_S_reco_k_p_wkS__ = reshape(rem2_from_R_S_reco_k_p_wkS__,[n_w_max*n_k_p_r,n_S]);
%%%%;
clear rem2_from_R_a_k_Y_reco_yki__ ;
clear rem2_from_R_corr_a_k_Y_i_ ;
clear rem2_from_R_euler_polar_a_Mi__ ;
clear rem2_from_R_euler_azimu_b_Mi__ ;
clear rem2_from_R_euler_gamma_z_Mi__ ;
clear rem2_from_R_image_delta_x_acc_Mi__ ;
clear rem2_from_R_image_delta_y_acc_Mi__ ;
clear rem2_from_R_image_delta_x_upd_Mi__ ;
clear rem2_from_R_image_delta_y_upd_Mi__ ;
clear rem2_from_R_flag_image_delta_upd_Mi__ ;
clear rem2_from_R_image_I_value_Mi__ ;
clear rem2_from_R_image_X_value_Mi__ ;
clear rem2_from_R_image_S_index_Mi__ ;
clear rem2_from_R_n_S ;
clear rem2_from_R_template_viewing_azimu_b_all_ ;
clear rem2_from_R_template_viewing_polar_a_all_ ;
clear rem2_from_R_X_SMi___ ;
clear rem2_from_R_delta_x_SMi___ ;
clear rem2_from_R_delta_y_SMi___ ;
clear rem2_from_R_gamma_z_SMi___ ;
clear rem2_from_R_I_value_SMi___ ;
%%%%;
%clear rem2_from_R_a_x_u_reco_ixxx__ ; %<-- use later for garbage-can. ;
%clear rem2_from_R_a_k_Y_reco_yk__ ; %<-- use later for garbage-can. ;
rem2_from_R_S_reco_k_q_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
rem2_from_R_S_reco_k_q_wkS__(:,1+nS) = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,rem2_from_R_S_reco_k_p_wkS__(:,1+nS));
end;%for nS=0:n_S-1;
%%%%%%%%%%%%%%%%;
end;% if n_R> 0;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
% Now build rem3. ;
%%%%%%%%;
ca3_theta = pi/2-pi/14; %<-- restrictive polar-cap used for rem2. ;
tmp_template_polar_a_wkS__ = min(1,min(template_polar_a_wkS__,pi-template_polar_a_wkS__)/max(1e-12,ca3_theta));
g_ca3_wkS__ = 1-sin((pi/2)*tmp_template_polar_a_wkS__).^4;
S_amp3_k_p_wkS__ = S_k_p_wkS__;
ind_0in_wkS__ = (abs(template_polar_a_wkS__-pi/2)<=pi/2-ca3_theta); %<-- near equator. ;
ind_out_wkS__ = (abs(template_polar_a_wkS__-pi/2)> pi/2-ca3_theta); %<-- near polar cap. ;
S_ca3_avg = real(mean(S_k_p_wkS__(find(ind_out_wkS__)))); %<-- average of (unused) polar cap values. ;
%S_amp3_k_p_wkS__ = S_amp3_k_p_wkS__.*ind_0in_wkS__ ....
  + ( rem2_from_R_S_reco_k_p_wkS__.*g_ca3_wkS__ + S_amp3_k_p_wkS__.*(1-g_ca3_wkS__) ).*ind_out_wkS__ ...
  ; %<-- modify the poles smoothly. ;
S_amp3_k_p_wkS__ = S_amp3_k_p_wkS__.*ind_0in_wkS__ + rem2_from_R_S_reco_k_p_wkS__.*ind_out_wkS__ ; %<-- modify the poles abruptly. ;
%%%%%%%%;
% Now we can actually use all the templates in S_amp3_k_p_wkS__, since we have set the polar data to be consistent. ;
%%%%%%%%;
flag_disp=0; if flag_disp; plot(viewing_polar_a_all_(tmp_nllr_sort_ij_rem_),'.'); end;
%%%%%%%%;
tmp_t = tic();
tmp_n_order = 5;
a_k_Y_norm_rem3_yk_ = ...
cg_lsq_6( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_S ...
,S_amp3_k_p_wkS__ ...
,[] ...
,[] ...
,viewing_polar_a_all_ ...
,viewing_azimu_b_all_ ...
,zeros(n_S,1) ...
,[] ...
,[] ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% a_k_Y_norm_rem3_yk_ time %0.2fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ... 
  a_x_u_norm_rem3_xxx_ ...
] = ...
convert_spharm_to_x_c_4( ...
 k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_norm_rem3_yk_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% a_x_u_norm_rem3_xxx_ time %0.2fs',tmp_t)); end;
%%%%%%%%;
flag_disp=1;
if flag_disp;
fname_fig_pre = sprintf('%s_jpg/test_heterogeneity_spurious_trpv1c_reco_rem2_rem3_R%.4d_FIGB',dir_pm,n_R);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
fname_fig_stripped_jpg = sprintf('%s_stripped.jpg',fname_fig_pre);
fname_fig_stripped_eps = sprintf('%s_stripped.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_fig_jpg)); end;
%%%%;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,3,1);isosurface_f_x_u_1([],a_x_u_norm_reco_xxx_);
subplot(1,3,2);isosurface_f_x_u_1([],a_x_u_norm_rem2_xxx_);
subplot(1,3,3);isosurface_f_x_u_1([],a_x_u_norm_rem3_xxx_);
%%%%;
print('-djpeg',fname_fig_stripped_jpg);
%print('-depsc',fname_fig_stripped_eps);
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
%print('-depsc',fname_fig_eps);
end;%if (flag_replot | ~exist(fname_fig_jpg,'file'));
%%%%;
close(gcf);
end;%if flag_disp;
%%%%;
if flag_disp;
fname_fig_pre = sprintf('%s_jpg/test_heterogeneity_spurious_trpv1c_rem3_R%.4d_FIGB',dir_pm,n_R);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
fname_fig_stripped_jpg = sprintf('%s_stripped.jpg',fname_fig_pre);
fname_fig_stripped_eps = sprintf('%s_stripped.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_fig_jpg)); end;
%%%%;
figure(1+nf);nf=nf+1;clf;figsml;
subplot(1,1,1);isosurface_f_x_u_1([],a_x_u_norm_rem3_xxx_);
%%%%;
print('-djpeg',fname_fig_stripped_jpg);
%print('-depsc',fname_fig_stripped_eps);
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
%print('-depsc',fname_fig_eps);
end;%if (flag_replot | ~exist(fname_fig_jpg,'file'));
%%%%;
close(gcf);
end;%if flag_disp;
%%%%%%%%;
% Now generate all templates from rem3. ;
%%%%%%%%;
a_k_Y_norm_rem3_yk__ = zeros(n_lm_max,n_k_p_r);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
a_k_Y_norm_rem3_yk__(1:n_lm_(1+nk_p_r),1+nk_p_r) = a_k_Y_norm_rem3_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
template_k_eq_d = -1;
viewing_k_eq_d = 1.0; %<-- subsample just a few templates for visualization. ;
tmp_t = tic();
[ ...
 S_rem3_k_p_wkS__ ...
,~ ...
,n_S ...
,template_viewing_azimu_b_all_ ...
,template_viewing_polar_a_all_ ...
] = ...
pm_template_2( ...
 verbose ...
,l_max_max ...
,n_k_p_r ...
,reshape(a_k_Y_norm_rem3_yk__,[n_lm_max,n_k_p_r]) ...
,viewing_k_eq_d/k_p_r_max ...
,template_k_eq_d ...
,n_w_max ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% pm_template_2: %0.6fs',tmp_t)); end;
S_rem3_k_p_wkS__ = reshape(S_rem3_k_p_wkS__,[n_w_max*n_k_p_r,n_S]);
S_rem3_k_q_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
S_rem3_k_q_wkS__(:,1+nS) = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,S_rem3_k_p_wkS__(:,1+nS));
end;%for nS=0:n_S-1;
%%%%%%%%;
%%%%%%%%%%%%%%%%;
% Now calculate the bayesian likelihood associated with true, half, rem2 and rem3, as applied to the 'expanded' set of images. ;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
% First estimate distances between templates and images. ;
%%%%%%%%;
ncluster = 0; %<-- pick one of the CTF clusters. ;
UX_kn__ = UX_knc___(:,:,1+ncluster);
n_UX_rank = n_k_p_r-1; %<-- just to check dimensions. ;
CTF_k_p_r_xavg_k_ = CTF_k_p_r_xavg_kc__(:,1+ncluster);
T_k_p_wkS__ = reshape(bsxfun(@times,reshape(S_k_p_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_k_q_wkS__ = reshape(bsxfun(@times,reshape(S_k_q_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_garb_k_p_wkS__ = reshape(bsxfun(@times,reshape(rem2_from_R_S_reco_k_p_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_garb_k_q_wkS__ = reshape(bsxfun(@times,reshape(rem2_from_R_S_reco_k_q_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_half_k_p_wkS__ = reshape(bsxfun(@times,reshape(S_half_k_p_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_half_k_q_wkS__ = reshape(bsxfun(@times,reshape(S_half_k_q_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_rem2_k_p_wkS__ = reshape(bsxfun(@times,reshape(S_rem2_k_p_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_rem2_k_q_wkS__ = reshape(bsxfun(@times,reshape(S_rem2_k_q_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_rem3_k_p_wkS__ = reshape(bsxfun(@times,reshape(S_rem3_k_p_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
T_rem3_k_q_wkS__ = reshape(bsxfun(@times,reshape(S_rem3_k_q_wkS__,[n_w_max,n_k_p_r,n_S]),reshape(CTF_k_p_r_xavg_k_,[1,n_k_p_r,1])),[n_w_sum,n_S]);
tmp_t = tic();
svd_VUXT_lwnS____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_S,T_k_q_wkS__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXT_lwnS____: %0.3fs',tmp_t)); end;
tmp_t = tic();
svd_VUXT_garb_lwnS____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_S,T_garb_k_q_wkS__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXT_garb_lwnS____: %0.3fs',tmp_t)); end;
tmp_t = tic();
svd_VUXT_half_lwnS____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_S,T_half_k_q_wkS__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXT_half_lwnS____: %0.3fs',tmp_t)); end;
tmp_t = tic();
svd_VUXT_rem2_lwnS____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_S,T_rem2_k_q_wkS__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXT_rem2_lwnS____: %0.3fs',tmp_t)); end;
tmp_t = tic();
svd_VUXT_rem3_lwnS____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_S,T_rem3_k_q_wkS__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXT_rem3_lwnS____: %0.3fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[UX_T_k_q_wnS___,UX_T_k_p_wnS___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_S,svd_VUXT_lwnS____,zeros(n_S,1),zeros(n_S,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_T_k_q_wnS___: %0.6fs',tmp_t)); end;
UX_T_k_p_wnS__ = reshape(UX_T_k_p_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
UX_T_k_q_wnS__ = reshape(UX_T_k_q_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
%%%%%%%%;
tmp_t = tic();
[UX_T_garb_k_q_wnS___,UX_T_garb_k_p_wnS___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_S,svd_VUXT_garb_lwnS____,zeros(n_S,1),zeros(n_S,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_T_garb_k_q_wnS___: %0.6fs',tmp_t)); end;
UX_T_garb_k_p_wnS__ = reshape(UX_T_garb_k_p_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
UX_T_garb_k_q_wnS__ = reshape(UX_T_garb_k_q_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
%%%%%%%%;
tmp_t = tic();
[UX_T_half_k_q_wnS___,UX_T_half_k_p_wnS___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_S,svd_VUXT_half_lwnS____,zeros(n_S,1),zeros(n_S,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_T_half_k_q_wnS___: %0.6fs',tmp_t)); end;
UX_T_half_k_p_wnS__ = reshape(UX_T_half_k_p_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
UX_T_half_k_q_wnS__ = reshape(UX_T_half_k_q_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
%%%%%%%%;
tmp_t = tic();
[UX_T_rem2_k_q_wnS___,UX_T_rem2_k_p_wnS___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_S,svd_VUXT_rem2_lwnS____,zeros(n_S,1),zeros(n_S,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_T_rem2_k_q_wnS___: %0.6fs',tmp_t)); end;
UX_T_rem2_k_p_wnS__ = reshape(UX_T_rem2_k_p_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
UX_T_rem2_k_q_wnS__ = reshape(UX_T_rem2_k_q_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
%%%%%%%%;
tmp_t = tic();
[UX_T_rem3_k_q_wnS___,UX_T_rem3_k_p_wnS___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_S,svd_VUXT_rem3_lwnS____,zeros(n_S,1),zeros(n_S,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_T_rem3_k_q_wnS___: %0.6fs',tmp_t)); end;
UX_T_rem3_k_p_wnS__ = reshape(UX_T_rem3_k_p_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
UX_T_rem3_k_q_wnS__ = reshape(UX_T_rem3_k_q_wnS___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_S]);
%%%%%%%%;
% Now calculate norms of the templates. ;
%%%%%%%%;
tmp_TT_S_ = zeros(n_S,1);
tmp_garb_TT_S_ = zeros(n_S,1);
tmp_half_TT_S_ = zeros(n_S,1);
tmp_rem2_TT_S_ = zeros(n_S,1);
tmp_rem3_TT_S_ = zeros(n_S,1);
for nS=0:n_S-1;
tmp_TT = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,T_k_p_wkS__(:,1+nS),T_k_p_wkS__(:,1+nS))/(2*pi);
tmp_TT_S_(1+nS) = tmp_TT;
tmp_garb_TT = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,T_garb_k_p_wkS__(:,1+nS),T_garb_k_p_wkS__(:,1+nS))/(2*pi);
tmp_garb_TT_S_(1+nS) = tmp_garb_TT;
tmp_half_TT = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,T_half_k_p_wkS__(:,1+nS),T_half_k_p_wkS__(:,1+nS))/(2*pi);
tmp_half_TT_S_(1+nS) = tmp_half_TT;
tmp_rem2_TT = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,T_rem2_k_p_wkS__(:,1+nS),T_rem2_k_p_wkS__(:,1+nS))/(2*pi);
tmp_rem2_TT_S_(1+nS) = tmp_rem2_TT;
tmp_rem3_TT = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,T_rem3_k_p_wkS__(:,1+nS),T_rem3_k_p_wkS__(:,1+nS))/(2*pi);
tmp_rem3_TT_S_(1+nS) = tmp_rem3_TT;
end;%for nS=0:n_S-1;
UX_T_l2_S_ = tmp_TT_S_;
UX_T_garb_l2_S_ = tmp_garb_TT_S_;
UX_T_half_l2_S_ = tmp_half_TT_S_;
UX_T_rem2_l2_S_ = tmp_rem2_TT_S_;
UX_T_rem3_l2_S_ = tmp_rem3_TT_S_;
%%%%%%%%;
% Now generate svd_VUXM2_lwnM2____. ;
%%%%%%%%;
tmp_t = tic();
svd_VUXM2_lwnM2____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_M2,M2_k_q__,n_UX_rank,UX_kn__,sqrt(weight_2d_k_p_r_));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXM2_lwnM2____: %0.3fs',tmp_t)); end;
%%%%%%%%;
% Now calculate norms of the images. ;
%%%%%%%%;
tmp_t = tic();
UX_M2_l2_dM2__ = ampmh_UX_M_l2_dM__1(FTK,n_w_,n_M2,n_UX_rank,svd_VUXM2_lwnM2____);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_M2_l2_dM2__: %0.3fs',tmp_t)); end;
if (verbose); disp(sprintf(' %% average l2-norm of images: %0.16f',mean(UX_M2_l2_dM2__(:))/(pi*k_p_r_max^2))); end;
tmp_M2M2_M2_ = zeros(n_M2,1);
for nM2=0:n_M2-1;
tmp_M2M2 = innerproduct_p_quad(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_w_sum,M2_k_p__(:,1+nM2),M2_k_p__(:,1+nM2))/(2*pi);
tmp_M2M2_M2_(1+nM2) = tmp_M2M2;
end;%for nM2=0:n_M2-1;
tmp_index = efind((FTK.delta_x_.^2 + FTK.delta_y_.^2)<1e-6);
UX_M2_l2_M2_ = transpose(UX_M2_l2_dM2__(1+tmp_index,:));
if (verbose); disp(sprintf(' %% tmp_M2M2_M2_ vs UX_M2_l2_M2_: %0.16f',fnorm(tmp_M2M2_M2_ - UX_M2_l2_M2_)/fnorm(tmp_M2M2_M2_))); end;
flag_plot=0;
if flag_plot;
tmp_index = efind((FTK.delta_x_.^2 + FTK.delta_y_.^2)<1e-6);
subplot(1,2,1); hold on; 
plot(0:n_M2-1,UX_M2_l2_M2_/(pi*k_p_r_max^2),'rx'); xlabel('nM2'); ylabel('l2');
plot(0:n_M2-1,tmp_M2M2_M2_/(pi*k_p_r_max^2),'bo'); xlabel('nM2'); ylabel('l2');
hold off;
subplot(1,2,2); plot(UX_M2_l2_M2_/(pi*k_p_r_max^2),tmp_M2M2_M2_/(pi*k_p_r_max^2),'g.'); xlabel('l2_A'); ylabel('l2_B');
end;%if flag_plot;
%%%%%%%%;
tmp_t = tic();
[UX_M2_k_q_wnM2___,UX_M2_k_p_wnM2___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,n_UX_rank,n_M2,svd_VUXM2_lwnM2____,zeros(n_M2,1),zeros(n_M2,1));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_M2_k_q_wnM2___: %0.6fs',tmp_t)); end;
UX_M2_k_p_wnM2__ = reshape(UX_M2_k_p_wnM2___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_M2]);
UX_M2_k_q_wnM2__ = reshape(UX_M2_k_q_wnM2___(:,1:n_UX_rank,:),[n_w_max*n_UX_rank,n_M2]);
%%%%%%%%;
% Calculate ampmh_X_wSM2___8. ;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_optimize_over_gamma_z = 1;
parameter.flag_compute_I_value = 0;
parameter.tolerance_master = tolerance_master;
parameter.pm_n_UX_rank_use = n_UX_rank;
tmp_t = tic();
[ ...
 parameter ...
,X_TM2__ ...
,delta_x_TM2__ ...
,delta_y_TM2__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,n_UX_rank ...
,n_S ...
,UX_T_k_q_wnS__ ...
,UX_T_l2_S_ ...
,n_M2 ...
,svd_VUXM2_lwnM2____ ...
,UX_M2_l2_dM2__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% X_TM2__: %0.3fs',tmp_t)); end;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_optimize_over_gamma_z = 1;
parameter.flag_compute_I_value = 0;
parameter.tolerance_master = tolerance_master;
parameter.pm_n_UX_rank_use = n_UX_rank;
tmp_t = tic();
[ ...
 parameter ...
,X_garb_TM2__ ...
,delta_x_garb_TM2__ ...
,delta_y_garb_TM2__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,n_UX_rank ...
,n_S ...
,UX_T_garb_k_q_wnS__ ...
,UX_T_garb_l2_S_ ...
,n_M2 ...
,svd_VUXM2_lwnM2____ ...
,UX_M2_l2_dM2__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% X_garb_TM2__: %0.3fs',tmp_t)); end;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_optimize_over_gamma_z = 1;
parameter.flag_compute_I_value = 0;
parameter.tolerance_master = tolerance_master;
parameter.pm_n_UX_rank_use = n_UX_rank;
tmp_t = tic();
[ ...
 parameter ...
,X_half_TM2__ ...
,delta_x_half_TM2__ ...
,delta_y_half_TM2__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,n_UX_rank ...
,n_S ...
,UX_T_half_k_q_wnS__ ...
,UX_T_half_l2_S_ ...
,n_M2 ...
,svd_VUXM2_lwnM2____ ...
,UX_M2_l2_dM2__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% X_half_TM2__: %0.3fs',tmp_t)); end;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_optimize_over_gamma_z = 1;
parameter.flag_compute_I_value = 0;
parameter.tolerance_master = tolerance_master;
parameter.pm_n_UX_rank_use = n_UX_rank;
tmp_t = tic();
[ ...
 parameter ...
,X_rem2_TM2__ ...
,delta_x_rem2_TM2__ ...
,delta_y_rem2_TM2__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,n_UX_rank ...
,n_S ...
,UX_T_rem2_k_q_wnS__ ...
,UX_T_rem2_l2_S_ ...
,n_M2 ...
,svd_VUXM2_lwnM2____ ...
,UX_M2_l2_dM2__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% X_rem2_TM__: %0.3fs',tmp_t)); end;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.flag_optimize_over_gamma_z = 1;
parameter.flag_compute_I_value = 0;
parameter.tolerance_master = tolerance_master;
parameter.pm_n_UX_rank_use = n_UX_rank;
tmp_t = tic();
[ ...
 parameter ...
,X_rem3_TM2__ ...
,delta_x_rem3_TM2__ ...
,delta_y_rem3_TM2__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,n_UX_rank ...
,n_S ...
,UX_T_rem3_k_q_wnS__ ...
,UX_T_rem3_l2_S_ ...
,n_M2 ...
,svd_VUXM2_lwnM2____ ...
,UX_M2_l2_dM2__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% X_rem3_TM__: %0.3fs',tmp_t)); end;
%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% calculate log-unlikelihood ratio for expanded set of n_M2 images. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
sigma_bayesian_ = transpose([0,2.^[-12:0.125:0]]); n_sigma_bayesian = numel(sigma_bayesian_);
%%%%%%%%;
[ ...
 ~ ...
,ssnll2_uni_tru_s_ ...
,ssnll2_uni_tru_M2s__ ...
,inten2_uni_tru_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,1 ... 
,[n_S] ...
,n_M2 ...
,{X_TM2__} ...
,{UX_T_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_all_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_uni_tr0_s_ ...
,ssnll2_uni_tr0_M2s__ ...
,inten2_uni_tr0_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_TM2__,zeros(size(X_TM2__))} ...
,{UX_T_l2_S_,ones(size(UX_T_l2_S_))} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_all_,viewing_weight_all_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_uni_tru_vs__),[2,1]) ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_uni_tr1_s_ ...
,ssnll2_uni_tr1_M2s__ ...
,inten2_uni_tr1_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_TM2__,X_garb_TM2__} ...
,{UX_T_l2_S_,UX_T_garb_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_all_,viewing_weight_all_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_uni_tru_vs__),[2,1]) ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_uni_hr2_s_ ...
,ssnll2_uni_hr2_M2s__ ...
,inten2_uni_hr2_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_half_TM2__,X_rem2_TM2__} ...
,{UX_T_half_l2_S_,UX_T_rem2_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_all_,viewing_weight_all_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_uni_tru_vs__),[2,1]) ...
);
%%%%;
ssnll2r_uni_tru_vs_hr2_M2s__ = ssnll2_uni_tru_M2s__ - ssnll2_uni_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tru_vs_hr2_s_ = sum(ssnll2r_uni_tru_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr0_vs_hr2_M2s__ = ssnll2_uni_tr0_M2s__ - ssnll2_uni_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr0_vs_hr2_s_ = sum(ssnll2r_uni_tr0_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr1_vs_hr2_M2s__ = ssnll2_uni_tr1_M2s__ - ssnll2_uni_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr1_vs_hr2_s_ = sum(ssnll2r_uni_tr1_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
%%%%%%%%;
[ ...
 ~ ...
,ssnll2_uni_hr3_s_ ...
,ssnll2_uni_hr3_M2s__ ...
,inten2_uni_hr3_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_half_TM2__,X_rem3_TM2__} ...
,{UX_T_half_l2_S_,UX_T_rem3_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_all_,viewing_weight_all_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_uni_tru_vs__),[2,1]) ...
);
%%%%;
ssnll2r_uni_tru_vs_hr3_M2s__ = ssnll2_uni_tru_M2s__ - ssnll2_uni_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tru_vs_hr3_s_ = sum(ssnll2r_uni_tru_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr0_vs_hr3_M2s__ = ssnll2_uni_tr0_M2s__ - ssnll2_uni_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr0_vs_hr3_s_ = sum(ssnll2r_uni_tr0_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr1_vs_hr3_M2s__ = ssnll2_uni_tr1_M2s__ - ssnll2_uni_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_uni_tr1_vs_hr3_s_ = sum(ssnll2r_uni_tr1_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
%%%%%%%%;
[ ...
 ~ ...
,ssnll2_emp_tru_s_ ...
,ssnll2_emp_tru_M2s__ ...
,inten2_emp_tru_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,1 ... 
,[n_S] ...
,n_M2 ...
,{X_TM2__} ...
,{UX_T_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_emp_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_emp_tr0_s_ ...
,ssnll2_emp_tr0_M2s__ ...
,inten2_emp_tr0_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_TM2__,zeros(size(X_TM2__))} ...
,{UX_T_l2_S_,ones(size(UX_T_l2_S_))} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_emp_,viewing_weight_emp_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_emp_tru_vs__),[2,1]) ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_emp_tr1_s_ ...
,ssnll2_emp_tr1_M2s__ ...
,inten2_emp_tr1_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_TM2__,X_garb_TM2__} ...
,{UX_T_l2_S_,UX_T_garb_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_emp_,viewing_weight_emp_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_emp_tru_vs__),[2,1]) ...
);
%%%%;
[ ...
 ~ ...
,ssnll2_emp_hr2_s_ ...
,ssnll2_emp_hr2_M2s__ ...
,inten2_emp_hr2_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_half_TM2__,X_rem2_TM2__} ...
,{UX_T_half_l2_S_,UX_T_rem2_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_emp_,viewing_weight_emp_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_emp_tru_vs__),[2,1]) ...
);
%%%%;
ssnll2r_emp_tru_vs_hr2_M2s__ = ssnll2_emp_tru_M2s__ - ssnll2_emp_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tru_vs_hr2_s_ = sum(ssnll2r_emp_tru_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr0_vs_hr2_M2s__ = ssnll2_emp_tr0_M2s__ - ssnll2_emp_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr0_vs_hr2_s_ = sum(ssnll2r_emp_tr0_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr1_vs_hr2_M2s__ = ssnll2_emp_tr1_M2s__ - ssnll2_emp_hr2_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr1_vs_hr2_s_ = sum(ssnll2r_emp_tr1_vs_hr2_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
%%%%%%%%;
[ ...
 ~ ...
,ssnll2_emp_hr3_s_ ...
,ssnll2_emp_hr3_M2s__ ...
,inten2_emp_hr3_vs__ ...
] = ...
ssnll_from_X_1( ...
 [] ...
,2 ... 
,[n_S,n_S] ...
,n_M2 ...
,{X_half_TM2__,X_rem3_TM2__} ...
,{UX_T_half_l2_S_,UX_T_rem3_l2_S_} ...
,UX_M2_l2_M2_ ...
,{viewing_weight_emp_,viewing_weight_emp_} ...
,n_sigma_bayesian ...
,sigma_bayesian_ ...
,repmat(log(inten2_emp_tru_vs__),[2,1]) ...
);
%%%%;
ssnll2r_emp_tru_vs_hr3_M2s__ = ssnll2_emp_tru_M2s__ - ssnll2_emp_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tru_vs_hr3_s_ = sum(ssnll2r_emp_tru_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr0_vs_hr3_M2s__ = ssnll2_emp_tr0_M2s__ - ssnll2_emp_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr0_vs_hr3_s_ = sum(ssnll2r_emp_tr0_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr1_vs_hr3_M2s__ = ssnll2_emp_tr1_M2s__ - ssnll2_emp_hr3_M2s__; %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
ssnll2r_emp_tr1_vs_hr3_s_ = sum(ssnll2r_emp_tr1_vs_hr3_M2s__,1); %<-- assumes hard assignment of images to volumes in 2-volume-model (see min). ;
%%%%%%%%;
save(fname_ssnll_mat ...
,'viewing_weight_all_' ...
,'viewing_weight_emp_' ...
,'n_M' ...
,'n_R' ...
,'n_M2' ...
,'sigma_bayesian_' ...
,'n_sigma_bayesian' ...
,'ssnll2_uni_tru_s_' ...
,'ssnll2_uni_tru_M2s__' ...
,'inten2_uni_tru_vs__' ...
,'ssnll2_uni_tr0_s_' ...
,'ssnll2_uni_tr0_M2s__' ...
,'inten2_uni_tr0_vs__' ...
,'ssnll2_uni_tr1_s_' ...
,'ssnll2_uni_tr1_M2s__' ...
,'inten2_uni_tr1_vs__' ...
,'ssnll2_uni_hr2_s_' ...
,'ssnll2_uni_hr2_M2s__' ...
,'inten2_uni_hr2_vs__' ...
,'ssnll2r_uni_tru_vs_hr2_M2s__' ...
,'ssnll2r_uni_tru_vs_hr2_s_' ...
,'ssnll2r_uni_tr0_vs_hr2_M2s__' ...
,'ssnll2r_uni_tr0_vs_hr2_s_' ...
,'ssnll2r_uni_tr1_vs_hr2_M2s__' ...
,'ssnll2r_uni_tr1_vs_hr2_s_' ...
,'ssnll2_uni_hr3_s_' ...
,'ssnll2_uni_hr3_M2s__' ...
,'inten2_uni_hr3_vs__' ...
,'ssnll2r_uni_tru_vs_hr3_M2s__' ...
,'ssnll2r_uni_tru_vs_hr3_s_' ...
,'ssnll2r_uni_tr0_vs_hr3_M2s__' ...
,'ssnll2r_uni_tr0_vs_hr3_s_' ...
,'ssnll2r_uni_tr1_vs_hr3_M2s__' ...
,'ssnll2r_uni_tr1_vs_hr3_s_' ...
,'ssnll2_emp_tru_s_' ...
,'ssnll2_emp_tru_M2s__' ...
,'inten2_emp_tru_vs__' ...
,'ssnll2_emp_tr0_s_' ...
,'ssnll2_emp_tr0_M2s__' ...
,'inten2_emp_tr0_vs__' ...
,'ssnll2_emp_tr1_s_' ...
,'ssnll2_emp_tr1_M2s__' ...
,'inten2_emp_tr1_vs__' ...
,'ssnll2_emp_hr2_s_' ...
,'ssnll2_emp_hr2_M2s__' ...
,'inten2_emp_hr2_vs__' ...
,'ssnll2r_emp_tru_vs_hr2_M2s__' ...
,'ssnll2r_emp_tru_vs_hr2_s_' ...
,'ssnll2r_emp_tr0_vs_hr2_M2s__' ...
,'ssnll2r_emp_tr0_vs_hr2_s_' ...
,'ssnll2r_emp_tr1_vs_hr2_M2s__' ...
,'ssnll2r_emp_tr1_vs_hr2_s_' ...
,'ssnll2_emp_hr3_s_' ...
,'ssnll2_emp_hr3_M2s__' ...
,'inten2_emp_hr3_vs__' ...
,'ssnll2r_emp_tru_vs_hr3_M2s__' ...
,'ssnll2r_emp_tru_vs_hr3_s_' ...
,'ssnll2r_emp_tr0_vs_hr3_M2s__' ...
,'ssnll2r_emp_tr0_vs_hr3_s_' ...
,'ssnll2r_emp_tr1_vs_hr3_M2s__' ...
,'ssnll2r_emp_tr1_vs_hr3_s_' ...
);
close_fname_tmp(fname_ssnll_pre);
%%%%%%%%%%%%%%%%;
