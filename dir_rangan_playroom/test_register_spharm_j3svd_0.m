function [X0_,X1_] = test_register_spharm_j3svd_0(n_k,k_,n_l_,a_,b_);
% tests registration between molecule_A and molecule_B using an array of beta (fast only);
% finds maximum value and rotates accordingly, producing X1_ ;
% Note that the maximum value within X0_ should be the alpha_=[0,0,0] value of X1_ ;
%
% when no inputs are passed we import two spherical harmonic representations (generated by kspacegrid_to_model): ;
% molecule_A: modsph_A_ori = spiral ;
% molecule_B: modsph_B_ori = spiral with twisted tail ;
% ;
% n_k = integer maximum k ;
% k_ = real array of length n_k; k_(nk) = k_value for shell nk ;
% n_l_ = integer array of length n_k; n_l_(nk) = spherical harmonic order on shell nk; n_l_(nk) corresponds to n_lm_(nk) = (n_l_(nk)+1)^2 coefficients ;
% a_ = complex array of length \sum_{nk} (n_lm_(nk)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% b_ = complex array of length \sum_{nk} (n_lm_(nk)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% a_ corresponds to molecule_a, b_ to molecule_b ;
% ;
% X_ = complex array of size (n_m_max,n_m_max,n_m_max) ;
% X_(nalpha,ngamma,nbeta) corresponds to the innerproduct between molecule_A and molecule_B, where ;
% the latter has been rotated by euler-angles alpha,beta,gamma. ;
% Note that alpha_ and gamma_ are arrays from 0 to 2*pi, ;
% whereas beta_ is an array from -pi to pi. ;
% ;
% test with: ;
%{
  [X0_,X1_] = test_register_spharm_j3svd_0();
  %}

verbose=1;

if nargin<5;
xnodesr_ = MDA_read_r8('./dir_mdaT/xnodesr_.mda');
isph_start_ = MDA_read_i4('./dir_mdaT/isph_start_.mda');
nterms_sph_ = MDA_read_i4('./dir_mdaT/nterms_sph_.mda');
modsph_A_ori_ = MDA_read_c16('./dir_mdaT/modsph_A_ori_.mda');
modsph_B_ori_ = MDA_read_c16('./dir_mdaT/modsph_B_ori_.mda');
n_k = length(isph_start_);
k_ = xnodesr_;
n_l_ = nterms_sph_;
n_lm_ = (n_l_+1).^2;
a_ = modsph_A_ori_;
b_ = modsph_B_ori_;
% rotate a_ by angle_ ;
tmp_angle_ = [pi/4 , pi/2 , 0];
a_ = rotate_spharm_to_spharm_0(verbose,n_k,k_,n_l_,a_,tmp_angle_);
end;%if nargin<4;

%%%%%%%%%%%%%%%%;
% test register_spharm_to_spharm_angle_0 vs register_spharm_to_spharm_angle_slow_0. ;
%%%%%%%%%%%%%%%%;
flag_test=0;
if flag_test;
tmp_x = register_spharm_to_spharm_0(verbose,n_k,k_,n_l_,a_,b_);
n_beta = 1; beta_ = [3*pi/5];
if (n_beta>1); beta_ = linspace(-pi,pi,n_beta+1); beta_ = beta_(1:end-1); n_beta = length(beta_); end;
tic;
[X0_] = register_spharm_to_spharm_angle_0(verbose,n_k,k_,n_l_,a_,b_,n_beta,beta_);
t_1 = toc; if (verbose); disp(sprintf(' %% X0_ (fast) time %0.2f',t_1)); end;
tic;
[X1_] = register_spharm_to_spharm_angle_slow_0(verbose,n_k,k_,n_l_,a_,b_,n_beta,beta_);
t_1 = toc; if (verbose); disp(sprintf(' %% X1_ (slow) time %0.2f',t_1)); end;
colormap(colormap_beach());
subplot(1,3,1); imagesc(real(X0_)); colorbar;
subplot(1,3,2); imagesc(real(X1_)); colorbar;
subplot(1,3,3); imagesc(real(X0_-X1_)); colorbar;
set(gcf,'Position',1+[0,0,1024,256+128]);
disp('returning');return;
end;% if flag_test;

%%%%%%%%%%%%%%%%;
% display the two volumes. ;
%%%%%%%%%%%%%%%%;
flag_disp=0;
if flag_disp;
res = 48; n_iso = 5;
subplot(1,2,1);spharm_to_fig_9(n_k,k_,n_l_,a_,res,n_iso,[0,0,0],[0,0,0]); title('a');
subplot(1,2,2);spharm_to_fig_9(n_k,k_,n_l_,b_,res,n_iso,[0,0,0],[0,0,0]); title('b');
set(gcf,'Position',1+[0,0,1024,768]);
disp('returning');return;
end;%if flag_disp;

% translating a_ --> c_ by -2*pi*delta_, and generating innerproduct array over a single beta_. ;
N_pixel = 1.5; sample_d = 0.25;
k_max = k_(end);
R_target = k_max;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
delta = D_target; theta_d = 2*pi/7; phi_d = 3*pi/5;
delta_ = delta * [cos(theta_d)*sin(phi_d),sin(theta_d)*sin(phi_d),cos(phi_d)];
tic;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,a_all_,kx_all_,ky_all_,kz_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_,n_l_,a_,sample_d);
[c_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,a_all_,-2*pi*delta_);
c_ = convert_k_p_to_spharm_0(verbose,n_k,k_,n_l_,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,c_all_);
t_0=toc; if (verbose); disp(sprintf(' %% c_ time %0.2f',t_0)); end;
%n_beta = 34;
n_beta = 1; beta_ = [3*pi/5];
if (n_beta>1); beta_ = linspace(-pi,pi,n_beta+1); beta_ = beta_(1:end-1); n_beta = length(beta_); end;
tic;
[X1_] = register_spharm_to_spharm_angle_0(verbose,n_k,k_,n_l_,c_,b_,n_beta,beta_);
t_1 = toc; if (verbose); disp(sprintf(' %% X1_ time %0.2f',t_1)); end;

% now using svd-expansion to generate innerproduct array over the same single beta_. ;
%%%%%%%%%%%%%%%%;
% first define svd-expansion of spherical-bessel-function. ;
%%%%%%%%%%%%%%%%;
eps_j3svd = 1e-6; l_max = max(n_l_); a_K = 33; b_K = 34;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Jv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Jv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_j3svd_5b(k_max,N_pixel,eps_j3svd,l_max,a_K,b_K);
%%%%%%%%%%%%%%%%;
% now extend this svd-expansion to account for l,m bandlimits (using wigner3j symbol). ;
%%%%%%%%%%%%%%%%;
eps_target = 0.02;
tic;
tmp_n = 0;
for nsvd_l = 1:n_svd_l;
tmp_l2 = svd_l_(nsvd_l);
tmp_s = svd_s_(nsvd_l);
if (tmp_s>eps_target);
if (verbose); disp(sprintf(' %% tmp_n %d so far, nsvd_l %d tmp_l2 %d tmp_s %0.4f ',tmp_n,nsvd_l,tmp_l2,tmp_s)); end;
%for tmp_l2=0:l_max;
for tmp_m2=-tmp_l2:+tmp_l2;
for tmp_l1=0:l_max;
for tmp_m1=-tmp_l1:+tmp_l1;
for tmp_l3=abs(tmp_l2-tmp_l1):min(l_max,tmp_l2+tmp_l1);
for tmp_m3=tmp_m2+tmp_m1;
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
if (tmp_symbol~=0);
if (tmp_symbol*4*pi*tmp_s>eps_target);
tmp_n = tmp_n+1;
end;%if (tmp_symbol*4*pi*tmp_s>eps_target);
end;%if (tmp_symbol~=0);
end;%for tmp_m3=-tmp_l3:+tmp_l3;
end;%for tmp_l3=0:l_max;
end;%for tmp_m1=-tmp_l1:+tmp_l1;
end;%for tmp_l1=0:l_max;
end;%for tmp_m2=-tmp_l2:+tmp_l2;
%end;%for tmp_l2=0:l_max;
end;%if (tmp_s>eps_target);
end;%for nsvd_l = 1:n_svd_l;
t_0=toc;
if (verbose); disp(sprintf(' %% total tmp_n %d, time %f',tmp_n,t_0)); end;
%%%%%%%%%%%%%%%%;
n_svd3 = tmp_n;
svd3_nx_ = zeros(n_svd3,1);
svd3_l2_ = zeros(n_svd3,1);
svd3_m2_ = zeros(n_svd3,1);
svd3_l1_ = zeros(n_svd3,1);
svd3_m1_ = zeros(n_svd3,1);
svd3_l3_ = zeros(n_svd3,1);
svd3_m3_ = zeros(n_svd3,1);
svd3_sy_ = zeros(n_svd3,1);
tic;
tmp_n = 0;
for nsvd_l = 1:n_svd_l;
tmp_l2 = svd_l_(nsvd_l);
tmp_s = svd_s_(nsvd_l);
if (tmp_s>eps_target);
if (verbose); disp(sprintf(' %% tmp_n %d so far, nsvd_l %d tmp_l2 %d tmp_s %0.4f ',tmp_n,nsvd_l,tmp_l2,tmp_s)); end;
%for tmp_l2=0:l_max;
for tmp_m2=-tmp_l2:+tmp_l2;
for tmp_l1=0:l_max;
for tmp_m1=-tmp_l1:+tmp_l1;
for tmp_l3=abs(tmp_l2-tmp_l1):min(l_max,tmp_l2+tmp_l1);
for tmp_m3=tmp_m2+tmp_m1;
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
if (tmp_symbol~=0);
if (tmp_symbol*4*pi*tmp_s>eps_target);
svd3_nx_(1+tmp_n) = nsvd_l;
svd3_l2_(1+tmp_n) = tmp_l2;
svd3_m2_(1+tmp_n) = tmp_m2;
svd3_l1_(1+tmp_n) = tmp_l1;
svd3_m1_(1+tmp_n) = tmp_m1;
svd3_l3_(1+tmp_n) = tmp_l3;
svd3_m3_(1+tmp_n) = tmp_m3;
svd3_sy_(1+tmp_n) = tmp_symbol*4*pi*tmp_s;
tmp_n = tmp_n+1;
end;%if (tmp_symbol*4*pi*tmp_s>eps_target);
end;%if (tmp_symbol~=0);
end;%for tmp_m3=-tmp_l3:+tmp_l3;
end;%for tmp_l3=0:l_max;
end;%for tmp_m1=-tmp_l1:+tmp_l1;
end;%for tmp_l1=0:l_max;
end;%for tmp_m2=-tmp_l2:+tmp_l2;
%end;%for tmp_l2=0:l_max;
end;%if (tmp_s>eps_target);
end;%for nsvd_l = 1:n_svd_l;
t_1=toc;
if (verbose); disp(sprintf(' %% total tmp_n %d, time %f',tmp_n,t_1)); end;
%%%%%%%%%%%%%%%%;
svd3_l2m2nx_ = unique([svd3_l2_,svd3_m2_,svd3_nx_],'rows');
n_svd3_l2m2nx = size(svd3_l2m2nx_,1);
if (verbose); disp(sprintf(' %% total number of terms %d',n_svd3_l2m2nx)); end;

%%%%%%%%%%%%%%%%;
% test svd expansion. ;
%%%%%%%%%%%%%%%%;
tmp_delta_ = D_target * (rand(3,1)-0.5);
tmp_delta_d = norm(tmp_delta_,'fro');
tmp = norm(tmp_delta_(1:2),'fro');
tmp_phi_d = atan2(tmp,tmp_delta_(3));
tmp_theta_d = atan2(tmp_delta_(2),tmp_delta_(1));
tmp_delta_ = tmp_delta_d*[cos(tmp_theta_d)*sin(tmp_phi_d),sin(tmp_theta_d)*sin(tmp_phi_d),cos(tmp_phi_d)];
tmp_k_ = k_max * (rand(3,1)-0.5);
tmp_k_k = norm(tmp_k_,'fro');
tmp = norm(tmp_k_(1:2),'fro');
tmp_phi_k = atan2(tmp,tmp_k_(3));
tmp_theta_k = atan2(tmp_k_(2),tmp_k_(1));
tmp_k_ = tmp_k_k*[cos(tmp_theta_k)*sin(tmp_phi_k),sin(tmp_theta_k)*sin(tmp_phi_k),cos(tmp_phi_k)];
%%%%%%%%%%%%%%%%;
% test svd expansion of besselj3. ;
%%%%%%%%%%%%%%%%;
for nl=0:max(svd_l_);
tmp_ij_ = find(svd_l_==nl);
tmp_j0 = besselj(nl+0.5,2*pi*tmp_k_k*tmp_delta_d)*sqrt(pi/2)/sqrt(2*pi*tmp_k_k*tmp_delta_d);
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
U_d = 0;
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((tmp_delta_d - svd_d_m)/svd_d_c);
U_d = U_d + svd_U_d_(1+nkB,tmp_nx)*b_tmp;
end;% for nkB=0:b_K-1;
S = svd_s_(tmp_nx);
V_r = 0;
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*tmp_k_k - svd_r_m)/svd_r_c);
V_r = V_r + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
disp(sprintf(' %% j(%d,%0.2f*%0.4f) %0.16f vs %0.16f; ratio %0.2f',nl,tmp_k_k,tmp_delta_d,tmp_j0,tmp_j1,tmp_j0./tmp_j1));
end;%for nl=0:max(svd_l_);
%%%%%%%%%%%%%%%%;
% test svd expansion of transf. ;
%%%%%%%%%%%%%%%%;
tmp_f0 = exp(-i*dot(2*pi*tmp_k_,tmp_delta_));
tmp_f1 = 0;
for nl=0:max(svd_l_);
l_val = nl;
tmp_ij_ = find(svd_l_==nl);
tmp_j0 = besselj(nl+0.5,2*pi*tmp_k_k*tmp_delta_d)*sqrt(pi/2)/sqrt(2*pi*tmp_k_k*tmp_delta_d);
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
U_d = 0;
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((tmp_delta_d - svd_d_m)/svd_d_c);
U_d = U_d + svd_U_d_(1+nkB,tmp_nx)*b_tmp;
end;% for nkB=0:b_K-1;
S = svd_s_(tmp_nx);
V_r = 0;
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*tmp_k_k - svd_r_m)/svd_r_c);
V_r = V_r + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
for nm=0:2*l_val;
m_val = nm-l_val;
%%%%%%%%;
Llm_d__=legendre(l_val,cos(1*pi-tmp_phi_d),'unnorm');
m_abs = abs(m_val);
if (l_val>0); Llm_d_ = squeeze(Llm_d__(1+m_abs,:,:)); end; if (l_val==0); Llm_d_ = Llm_d__(:,:); end;
a1=((2*l_val+1)/(4*pi));
a2=exp(lfactorial(l_val-m_abs) - lfactorial(l_val+m_abs));
c=sqrt(a1*a2);
s=(-1)^((m_val<0)*m_val); % needed to preserve condon-shortley phase. ;
%s=1; % original phase ;
Ylm_d_ = s*c*Llm_d_(:).*exp(+i*m_val*(1*pi+tmp_theta_d)); 
%%%%%%%%;
Llm_k__=legendre(l_val,cos(0*pi+tmp_phi_k),'unnorm');
m_abs = abs(m_val);
if (l_val>0); Llm_k_ = squeeze(Llm_k__(1+m_abs,:,:)); end; if (l_val==0); Llm_k_ = Llm_k__(:,:); end;
a1=((2*l_val+1)/(4*pi));
a2=exp(lfactorial(l_val-m_abs) - lfactorial(l_val+m_abs));
c=sqrt(a1*a2);
s=(-1)^((m_val<0)*m_val); % needed to preserve condon-shortley phase. ;
%s=1; % original phase ;
Ylm_k_ = s*c*Llm_k_(:).*exp(+i*m_val*(0*pi+tmp_theta_k)); 
%%%%%%%%;
tmp_f1 = tmp_f1 + tmp_j1*4*pi*(i^l_val)*s*Ylm_k_(1)*s*conj(Ylm_d_(1));
end;%for nm=0:2*nl;
end;%for nl=0:max(svd_l_);
disp(sprintf(' %% exp(i*2*pi*[%0.2f,%0.2f,%0.2f]*[%0.4f,%0.4f,%0.4f]) %0.16f+%0.16fi vs %0.16f+%0.16fi; ratio %0.2f+%0.2fi',tmp_k_,tmp_delta_,real(tmp_f0),imag(tmp_f0),real(tmp_f1),imag(tmp_f1),real(tmp_f0./tmp_f1),imag(tmp_f0./tmp_f1)));

%%%%%%%%%%%%%%%%;
% test innerproduct with no rotations on a single shell. ;
%%%%%%%%%%%%%%%%;
n_k_shell = 1; nk_shell = 5;
k_shell = k_(1+nk_shell);
n_l_shell = n_l_(1+nk_shell);
n_lm_shell = (1+n_l_shell)*(1+n_l_shell);
ix_base = sum(n_lm_(1:1+nk_shell-1)); 
a_shell_ = a_(ix_base + (1:n_lm_shell)); 
b_shell_ = b_(ix_base + (1:n_lm_shell));
%%%%%%%%;
% choose delta_;
%%%%%%%%;
N_pixel = 1.5; sample_d = 0.25;
k_max = k_(end);
R_target = k_max;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
delta_d = 1*D_target; theta_d = 2*pi/7; phi_d = 3*pi/5;
delta_ = delta_d * [cos(theta_d)*sin(phi_d),sin(theta_d)*sin(phi_d),cos(phi_d)];
%
%%%%%%%%%%%%%%%%;
% testing symbol3j_0;
%%%%%%%%%%%%%%%%;
sg__ = zeros((3+1).^2,(3+1).^2);
for Ya_l=0:3; for Ya_m=-Ya_l:+Ya_l;
for Yb_l=0:3; for Yb_m=-Yb_l:+Yb_l;
%Ya_l = 1; Ya_m = +0; 
Ya_shell_ = zeros(n_lm_shell,1); Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = 1.0d0;
%Yb_l = 1; Yb_m = +1; 
Yb_shell_ = zeros(n_lm_shell,1); Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = 1.0d0;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Ya_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,Ya_shell_,sample_d);
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Yb_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,Yb_shell_,sample_d);
k_x_all_ = k_all_.*cos(theta_all_).*sin(phi_all_); k_y_all_ = k_all_.*sin(theta_all_).*sin(phi_all_); k_z_all_ = k_all_.*cos(phi_all_); F_shell_all_ = exp( -2*pi*i*( k_x_all_.*delta_(1) + k_y_all_.*delta_(2) + k_z_all_.*delta_(3)));
F_shell_ = convert_k_p_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,F_shell_all_);
G_shell_ = zeros(n_lm_shell,1);
for tmp_l2 = 0:n_l_shell;
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2 = -tmp_l2:+tmp_l2;
ix = 1+tmp_l2*(tmp_l2+1)+tmp_m2;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
G_shell_(ix) = 4*pi .* (i.^tmp_l2) .* tmp_j0 .* conj(tmp_Ylm_d) .* tmp_Ylm_s;
end;%for tmp_m2 = -tmp_l2:+tmp_l2;
end;%for tmp_l2 = 0:n_l_shell;
%%%%%%%%;
%disp(sprintf(' %% F-G error: %0.16f/%0.16f',norm(F_shell_-G_shell_),norm(F_shell_)));
%%%%%%%%;
tmp_X0 = sum(conj(Ya_shell_all_).*Yb_shell_all_.*F_shell_all_.*weight_all_);
tmp_X1 = 0.0d0;
for tmp_l2=0:8;
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2=-tmp_l2:+tmp_l2;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
tmp_symbol = symbol3j_0(Yb_l,tmp_l2,Ya_l,Yb_m,tmp_m2,Ya_m);
tmp_X1 = tmp_X1 + k_shell.^2 * 4*pi * (i.^tmp_l2) * tmp_j0 * tmp_symbol * conj(tmp_Ylm_d) * tmp_Ylm_s;
end;%for tmp_m2=-tmp_l2:+tmp_l2;
end;%for tmp_l2=0:8;
%%%%%%%%;
disp(sprintf(' %% (%+d,%+d),(%+d,%+d): ratio %+0.8f+%+0.8f tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi ',Ya_l,Ya_m,Yb_l,Yb_m,real(tmp_X0./tmp_X1),imag(tmp_X0./tmp_X1),real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
sg__( 1 + Ya_l*(Ya_l+1) + Ya_m , 1 + Yb_l*(Yb_l+1) + Yb_m ) = sign(real(tmp_X0./tmp_X1));
end;end;%for Yb_l=0:3; for Yb_m=-Yb_l:+Yb_l;
end;end;%for Ya_l=0:3; for Ya_m=-Ya_l:+Ya_l;
%ma_ = [ 0 -1 0 +1 -2 -1 0 +1 +2 -3 -2 -1 0 +1 +2 +3 ]; ma_ = transpose(ma_)*ones(1,16);
%la_ = [ 0 1 1 1 2 2 2 2 2 3 3 3 3 3 3 3 ]; la_ = transpose(la_)*ones(1,16);
%mb_ = [ 0 -1 0 +1 -2 -1 0 +1 +2 -3 -2 -1 0 +1 +2 +3 ]; mb_ = ones(16,1)*mb_;
%lb_ = [ 0 1 1 1 2 2 2 2 2 3 3 3 3 3 3 3 ]; lb_ = ones(16,1)*lb_;
%colormap(colormap_beach());
%subplot(2,2,1); imagesc(sg__);
%subplot(2,2,2); imagesc((-1).^( (ma_.*mb_<0).*(ma_+mb_) + (ma_.*mb_>=0).*(max(abs(ma_),abs(mb_))) ));
%subplot(2,2,3); imagesc(sg__ - (-1).^( (ma_.*mb_<0).*(ma_+mb_) + (ma_.*mb_>=0).*(max(abs(ma_),abs(mb_))) ));
%%%%%%%%;
%
%%%%%%%%%%%%%%%%;
% now define svd-expansion of spherical-bessel-function. ;
%%%%%%%%%%%%%%%%;
eps_j3svd = 1e-6; l_max = max(n_l_); a_K = 33; b_K = 34;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Jv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Jv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_j3svd_5b(k_max,N_pixel,eps_j3svd,l_max,a_K,b_K);
%%%%%%%%;
% converting a_shell_ to a_shell_all_ and b_shell_ to b_shell_all_;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,b_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,b_shell_,sample_d);
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,a_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,a_shell_,sample_d);
%%%%%%%%;
% translating a_shell_ --> c_shell_ by +2*pi*delta_, and generating single innerproduct;
Ya_shell_ = zeros(n_lm_shell,1); 
Ya_l = 3; Ya_m = +2; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Ya_l = 2; Ya_m = -1; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Ya_l = 1; Ya_m = +0; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Yb_shell_ = zeros(n_lm_shell,1); 
Yb_l = 3; Yb_m = -2; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
Yb_l = 2; Yb_m = +1; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
Yb_l = 1; Yb_m = +1; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Ya_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,Ya_shell_,sample_d);
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Yb_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k_shell,k_shell,n_l_shell,Yb_shell_,sample_d);
k_x_all_ = k_all_.*cos(theta_all_).*sin(phi_all_); k_y_all_ = k_all_.*sin(theta_all_).*sin(phi_all_); k_z_all_ = k_all_.*cos(phi_all_); F_shell_all_ = exp( -2*pi*i*( k_x_all_.*delta_(1) + k_y_all_.*delta_(2) + k_z_all_.*delta_(3)));
F_shell_ = convert_k_p_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,F_shell_all_);
%%%%%%%%;
[Yc_shell_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,Ya_shell_all_,+2*pi*delta_);
Yc_shell_ = convert_k_p_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Yc_shell_all_);
tmp_X0 = register_spharm_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,Ya_shell_,Yb_shell_);
tmp_X1 = register_spharm_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,Yc_shell_,Yb_shell_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X0 = sum(conj(Ya_shell_all_).*Yb_shell_all_.*weight_all_);
tmp_X1 = sum(conj(Ya_shell_all_).*F_shell_all_.*Yb_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X1 = sum(conj(Yc_shell_all_).*Yb_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
%%%%%%%%;
tmp_X2 = 0;
tic;
for tmp_l1=0:n_l_shell; 
disp(sprintf(' %% tmp_l1 %d tmp_X2 %+0.8f+%+0.8fi',tmp_l1,real(tmp_X2),imag(tmp_X2)));
for tmp_m1=-tmp_l1:+tmp_l1;
%disp(sprintf(' %% tmp_l1 %d tmp_m1 %d tmp_X2 %+0.8f+%+0.8fi',tmp_l1,tmp_m1,real(tmp_X2),imag(tmp_X2)));
for tmp_l2=0:8; 
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2=-tmp_l2:+tmp_l2;
tmp_m3 = tmp_m1+tmp_m2; %tmp_m3 = -tmp_m3;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z2 = 0;
for nk_shell = 0:n_k_shell-1;
k_val = k_shell(1+nk_shell); n_l_shell = n_l_shell(1+nk_shell); n_lm = (1+n_l_shell)*(1+n_l_shell);
tmp_a = 0; if (tmp_l3<=n_l_shell & abs(tmp_m3)<=tmp_l3); tmp_a = Ya_shell_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l_shell & abs(tmp_m1)<=tmp_l1); tmp_b = Yb_shell_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j0*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
end;%for nk_shell = 0:n_k_shell-1;
tmp_X2 = tmp_X2 + tmp_z2;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l_shell; for tmp_m1=-tmp_l1:+tmp_l1;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X2 time %0.2f',t_4)); end;
%%%%%%%%;
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi tmp_X2 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2)));
%%%%%%%%;
[c_shell_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,a_shell_all_,+2*pi*delta_);
c_shell_ = convert_k_p_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,c_shell_all_);
tmp_X0 = register_spharm_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,a_shell_,b_shell_);
tmp_X1 = register_spharm_to_spharm_0(verbose,n_k_shell,k_shell,n_l_shell,c_shell_,b_shell_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X0 = sum(conj(a_shell_all_).*b_shell_all_.*weight_all_);
tmp_X1 = sum(conj(a_shell_all_).*F_shell_all_.*b_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X1 = sum(conj(c_shell_all_).*b_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
%%%%%%%%;
tmp_X2 = 0;
tmp_X3 = 0;
%%%%%%%%;
U_d_ = zeros(1,n_svd_l);
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
U_d_ = U_d_ + svd_U_d_(1+nkB,:)*b_tmp;
end;% for nkB=0:b_K-1;
%%%%%%%%;
V_r__ = zeros(length(k_shell),n_svd_l);
for nsvd_l=1:n_svd_l;
tmp_nx = nsvd_l;
V_r_ = zeros(length(k_shell),1);
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_shell - svd_r_m)/svd_r_c);
V_r_ = V_r_ + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
V_r__(:,nsvd_l) = V_r_;
end;%for nsvd_l=1:n_svd_l;
%%%%%%%%;
tmp_j0__ = zeros(n_k_shell,1+n_l_shell);
tmp_j1__ = zeros(n_k_shell,1+n_l_shell);
for nl_shell = 0:n_l_shell;
l_val = nl_shell;
tmp_ij_ = find(svd_l_==l_val);
for nk_shell = 0:n_k_shell-1;
k_val = k_shell(1+nk_shell);
tmp_j0__(1+nk_shell,1+nl_shell) = besselj(l_val+0.5,max(1e-12,2*pi*k_val*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_val*delta_d));
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
U_d = U_d_(1,tmp_nx);
S = svd_s_(tmp_nx);
V_r = V_r__(1+nk_shell,tmp_nx);
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
tmp_j1__(1+nk_shell,1+nl_shell) = tmp_j1;
end;%for nk_shell = 0:n_k_shell-1;
end;%for nl_shell = 0:n_l_shell;
%%%%%%%%;
tic;
for tmp_l1=0:n_l_shell; 
disp(sprintf(' %% tmp_l1 %d tmp_X2 %+0.8f+%+0.8fi tmp_X3 %+0.8f+%+0.8fi',tmp_l1,real(tmp_X2),imag(tmp_X2),real(tmp_X3),imag(tmp_X3)));
for tmp_m1=-tmp_l1:+tmp_l1;
for tmp_l2=0:8; 
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
tmp_j1 = tmp_j1__(1+nk_shell,1+tmp_l2);
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2=-tmp_l2:+tmp_l2;
tmp_m3 = tmp_m1+tmp_m2; %tmp_m3 = -tmp_m3;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z2 = 0; tmp_z3 = 0;
for nk_shell = 0:n_k_shell-1;
k_val = k_shell(1+nk_shell); n_l_shell = n_l_shell(1+nk_shell); n_lm = (1+n_l_shell)*(1+n_l_shell);
tmp_a = 0; if (tmp_l3<=n_l_shell & abs(tmp_m3)<=tmp_l3); tmp_a = a_shell_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l_shell & abs(tmp_m1)<=tmp_l1); tmp_b = b_shell_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j0*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
tmp_z3 = tmp_z3 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j1*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
end;%for nk_shell = 0:n_k_shell-1;
tmp_X2 = tmp_X2 + tmp_z2;
tmp_X3 = tmp_X3 + tmp_z3;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l_shell; for tmp_m1=-tmp_l1:+tmp_l1;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X2 tmp_X3 time %0.2f',t_4)); end;
%%%%%%%%;
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi tmp_X2 %+0.8f+%+0.8fi tmp_X3 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2),real(tmp_X3),imag(tmp_X3)));

%%%%%%%%%%%%%%%%;
% test innerproduct with no rotations on multiple shells. ;
%%%%%%%%%%%%%%%%;
xnodesr_ = MDA_read_r8('./dir_mdaT/xnodesr_.mda');
isph_start_ = MDA_read_i4('./dir_mdaT/isph_start_.mda');
nterms_sph_ = MDA_read_i4('./dir_mdaT/nterms_sph_.mda');
modsph_A_ori_ = MDA_read_c16('./dir_mdaT/modsph_A_ori_.mda');
modsph_B_ori_ = MDA_read_c16('./dir_mdaT/modsph_B_ori_.mda');
n_k = length(isph_start_);
k_ = xnodesr_;
n_l_ = nterms_sph_;
n_lm_ = (n_l_+1).^2;
a_ = modsph_A_ori_;
b_ = modsph_B_ori_;
% rotate a_ by angle_ ;
tmp_angle_ = [pi/4 , pi/2 , 0];
a_ = rotate_spharm_to_spharm_0(verbose,n_k,k_,n_l_,a_,tmp_angle_);
%%%%%%%%;
% choose delta_;
%%%%%%%%;
N_pixel = 1.5; sample_d = 0.25;
k_max = k_(end);
R_target = k_max;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
delta_d = 1*D_target; theta_d = 2*pi/7; phi_d = 3*pi/5;
delta_ = delta_d * [cos(theta_d)*sin(phi_d),sin(theta_d)*sin(phi_d),cos(phi_d)];
%%%%%%%%%%%%%%%%;
% now define svd-expansion of spherical-bessel-function. ;
%%%%%%%%%%%%%%%%;
eps_j3svd = 1e-6; l_max = max(n_l_); a_K = 33; b_K = 34;
[n_svd_r,svd_r_,svd_r_m,svd_r_c,svd_r_w_,svd_r_Jv_,n_svd_d,svd_d_,svd_d_m,svd_d_c,svd_d_w_,svd_d_Jv_,n_svd_l,svd_l_,svd_U_d_,svd_s_,svd_V_r_] = gen_j3svd_5b(k_max,N_pixel,eps_j3svd,l_max,a_K,b_K);
%%%%%%%%;
% converting a_ to a_all_ and b_ to b_all_;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,b_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_shell,n_l_shell,b_shell_,sample_d);
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,a_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_shell,n_l_shell,a_shell_,sample_d);
%%%%%%%%;
% translating a_shell_ --> c_shell_ by +2*pi*delta_, and generating single innerproduct;
Ya_shell_ = zeros(n_lm_shell,1); 
Ya_l = 3; Ya_m = +2; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Ya_l = 2; Ya_m = -1; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Ya_l = 1; Ya_m = +0; Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) = Ya_shell_(1 + Ya_l*(Ya_l+1) + Ya_m) + 1.0d0;
Yb_shell_ = zeros(n_lm_shell,1); 
Yb_l = 3; Yb_m = -2; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
Yb_l = 2; Yb_m = +1; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
Yb_l = 1; Yb_m = +1; Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) = Yb_shell_(1 + Yb_l*(Yb_l+1) + Yb_m) + 1.0d0;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Ya_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_shell,n_l_shell,Ya_shell_,sample_d);
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Yb_shell_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_shell,n_l_shell,Yb_shell_,sample_d);
k_x_all_ = k_all_.*cos(theta_all_).*sin(phi_all_); k_y_all_ = k_all_.*sin(theta_all_).*sin(phi_all_); k_z_all_ = k_all_.*cos(phi_all_); F_shell_all_ = exp( -2*pi*i*( k_x_all_.*delta_(1) + k_y_all_.*delta_(2) + k_z_all_.*delta_(3)));
F_shell_ = convert_k_p_to_spharm_0(verbose,n_k,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,F_shell_all_);
%%%%%%%%;
[Yc_shell_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,Ya_shell_all_,+2*pi*delta_);
Yc_shell_ = convert_k_p_to_spharm_0(verbose,n_k,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,Yc_shell_all_);
tmp_X0 = register_spharm_to_spharm_0(verbose,n_k,k_shell,n_l_shell,Ya_shell_,Yb_shell_);
tmp_X1 = register_spharm_to_spharm_0(verbose,n_k,k_shell,n_l_shell,Yc_shell_,Yb_shell_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X0 = sum(conj(Ya_shell_all_).*Yb_shell_all_.*weight_all_);
tmp_X1 = sum(conj(Ya_shell_all_).*F_shell_all_.*Yb_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X1 = sum(conj(Yc_shell_all_).*Yb_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
%%%%%%%%;
tmp_X2 = 0;
tic;
for tmp_l1=0:n_l_shell; 
disp(sprintf(' %% tmp_l1 %d tmp_X2 %+0.8f+%+0.8fi',tmp_l1,real(tmp_X2),imag(tmp_X2)));
for tmp_m1=-tmp_l1:+tmp_l1;
%disp(sprintf(' %% tmp_l1 %d tmp_m1 %d tmp_X2 %+0.8f+%+0.8fi',tmp_l1,tmp_m1,real(tmp_X2),imag(tmp_X2)));
for tmp_l2=0:8; 
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2=-tmp_l2:+tmp_l2;
tmp_m3 = tmp_m1+tmp_m2; %tmp_m3 = -tmp_m3;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z2 = 0;
for nk_shell = 0:n_k-1;
k_val = k_shell(1+nk_shell); n_l_shell = n_l_shell(1+nk_shell); n_lm = (1+n_l_shell)*(1+n_l_shell);
tmp_a = 0; if (tmp_l3<=n_l_shell & abs(tmp_m3)<=tmp_l3); tmp_a = Ya_shell_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l_shell & abs(tmp_m1)<=tmp_l1); tmp_b = Yb_shell_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j0*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
end;%for nk_shell = 0:n_k-1;
tmp_X2 = tmp_X2 + tmp_z2;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l_shell; for tmp_m1=-tmp_l1:+tmp_l1;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X2 time %0.2f',t_4)); end;
%%%%%%%%;
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi tmp_X2 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2)));
%%%%%%%%;
[c_shell_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,a_shell_all_,+2*pi*delta_);
c_shell_ = convert_k_p_to_spharm_0(verbose,n_k,k_shell,n_l_shell,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,c_shell_all_);
tmp_X0 = register_spharm_to_spharm_0(verbose,n_k,k_shell,n_l_shell,a_shell_,b_shell_);
tmp_X1 = register_spharm_to_spharm_0(verbose,n_k,k_shell,n_l_shell,c_shell_,b_shell_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X0 = sum(conj(a_shell_all_).*b_shell_all_.*weight_all_);
tmp_X1 = sum(conj(a_shell_all_).*F_shell_all_.*b_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
tmp_X1 = sum(conj(c_shell_all_).*b_shell_all_.*weight_all_);
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1)));
%%%%%%%%;
tmp_X2 = 0;
tmp_X3 = 0;
%%%%%%%%;
U_d_ = zeros(1,n_svd_l);
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
U_d_ = U_d_ + svd_U_d_(1+nkB,:)*b_tmp;
end;% for nkB=0:b_K-1;
%%%%%%%%;
V_r__ = zeros(length(k_shell),n_svd_l);
for nsvd_l=1:n_svd_l;
tmp_nx = nsvd_l;
V_r_ = zeros(length(k_shell),1);
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_shell - svd_r_m)/svd_r_c);
V_r_ = V_r_ + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
V_r__(:,nsvd_l) = V_r_;
end;%for nsvd_l=1:n_svd_l;
%%%%%%%%;
tmp_j0__ = zeros(n_k,1+n_l_shell);
tmp_j1__ = zeros(n_k,1+n_l_shell);
for nl_shell = 0:n_l_shell;
l_val = nl_shell;
tmp_ij_ = find(svd_l_==l_val);
for nk_shell = 0:n_k-1;
k_val = k_shell(1+nk_shell);
tmp_j0__(1+nk_shell,1+nl_shell) = besselj(l_val+0.5,max(1e-12,2*pi*k_val*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_val*delta_d));
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
U_d = U_d_(1,tmp_nx);
S = svd_s_(tmp_nx);
V_r = V_r__(1+nk_shell,tmp_nx);
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
tmp_j1__(1+nk_shell,1+nl_shell) = tmp_j1;
end;%for nk_shell = 0:n_k-1;
end;%for nl_shell = 0:n_l_shell;
%%%%%%%%;
tic;
for tmp_l1=0:n_l_shell; 
disp(sprintf(' %% tmp_l1 %d tmp_X2 %+0.8f+%+0.8fi tmp_X3 %+0.8f+%+0.8fi',tmp_l1,real(tmp_X2),imag(tmp_X2),real(tmp_X3),imag(tmp_X3)));
for tmp_m1=-tmp_l1:+tmp_l1;
for tmp_l2=0:8; 
tmp_j0 = besselj(tmp_l2+0.5,max(1e-12,2*pi*k_shell*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_shell*delta_d));
tmp_j1 = tmp_j1__(1+nk_shell,1+tmp_l2);
[Ylm_d_,Ylm_s_] = Ylm_d(tmp_l2,theta_d,phi_d);
for tmp_m2=-tmp_l2:+tmp_l2;
tmp_m3 = tmp_m1+tmp_m2; %tmp_m3 = -tmp_m3;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z2 = 0; tmp_z3 = 0;
for nk_shell = 0:n_k-1;
k_val = k_shell(1+nk_shell); n_l_shell = n_l_shell(1+nk_shell); n_lm = (1+n_l_shell)*(1+n_l_shell);
tmp_a = 0; if (tmp_l3<=n_l_shell & abs(tmp_m3)<=tmp_l3); tmp_a = a_shell_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l_shell & abs(tmp_m1)<=tmp_l1); tmp_b = b_shell_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_Ylm_d = Ylm_d_(1+tmp_l2+tmp_m2); tmp_Ylm_s = Ylm_s_(1+tmp_l2+tmp_m2);
tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j0*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
tmp_z3 = tmp_z3 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j1*tmp_symbol*conj(tmp_Ylm_d)*tmp_Ylm_s;
end;%for nk_shell = 0:n_k-1;
tmp_X2 = tmp_X2 + tmp_z2;
tmp_X3 = tmp_X3 + tmp_z3;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l_shell; for tmp_m1=-tmp_l1:+tmp_l1;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X2 tmp_X3 time %0.2f',t_4)); end;
%%%%%%%%;
disp(sprintf(' %% tmp_X0 %+0.8f+%+0.8fi tmp_X1 %+0.8f+%+0.8fi tmp_X2 %+0.8f+%+0.8fi tmp_X3 %+0.8f+%+0.8fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2),real(tmp_X3),imag(tmp_X3)));

%%%%%%%%;
tmp_X2 = 0;
tic;
%%%%%%%%;
U_d_ = zeros(1,n_svd_l);
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
U_d_ = U_d_ + svd_U_d_(1+nkB,:)*b_tmp;
end;% for nkB=0:b_K-1;
%%%%%%%%;
V_r__ = zeros(length(k_shell),n_svd_l);
for nsvd_l=1:n_svd_l;
tmp_nx = nsvd_l;
V_r_ = zeros(length(k_shell),1);
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_shell - svd_r_m)/svd_r_c);
V_r_ = V_r_ + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
V_r__(:,nsvd_l) = V_r_;
end;%for nsvd_l=1:n_svd_l;
%%%%%%%%;
tmp_j0__ = zeros(n_k_shell,1+n_l_shell);
tmp_j1__ = zeros(n_k_shell,1+n_l_shell);
for nl_shell = 0:n_l_shell;
l_val = nl_shell;
tmp_ij_ = find(svd_l_==l_val);
for nk_shell = 0:n_k_shell-1;
k_val = k_shell(1+nk_shell);
tmp_j0__(1+nk_shell,1+nl_shell) = besselj(l_val+0.5,max(1e-12,2*pi*k_val*delta_d))*sqrt(pi/2)/sqrt(max(1e-12,2*pi*k_val*delta_d));
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
%U_d = 0;
%for nkB=0:b_K-1;
%b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
%U_d = U_d + svd_U_d_(1+nkB,tmp_nx)*b_tmp;
%end;% for nkB=0:b_K-1;
U_d = U_d_(1,tmp_nx);
%disp(sprintf(' %% U %f vs %f',U_d,U_d_(1,tmp_nx)));
S = svd_s_(tmp_nx);
%V_r = 0;
%for nkA=0:a_K-1;
%a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_val - svd_r_m)/svd_r_c);
%V_r = V_r + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
%end;%for nkA=0:a_K-1;
V_r = V_r__(1+nk_shell,tmp_nx);
%disp(sprintf(' %% V %f vs %f',V_r,V_r__(1+nk_shell,tmp_nx)));
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
tmp_j1__(1+nk_shell,1+nl_shell) = tmp_j1;
end;%for nk_shell = 0:n_k_shell-1;
end;%for nl_shell = 0:n_l_shell;
disp(sprintf(' %% norm(tmp_j0__ - tmp_j1__): %0.16f',norm(tmp_j0__-tmp_j1__,'fro')));
flag_disp=0;
if flag_disp;
colormap(colormap_beach());
subplot(1,3,1); imagesc(tmp_j0__); colorbar;
subplot(1,3,2); imagesc(tmp_j1__); colorbar;
subplot(1,3,3); imagesc(tmp_j0__-tmp_j1__); colorbar;
set(gcf,'Position',1+[0,0,1024*1.5,512]);
end;%if flag_disp;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

% translating a_ --> c_ by -2*pi*delta_, and generating innerproduct array over a single beta_. ;
N_pixel = 1.5; sample_d = 0.25;
k_max = k_(end);
R_target = k_max;
z_target = N_pixel*pi*sqrt(2);
D_target = z_target/(2*pi*R_target);
delta = D_target; theta_d = 2*pi/7; phi_d = 3*pi/5;
delta_ = delta * [cos(theta_d)*sin(phi_d),sin(theta_d)*sin(phi_d),cos(phi_d)];
tic;
[n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,a_all_,kx_all_,ky_all_,kz_all_] = convert_spharm_to_k_p_0(verbose,n_k,k_,n_l_,a_,sample_d);
[c_all_] = transf_k_p_to_k_p_0(verbose,n_all,k_all_,theta_all_,phi_all_,a_all_,-2*pi*delta_);
c_ = convert_k_p_to_spharm_0(verbose,n_k,k_,n_l_,n_all,n_sub_,k_all_,theta_all_,phi_all_,weight_all_,c_all_);
t_0=toc; if (verbose); disp(sprintf(' %% c_ time %0.2f',t_0)); end;
tmp_X0 = register_spharm_to_spharm_0(verbose,n_k,k_,n_l_,c_,b_);

tmp_X1 = 0;
tic;
%%%%%%%%;
U_d_ = zeros(1,n_svd_l);
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
U_d_ = U_d_ + svd_U_d_(1+nkB,:)*b_tmp;
end;% for nkB=0:b_K-1;
%%%%%%%%;
V_r__ = zeros(length(k_),n_svd_l);
for nsvd_l=1:n_svd_l;
tmp_nx = nsvd_l;
V_r_ = zeros(length(k_),1);
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_ - svd_r_m)/svd_r_c);
V_r_ = V_r_ + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
V_r__(:,nsvd_l) = V_r_;
end;%for nsvd_l=1:n_svd_l;
%%%%%%%%;
tmp_j0__ = zeros(n_k,1+n_l);
tmp_j1__ = zeros(n_k,1+n_l);
for nl = 0:n_l;
l_val = nl;
tmp_ij_ = find(svd_l_==l_val);
for nk = 0:n_k-1;
k_val = k_(1+nk);
tmp_j0__(1+nk,1+nl) = besselj(l_val+0.5,2*pi*k_val*delta_d)*sqrt(pi/2)/sqrt(2*pi*k_val*delta_d);
tmp_j1 = 0;
for nij=1:length(tmp_ij_);
tmp_nx = tmp_ij_(nij);
%U_d = 0;
%for nkB=0:b_K-1;
%b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
%U_d = U_d + svd_U_d_(1+nkB,tmp_nx)*b_tmp;
%end;% for nkB=0:b_K-1;
U_d = U_d_(1,tmp_nx);
%disp(sprintf(' %% U %f vs %f',U_d,U_d_(1,tmp_nx)));
S = svd_s_(tmp_nx);
%V_r = 0;
%for nkA=0:a_K-1;
%a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_val - svd_r_m)/svd_r_c);
%V_r = V_r + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
%end;%for nkA=0:a_K-1;
V_r = V_r__(1+nk,tmp_nx);
%disp(sprintf(' %% V %f vs %f',V_r,V_r__(1+nk,tmp_nx)));
tmp_j1 = tmp_j1 + U_d*S*V_r;
end;%for nij=1:length(tmp_ij_);
tmp_j1__(1+nk,1+nl) = tmp_j1;
end;%for nk = 0:n_k-1;
end;%for nl = 0:n_l;
disp(sprintf(' %% norm(tmp_j0__ - tmp_j1__): %0.16f',norm(tmp_j0__-tmp_j1__,'fro')));
flag_disp=0;
if flag_disp;
colormap(colormap_beach());
subplot(1,3,1); imagesc(tmp_j0__); colorbar;
subplot(1,3,2); imagesc(tmp_j1__); colorbar;
subplot(1,3,3); imagesc(tmp_j0__-tmp_j1__); colorbar;
set(gcf,'Position',1+[0,0,1024*1.5,512]);
end;%if flag_disp;
%%%%%%%%;
%{
for nsvd3=1:n_svd3;
if (mod(nsvd3,5000)==0); disp(sprintf(' %% nsvd3 %d/%d',nsvd3,n_svd3)); end;
tmp_nx = svd3_nx_(nsvd3);
tmp_l2 = svd3_l2_(nsvd3);
if (tmp_l2==0);
tmp_m2 = svd3_m2_(nsvd3);
tmp_l1 = svd3_l1_(nsvd3);
tmp_m1 = svd3_m1_(nsvd3);
tmp_l3 = svd3_l3_(nsvd3);
tmp_m3 = svd3_m3_(nsvd3);
tmp_sy = svd3_sy_(nsvd3);
S = svd_s_(tmp_nx);
U_d = U_d_(tmp_nx);
V_r_ = V_r__(:,tmp_nx);
tmp_z1 = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (tmp_l3<=n_l & abs(tmp_m3)<=tmp_l3); tmp_a = a_k_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l & abs(tmp_m1)<=tmp_l1); tmp_b = b_k_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
%tmp_z1 = tmp_z1 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*U_d*tmp_sy*V_r_(1+nk);
%tmp_z1 = tmp_z1 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*U_d*S*V_r_(1+nk);
tmp_z1 = tmp_z1 + U_d*S*V_r_(1+nk);
end;%for nk = 0:n_k-1;
tmp_X1 = tmp_X1 + tmp_z1;
end;%if (tmp_l2==0);
end;%for nsvd3=1:n_svd3;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X1 time %0.2f',t_4)); end;
 %}
%%%%%%%%;
tmp_X1 = 0;
tic;
for tmp_l1=0:n_l; disp(sprintf(' %% tmp_l1 %d',tmp_l1)); for tmp_m1=-tmp_l1:+tmp_l1;
%disp(sprintf(' %% tmp_l1 %d tmp_m1 %d',tmp_l1,tmp_m1));
for tmp_l2=0:3; %for tmp_l2=0:7; 
for tmp_m2=-tmp_l2:+tmp_l2;
Llm_d__=legendre(tmp_l2,cos(1*pi-phi_d),'unnorm');
if (tmp_l2>0); Llm_d_ = squeeze(Llm_d__(1+abs(tmp_m2),:,:)); end; if (tmp_l2==0); Llm_d_ = Llm_d__(:,:); end;
a1=((2*tmp_l2+1)/(4*pi));
a2=exp(lfactorial(tmp_l2-abs(tmp_m2)) - lfactorial(tmp_l2+abs(tmp_m2)));
c=sqrt(a1*a2);
s=(-1)^((tmp_m2<0)*tmp_m2); % needed to preserve condon-shortley phase. ;
%s=1; % original phase ;
Ylm_d_ = s*c*Llm_d_(:).*exp(+i*tmp_m2*(1*pi+theta_d)); 
tmp_m3 = tmp_m1+tmp_m2;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z1 = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (tmp_l3<=n_l & abs(tmp_m3)<=tmp_l3); tmp_a = a_k_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l & abs(tmp_m1)<=tmp_l1); tmp_b = b_k_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_j1 = tmp_j1__(1+nk,1+tmp_l2);
tmp_z1 = tmp_z1 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j1*conj(Ylm_d_)*s;
%tmp_z1 = tmp_z1 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*tmp_j1;
%tmp_z1 = tmp_z1 + tmp_j1;
end;%for nk = 0:n_k-1;
tmp_X1 = tmp_X1 + tmp_z1;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l; for tmp_m1=-tmp_l1:+tmp_l1;
t_4=toc; if (verbose); disp(sprintf(' %% tmp_X1 time %0.2f',t_4)); end;
%%%%%%%%;
tmp_X2 = 0;
tic;
for tmp_l1=0:n_l; disp(sprintf(' %% tmp_l1 %d',tmp_l1)); for tmp_m1=-tmp_l1:+tmp_l1;
%disp(sprintf(' %% tmp_l1 %d tmp_m1 %d',tmp_l1,tmp_m1));
for tmp_l2=0:3; %for tmp_l2=0:7; 
for tmp_m2=-tmp_l2:+tmp_l2;
Llm_d__=legendre(tmp_l2,cos(1*pi-phi_d),'unnorm');
if (tmp_l2>0); Llm_d_ = squeeze(Llm_d__(1+abs(tmp_m2),:,:)); end; if (tmp_l2==0); Llm_d_ = Llm_d__(:,:); end;
a1=((2*tmp_l2+1)/(4*pi));
a2=exp(lfactorial(tmp_l2-abs(tmp_m2)) - lfactorial(tmp_l2+abs(tmp_m2)));
c=sqrt(a1*a2);
s=(-1)^((tmp_m2<0)*tmp_m2); % needed to preserve condon-shortley phase. ;
%s=1; % original phase ;
Ylm_d_ = s*c*Llm_d_(:).*exp(+i*tmp_m2*(1*pi+theta_d)); 
tmp_m3 = tmp_m1+tmp_m2;
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_symbol = symbol3j_0(tmp_l1,tmp_l2,tmp_l3,tmp_m1,tmp_m2,tmp_m3);
tmp_z2 = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (tmp_l3<=n_l & abs(tmp_m3)<=tmp_l3); tmp_a = a_k_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l & abs(tmp_m1)<=tmp_l1); tmp_b = b_k_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_j0 = tmp_j0__(1+nk,1+tmp_l2);
tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*4*pi*tmp_j0*conj(Ylm_d_)*s;
%tmp_z2 = tmp_z2 + k_val^2 * conj(tmp_a)*tmp_b*(i.^tmp_l2)*tmp_j0;
%tmp_z2 = tmp_z2 + tmp_j0;
end;%for nk = 0:n_k-1;
tmp_X2 = tmp_X2 + tmp_z2;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l; for tmp_m1=-tmp_l1:+tmp_l1;
t_5=toc; if (verbose); disp(sprintf(' %% tmp_X2 time %0.2f',t_5)); end;
disp(sprintf(' %% tmp_X0 %f+%fi vs tmp_X1 %f+%fi vs tmp_X2 %f+%fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2)));

%%%%%%%%;
tmp_X3 = 0;
tic;
for tmp_l1=0:n_l; for tmp_m1=-tmp_l1:+tmp_l1;
for tmp_l2=0:0; for tmp_m2=-tmp_l2:+tmp_l2;
tmp_m3 = tmp_m1+tmp_m2; 
for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
tmp_z3 = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (tmp_l3<=n_l & abs(tmp_m3)<=tmp_l3); tmp_a = a_k_(1+tmp_l3*(tmp_l3+1)+tmp_m3); end;
tmp_b = 0; if (tmp_l1<=n_l & abs(tmp_m1)<=tmp_l1); tmp_b = b_k_(1+tmp_l1*(tmp_l1+1)+tmp_m1); end;
tmp_j0 = tmp_j0__(1+nk,1+tmp_l2);
tmp_z3 = tmp_z3 + k_val^2 * conj(tmp_a)*tmp_b;
end;%for nk = 0:n_k-1;
tmp_X3 = tmp_X3 + tmp_z3;
end;%for tmp_l3=abs(tmp_l2-tmp_l1):(tmp_l2+tmp_l1);
end;end;%for tmp_l2=0:7; for tmp_m2=-tmp_l2:+tmp_l2;
end;end;%for tmp_l1=0:n_l; for tmp_m1=-tmp_l1:+tmp_l1;
t_5=toc; if (verbose); disp(sprintf(' %% tmp_X3 time %0.2f',t_5)); end;
disp(sprintf(' %% tmp_X0 %f+%fi vs tmp_X1 %f+%fi vs tmp_X2 %f+%fi vs tmp_X3 %f+%fi',real(tmp_X0),imag(tmp_X0),real(tmp_X1),imag(tmp_X1),real(tmp_X2),imag(tmp_X2),real(tmp_X3),imag(tmp_X3)));
%%%%%%%%%%%%%%%%;

for nm_b4 = 0:n_m_max-1;
m_b4 = -n_l_max + nm_b4; l_b4 = l_b1;
tmp_z = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (l_a3<=n_l & abs(m_a3)<=l_a3); tmp_a = a_k_(1+l_a3*(l_a3+1)+m_a3); end;
tmp_b = 0; if (l_b4<=n_l & abs(m_b4)<=l_b4); tmp_b = b_k_(1+l_b4*(l_b4+1)+m_b4); end;
tmp_wignerd = 0; if (l_b1<=n_l & abs(m_b4)<=l_b1 & abs(m_b1)<=l_b1); tmp_wignerd = W_{1+l_b1}(1 + l_b1 + m_b1,1 + l_b4 + m_b4); end;%if (abs(m_b4)<=l_b1 & abs(m_b1)<=l_b1);
tmp_z = tmp_z + k_val^2 * conj(tmp_a)*tmp_wignerd*tmp_b*(i.^tmp_l2)*tmp_sy*V_r_(1+nk);
end;%for nk = 0:n_k-1;
Z0_(1+nm_b1,1+nm_b4,1+nbeta,nsvd3_l2m2nx) = Z0_(1+nm_b1,1+nm_b4,1+nbeta,nsvd3_l2m2nx) + tmp_z;
end;%for nm_b4 = 0:n_m_max-1;
end;%for nij=1:length(tmp_ij_);
end;%for nbeta = 0:n_beta-1;
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
t_2=toc;
if (verbose); disp(sprintf(' %% Z0_: time %f',t_2)); end;
%%%%%%%%%%%%%%%%;
Z1_ = zeros(n_alpha,n_gamma,n_beta,n_svd3_l2m2nx);
tic;
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
for nbeta=0:n_beta-1;
if (fft_flag==0);
tmp_Z = recenter2(squeeze(Z0_(:,:,1+nbeta,nsvd3_l2m2nx)));
Z1_(:,:,1+nbeta,nsvd3_l2m2nx) = fft2(tmp_Z);
end;%if (fft_flag==0);
if (fft_flag==1);
[gamma__,alpha__] = meshgrid(gamma_,alpha_);
tmp_Z = decenter2(recenter2(squeeze(Z0_(:,:,1+nbeta,nsvd3_l2m2nx))));
tmp = nufft2d2(n_alpha*n_gamma,alpha__(:),gamma__(:),-1,1e-12,n_m_max,n_m_max,tmp_Z);
Z1_(:,:,1+nbeta,nsvd3_l2m2nx) = reshape(tmp,n_alpha,n_gamma);
end;%if (fft_flag==1);
end;%for nbeta=0:n_beta-1;
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
t_3=toc;
if (verbose); disp(sprintf(' %% Z1_: time %f',t_3)); end;
%%%%%%%%%%%%%%%%;
X0_ = zeros(n_alpha,n_gamma,n_beta,n_delta);
tic;
for ndelta=0:n_delta-1;
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
X0_(:,:,:,1+ndelta) = X0_(:,:,:,1+ndelta) + Y0_(1+ndelta,nsvd3_l2m2nx)*Z1_(:,:,:,nsvd3_l2m2nx);
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
end;%for ndelta=0:n_delta-1;
t_4=toc;
if (verbose); disp(sprintf(' %% X0_: time %f',t_4)); end;
%%%%%%%%%%%%%%%%;



n_l_max = n_l_(end);
m_max_ = -n_l_max : +n_l_max;
n_m_max = length(m_max_);
%if (nargin<=10);
fft_flag = 0; 
n_alpha = n_m_max;
n_gamma = n_m_max;
%end;%if (nargin<=8);
%if (nargin>=11 & nargin<=14); 
%fft_flag = 1;
%end;%if (nargin>=11 & nargin<=14);
%%%%%%%%;
n_delta = 1;
delta__ = zeros(3,n_delta);
delta__(:,1) = delta_;
%%%%%%%%;
Y0_ = zeros(n_delta,n_svd3_l2m2nx);
tic;
for ndelta=0:n_delta-1;
delta_ = delta__(:,1+ndelta);
delta_d = norm(delta_,'fro');
tmp = norm(delta_(1:2),'fro');
phi_d = atan2(tmp,delta_(3));
theta_d = atan2(delta_(2),delta_(1));
delta_ = delta_d*[cos(theta_d)*sin(phi_d),sin(theta_d)*sin(phi_d),cos(phi_d)];
disp(sprintf(' %% delta_ [%0+.4f %+0.4f %+0.4f] , delta_d %0.2f theta_d %.2f phi_d %.2f' , delta_,delta_d,theta_d,phi_d));
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
tmp_l2 = svd3_l2m2nx_(nsvd3_l2m2nx,1); tmp_m2 = svd3_l2m2nx_(nsvd3_l2m2nx,2); tmp_nx = svd3_l2m2nx_(nsvd3_l2m2nx,3);
assert(svd_l_(tmp_nx)==tmp_l2);
tmp_ij_ = intersectall({find(svd3_l2_==tmp_l2),find(svd3_m2_==tmp_m2),find(svd3_nx_==tmp_nx)});
l_val = tmp_l2;
Llm__=legendre(l_val,cos(1*pi-phi_d),'unnorm');
m_val = tmp_m2;
m_abs = abs(m_val);
if (l_val>0); Llm_ = squeeze(Llm__(1+m_abs,:,:)); end; if (l_val==0); Llm_ = Llm__(:,:); end;
a1=((2*l_val+1)/(4*pi));
a2=exp(lfactorial(l_val-m_abs) - lfactorial(l_val+m_abs));
c=sqrt(a1*a2);
s=(-1)^((m_val<0)*m_val); % needed to preserve condon-shortley phase. ;
%s=1; % original phase ;
Ylm_ = s*c*Llm_(:).*exp(+i*m_val*(1*pi+theta_d)); 
U_d = 0;
for nkB=0:b_K-1;
b_tmp = svd_d_Jv_{1+nkB}((delta_d - svd_d_m)/svd_d_c);
U_d = U_d + svd_U_d_(1+nkB,tmp_nx)*b_tmp;
end;% for nkB=0:b_K-1;
Y0_(1+ndelta,nsvd3_l2m2nx) = conj(Ylm_(:)) .* s .* U_d;
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
end;%for ndelta=0:n_delta-1;
t_0=toc;
if (verbose); disp(sprintf(' %% Y0_: time %f',t_0)); end;
%%%%%%%%%%%%%%%%;
verbose_tab = 0;
Z0_ = zeros(n_m_max,n_m_max,n_beta,n_svd3_l2m2nx);
tic;
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
tmp_l2 = svd3_l2m2nx_(nsvd3_l2m2nx,1); tmp_m2 = svd3_l2m2nx_(nsvd3_l2m2nx,2); tmp_nx = svd3_l2m2nx_(nsvd3_l2m2nx,3);
assert(svd_l_(tmp_nx)==tmp_l2);
tmp_ij_ = intersectall({find(svd3_l2_==tmp_l2),find(svd3_m2_==tmp_m2),find(svd3_nx_==tmp_nx)});
if (verbose); disp(sprintf(' %% nsvd3_l2m2nx %d/%d, %d sub-terms found',nsvd3_l2m2nx,n_svd3_l2m2nx,length(tmp_ij_))); end;
for nbeta = 0:n_beta-1;
% Note that rotating a molecule by [+alpha,+beta,+gamma] corresponds to rotating the coordinate-frame by [-gamma,-beta,-alpha] ;
W_ = wignerd_b(n_l_max,-beta_(1+nbeta));
for nij=1:length(tmp_ij_);
tmp_nx = svd3_nx_(tmp_ij_(nij));
tmp_l2 = svd3_l2_(tmp_ij_(nij));
tmp_m2 = svd3_m2_(tmp_ij_(nij));
tmp_l1 = svd3_l1_(tmp_ij_(nij));
tmp_m1 = svd3_m1_(tmp_ij_(nij));
tmp_l3 = svd3_l3_(tmp_ij_(nij));
tmp_m3 = svd3_m3_(tmp_ij_(nij));
tmp_sy = svd3_sy_(tmp_ij_(nij));
l_v2 = tmp_l2; m_v2 = tmp_m2; nm_v2 = n_l_max + m_v2;
l_a3 = tmp_l3; m_a3 = tmp_m3; nm_a3 = n_l_max + m_a3; 
l_b1 = tmp_l1; m_b1 = tmp_m1; nm_b1 = n_l_max + m_b1;
S = svd_s_(tmp_nx);
V_r_ = zeros(length(k_),1);
for nkA=0:a_K-1;
a_tmp = svd_r_Jv_{1+nkA}((2*pi*k_ - svd_r_m)/svd_r_c);
V_r_ = V_r_ + svd_V_r_(1+nkA,tmp_nx)*a_tmp;
end;%for nkA=0:a_K-1;
for nm_b4 = 0:n_m_max-1;
m_b4 = -n_l_max + nm_b4; l_b4 = l_b1;
tmp_z = 0;
for nk = 0:n_k-1;
k_val = k_(1+nk); n_l = n_l_(1+nk); n_lm = (1+n_l)*(1+n_l);
ix_base = sum(n_lm_(1:1+nk-1)); a_k_ = a_(ix_base + (1:n_lm)); b_k_ = b_(ix_base + (1:n_lm));
tmp_a = 0; if (l_a3<=n_l & abs(m_a3)<=l_a3); tmp_a = a_k_(1+l_a3*(l_a3+1)+m_a3); end;
tmp_b = 0; if (l_b4<=n_l & abs(m_b4)<=l_b4); tmp_b = b_k_(1+l_b4*(l_b4+1)+m_b4); end;
tmp_wignerd = 0; if (l_b1<=n_l & abs(m_b4)<=l_b1 & abs(m_b1)<=l_b1); tmp_wignerd = W_{1+l_b1}(1 + l_b1 + m_b1,1 + l_b4 + m_b4); end;%if (abs(m_b4)<=l_b1 & abs(m_b1)<=l_b1);
tmp_z = tmp_z + k_val^2 * conj(tmp_a)*tmp_wignerd*tmp_b*(i.^tmp_l2)*tmp_sy*V_r_(1+nk);
end;%for nk = 0:n_k-1;
Z0_(1+nm_b1,1+nm_b4,1+nbeta,nsvd3_l2m2nx) = Z0_(1+nm_b1,1+nm_b4,1+nbeta,nsvd3_l2m2nx) + tmp_z;
end;%for nm_b4 = 0:n_m_max-1;
end;%for nij=1:length(tmp_ij_);
end;%for nbeta = 0:n_beta-1;
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
t_2=toc;
if (verbose); disp(sprintf(' %% Z0_: time %f',t_2)); end;
%%%%%%%%%%%%%%%%;
Z1_ = zeros(n_alpha,n_gamma,n_beta,n_svd3_l2m2nx);
tic;
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
for nbeta=0:n_beta-1;
if (fft_flag==0);
tmp_Z = recenter2(squeeze(Z0_(:,:,1+nbeta,nsvd3_l2m2nx)));
Z1_(:,:,1+nbeta,nsvd3_l2m2nx) = fft2(tmp_Z);
end;%if (fft_flag==0);
if (fft_flag==1);
[gamma__,alpha__] = meshgrid(gamma_,alpha_);
tmp_Z = decenter2(recenter2(squeeze(Z0_(:,:,1+nbeta,nsvd3_l2m2nx))));
tmp = nufft2d2(n_alpha*n_gamma,alpha__(:),gamma__(:),-1,1e-12,n_m_max,n_m_max,tmp_Z);
Z1_(:,:,1+nbeta,nsvd3_l2m2nx) = reshape(tmp,n_alpha,n_gamma);
end;%if (fft_flag==1);
end;%for nbeta=0:n_beta-1;
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
t_3=toc;
if (verbose); disp(sprintf(' %% Z1_: time %f',t_3)); end;
%%%%%%%%%%%%%%%%;
X0_ = zeros(n_alpha,n_gamma,n_beta,n_delta);
tic;
for ndelta=0:n_delta-1;
for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
X0_(:,:,:,1+ndelta) = X0_(:,:,:,1+ndelta) + Y0_(1+ndelta,nsvd3_l2m2nx)*Z1_(:,:,:,nsvd3_l2m2nx);
end;%for nsvd3_l2m2nx=1:n_svd3_l2m2nx;
end;%for ndelta=0:n_delta-1;
t_4=toc;
if (verbose); disp(sprintf(' %% X0_: time %f',t_4)); end;
%%%%%%%%%%%%%%%%;

colormap(colormap_beach());
subplot(2,2,1); imagesc(real(X1_)); colorbar; title('real(X1)');
subplot(2,2,2); imagesc(imag(X1_)); colorbar; title('imag(X1)');
subplot(2,2,3); imagesc(real(X0_)); colorbar; title('real(X0)');
subplot(2,2,4); imagesc(imag(X0_)); colorbar; title('imag(X0)');
set(gcf,'Position',1+[0,0,1024*1.5,1024]);



