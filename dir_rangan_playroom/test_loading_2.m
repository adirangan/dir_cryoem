clear;
%%%%%%%%;
% First define integral of <f,f>. ;
%%%%%%%%;
h2d_ = @(kd) 4*pi^2*(besselj(0,kd) + besselj(2,kd)); % calculates <f_j,f_k>, normalized so that <f,f> = (4*pi^2);
dh2d_ = @(kd) 4*pi^3*(besselj(-1,kd) - besselj(+3,kd));
h3d_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3;
dh3d_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;
%%%%%%%%;
verbose=1; nf=0;
tolerance_master = 1e-2; %<-- used to determine accuracy. ;
if (verbose); disp(sprintf(' %% [test_loading_1.m]')); end;
%%%%%%%%;
half_diameter_x_c = 1.0d0;
diameter_x_c = 2.0d0*half_diameter_x_c;
x_p_r_max = 1.0;
x_u_res = 64;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,x_u_res);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,x_u_res);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,x_u_res);
[X_u_0_,X_u_1_,X_u_2_] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_X_u = x_u_res^3;
X_u_weight_ = (2*x_p_r_max/x_u_res)^3;
%%%%%%%%;
k_p_r_max = 48/(2*pi); k_eq_d = 1.0/max(1e-12,k_p_r_max); TorL = 'L';
%%%%%%%%;
tmp_t = tic();
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,J_node_ ...
,J_weight_ ...
,J_chebfun_ ...
,J_polyval_ ...
] = ...
sample_sphere_7( ...
 verbose ...
,k_p_r_max ...
,k_eq_d ...
,TorL ...
) ;
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% sample_sphere_7: %0.2fs',tmp_t)); end;
if (verbose); disp(sprintf(' %% k_p_r_max %0.2f k_eq_d %0.2f n_k_all %d n_k_p_r %d',k_p_r_max,k_eq_d,n_k_all,n_k_p_r)); end;
%%%%%%%%;
l_max_upb = 36;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
% n_molecule different molecules ;
% Each synthetic volume a_x_c__{1+nmolecule} will be a sum of point-sources with random locations drawn from centered uniform gaussian. ;
% Thus, a_k_p__{1+nmolecule} will be a sum of plane-waves with frequencies drawn from centered uniform gaussian. ;
%%%%%%%%;
n_molecule = 3;
n_delta_orig = 32;
delta_orig_dsm___ = zeros(3,n_delta_orig,n_molecule);
rng(0);
for nmolecule=0:n_molecule-1;
for ndelta_orig=0:n_delta_orig-1;
if (nmolecule==0); delta_orig_ = 0.15*(2*rand(3,1)-1); end;
if (nmolecule> 0);
delta_orig_ = delta_orig_dsm___(:,1+ndelta_orig,1+0);
delta_orig_ = delta_orig_ + (nmolecule/n_molecule)*0.25*sin(2*pi*ndelta_orig/(n_delta_orig-1))*[1;0;0];
end;%if (nmolecule> 0);
delta_orig_dsm___(:,1+ndelta_orig,1+nmolecule) = delta_orig_;
end;%for ndelta_orig=0:n_delta_orig-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
a_k_p_orig_km__ = zeros(n_k_all,n_molecule);
for nmolecule=0:n_molecule-1;
for ndelta_orig=0:n_delta_orig-1;
delta_orig_ = delta_orig_dsm___(:,1+ndelta_orig,1+nmolecule);
a_k_p_orig_km__(:,1+nmolecule) = a_k_p_orig_km__(:,1+nmolecule) + exp(+2*pi*i*(k_c_0_all_*delta_orig_(1+0) + k_c_1_all_*delta_orig_(1+1) + k_c_2_all_*delta_orig_(1+2)));
end;%for ndelta_orig=0:n_delta_orig-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
% reconstruct a_x_u_ in x_c_space. ;
%%%%%%%%;
for nmolecule=0:n_molecule-1;
tmp_t = tic;
tmp_eta = pi/k_p_r_max;
a_x_u_reco_xm__(:,1+nmolecule) = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*tmp_eta,2*pi*k_c_1_all_*tmp_eta,2*pi*k_c_2_all_*tmp_eta,a_k_p_orig_km__(:,1+nmolecule).*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_X_u,X_u_0_(:)/tmp_eta,X_u_1_(:)/tmp_eta,X_u_2_(:)/tmp_eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
a_x_u_reco_xm__(:,1+nmolecule) = real(a_x_u_reco_xm__(:,1+nmolecule));
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_x_u_reco_ time %0.2fs',tmp_t));
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(1+nf);nf=nf+1;figbig;
for nmolecule=0:n_molecule-1;
subplot(1,n_molecule,1+nmolecule);
isosurface_f_x_u_0(reshape(a_x_u_reco_xm__(:,1+nmolecule),x_u_res,x_u_res,x_u_res),[90,95,99]);
axis equal; axis vis3d; xlabel('x'); ylabel('y'); zlabel('z');
end;%for nmolecule=0:n_molecule-1;
end;%if flag_plot;
%%%%%%%%;
% a_k_Y_form_ represents a_k_p_orig_. ;
%%%%%%%%;
a_k_Y_form_ym__ = zeros(n_lm_sum,n_molecule);
for nmolecule=0:n_molecule-1;
for ndelta_orig=0:n_delta_orig-1;
delta_orig_ = delta_orig_dsm___(:,1+ndelta_orig,1+nmolecule);
delta_orig_r012 = sqrt(delta_orig_(1+0)^2 + delta_orig_(1+1)^2 + delta_orig_(1+2)^2);
delta_orig_r01 = sqrt(delta_orig_(1+0)^2 + delta_orig_(1+1)^2);
delta_orig_polar_a = atan2(delta_orig_r01,delta_orig_(1+2));
delta_orig_azimu_b = atan2(delta_orig_(1+1),delta_orig_(1+0));
delta_Ylm_ = get_Ylm__(1+l_max_max,0:l_max_max,1,delta_orig_azimu_b,delta_orig_polar_a);
na=0;
for nk_p_r=0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
l_max = l_max_(1+nk_p_r);
for l_val=0:l_max;
tmp_x = 2*pi*k_p_r*delta_orig_r012;
tmp_jl = besselj(l_val+0.5,tmp_x)*sqrt(pi/(2*tmp_x));
for m_val=-l_val:+l_val;
a_k_Y_form_ym__(1+na,1+nmolecule) = a_k_Y_form_ym__(1+na,1+nmolecule) + 4*pi * i^l_val * tmp_jl * conj(delta_Ylm_{1+l_val}(1+m_val+l_val));
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
end;%for nk_p_r=0:n_k_p_r-1;
assert(na==n_lm_sum);
end;%for ndelta_orig=0:n_delta_orig-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
% choose l_max based on tolerance_master. ;
%%%%%%%%;
a_k_Y_norm_lm__ = zeros(1+l_max_max,n_molecule);
for nmolecule=0:n_molecule-1;
for l_val=0:l_max_max;
a_k_Y_norm_lm__(1+l_val,1+nmolecule) = fnorm(a_k_Y_form_ym__(1+efind(Y_l_val_==l_val),1+nmolecule));
end;%for l_val=0:l_max_max;
end;%for nmolecule=0:n_molecule-1;
a_k_Y_norm_lm__ = sqrt(cumsum(a_k_Y_norm_lm__.^2,1));
a_k_Y_norm_lm__ = bsxfun(@times,a_k_Y_norm_lm__,1./max(a_k_Y_norm_lm__,[],1));
a_k_Y_norm_l_ = max(a_k_Y_norm_lm__,[],2);
l_max_max_use = min(find(a_k_Y_norm_l_> 1-tolerance_master*1e-1));
a_k_Y_form_ym__ = a_k_Y_form_ym__(1+efind(Y_l_val_<=l_max_max_use),:);
l_max_max = l_max_max_use;
%%%%%%%%;
% redefine Y indices. ;
%%%%%%%%;
l_max_upb = l_max_max;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
% generate templates S_k_p_ on k_p_ grid with uniform n_w_. ;
%%%%%%%%;
n_w_max = 2*(l_max_max+1);
n_w_max = 4*(l_max_max+1); %<-- increase this slightly for this example. ;
template_k_eq_d = -1;
viewing_k_eq_d = k_eq_d*8;
for nmolecule=0:n_molecule-1;
tmp_t = tic();
[ ...
 S_k_p_wnSm___(:,:,1+nmolecule) ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_k_all_ ...
,n_viewing_all ...
,viewing_azimu_b_all_ ...
,viewing_polar_a_all_ ...
,viewing_weight_all_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,template_k_c_0__ ...
,template_k_c_1__ ...
,template_k_c_2__ ...
] = ...
get_template_1( ...
 0*verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_form_ym__(:,1+nmolecule) ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_max*ones(n_k_p_r,1) ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% get_template_1: %0.2fs',tmp_t)); end;
if (verbose); disp(sprintf(' %% n_viewing_all %d n_viewing_polar_a %d n_w_max %d',n_viewing_all,n_viewing_polar_a,max(n_w_))); end;
end;%for nmolecule=0:n_molecule-1;
n_S = n_viewing_all; n_w_max = max(n_w_); n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(1+nf);nf=nf+1;clf;figbig;
for nmolecule=0:n_molecule-1;
n_l = 5;
for nl=0:n_l-1;
subplot(n_molecule,n_l,1+nl+nmolecule*n_l); nS = max(0,min(n_S-1,floor(n_S*nl/n_l)));
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(S_k_p_wnSm___(:,1+nS,1+nmolecule)),sqrt(n_delta_orig)*[-1,+1],colormap_80s);
axis equal; axisnotick; title(sprintf('nS %d nm %d',nS,nmolecule));
end;%for nl=0:n_l-1;
end;%for nmolecule=0:n_molecule-1;
sgtitle(sprintf('Sample S_k_p__'),'Interpreter','none');
end;%if flag_plot;
%%%%%%%%;
S_k_q_wnSm___ = zeros(n_w_sum,n_S,n_molecule);
for nmolecule=0:n_molecule-1;
for nS=0:n_S-1;
S_k_q_wnSm___(:,1+nS,1+nmolecule) = ...
interp_p_to_q( ...
 n_k_p_r ...
,n_w_ ...
,n_w_sum ...
,S_k_p_wnSm___(:,1+nS,1+nmolecule) ...
);
end;%for nS=0:n_S-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
% Images drawn from templates. ;
% Random in-plane rotations and shifts. ;
% Synthetic ctfs are sinusoids. ;
% Roughly 50 images per ctf. ;
%%%%%%%%;
n_M = n_S;
euler_polar_a_true_ = zeros(n_M,1);
euler_azimu_b_true_ = zeros(n_M,1);
euler_gamma_z_true_ = zeros(n_M,1);
delta_r_max = 0.10;
image_delta_x_true_ = zeros(n_M,1);
image_delta_y_true_ = zeros(n_M,1);
image_delta_r_true_ = zeros(n_M,1);
T_k_p_wnMm___ = zeros(n_w_sum,n_M,n_molecule);
M_k_p_wnMm___ = zeros(n_w_sum,n_M,n_molecule);
rng(0);
for nM=0:n_M-1;
euler_polar_a_true_(1+nM) = viewing_polar_a_all_(1+nM);
euler_azimu_b_true_(1+nM) = viewing_azimu_b_all_(1+nM);
euler_gamma_z_true_(1+nM) = 2*pi*rand();
image_delta_x_true_(1+nM) = delta_r_max*(2*rand()-1);
image_delta_y_true_(1+nM) = delta_r_max*(2*rand()-1);
image_delta_r_true_(1+nM) = sqrt( image_delta_x_true_(1+nM).^2 + image_delta_y_true_(1+nM).^2 );
end;%for nM=0:n_M-1;
for nmolecule=0:n_molecule-1;
for nM=0:n_M-1;
T_k_p_ = S_k_p_wnSm___(:,1+nM,1+nmolecule);
T_k_p_ = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_,+euler_gamma_z_true_(1+nM));
T_k_p_ = transf_p_to_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,T_k_p_,-image_delta_x_true_(1+nM),-image_delta_y_true_(1+nM));
T_k_p_wnMm___(:,1+nM,1+nmolecule) = T_k_p_;
end;%for nM=0:n_M-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
n_ctf = max(1,floor(n_M/50));
CTF_index_ = sort(mod(transpose(0:n_M-1),n_ctf));
CTF_k_p__ = zeros(n_w_sum,n_ctf);
CTF_k_p_r__ = zeros(n_k_p_r,n_ctf);
rng(0);
for nctf=0:n_ctf-1;
CTF_k_p_r__(:,1+nctf) = sin(k_p_r_*(1+0.25*rand()));
for nk_p_r=0:n_k_p_r-1;
index_nw_ = n_w_csum_(1+nk_p_r) + (0:n_w_(1+nk_p_r)-1);
CTF_k_p__(1+index_nw_,1+nctf) = CTF_k_p_r__(1+nk_p_r,1+nctf);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nctf=0:n_ctf-1;
SCTF_ = svd(CTF_k_p_r__(:,1+CTF_index_)); %<-- weighted average. ;
n_CTF_rank = min(efind(cumsum(SCTF_,'reverse')/sum(SCTF_)<tolerance_master));
[UCTF_kc__,SCTF_c__,VCTF_Mc__] = svds(CTF_k_p_r__(:,1+CTF_index_),n_CTF_rank);
VSCTF_Mc__ = VCTF_Mc__*SCTF_c__;
for nmolecule=0:n_molecule-1;
for nM=0:n_M-1;
nctf = CTF_index_(1+nM);
M_k_p_ = T_k_p_wnMm___(:,1+nM,1+nmolecule);
M_k_p_wr__ = reshape(M_k_p_,[n_w_max,n_k_p_r]);
M_k_p_wr__ = M_k_p_wr__*diag(CTF_k_p_r__(:,1+nctf));
M_k_p_ = M_k_p_wr__(:);
M_k_p_wnMm___(:,1+nM,1+nmolecule) = M_k_p_;
end;%for nM=0:n_M-1;
end;%for nmolecule=0:n_molecule-1;
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(1+nf);nf=nf+1;clf;figbig;
for nmolecule=0:n_molecule-1;
n_l = 5;
for nl=0:n_l-1;
subplot(n_molecule,n_l,1+nl+nmolecule*n_l); nM = max(0,min(n_M-1,floor(n_M*nl/n_l)));
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(M_k_p_wnMm___(:,1+nM,1+nmolecule)),sqrt(n_delta_orig)*[-1,+1],colormap_80s);
axis equal; axisnotick; title(sprintf('nM %d nm %d',nM,nmolecule));
end;%for nl=0:n_l-1;
end;%for nmolecule=0:n_molecule-1;
sgtitle(sprintf('Mample M_k_p__'),'Interpreter','none');
end;%if flag_plot;
%%%%%%%%;
% Now determine the CTF cross correlation. ;
% This depends  on CTF_index_. ;
%%%%%%%%;
CTF_avg_k_p_r_ = mean(CTF_k_p_r__(:,1+CTF_index_),2);
CTF_k_p_r_xavg__ = CTF_avg_k_p_r_ * transpose(CTF_avg_k_p_r_);
CTF_k_p_r_xcor__ = CTF_k_p_r__(:,1+CTF_index_) * transpose(CTF_k_p_r__(:,1+CTF_index_)) / n_M;
%%%%%%%%;
a_k_Y_form_avg_y_ = mean(a_k_Y_form_ym__,2);
T_k_p_avg_wnM__ = mean(T_k_p_wnMm___,3);
M_k_p_avg_wnM__ = mean(M_k_p_wnMm___,3);
%%%%%%%%;
n_UX_rank = n_k_p_r - 1 ; %<-- just a little different to check for errors. ;
delta_sigma = 1.0 * std([image_delta_x_true_ ; image_delta_y_true_],1); %<-- no reduction. ;
[X_2d_xcor_d1__,X_2d_xcor_d1_weight_r_] = principled_marching_cost_matrix_5(n_k_p_r,k_p_r_,weight_2d_k_p_r_,l_max_,[],[],a_k_Y_form_avg_y_,CTF_k_p_r_xcor__,delta_sigma);
[UX_2d_xcor_d1__,SX_2d_xcor_d1__,VX_2d_xcor_d1__] = svds(X_2d_xcor_d1__,n_UX_rank); SX_2d_xcor_d1_ = diag(SX_2d_xcor_d1__);
[X_2d_Memp_d1__,X_2d_Memp_d1_weight_r_] = principled_marching_empirical_cost_matrix_0(n_k_p_r,k_p_r_,weight_2d_k_p_r_,n_w_,n_M,M_k_p_avg_wnM__);
[UX_2d_Memp_d1__,SX_2d_Memp_d1__,VX_2d_Memp_d1__] = svds(X_2d_Memp_d1__,n_UX_rank); SX_2d_Memp_d1_ = diag(SX_2d_Memp_d1__);
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(1+nf);nf=nf+1;clf;figmed;figbeach();
np=0;
subplot(2,3,1+np);np=np+1; imagesc(X_2d_xcor_d1__); axis image; axisnotick; title(sprintf('X_2d_xcor_d1__'),'Interpreter','none');
subplot(2,3,1+np);np=np+1; imagesc(UX_2d_xcor_d1__); axis image; axisnotick; title(sprintf('UX_2d_xcor_d1__'),'Interpreter','none');
subplot(2,3,1+np);np=np+1; plot(SX_2d_xcor_d1_,'ko-'); title(sprintf('SX_2d_xcor_d1__'),'Interpreter','none');
subplot(2,3,1+np);np=np+1; imagesc(X_2d_Memp_d1__); axis image; axisnotick; title(sprintf('X_2d_Memp_d1__'),'Interpreter','none');
subplot(2,3,1+np);np=np+1; imagesc(UX_2d_Memp_d1__); axis image; axisnotick; title(sprintf('UX_2d_Memp_d1__'),'Interpreter','none');
subplot(2,3,1+np);np=np+1; plot(SX_2d_Memp_d1_,'ko-'); title(sprintf('SX_2d_Memp_d1__'),'Interpreter','none');
sgtitle(sprintf('Cost function kernels'),'Interpreter','none');
end;%if flag_plot;
%%%%%%%%;
% Decide which score to use. ;
% Here they are both very similar. ;
%%%%%%%%;
str_cost = sprintf('Memp');
%%%%%%%%;
if strfind(str_cost,'2d_xcor');
X__ = X_2d_xcor_d1__ ;
X_weight_r_ = X_2d_xcor_d1_weight_r_ ;
UX__ = UX_2d_xcor_d1__ ;
SX__ = diag(SX_2d_xcor_d1_) ;
SX_ = SX_2d_xcor_d1_ ;
VX__ = VX_2d_xcor_d1__ ;
end;%if strfind(str_cost,'2d_xcor');
%%%%%%%%;
if strfind(str_cost,'Memp');
X__ = X_2d_Memp_d1__ ;
X_weight_r_ = X_2d_Memp_d1_weight_r_ ;
UX__ = UX_2d_Memp_d1__ ;
SX__ = diag(SX_2d_Memp_d1_) ;
SX_ = SX_2d_Memp_d1_ ;
VX__ = VX_2d_Memp_d1__ ;
end;%if strfind(str_cost,'Memp');
%%%%%%%%;
pm_n_UX_rank = max(find(SX_>SX_(1)*tolerance_master)); pm_n_k_p_r = pm_n_UX_rank;
disp(sprintf(' %% pm_n_UX_rank %d/%d',pm_n_UX_rank,n_UX_rank));

flag_check=0;
if flag_check;
%%%%%%%%;
% Now check principal-images at zero-displacement. ;
%%%%%%%%;
N_k_p__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
tmp_N_k_p_ = transf_p_to_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,M_k_p_avg_wnM__(:,1+nM),+image_delta_x_true_(1+nM),+image_delta_y_true_(1+nM));
tmp_N_k_p_ = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,tmp_N_k_p_,-euler_gamma_z_true_(1+nM));
tmp_N_k_p__ = reshape(tmp_N_k_p_,n_w_max,n_k_p_r);
N_k_p__(:,1+nM) = tmp_N_k_p__(:);
end;%for nM=0:n_M-1;
%%%%%%%%;
N_k_q__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
N_k_q__(:,1+nM) = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,N_k_p__(:,1+nM));
end;%for nM=0:n_M-1;
%%%%%%%%;
UX_N_k_q_wnM_0___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- brute. ;
UX_N_k_p_wnM_0___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- brute. ;
UX_N_k_q_wnM_1___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- blas. ;
UX_N_k_p_wnM_1___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- blas. ;
UX_N_k_q_wnM_2___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- tpmh. ;
UX_N_k_p_wnM_2___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- tpmh. ;
UX_N_k_p_wnM_3___ = zeros(n_w_max,pm_n_UX_rank,n_M); %<-- brute. ;
%%%%;
tmp_t = tic();
for nM=0:n_M-1;
tmp_N_k_p_ = N_k_p__(:,1+nM);
tmp_N_k_q_ = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,tmp_N_k_p_);
for tmp_nUX_rank=0:pm_n_UX_rank-1;
tmp_UX_N_k_q_ = zeros(n_w_max,1);
for nk_p_r=0:n_k_p_r-1;
tmp_n_w = n_w_(1+nk_p_r);
tmp_n_w_2 = round(tmp_n_w/2);
tmp_index_set_ = (0:tmp_n_w_2-1); tmp_index_get_ = n_w_csum_(1+nk_p_r)+(0:tmp_n_w_2-1);
tmp_UX_N_k_q_(1+tmp_index_set_) = tmp_UX_N_k_q_(1+tmp_index_set_) + UX__(1+nk_p_r,1+tmp_nUX_rank)*X_weight_r_(1+nk_p_r)*tmp_N_k_q_(1+tmp_index_get_);
tmp_index_set_ = (tmp_n_w_2+1:tmp_n_w-1)-tmp_n_w+n_w_max; tmp_index_get_ = n_w_csum_(1+nk_p_r)+(tmp_n_w_2+1:tmp_n_w-1);
tmp_UX_N_k_q_(1+tmp_index_set_) = tmp_UX_N_k_q_(1+tmp_index_set_) + UX__(1+nk_p_r,1+tmp_nUX_rank)*X_weight_r_(1+nk_p_r)*tmp_N_k_q_(1+tmp_index_get_);
end;%for nk_p_r=0:n_k_p_r-1;
UX_N_k_q_wnM_0___(:,1+tmp_nUX_rank,1+nM) = tmp_UX_N_k_q_;
UX_N_k_p_wnM_0___(:,1+tmp_nUX_rank,1+nM) = interp_q_to_p(1,n_w_max,n_w_max,tmp_UX_N_k_q_);
end;%for tmp_nUX_rank=0:pm_n_UX_rank-1;
end;%for nM=0:n_M-1;
tmp_t = toc(tmp_t); disp(sprintf(' %% UX_N_k_p_wnM_0___: %0.6fs',tmp_t));
%%%%;
tmp_t = tic();
for nM=0:n_M-1;
tmp_N_k_p_ = N_k_p__(:,1+nM);
for tmp_nUX_rank=0:pm_n_UX_rank-1;
tmp_UX_N_k_p_ = zeros(n_w_max,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_0in_ = n_w_csum_(1+nk_p_r) + (0:n_w_(1+nk_p_r)-1);
tmp_index_out_ = 0:n_w_(1+nk_p_r)-1;
tmp_UX_N_k_p_(1+tmp_index_out_) = tmp_UX_N_k_p_(1+tmp_index_out_) + UX__(1+nk_p_r,1+tmp_nUX_rank)*X_weight_r_(1+nk_p_r)*tmp_N_k_p_(1+tmp_index_0in_);
end;%for nk_p_r=0:n_k_p_r-1;
UX_N_k_p_wnM_3___(:,1+tmp_nUX_rank,1+nM) = tmp_UX_N_k_p_;
end;%for tmp_nUX_rank=0:pm_n_UX_rank-1;
end;%for nM=0:n_M-1;
tmp_t = toc(tmp_t); disp(sprintf(' %% UX_N_k_p_wnM_3___: %0.6fs',tmp_t));
%%%%;
tmp_t = tic();
[UX_N_k_q_wnM_1___,UX_N_k_p_wnM_1___] = ampmh_M_k_p__to_UX_M_k_p_wnM___0(n_k_p_r,k_p_r_,n_w_,pm_n_UX_rank,UX__,X_weight_r_,n_M,N_k_p__,N_k_q__,zeros(n_M,1),zeros(n_M,1));
tmp_t = toc(tmp_t); disp(sprintf(' %% UX_N_k_p_wnM_1___: %0.6fs',tmp_t));
%%%%;
tmp_t = tic();
FTK = ampmh_FTK_1(n_k_p_r,k_p_r_,k_p_r_max,0,1e-2,1);
svd_VUXN_avg_lwnM____(:,:,:,:) = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_M,N_k_q__(:,:),pm_n_UX_rank,UX__,X_weight_r_);
[UX_N_k_q_wnM_2___,UX_N_k_p_wnM_2___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,pm_n_UX_rank,n_M,svd_VUXN_avg_lwnM____,[],[]);
tmp_t = toc(tmp_t); disp(sprintf(' %% UX_N_k_p_wnM_2___: %0.6fs',tmp_t));
%%%%;
flag_plot=0;
if flag_plot;
figure(1);clf;figbig;
for tmp_nUX_rank=0:pm_n_UX_rank-1;
tmp_0_ = UX_N_k_q_wnM_0___(:,1+tmp_nUX_rank,:);
tmp_1_ = UX_N_k_q_wnM_1___(:,1+tmp_nUX_rank,:);
tmp_2_ = UX_N_k_q_wnM_2___(:,1+tmp_nUX_rank,:);
subplot(4,pm_n_UX_rank,1+0*pm_n_UX_rank+tmp_nUX_rank); 
plot(real(tmp_0_(:)),real(tmp_1_(:)),'.'); title(sprintf('mode %d: real',tmp_nUX_rank)); axis equal; grid on;
subplot(4,pm_n_UX_rank,1+1*pm_n_UX_rank+tmp_nUX_rank); 
plot(imag(tmp_0_(:)),imag(tmp_1_(:)),'.'); title(sprintf('mode %d: imag',tmp_nUX_rank)); axis equal; grid on;
disp(sprintf(' %% mode %d: UX_N_k_q_wnM_0___ vs UX_N_k_q_wnM_1___: %0.16f',tmp_nUX_rank,fnorm(tmp_0_-tmp_1_)/fnorm(tmp_0_)));
subplot(4,pm_n_UX_rank,1+2*pm_n_UX_rank+tmp_nUX_rank); 
plot(real(tmp_0_(:)),real(tmp_2_(:)),'.'); title(sprintf('mode %d: real',tmp_nUX_rank)); axis equal; grid on;
subplot(4,pm_n_UX_rank,1+3*pm_n_UX_rank+tmp_nUX_rank); 
plot(imag(tmp_0_(:)),imag(tmp_2_(:)),'.'); title(sprintf('mode %d: imag',tmp_nUX_rank)); axis equal; grid on;
disp(sprintf(' %% mode %d: UX_N_k_q_wnM_0___ vs UX_N_k_q_wnM_2___: %0.16f',tmp_nUX_rank,fnorm(tmp_0_-tmp_2_)/fnorm(tmp_0_)));
clear tmp_0_ tmp_1_ tmp_2_;
end;%for tmp_nUX_rank=0:pm_n_UX_rank-1;
end;%if flag_plot;
disp(sprintf(' %% UX_N_k_q_wnM_0___ vs UX_N_k_q_wnM_1___: %0.16f',fnorm(UX_N_k_q_wnM_0___-UX_N_k_q_wnM_1___)/fnorm(UX_N_k_q_wnM_0___)));
disp(sprintf(' %% UX_N_k_p_wnM_0___ vs UX_N_k_p_wnM_1___: %0.16f',fnorm(UX_N_k_p_wnM_0___-UX_N_k_p_wnM_1___)/fnorm(UX_N_k_p_wnM_0___)));
disp(sprintf(' %% UX_N_k_p_wnM_0___ vs UX_N_k_p_wnM_3___: %0.16f',fnorm(UX_N_k_p_wnM_0___-UX_N_k_p_wnM_3___)/fnorm(UX_N_k_p_wnM_0___)));
disp(sprintf(' %% UX_N_k_q_wnM_0___ vs UX_N_k_q_wnM_2___: %0.16f',fnorm(UX_N_k_q_wnM_0___-UX_N_k_q_wnM_2___)/fnorm(UX_N_k_q_wnM_0___)));
disp(sprintf(' %% UX_N_k_p_wnM_0___ vs UX_N_k_p_wnM_2___: %0.16f',fnorm(UX_N_k_p_wnM_0___-UX_N_k_p_wnM_2___)/fnorm(UX_N_k_p_wnM_0___)));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Now form stack of principal-volume-shells a_CTF_avg_UX_Y_form__ ;
%%%%%%%%;
a_CTF_avg_UX_Y_form_avg__ = zeros(n_lm_max,n_UX_rank);
for nUX_rank=0:n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_l_max = l_max_(1+nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
a_CTF_avg_UX_Y_form_avg__(1:tmp_n_lm,1+nUX_rank) = a_CTF_avg_UX_Y_form_avg__(1:tmp_n_lm,1+nUX_rank) + UX__(1+nk_p_r,1+nUX_rank)*X_weight_r_(1+nk_p_r)*a_k_Y_form_avg_y_(1+tmp_index_)*CTF_avg_k_p_r_(1+nk_p_r); %<-- use average CTF here, under the assumption that a_CTF_avg_UX_Y_form_ will be used alone. ;
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nUX_rank=0:n_UX_rank-1;
%%%%%%%%;
% Calculate a few principal-templates for visualization. ;
%%%%%%%%;
[ ...
 UX_CTF_avg_S_k_p_avg__ ...
,~ ...
,~ ...
,~ ...
,tmp_n_S ...
] = ...
get_template_1( ...
 0*verbose ...
,n_UX_rank ...
,ones(n_UX_rank,1) ...
,1 ...
,ones(n_UX_rank,1) ...
,l_max_max*ones(n_UX_rank,1) ...
,a_CTF_avg_UX_Y_form_avg__(:) ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_max*ones(n_UX_rank,1) ...
);
%%%%;
UX_CTF_avg_S_k_q_avg__ = zeros(n_w_max*n_UX_rank,tmp_n_S);
for nS=0:tmp_n_S-1;
UX_CTF_avg_S_k_q_avg__(:,1+nS) = ...
interp_p_to_q( ...
 n_UX_rank ...
,n_w_max*ones(n_UX_rank,1) ...
,n_w_max*n_UX_rank ...
,UX_CTF_avg_S_k_p_avg__(:,1+nS) ...
);
end;%for nS=0:tmp_n_S-1;
%%%%%%%%%%%%%%%%;

%%%%%%%%;
flag_check=0;
if flag_check;
%%%%%%%%;
% check full reconstruction without ctf. ;
%%%%%%%%;
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +1.0*image_delta_x_true_;
tmp_image_delta_y_ = +1.0*image_delta_y_true_;
tmp_CTF_k_p__ = ones(n_w_sum,n_ctf);
%%%%%%%%;
tmp_t = tic;
b_k_Y_reco_avg_y_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,T_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> b_k_Y_reco_ time %0.2fs',tmp_t));
[b_X_best_reco] = register_spharm_to_spharm_wigner_wrap_1(n_k_p_r,k_p_r_,k_p_r_max,weight_3d_k_p_r_,0,l_max_,a_k_Y_form_avg_y_,b_k_Y_reco_avg_y_);
disp(sprintf(' %% b_X_best_reco %0.3f',b_X_best_reco));
%%%%%%%%;
% check full reconstruction with ctf. ;
%%%%%%%%;
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +1.0*image_delta_x_true_;
tmp_image_delta_y_ = +1.0*image_delta_y_true_;
tmp_CTF_k_p__ = ones(n_w_sum,n_ctf);
for nk_p_r=0:n_k_p_r-1;
n_w = n_w_(1+nk_p_r); tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w-1);
tmp_CTF_k_p__(1+tmp_index_,:) = repmat(CTF_k_p_r__(1+nk_p_r,:),[n_w,1]);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
tmp_t = tic;
c_k_Y_reco_avg_y_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% M_k_p__ --> c_k_Y_reco_ time %0.2fs',tmp_t));
[c_X_best_reco] = register_spharm_to_spharm_wigner_wrap_1(n_k_p_r,k_p_r_,k_p_r_max,weight_3d_k_p_r_,0,l_max_,a_k_Y_form_avg_y_,c_k_Y_reco_avg_y_);
disp(sprintf(' %% c_X_best_reco %0.3f',c_X_best_reco));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%;

flag_check=0;
if flag_check;
%%%%%%%%;
% test out cg_lsq_5 against qbp_5. ;
%%%%%%%%;
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +1.0*image_delta_x_true_;
tmp_image_delta_y_ = +1.0*image_delta_y_true_;
tmp_CTF_k_p__ = ones(n_w_sum,n_ctf);
%%%%%%%%;
tmp_t = tic;
b_k_Y_reco_avg_y_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,T_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> b_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
d_k_Y_reco_avg_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,T_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> d_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
disp(sprintf(' %% b_k_Y_reco_avg_y_ vs d_k_Y_reco_avg_y_: %0.16f',fnorm(b_k_Y_reco_avg_y_ - d_k_Y_reco_avg_y_)/fnorm(b_k_Y_reco_avg_y_)));
disp(sprintf(' %% real(corr(b_k_Y_reco_avg_y_(:),d_k_Y_reco_avg_y_(:))): %0.16f',real(corr(b_k_Y_reco_avg_y_(:),d_k_Y_reco_avg_y_(:)))));
%%%%%%%%;
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +1.0*image_delta_x_true_;
tmp_image_delta_y_ = +1.0*image_delta_y_true_;
tmp_CTF_k_p__ = ones(n_w_sum,n_ctf);
for nk_p_r=0:n_k_p_r-1;
n_w = n_w_(1+nk_p_r); tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w-1);
tmp_CTF_k_p__(1+tmp_index_,:) = repmat(CTF_k_p_r__(1+nk_p_r,:),[n_w,1]);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
tmp_t = tic;
c_k_Y_reco_avg_y_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% M_k_p__ --> c_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
e_k_Y_reco_avg_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> e_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
disp(sprintf(' %% c_k_Y_reco_avg_y_ vs e_k_Y_reco_avg_y_: %0.16f',fnorm(c_k_Y_reco_avg_y_ - e_k_Y_reco_avg_y_)/fnorm(c_k_Y_reco_avg_y_)));
disp(sprintf(' %% real(corr(c_k_Y_reco_avg_y_(:),e_k_Y_reco_avg_y_(:))): %0.16f',real(corr(c_k_Y_reco_avg_y_(:),e_k_Y_reco_avg_y_(:)))));
%%%%%%%%;
disp(sprintf(' %% c_k_Y_reco_avg_y_ vs b_k_Y_reco_avg_y_: %0.16f',fnorm(c_k_Y_reco_avg_y_ - b_k_Y_reco_avg_y_)/fnorm(c_k_Y_reco_avg_y_)));
disp(sprintf(' %% real(corr(c_k_Y_reco_avg_y_(:),b_k_Y_reco_avg_y_(:))): %0.16f',real(corr(c_k_Y_reco_avg_y_(:),b_k_Y_reco_avg_y_(:)))));
%%%%%%%%;
disp(sprintf(' %% e_k_Y_reco_avg_y_ vs d_k_Y_reco_avg_y_: %0.16f',fnorm(e_k_Y_reco_avg_y_ - d_k_Y_reco_avg_y_)/fnorm(e_k_Y_reco_avg_y_)));
disp(sprintf(' %% real(corr(e_k_Y_reco_avg_y_(:),d_k_Y_reco_avg_y_(:))): %0.16f',real(corr(e_k_Y_reco_avg_y_(:),d_k_Y_reco_avg_y_(:)))));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

flag_check=0;
if flag_check;
%%%%%%%%;
% test qbp_5 with uniform discretization. ;
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
e_k_Y_reco_avg_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> e_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
f_k_Y_reco_avg_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_max*ones(n_k_p_r,1) ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_avg_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> f_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
g_k_Y_reco_avg_y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
index_Y_0in_ = n_lm_max*nk_p_r + (0:n_lm_(1+nk_p_r)-1);
index_Y_out_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
g_k_Y_reco_avg_y_(1+index_Y_out_) = f_k_Y_reco_avg_y_(1+index_Y_0in_);
end;%for nk_p_r=0:n_k_p_r-1;
disp(sprintf(' %% g_k_Y_reco_avg_y_ vs e_k_Y_reco_avg_y_: %0.16f',fnorm(g_k_Y_reco_avg_y_ - e_k_Y_reco_avg_y_)/fnorm(g_k_Y_reco_avg_y_)));
disp(sprintf(' %% real(corr(g_k_Y_reco_avg_y_(:),e_k_Y_reco_avg_y_(:))): %0.16f',real(corr(g_k_Y_reco_avg_y_(:),e_k_Y_reco_avg_y_(:)))));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

flag_check = 0;
if flag_check;
%%%%%%%%;
% Now test out ampmut reconstruction. ;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.delta_r_upb = delta_sigma*sqrt(log(20^2)); %<-- 95th percentile. ;
disp(sprintf(' %% delta_sigma %0.2f, delta_r_upb %0.2f, number of images outside bounds %d/%d',delta_sigma,parameter.delta_r_upb,numel(efind(image_delta_r_true_> parameter.delta_r_upb)),n_M));
delta_r_max = delta_sigma/2;
svd_eps = tolerance_master;
FTK = [];
pm_n_UX_rank = pm_n_UX_rank;
M_k_q_avg_wnM__ = [];
svd_VUXM_lwnM____ = [];
UX_M_l2_dM__ = [];
VSCTF_Mc__ = [];
l_max_max = max(l_max_);
flag_warm_start = 1;
if flag_warm_start==1;
rng(0);
euler_polar_a_ = periodize(+euler_polar_a_true_ + 0.125*2*pi*rand(n_M,1),0,1*pi);
euler_azimu_b_ = periodize(+euler_azimu_b_true_ + 0.250*2*pi*rand(n_M,1),0,2*pi);
euler_gamma_z_ = periodize(+euler_gamma_z_true_ + 0.250*2*pi*rand(n_M,1),0,2*pi);
image_delta_x_acc_ = +image_delta_x_true_ + 0.125*delta_sigma*(2*rand(n_M,1)-1);
image_delta_y_acc_ = +image_delta_y_true_ + 0.125*delta_sigma*(2*rand(n_M,1)-1);
end;%if flag_warm_start==1;
if flag_warm_start==0;
rng(0);
euler_polar_a_ = 1*pi*rand(n_M,1);
euler_azimu_b_ = 2*pi*rand(n_M,1);
euler_gamma_z_ = 2*pi*rand(n_M,1);
image_delta_x_acc_ = zeros(n_M,1);
image_delta_y_acc_ = zeros(n_M,1);
end;%if flag_warm_start==0;
image_delta_x_upd_ = [];
image_delta_y_upd_ = [];
flag_image_delta_upd_ = [];
image_I_value_ = [];
parameter.n_iteration = 16;
parameter.delta_r_max = delta_r_max;
parameter.flag_alternate_MS_vs_SM = 1;
%%%%;
tmp_t = tic;
[ ...
 parameter ...
,flag_image_delta_upd_ ...
,FTK ...
,M_k_q_avg_wnM__ ...
,svd_VUXM_lwnM____ ...
,UX_M_l2_dM__ ...
,VSCTF_Mc__ ...
,a_CTF_avg_UX_Y__ ...
,euler_polar_a__ ...
,euler_azimu_b__ ...
,euler_gamma_z__ ...
,image_delta_x_acc__ ...
,image_delta_y_acc__ ...
,image_delta_x_upd__ ...
,image_delta_y_upd__ ...
,flag_image_delta_upd__ ...
,image_I_value__ ...
,image_X_value__ ...
,image_S_index__ ...
] = ...
ampmut_4( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_max ...
,FTK ...
,pm_n_UX_rank ...
,UX__ ...
,X_weight_r_ ...
,n_M ...
,M_k_p_avg_wnM__ ...
,M_k_q_avg_wnM__ ...
,svd_VUXM_lwnM____ ...
,UX_M_l2_dM__ ...
,n_CTF_rank ...
,CTF_index_ ...
,CTF_k_p_r__ ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_acc_ ...
,image_delta_y_acc_ ...
,image_delta_x_upd_ ...
,image_delta_y_upd_ ...
,flag_image_delta_upd_ ...
,image_I_value_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% ampmut_4: time %0.2fs',tmp_t));
%%%%%%%%;
% Now compare a_CTF_avg_UX_Y__ with a_CTF_avg_UX_Y_form_avg__. ;
%%%%%%%%;
[ ...
 parameter ...
] = ...
ampmut_align_to_reference_0( ...
 parameter ...
,l_max_max ...
,pm_n_UX_rank ...
,reshape(a_CTF_avg_UX_Y_form_avg__(:,1:pm_n_UX_rank),[n_lm_max*pm_n_UX_rank,1]) ...
,n_M ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
,parameter.n_iteration ...
,a_CTF_avg_UX_Y__ ...
,euler_polar_a__ ...
,euler_azimu_b__ ...
,euler_gamma_z__ ...
,image_delta_x_acc__ + image_delta_x_upd__ ...
,image_delta_y_acc__ + image_delta_y_upd__ ...
);
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

flag_check=0;
if flag_check;
%%%%%%%%;
% check pm reconstruction with ctf. ;
%%%%%%%%;
n_CTF_rank = 3;
pm_n_k_p_r = pm_n_UX_rank;
pm_k_p_r_ = ones(pm_n_k_p_r,1);
pm_k_p_r_max = 1;
pm_n_w_ = n_w_max*ones(pm_n_k_p_r,1);
pm_n_w_max = n_w_max;
pm_n_w_sum = sum(pm_n_w_);
pm_n_w_csum_ = cumsum([0;pm_n_w_]);
pm_l_max_ = l_max_max*ones(pm_n_k_p_r,1);
pm_n_lm_ = (1+pm_l_max_).^2; pm_n_lm_sum = sum(pm_n_lm_); pm_n_lm_csum_ = cumsum([0;pm_n_lm_]);
pm_weight_k_p_r_ = ones(pm_n_k_p_r,1);
pm_weight_2d_k_p_r_ = ones(pm_n_k_p_r,1);
%%%%;
VSCTF_Mc__ = VCTF_Mc__*SCTF_c__;
a_UCTF_UX_Y_form_avg_ync__ = zeros(pm_n_lm_sum,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
for pm_nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_index_0in_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
tmp_index_out_ = pm_n_lm_csum_(1+pm_nUX_rank) + (0:n_lm_(1+nk_p_r)-1);
a_UCTF_UX_Y_form_avg_ync__(1+tmp_index_out_,1+nCTF_rank) = a_UCTF_UX_Y_form_avg_ync__(1+tmp_index_out_,1+nCTF_rank) + a_k_Y_form_avg_y_(1+tmp_index_0in_)*UCTF_kc__(1+nk_p_r,1+nCTF_rank)*X_weight_r_(1+nk_p_r)*UX__(1+nk_p_r,1+pm_nUX_rank);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for pm_nUX_rank=0:pm_n_UX_rank-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
%%%%;
tmp_t = tic();
FTK = ampmh_FTK_1(n_k_p_r,k_p_r_,k_p_r_max,0,1e-2,1);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% FTK: %0.3fs',tmp_t)); end;
%%%%;
tmp_t = tic();
N_k_p_avg_wnM__ = zeros(n_w_sum,n_M);
N_k_q_avg_wnM__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
N_k_p_avg_wn_ = ...
transf_p_to_p( ...
 n_k_p_r ...
,k_p_r_ ...
,n_w_ ...
,n_w_sum ...
,M_k_p_avg_wnM__(:,1+nM) ...
,+image_delta_x_true_(1+nM) ...
,+image_delta_y_true_(1+nM) ...
);
N_k_p_avg_wn_ = ...
rotate_p_to_p_fftw( ...
 n_k_p_r ...
,n_w_ ...
,n_w_sum ...
,N_k_p_avg_wn_ ...
,-euler_gamma_z_true_(1+nM) ...
);
N_k_p_avg_wnM__(:,1+nM) = N_k_p_avg_wn_;
N_k_q_avg_wnM__(:,1+nM) = ...
interp_p_to_q( ...
 n_k_p_r ...
,n_w_ ...
,n_w_sum ...
,N_k_p_avg_wn_...
);
end;%for nM=0:n_M-1;
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% N_k_q_avg_wnM__: %0.3fs',tmp_t)); end;
%%%%;
tmp_t = tic();
[ ...
 S_k_p_avg_wnS__ ...
] = ...
get_template_1( ...
 0*verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_form_avg_y_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_max*ones(n_k_p_r,1) ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% get_template_1: %0.2fs',tmp_t)); end;
%%%%;
tmp_error = 0;
for nM=0:n_M-1;
nS = nM;
S_k_p_avg_wn__ = reshape(S_k_p_avg_wnS__(:,1+nS),[n_w_max,n_k_p_r]);
N_k_p_avg_wn__ = reshape(N_k_p_avg_wnM__(:,1+nM),[n_w_max,n_k_p_r]);
tmp_error = tmp_error + fnorm(N_k_p_avg_wn__ - S_k_p_avg_wn__*diag(CTF_k_p_r__(:,1+CTF_index_(1+nM))))/fnorm(N_k_p_avg_wn__);
end;%for nM=0:n_M-1;
disp(sprintf(' %% error reconstructing N_k_p_avg_wnM__: %0.16f',tmp_error));
%%%%;
tmp_t = tic();
FTK = ampmh_FTK_1(n_k_p_r,k_p_r_,k_p_r_max,0,1e-2,1);
svd_VUXN_avg_lwnM____ = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_M,N_k_q_avg_wnM__(:,:),pm_n_UX_rank,UX__,X_weight_r_);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXN_avg_lwnM____: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'svd_VUXM_lwnM____',tmp_t);
%%%%;
tmp_t = tic();
[UX_N_k_q_tpmh_avg_wnM___,UX_N_k_p_tpmh_avg_wnM___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,pm_n_UX_rank,n_M,svd_VUXN_avg_lwnM____,[],[]);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_N_k_q_tpmh_avg_wnM___: %0.6fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_UX_M_k_p_avg_wnM___0',tmp_t);
%%%%;
UX_N_k_p_tpmh_avg_wnM__ = reshape(UX_N_k_p_tpmh_avg_wnM___,[n_w_max*pm_n_k_p_r,n_M]);
%%%%;
UX_N_k_p_brut_avg_wnM___ = zeros(pm_n_w_max,pm_n_UX_rank,n_M);
for nM=0:n_M-1;
N_k_p_avg_wn_ = N_k_p_avg_wnM__(:,1+nM);
for pm_nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_index_0in_ = n_w_csum_(1+nk_p_r) + (0:n_w_max-1);
tmp_index_out_ = 0:n_w_max-1;
UX_N_k_p_brut_avg_wnM___(1+tmp_index_out_,1+pm_nUX_rank,1+nM) = UX_N_k_p_brut_avg_wnM___(1+tmp_index_out_,1+pm_nUX_rank,1+nM) + N_k_p_avg_wn_(1+tmp_index_0in_)*UX__(1+nk_p_r,1+pm_nUX_rank)*X_weight_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for pm_nUX_rank=0:pm_n_UX_rank-1;
end;%for nM=0:n_M-1;
%%%%;
UX_N_k_p_brut_avg_wnM__ = reshape(UX_N_k_p_brut_avg_wnM___,[n_w_max*pm_n_k_p_r,n_M]);
%%%%;
disp(sprintf(' %% UX_N_k_p_brut_avg_wnM__ vs UX_N_k_p_tpmh_avg_wnM__: %0.16f',fnorm(UX_N_k_p_brut_avg_wnM__ - UX_N_k_p_tpmh_avg_wnM__)/fnorm(UX_N_k_p_brut_avg_wnM__)));
%%%%;
UX_N_k_p_form_avg_wnMc___ = zeros(pm_n_w_sum,n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 UX_N_k_p_form_avg_wnMc___(:,:,1+nCTF_rank) ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_form_avg_ync__(:,1+nCTF_rank) ...
,viewing_k_eq_d/k_p_r_max ...
,template_k_eq_d ...
,n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
UX_N_k_p_form_avg_wnM__ = zeros(pm_n_w_sum,n_M);
for nCTF_rank=0:n_CTF_rank-1;
for nM=0:n_M-1;
UX_N_k_p_form_avg_wnM__(:,1+nM) = UX_N_k_p_form_avg_wnM__(:,1+nM) + UX_N_k_p_form_avg_wnMc___(:,1+nM,1+nCTF_rank)*VSCTF_Mc__(1+nM,1+nCTF_rank);
end;%for nM=0:n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% real(corr(UX_N_k_p_form_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:))) %0.16f',real(corr(UX_N_k_p_form_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:)))));
disp(sprintf(' %% UX_N_k_p_brut_avg_wnM__ vs UX_N_k_p_form_avg_wnM__: %0.16f',fnorm(UX_N_k_p_brut_avg_wnM__ - UX_N_k_p_form_avg_wnM__)/fnorm(UX_N_k_p_brut_avg_wnM__)));
%%%%;
tmp_t = tic();
tmp_euler_polar_a_ = euler_polar_a_true_;
tmp_euler_azimu_b_ = euler_azimu_b_true_;
tmp_euler_gamma_z_ = 0*euler_gamma_z_true_;
tmp_image_I_value_ = [];
parameter.flag_qbp_vs_lsq = 0;
parameter.cg_lsq_pcg_tol = 1e-4;
parameter.cg_lsq_pcg_maxit = 256;
[ ...
 parameter ...
,a_UCTF_UX_Y_0lsq_avg_ync__ ... 
] = ...
a_UCTF_UX_Y_wrap_ync__0( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,UX_N_k_p_tpmh_avg_wnM__ ...
,n_CTF_rank ...
,VSCTF_Mc__(:,1:n_CTF_rank) ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_I_value_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% a_UCTF_UX_Y_0lsq_avg_ync__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'a_UCTF_UX_Y_wrap_ync__0',tmp_t);
%%%%;
tmp_t = tic();
tmp_euler_polar_a_ = euler_polar_a_true_;
tmp_euler_azimu_b_ = euler_azimu_b_true_;
tmp_euler_gamma_z_ = 0*euler_gamma_z_true_;
tmp_image_I_value_ = [];
parameter.flag_qbp_vs_lsq = 1;
[ ...
 parameter ...
,a_UCTF_UX_Y_0qbp_avg_ync__ ... 
] = ...
a_UCTF_UX_Y_wrap_ync__0( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,UX_N_k_p_tpmh_avg_wnM__ ...
,n_CTF_rank ...
,VSCTF_Mc__(:,1:n_CTF_rank) ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_I_value_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% a_UCTF_UX_Y_0qbp_avg_ync__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'a_UCTF_UX_Y_wrap_ync__0',tmp_t);
%%%%;
disp(sprintf(' %% a_UCTF_UX_Y_form_avg_ync__ vs a_UCTF_UX_Y_0lsq_avg_ync__: %0.16f',fnorm(a_UCTF_UX_Y_form_avg_ync__ - a_UCTF_UX_Y_0lsq_avg_ync__)/fnorm(a_UCTF_UX_Y_form_avg_ync__)));
disp(sprintf(' %% real(corr(a_UCTF_UX_Y_form_avg_ync__(:),a_UCTF_UX_Y_0lsq_avg_ync__(:))): %0.16f',real(corr(a_UCTF_UX_Y_form_avg_ync__(:),a_UCTF_UX_Y_0lsq_avg_ync__(:)))));
disp(sprintf(' %% a_UCTF_UX_Y_form_avg_ync__ vs a_UCTF_UX_Y_0qbp_avg_ync__: %0.16f',fnorm(a_UCTF_UX_Y_form_avg_ync__ - a_UCTF_UX_Y_0qbp_avg_ync__)/fnorm(a_UCTF_UX_Y_form_avg_ync__)));
disp(sprintf(' %% real(corr(a_UCTF_UX_Y_form_avg_ync__(:),a_UCTF_UX_Y_0qbp_avg_ync__(:))): %0.16f',real(corr(a_UCTF_UX_Y_form_avg_ync__(:),a_UCTF_UX_Y_0qbp_avg_ync__(:)))));
%%%%;
UX_N_k_p_0lsq_avg_wnMc___ = zeros(pm_n_w_sum,n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 UX_N_k_p_0lsq_avg_wnMc___(:,:,1+nCTF_rank) ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_0lsq_avg_ync__(:,1+nCTF_rank) ...
,viewing_k_eq_d/k_p_r_max ...
,template_k_eq_d ...
,n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
UX_N_k_p_0lsq_avg_wnM__ = zeros(pm_n_w_sum,n_M);
for nCTF_rank=0:n_CTF_rank-1;
for nM=0:n_M-1;
UX_N_k_p_0lsq_avg_wnM__(:,1+nM) = UX_N_k_p_0lsq_avg_wnM__(:,1+nM) + UX_N_k_p_0lsq_avg_wnMc___(:,1+nM,1+nCTF_rank)*VSCTF_Mc__(1+nM,1+nCTF_rank);
end;%for nM=0:n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% real(corr(UX_N_k_p_0lsq_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:))) %0.16f',real(corr(UX_N_k_p_0lsq_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:)))));
disp(sprintf(' %% UX_N_k_p_brut_avg_wnM__ vs UX_N_k_p_0lsq_avg_wnM__: %0.16f',fnorm(UX_N_k_p_brut_avg_wnM__ - UX_N_k_p_0lsq_avg_wnM__)/fnorm(UX_N_k_p_brut_avg_wnM__)));
%%%%;
UX_N_k_p_0qbp_avg_wnMc___ = zeros(pm_n_w_sum,n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 UX_N_k_p_0qbp_avg_wnMc___(:,:,1+nCTF_rank) ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_0qbp_avg_ync__(:,1+nCTF_rank) ...
,viewing_k_eq_d/k_p_r_max ...
,template_k_eq_d ...
,n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
UX_N_k_p_0qbp_avg_wnM__ = zeros(pm_n_w_sum,n_M);
for nCTF_rank=0:n_CTF_rank-1;
for nM=0:n_M-1;
UX_N_k_p_0qbp_avg_wnM__(:,1+nM) = UX_N_k_p_0qbp_avg_wnM__(:,1+nM) + UX_N_k_p_0qbp_avg_wnMc___(:,1+nM,1+nCTF_rank)*VSCTF_Mc__(1+nM,1+nCTF_rank);
end;%for nM=0:n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% real(corr(UX_N_k_p_0qbp_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:))) %0.16f',real(corr(UX_N_k_p_0qbp_avg_wnM__(:),UX_N_k_p_tpmh_avg_wnM__(:)))));
disp(sprintf(' %% UX_N_k_p_brut_avg_wnM__ vs UX_N_k_p_0qbp_avg_wnM__: %0.16f',fnorm(UX_N_k_p_brut_avg_wnM__ - UX_N_k_p_0qbp_avg_wnM__)/fnorm(UX_N_k_p_brut_avg_wnM__)));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Now combine image-stacks from different molecules. ;
%%%%%%%%;
M_k_p_mod_wnM__ = zeros(n_w_sum,n_M);
M_k_q_mod_wnM__ = zeros(n_w_sum,n_M);
index_nmolecule_from_nM_ = zeros(n_M,1);
for nM=0:n_M-1;
nmolecule = mod(nM,n_molecule);
index_nmolecule_from_nM_(1+nM) = nmolecule;
M_k_p_mod_wnM__(:,1+nM) = M_k_p_wnMm___(:,1+nM,1+nmolecule);
M_k_q_mod_wnM__(:,1+nM) = ...
interp_p_to_q( ...
 n_k_p_r ...
,n_w_ ...
,n_w_sum ...
,M_k_p_mod_wnM__(:,1+nM) ...
);
end;%for nM=0:n_M-1;
%%%%;
tmp_t = tic();
FTK = ampmh_FTK_1(n_k_p_r,k_p_r_,k_p_r_max,0,1e-2,1);
svd_VUXM_mod_lwnM____(:,:,:,:) = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_M,M_k_q_mod_wnM__(:,:),pm_n_UX_rank,UX__,X_weight_r_);
[UX_M_k_q_mod_wnM___,UX_M_k_p_mod_wnM___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,pm_n_UX_rank,n_M,svd_VUXM_mod_lwnM____,[],[]);
tmp_t = toc(tmp_t); disp(sprintf(' %% UX_M_k_p_mod_wnM___: %0.6fs',tmp_t));

flag_check=0;
if flag_check;
%%%%%%%%;
% test out cg_lsq_5 against qbp_5 using imperfect mod rather than perfect avg. ;
%%%%%%%%;
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +1.0*image_delta_x_true_;
tmp_image_delta_y_ = +1.0*image_delta_y_true_;
tmp_CTF_k_p__ = ones(n_w_sum,n_ctf);
for nk_p_r=0:n_k_p_r-1;
n_w = n_w_(1+nk_p_r); tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w-1);
tmp_CTF_k_p__(1+tmp_index_,:) = repmat(CTF_k_p_r__(1+nk_p_r,:),[n_w,1]);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
tmp_t = tic;
c_k_Y_reco_mod_y_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% M_k_p__ --> c_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
e_k_Y_reco_mod_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> e_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
disp(sprintf(' %% c_k_Y_reco_mod_y_ vs e_k_Y_reco_mod_y_: %0.16f',fnorm(c_k_Y_reco_mod_y_ - e_k_Y_reco_mod_y_)/fnorm(c_k_Y_reco_mod_y_)));
disp(sprintf(' %% real(corr(c_k_Y_reco_mod_y_(:),e_k_Y_reco_mod_y_(:))): %0.16f',real(corr(c_k_Y_reco_mod_y_(:),e_k_Y_reco_mod_y_(:)))));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

flag_check=0;
if flag_check;
%%%%%%%%;
% test qbp_5 with uniform discretization using imperfect mod rather than perfect avg. ;
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
e_k_Y_reco_mod_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> e_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_qbp_eps = 1e-3;
tmp_t = tic;
f_k_Y_reco_mod_y_ ...
= ...
qbp_5(...
 tmp_qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_max*ones(n_k_p_r,1) ...
,n_w_ ...
,tmp_n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,tmp_CTF_k_p__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% T_k_p__ --> f_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
g_k_Y_reco_mod_y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
index_Y_0in_ = n_lm_max*nk_p_r + (0:n_lm_(1+nk_p_r)-1);
index_Y_out_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
g_k_Y_reco_mod_y_(1+index_Y_out_) = f_k_Y_reco_mod_y_(1+index_Y_0in_);
end;%for nk_p_r=0:n_k_p_r-1;
disp(sprintf(' %% g_k_Y_reco_mod_y_ vs e_k_Y_reco_mod_y_: %0.16f',fnorm(g_k_Y_reco_mod_y_ - e_k_Y_reco_mod_y_)/fnorm(g_k_Y_reco_mod_y_)));
disp(sprintf(' %% real(corr(g_k_Y_reco_mod_y_(:),e_k_Y_reco_mod_y_(:))): %0.16f',real(corr(g_k_Y_reco_mod_y_(:),e_k_Y_reco_mod_y_(:)))));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

flag_check=0;
if flag_check;
%%%%%%%%;
% test out previous loading function. ;
%%%%%%%%;
n_residual_loading = 3;
n_residual_iteration = 32;
cg_lsq_n_order = 5;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +image_delta_x_true_;
tmp_image_delta_y_ = +image_delta_y_true_;
M_loading__ = ...
get_loading_1( ...
 n_residual_loading ...
,n_residual_iteration ...
,cg_lsq_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p_mod_wnM__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
%%%%%%%%;
% test out previous loading function. ;
%%%%%%%%;
n_residual_loading = 3;
n_residual_iteration = 32;
cg_lsq_n_order = 5;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +0*image_delta_x_true_;
tmp_image_delta_y_ = +0*image_delta_y_true_;
pm_n_w_ = n_w_max*ones(pm_n_k_p_r,1);
pm_n_w_max = n_w_max;
pm_n_w_sum = sum(pm_n_w_);
pm_n_w_csum_ = cumsum([0;pm_n_w_]);
pm_l_max_ = l_max_max*ones(pm_n_k_p_r,1);
pm_n_lm_ = (1+pm_l_max_).^2; pm_n_lm_sum = sum(pm_n_lm_); pm_n_lm_csum_ = cumsum([0;pm_n_lm_]);
pm_weight_k_p_r_ = ones(pm_n_k_p_r,1);
pm_weight_2d_k_p_r_ = ones(pm_n_k_p_r,1);
UX_M_loading__ = ...
get_loading_1( ...
 n_residual_loading ...
,n_residual_iteration ...
,cg_lsq_n_order ...
,pm_n_k_p_r ...
,ones(pm_n_k_p_r,1) ...
,ones(pm_n_k_p_r,1) ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,reshape(UX_M_k_p_mod_wnM___,[pm_n_w_max*pm_n_UX_rank,n_M]) ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
%%%%%%%%;
% Visualize differences. ;
%%%%%%%%;
figure(1);clf;figmed;fig80s;
subplot(1,2,1);
scatter3(M_loading__(1,:),M_loading__(2,:),M_loading__(3,:),8,mod(0:n_M-1,3),'filled');axis vis3d;
subplot(1,2,2);
scatter3(UX_M_loading__(1,:),UX_M_loading__(2,:),UX_M_loading__(3,:),8,mod(0:n_M-1,3),'filled');axis vis3d;
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

%{
%%%%%%%%;
% Now call loading_0. ;
%%%%%%%%;
delta_r_max = delta_sigma/2;
pm_n_UX_rank = pm_n_UX_rank;
M_k_q_mod_wnM__ = [];
svd_VUXM_lwnM____ = [];
UX_M_l2_dM__ = [];
VSCTF_Mc__ = [];
l_max_max = max(l_max_);
flag_warm_start = 1;
euler_polar_a_ = +euler_polar_a_true_;
euler_azimu_b_ = +euler_azimu_b_true_;
euler_gamma_z_ = +euler_gamma_z_true_;
image_delta_x_ = +image_delta_x_true_;
image_delta_y_ = +image_delta_y_true_;
image_I_value_ = [];
parameter.delta_r_max = delta_r_max;
parameter.k_p_r_max = k_p_r_max;
parameter.template_viewing_k_eq_d = 1.0/k_p_r_max;
parameter.n_loading = 2;
parameter.n_loading_iteration = 8;
tmp_t = tic;
[ ...
 parameter ...
,M_k_q_mod_wnM__ ...
,UX_M_l2_dM__ ...
,VSCTF_Mc__ ...
,a_CTF_avg_UX_Y_ ...
] = ...
loading_0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_max ...
,pm_n_UX_rank ...
,UX__ ...
,X_weight_r_ ...
,n_M ...
,M_k_p_mod_wnM__ ...
,M_k_q_mod_wnM__ ...
,UX_M_l2_dM__ ...
,n_CTF_rank ...
,CTF_index_ ...
,CTF_k_p_r__ ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_ ...
,image_delta_y_ ...
,image_I_value_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% loading_0: time %0.2fs',tmp_t));
%}

if (verbose); disp(sprintf(' %% [test_loading_1.m]')); end;

%%%%%%%%;
% test out loading_qbp_0.m ;
%%%%%%%%;
n_loading = 3;
n_loading_iteration = 32;
cg_lsq_n_order = 5;
qbp_eps = 1e-3;
tmp_euler_polar_a_ = +euler_polar_a_true_;
tmp_euler_azimu_b_ = +euler_azimu_b_true_;
tmp_euler_gamma_z_ = +euler_gamma_z_true_;
tmp_image_delta_x_ = +image_delta_x_true_;
tmp_image_delta_y_ = +image_delta_y_true_;
%%%%;
parameter.n_loading = n_loading;
parameter.n_loading_iteration = n_loading_iteration;
parameter.flag_loading_svd_vs_iterate = 0;
[ ...
 parameter ...
,SV_0_Ml__ ...
] = ...
get_loading_qbp_2( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,l_max_max*ones(n_k_p_r,1) ...
,n_w_ ...
,n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,CTF_k_p__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_ ...
,image_delta_y_ ...
);
%%%%;
parameter.n_loading = n_loading;
parameter.flag_loading_svd_vs_iterate = 1;
[ ...
 parameter ...
,SV_1_Ml__ ...
] = ...
get_loading_qbp_2( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,l_max_max*ones(n_k_p_r,1) ...
,n_w_ ...
,n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,CTF_k_p__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_ ...
,image_delta_y_ ...
);
%%%%;
parameter.n_loading = n_loading;
parameter.flag_loading_svd_vs_iterate = -1;
[ ...
 parameter ...
,SV_2_Ml__ ...
] = ...
get_loading_qbp_2( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,l_max_max*ones(n_k_p_r,1) ...
,n_w_ ...
,n_M ...
,M_k_p_mod_wnM__ ...
,CTF_index_ ...
,CTF_k_p__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_ ...
,image_delta_y_ ...
);
%%%%%%%%;
figure(1);clf;figmed;fig80s;
subplot(2,3,1);
scatter3(M_loading__(1,:),M_loading__(2,:),M_loading__(3,:),8,mod(0:n_M-1,3),'filled');axis vis3d;
subplot(2,3,2);
scatter3(UX_M_loading__(1,:),UX_M_loading__(2,:),UX_M_loading__(3,:),8,mod(0:n_M-1,3),'filled');axis vis3d;
subplot(2,3,3);
scatter3(SV_0_Ml__(:,1),SV_0_Ml__(:,2),SV_0_Ml__(:,3),8,mod(0:n_M-1,3),'filled');axis vis3d;
subplot(2,3,4);
scatter3(SV_1_Ml__(:,1),SV_1_Ml__(:,2),SV_1_Ml__(:,3),8,mod(0:n_M-1,3),'filled');axis vis3d;
subplot(2,3,5);
plot(SV_2_Ml__(:,1),mod(0:n_M-1,3),'ko');
