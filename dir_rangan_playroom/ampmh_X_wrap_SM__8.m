function ...
[ ...
 parameter ...
,X_SM__ ...
,delta_x_SM__ ...
,delta_y_SM__ ...
,gamma_z_SM__ ...
,I_value_SM__ ...
,t_level_SM__ ...
] = ...
ampmh_X_wrap_SM__8( ...
 parameter ...
,FTK ...
,n_w_max ...
,pm_n_UX_rank ...
,n_S ...
,CTF_UX_S_k_q_wnS__ ...
,CTF_UX_S_l2_ ...
,n_M ...
,svd_VUXM_lwnM____ ...
,UX_M_l2_dM__ ...
,template_tree ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
);
%%%%%%%%;
% Uses ampmh_X_SM__8 to conduct either a global or a local search, as requested by parameter.flag_X_local_vs_global. ;
%%%%%%%%;

verbose = 0;
if (verbose>0); disp(sprintf(' %% [entering ampmh_X_wrap_SM__8]')); end;

if isempty(parameter);
parameter = struct('type','parameter');
end;%if isempty(parameter);
%%%%%%%%;
if (~isfield(parameter,'flag_optimize_over_gamma_z')); parameter.flag_optimize_over_gamma_z = 0; end; %<-- parameter_bookmark. ;
parameter.flag_optimize_over_gamma_z = 1;
if (~isfield(parameter,'flag_X_local_vs_global')); parameter.flag_X_local_vs_global = 0; end; %<-- parameter_bookmark. ;
%%%%%%%%;
flag_X_local_vs_global = parameter.flag_X_local_vs_global;

if (nargin<11); template_tree = []; end;
if (nargin<12); euler_polar_a_ = []; end;
if (nargin<13); euler_azimu_b_ = []; end;

if (flag_X_local_vs_global==0); %<-- global search. ;
tmp_t = tic();
t_level_SM__ = ones(n_S,n_M);
[ ...
 parameter ...
,X_SM__ ...
,delta_x_SM__ ...
,delta_y_SM__ ...
,gamma_z_SM__ ...
,I_value_SM__ ...
] = ...
ampmh_X_wSM___8( ...
 parameter ...
,FTK ...
,n_w_max ...
,pm_n_UX_rank ...
,n_S ...
,CTF_UX_S_k_q_wnS__ ...
,CTF_UX_S_l2_ ...
,n_M ...
,svd_VUXM_lwnM____ ...
,UX_M_l2_dM__ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% global: ampmh_X_wSM___8: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_X_wSM___8 (global)',tmp_t);
end;%if (flag_X_local_vs_global==0);

if (flag_X_local_vs_global==1); %<-- local search. ;
tmp_t = tic();
if ( isempty(template_tree));
if (~isfield(parameter,'template_viewing_k_eq_d_min')); parameter.template_viewing_k_eq_d_min = parameter.template_viewing_k_eq_d; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'template_tree_n_level')); parameter.template_tree_n_level = 2; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'n_neighborhood_retain')); parameter.n_neighborhood_retain = 2; end; %<-- parameter_bookmark. ;
template_tree = get_template_tree_0(parameter.template_viewing_k_eq_d_min,parameter.template_tree_n_level);
assert(template_tree.n_S_max==n_S); %<-- ensure that, at the very least, the number of tree templates matches the number passed in. ;
end;%if ( isempty(template_tree));
[ ...
 parameter ...
,X_SM__ ...
,delta_x_SM__ ...
,delta_y_SM__ ...
,gamma_z_SM__ ...
,I_value_SM__ ...
,t_level_SM__ ...
] = ...
ampmh_X_local_SM__8( ...
 parameter ...
,FTK ...
,n_w_max ...
,pm_n_UX_rank ...
,n_S ...
,CTF_UX_S_k_q_wnS__ ...
,CTF_UX_S_l2_ ...
,n_M ...
,svd_VUXM_lwnM____ ...
,UX_M_l2_dM__ ...
,template_tree ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% local: ampmh_X_wSM___8: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_X_wSM___8 (local)',tmp_t);
end;%if (flag_X_local_vs_global==1);

if ( (nargout>5) & (isempty(I_value_SM__)) ); I_value_SM__ = ones(n_S,n_M); end;

if (verbose>0); disp(sprintf(' %% [finished ampmh_X_wrap_SM__8]')); end;
