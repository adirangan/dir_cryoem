%%%%%%%%;
% Calculate volumetric terms. ;
%%%%%%%%;
tmp_t = tic();
parameter_KAPPA = struct('type','KAPPA');
parameter_KAPPA.flag_verbose = 0*flag_verbose;
parameter_KAPPA.flag_kernel_full = flag_kernel_full;
parameter_KAPPA.flag_kernel_qpro_d0 = flag_kernel_qpro_d0;
parameter_KAPPA.flag_kernel_qpro_d1 = flag_kernel_qpro_d1;
parameter_KAPPA.kernel_qpro_polar_a_pole_north = kernel_qpro_polar_a_pole_north;
parameter_KAPPA.kernel_qpro_polar_a_pole_south = kernel_qpro_polar_a_pole_south;
parameter_KAPPA.kernel_qpro_qref_k_eq_d_double = kernel_qpro_qref_k_eq_d_double;
parameter_KAPPA.kernel_qpro_l_max_use = kernel_qpro_l_max_use;
[ ...
 parameter_KAPPA ...
,KAPPA ...
,a_restore_C2M0_k_Y_quad_yk__ ...
,a_restore_C1M1_k_Y_quad_yk__ ...
,a_restore_C0M2_k_Y_quad_yk__ ...
,dtau_a_restore_C2M0_k_Y_quad_yk__ ...
,dtau_a_restore_C1M1_k_Y_quad_yk__ ...
,dtau_a_restore_C0M2_k_Y_quad_yk__ ...
,dtau_dtau_a_restore_C2M0_k_Y_quad_yk__ ...
,dtau_dtau_a_restore_C1M1_k_Y_quad_yk__ ...
,dtau_dtau_a_restore_C0M2_k_Y_quad_yk__ ...
] = ...
kappa_qpro_apply_3( ...
 parameter_KAPPA ...
,KAPPA ...
,n_w_max ...
,n_M ...
,weight_imagecount_M_ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,n_k_p_r ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% kappa_qpro_apply_3 (yes derivatives) time %0.2fs',tmp_t)); end;
%%%%%%%%;
