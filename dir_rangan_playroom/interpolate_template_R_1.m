function ...
[ ...
 parameter ...
,n_T ...
,index_nS_from_nT_ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,viewing_R_polar_a_T_ ...
,viewing_R_azimu_b_T_ ...
,viewing_R_gamma_z_T_ ...
,template_rec_wkT__ ...
,wT_from_R_single_shell_sba__ ...
,dtemplateda_rec_wkT__ ...
,dtemplatedb_rec_wkT__ ...
,dtemplatedc_rec_wkT__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_rec_wkT__ ...
,ddtemplatedab_rec_wkT__ ...
,ddtemplatedac_rec_wkT__ ...
,ddtemplatedbb_rec_wkT__ ...
,ddtemplatedbc_rec_wkT__ ...
,ddtemplatedcc_rec_wkT__ ...
,ddwTdaa_from_R_single_shell_sba__ ...
,ddwTdab_from_R_single_shell_sba__ ...
,ddwTdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_R_1( ...
 parameter ...
,flag_1 ...
,flag_d ...
,flag_dd ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,template_ori_wkS__ ...
,dtemplateda_ori_wkS__ ...
,dtemplatedb_ori_wkS__ ...
,dtemplatedc_ori_wkS__ ...
,ddtemplatedaa_ori_wkS__ ...
,ddtemplatedab_ori_wkS__ ...
,ddtemplatedac_ori_wkS__ ...
,ddtemplatedbb_ori_wkS__ ...
,ddtemplatedbc_ori_wkS__ ...
,ddtemplatedcc_ori_wkS__ ...
,nR ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wT_from_R_single_shell_sba__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
,ddwTdaa_from_R_single_shell_sba__ ...
,ddwTdab_from_R_single_shell_sba__ ...
,ddwTdbb_from_R_single_shell_sba__ ...
);

str_thisfunction = 'interpolate_template_R_1';

%if nargin<1;
%disp(sprintf(' %% testing %s',str_thisfunction));
%
%disp('returning'); return;
%end;%if nargin<1;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); flag_1=[]; end; na=na+1;
if (nargin<1+na); flag_d=[]; end; na=na+1;
if (nargin<1+na); flag_dd=[]; end; na=na+1;
if (nargin<1+na); n_order=[]; end; na=na+1;
if (nargin<1+na); n_qk=[]; end; na=na+1;
if (nargin<1+na); n_qk_csum_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_qk_=[]; end; na=na+1;
if (nargin<1+na); k_p_azimu_b_qk_=[]; end; na=na+1;
if (nargin<1+na); k_p_polar_a_qk_=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); weight_shell_qk_=[]; end; na=na+1;
if (nargin<1+na); n_k_p_r=[]; end; na=na+1;
if (nargin<1+na); k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_c_0_qk_=[]; end; na=na+1;
if (nargin<1+na); k_c_1_qk_=[]; end; na=na+1;
if (nargin<1+na); k_c_2_qk_=[]; end; na=na+1;
if (nargin<1+na); n_polar_a_k_=[]; end; na=na+1;
if (nargin<1+na); polar_a_ka__=[]; end; na=na+1;
if (nargin<1+na); n_azimu_b_ka__=[]; end; na=na+1;
if (nargin<1+na); a_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); viewing_k_eq_d=[]; end; na=na+1;
if (nargin<1+na); template_k_eq_d=[]; end; na=na+1;
if (nargin<1+na); n_w_0in=[]; end; na=na+1;
if (nargin<1+na); n_viewing_S=[]; end; na=na+1;
if (nargin<1+na); viewing_azimu_b_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_weight_S_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_polar_a=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_azimu_b_=[]; end; na=na+1;
if (nargin<1+na); viewing_gamma_z_S_=[]; end; na=na+1;
if (nargin<1+na); wS_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSda_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSdb_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdaa_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdab_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdbb_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); template_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); dtemplateda_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); dtemplatedb_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); dtemplatedc_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedaa_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedab_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedac_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedbb_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedbc_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); ddtemplatedcc_ori_wkS__=[]; end; na=na+1;
if (nargin<1+na); nR=[]; end; na=na+1;
if (nargin<1+na); R_use__=[]; end; na=na+1;
if (nargin<1+na); a_R_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); ba_from_single_shell_baba__=[]; end; na=na+1;
if (nargin<1+na); wT_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwTda_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwTdb_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwTdaa_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwTdab_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwTdbb_from_R_single_shell_sba__=[]; end; na=na+1;

if isempty(parameter); parameter=struct('type','parameter'); end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose=0; end;
flag_verbose=parameter.flag_verbose;
if ~isfield(parameter,'flag_check'); parameter.flag_check=0; end;
flag_check=parameter.flag_check; nf=0;
if ~isfield(parameter,'tolerance_pinv'); parameter.tolerance_pinv=1e-6; end;
tolerance_pinv=parameter.tolerance_pinv;
if ~isfield(parameter,'tolerance_w'); parameter.tolerance_w = 0.5*(2*pi)/max(1,n_w_0in); end;
tolerance_w=parameter.tolerance_w;
if ~isfield(parameter,'flag_parsimonious'); parameter.flag_parsimonious=1; end;
flag_parsimonious=parameter.flag_parsimonious;
if ~isfield(parameter,'str_version'); parameter.str_version=''; end;
str_version=parameter.str_version;
nf=0;

if (flag_verbose> 0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% setting n_w_')); end;
%%%%%%%%;
n_w = n_w_0in;
n_w_max = n_w;
n_w_ = n_w_max*ones(n_k_p_r,1);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);
%%%%%%%%;
n_S = n_viewing_S; n_1 = 1; n_3 = 3; n_9 = 9;

%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% copying ddtemplatedba_ori_wkS__ from ddtemplatedab_ori_wkS__.')); end;
%%%%%%%%;
ddtemplatedba_ori_wkS__ = ddtemplatedab_ori_wkS__; %<-- yes referenced later. ;
ddtemplatedca_ori_wkS__ = ddtemplatedac_ori_wkS__; %<-- yes referenced later. ;
ddtemplatedcb_ori_wkS__ = ddtemplatedbc_ori_wkS__; %<-- yes referenced later. ;
%%%%%%%%;

if (flag_verbose>0); disp(sprintf(' %% setting index_nS_from_nT_')); end;
index_nS_from_nT_ = transpose([0:n_viewing_S-1]); n_T = n_viewing_S;
if flag_parsimonious==0;
% do nothing. ;
end;%if flag_parsimonious==0;
if flag_parsimonious==1;
index_nS_from_nS_polar_a_sub_ = efind( abs(periodize(viewing_polar_a_S_,-pi/4,+pi/4)) <  tolerance_w ); %<-- selects both poles and equator. ;
index_nS_from_nS_azimu_b_sub_ = efind( abs(periodize(viewing_azimu_b_S_,-pi/4,+pi/4)) <  tolerance_w ); %<-- selects meridians. ;
index_nS_from_nT_ = union(index_nS_from_nS_polar_a_sub_,index_nS_from_nS_azimu_b_sub_);
n_T = numel(index_nS_from_nT_);
if (flag_verbose>0); disp(sprintf(' %% n_T %d/%d',n_T,n_S)); end;
end;%if flag_parsimonious==1;
n_viewing_T = n_T;

%%%%;
if flag_1;
template_ori_wkT__ = template_ori_wkS__(:,1+index_nS_from_nT_);
end;%if flag_1;
%%%%;
if flag_d;
dtemplateda_ori_wkT__ = dtemplateda_ori_wkS__(:,1+index_nS_from_nT_);
dtemplatedb_ori_wkT__ = dtemplatedb_ori_wkS__(:,1+index_nS_from_nT_);
dtemplatedc_ori_wkT__ = dtemplatedc_ori_wkS__(:,1+index_nS_from_nT_);
end;%if flag_d;
%%%%;
if flag_dd;
ddtemplatedaa_ori_wkT__ = ddtemplatedaa_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedab_ori_wkT__ = ddtemplatedab_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedac_ori_wkT__ = ddtemplatedac_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedba_ori_wkT__ = ddtemplatedba_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedbb_ori_wkT__ = ddtemplatedbb_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedbc_ori_wkT__ = ddtemplatedbc_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedca_ori_wkT__ = ddtemplatedca_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedcb_ori_wkT__ = ddtemplatedcb_ori_wkS__(:,1+index_nS_from_nT_);
ddtemplatedcc_ori_wkT__ = ddtemplatedcc_ori_wkS__(:,1+index_nS_from_nT_);
end;%if flag_dd;
%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Check spherical-grid for consistency. ;
% For efficiency the spherical-grid should be generated using: ;
% flag_uniform_over_n_k_p_r = 1;
% flag_uniform_over_polar_a = 0;
% str_T_vs_L = 'C2';
% For accuracy one might consider increasing the angular-resolution (on each shell) ;
% without necessarily increasing the radial-resolution (i.e., the distance between shells). ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Check spherical-grid for consistency.')); end;
%%%%%%%%;
[ ...
 parameter ...
,polar_a_single_shell_ ...
,n_azimu_b_single_shell_ ...
,n_polar_a_single_shell ...
,polar_a_single_shell_lim_ ...
,n_q_single_shell ...
,k_c_0_single_shell_ ...
,k_c_1_single_shell_ ...
,k_c_2_single_shell_ ...
,k_p_azimu_b_single_shell_ ...
,k_p_polar_a_single_shell_ ...
,weight_3d_k_single_shell_ ...
,weight_shell_qk_single_shell_ ...
,weight_shell_qk_unit_shell_ ...
] = ...
interpolate_template_consistency_check_0( ...
 parameter ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
);
%%%%%%%%;

%%%%%%%%;
% define rotations. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% defining rotations.')); end;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;
if isempty(nR); nR=0; end;
if isempty(R_use__);
if (flag_verbose>0); disp(sprintf(' %% defining R_use__.')); end;
polar_a_use = +(1+nR)*pi/5;
azimu_b_use = +(1+nR)*pi/7;
gamma_z_use = +(1+nR)*pi/3;
euler_use_ = [gamma_z_use,polar_a_use,azimu_b_use];
R_use__ = Rz(azimu_b_use)*Ry(polar_a_use)*Rz(gamma_z_use);
fnorm_disp(flag_verbose,'R_use__',R_use__,'euler_to_R_0(euler_use_)',euler_to_R_0(euler_use_));
fnorm_disp(flag_verbose,'euler_use_',euler_use_,'R_to_euler_0(R_use__)',R_to_euler_0(R_use__));
end;%if isempty(R_use__);
%%%%%%%%;

%%%%%%%%;
% Now rotate the quadrature-grid. ;
%%%%%%%%;
euler_use_ = R_to_euler_0(R_use__);
if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid.')); end;
tmp_t = tic();
tmp_q3__ = cat(2,k_c_0_single_shell_,k_c_1_single_shell_,k_c_2_single_shell_)*transpose(R_use__);
R_k_c_0_single_shell_ = tmp_q3__(:,1+0); R_k_c_1_single_shell_ = tmp_q3__(:,1+1); R_k_c_2_single_shell_ = tmp_q3__(:,1+2);
R_k_p_r01_single_shell_ = sqrt(R_k_c_0_single_shell_.^2 + R_k_c_1_single_shell_.^2);
R_k_p_polar_a_single_shell_ = atan2(R_k_p_r01_single_shell_,R_k_c_2_single_shell_);
R_k_p_azimu_b_single_shell_ = atan2(R_k_c_1_single_shell_,R_k_c_0_single_shell_);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid: time %0.6fs',tmp_t)); end;
%%%%%%%%;

if flag_check | isempty(a_R_k_p_qk_);
%%%%%%%%;
% build interpolant. ;
%%%%%%%%;
if isempty(ba_from_single_shell_baba__);
if (flag_verbose>0); disp(sprintf(' %% Building interpolant')); end;
if (flag_verbose>0); disp(sprintf(' %% calling shell_k_p_scatter_from_adaptive_interpolate_n_9.')); end;
tmp_t = tic();
[ ...
 ba_from_single_shell_baba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a_single_shell ...
,n_azimu_b_single_shell_ ...
,polar_a_single_shell_lim_ ...
,n_q_single_shell ...
,R_k_p_polar_a_single_shell_ ...
,R_k_p_azimu_b_single_shell_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9: time %0.6fs',tmp_t)); end;
end;%if isempty(ba_from_single_shell_baba__);
%%%%%%%%;
% apply interpolant. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Applying interpolant.')); end;
tmp_t = tic();
tmp_a_R_k_p_qk_ = reshape(ba_from_single_shell_baba__*reshape(a_k_p_qk_,[n_q_single_shell,n_k_p_r]),[n_qk,1]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% apply interpolant: time %0.6fs',tmp_t)); end;
%%%%%%%%;
if ~isempty(a_R_k_p_qk_);
if (flag_verbose>0); disp(sprintf(' %% Display error.')); end;
fnorm_disp(flag_verbose,'a_R_k_p_qk_',a_R_k_p_qk_,'tmp_a_R_k_p_qk_',tmp_a_R_k_p_qk_);
end;%if ~isempty(a_R_k_p_qk_);
if  isempty(a_R_k_p_qk_);
if (flag_verbose>0); disp(sprintf(' %% define a_R_k_p_qk_.')); end;
a_R_k_p_qk_ = tmp_a_R_k_p_qk_;
end;%if  isempty(a_R_k_p_qk_);
%%%%%%%%;
end;%if flag_check | isempty(a_R_k_p_qk_);

%%%%%%%%;
% Construct templates under rotated frame. ;
% see Manual_Derivative_SO3_0.pdf. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Constructing rotated viewing-angles.')); end;
tmp_t = tic();
[ ...
 ~ ...
,viewing_R_polar_a_S_ ...
,viewing_R_azimu_b_S_ ...
,viewing_R_gamma_z_S_ ...
] = ...
euler_to_euler_0( ...
 [] ...
,n_S ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
,R_use__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% construct rotated viewing-angles: time %0.6fs',tmp_t)); end;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Extracting index_nS_from_nT_.')); end;
%%%%%%%%;
viewing_polar_a_T_ = viewing_polar_a_S_(1+index_nS_from_nT_);
viewing_azimu_b_T_ = viewing_azimu_b_S_(1+index_nS_from_nT_);
viewing_gamma_z_T_ = viewing_gamma_z_S_(1+index_nS_from_nT_);
viewing_weight_T_ = viewing_weight_S_(1+index_nS_from_nT_);
viewing_R_polar_a_T_ = viewing_R_polar_a_S_(1+index_nS_from_nT_);
viewing_R_azimu_b_T_ = viewing_R_azimu_b_S_(1+index_nS_from_nT_);
viewing_R_gamma_z_T_ = viewing_R_gamma_z_S_(1+index_nS_from_nT_);
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Constructing templates under rotated frame.')); end;
if ~exist('wT_from_R_single_shell_sba__','var'); wT_from_R_single_shell_sba__=[]; end;
if ~exist('dwTda_from_R_single_shell_sba__','var'); dwTda_from_R_single_shell_sba__=[]; end;
if ~exist('dwTdb_from_R_single_shell_sba__','var'); dwTdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwTdaa_from_R_single_shell_sba__','var'); ddwTdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwTdab_from_R_single_shell_sba__','var'); ddwTdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwTdbb_from_R_single_shell_sba__','var'); ddwTdbb_from_R_single_shell_sba__=[]; end;
tmp_parameter = parameter;
tmp_parameter.flag_verbose = max(0,flag_verbose-1);
tmp_parameter.flag_attend = 0; %<-- Here we bypass any calls to cartesian_from_shell. ;
%%%%%%%%;
%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%;
if  flag_1 & ~flag_d & ~flag_dd ;
tmp_t = tic();
[ ...
 tmp_parameter ...
,template_rot_wkT__ ...
,n_w ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 tmp_parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_R_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_5: time %0.6fs',tmp_t)); end;
end;%if  flag_1 & ~flag_d & ~flag_dd ;
%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%;
if  flag_1 &  flag_d & ~flag_dd ;
tmp_t = tic();
[ ...
 tmp_parameter ...
,template_rot_wkT__ ...
,n_w ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
,dtemplateda_rot_wkT__ ...
,dtemplatedb_rot_wkT__ ...
,dtemplatedc_rot_wkT__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 tmp_parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_R_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_5: time %0.6fs',tmp_t)); end;
end;%if  flag_1 &  flag_d & ~flag_dd ;
%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%;
if  flag_1 &  flag_d &  flag_dd ;
tmp_t = tic();
[ ...
 tmp_parameter ...
,template_rot_wkT__ ...
,n_w ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
,dtemplateda_rot_wkT__ ...
,dtemplatedb_rot_wkT__ ...
,dtemplatedc_rot_wkT__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_rot_wkT__ ...
,ddtemplatedab_rot_wkT__ ...
,ddtemplatedac_rot_wkT__ ...
,ddtemplatedbb_rot_wkT__ ...
,ddtemplatedbc_rot_wkT__ ...
,ddtemplatedcc_rot_wkT__ ...
,ddwTdaa_from_R_single_shell_sba__ ...
,ddwTdab_from_R_single_shell_sba__ ...
,ddwTdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 tmp_parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_R_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_T ...
,viewing_R_azimu_b_T_ ...
,viewing_R_polar_a_T_ ...
,viewing_weight_T_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_T_ ...
,wT_from_R_single_shell_sba__ ...
,dwTda_from_R_single_shell_sba__ ...
,dwTdb_from_R_single_shell_sba__ ...
,ddwTdaa_from_R_single_shell_sba__ ...
,ddwTdab_from_R_single_shell_sba__ ...
,ddwTdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_5: time %0.6fs',tmp_t)); end;
end;%if  flag_1 &  flag_d &  flag_dd ;
%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%;
%%%%%%%%;
if flag_dd;
ddtemplatedba_rot_wkT__ = ddtemplatedab_rot_wkT__; %<-- yes referenced later. ;
ddtemplatedca_rot_wkT__ = ddtemplatedac_rot_wkT__; %<-- yes referenced later. ;
ddtemplatedcb_rot_wkT__ = ddtemplatedbc_rot_wkT__; %<-- yes referenced later. ;
end;%if flag_dd;
%%%%%%%%;

if flag_check;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Displaying template-error in original and rotated frame.')); end;
figure(1+nf);nf=nf+1;clf;figbig;
n_T_check = 4;
p_row = min(n_T_check,n_T); p_col = 6; np=0;
Tlim_ = prctile(abs(template_ori_wkT__),95,'all')*[-1,+1];
for nT=0:min(n_T_check,n_T)-1;
template_ori_wk_ = template_ori_wkT__(:,1+nT);
template_rot_wk_ = template_rot_wkT__(:,1+nT);
template_dif_wk_ = template_ori_wk_ - template_rot_wk_;
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_ori_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('real(template_ori_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_rot_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('real(template_rot_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_dif_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('real(template_dif_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_ori_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('imag(template_ori_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_rot_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('imag(template_rot_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_dif_wk_),Tlim_);
axis image; axisnotick;
title(sprintf('imag(template_dif_wkT__(:,1+%d)',nT),'Interpreter','none');
%%%%;
drawnow();
end;%for nT=0:min(n_T_check,n_T)-1;
%%%%%%%%;
disp(sprintf(' %% returning after check')); return;
%%%%%%%%;
end;%if flag_check;

template_rec_wkT__ = template_rot_wkT__;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% [ template_k_c_0 ; template_k_c_1 ; template_k_c_2 ] = [ +cb*ca*cc - sb*sc ; +sb*ca*cc + cb*sc ; -sa*cc ];
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Calculating gradients of data-locations under original frame.')); end;
tmp_t = tic();
[ ...
 k_p_polar_a_wT__ ...
,k_p_azimu_b_wT__ ...
,k_c_0_wT__ ...
,k_c_1_wT__ ...
,k_c_2_wT__ ...
,k_p_r01_wT__ ...
,dtau_k_p_polar_a_wTabc___ ...
,dtau_k_p_azimu_b_wTabc___ ...
,dtau_k_c_0_wTabc___ ...
,dtau_k_c_1_wTabc___ ...
,dtau_k_c_2_wTabc___ ...
,dtau_k_p_r01_wTabc___ ...
,dtau_dtau_k_p_polar_a_wTabcabc____ ...
,dtau_dtau_k_p_azimu_b_wTabcabc____ ...
,dtau_dtau_k_c_0_wTabcabc____ ...
,dtau_dtau_k_c_1_wTabcabc____ ...
,dtau_dtau_k_c_2_wTabcabc____ ...
,dtau_dtau_k_p_r01_wTabcabc____ ...
] = ...
cg_rhs_2( ...
 n_T ...
,n_w_max ...
,viewing_polar_a_T_ ...
,viewing_azimu_b_T_ ...
,viewing_gamma_z_T_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% cg_rhs_2: time %0.6fs',tmp_t)); end;
k_c_wT_3__ = cat(2,k_c_0_wT__(:),k_c_1_wT__(:),k_c_2_wT__(:));
%%%%;
if (flag_verbose>0); disp(sprintf(' %% Calculating gradients of data-locations under rotated frame.')); end;
tmp_t = tic();
[ ...
 R_k_p_polar_a_wT__ ...
,R_k_p_azimu_b_wT__ ...
,R_k_c_0_wT__ ...
,R_k_c_1_wT__ ...
,R_k_c_2_wT__ ...
,R_k_p_r01_wT__ ...
,dtau_R_k_p_polar_a_wTabc___ ...
,dtau_R_k_p_azimu_b_wTabc___ ...
,dtau_R_k_c_0_wTabc___ ...
,dtau_R_k_c_1_wTabc___ ...
,dtau_R_k_c_2_wTabc___ ...
,dtau_R_k_p_r01_wTabc___ ...
,dtau_dtau_R_k_p_polar_a_wTabcabc____ ...
,dtau_dtau_R_k_p_azimu_b_wTabcabc____ ...
,dtau_dtau_R_k_c_0_wTabcabc____ ...
,dtau_dtau_R_k_c_1_wTabcabc____ ...
,dtau_dtau_R_k_c_2_wTabcabc____ ...
,dtau_dtau_R_k_p_r01_wTabcabc____ ...
] = ...
cg_rhs_2( ...
 n_T ...
,n_w_max ...
,viewing_R_polar_a_T_ ...
,viewing_R_azimu_b_T_ ...
,viewing_R_gamma_z_T_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% cg_rhs_2: time %0.6fs',tmp_t)); end;
R_k_c_wT_3__ = cat(2,R_k_c_0_wT__(:),R_k_c_1_wT__(:),R_k_c_2_wT__(:));
%%%%;
fnorm_disp(flag_verbose,'k_c_wT_3__',k_c_wT_3__,'R_k_c_wT_3__*transpose(R_use__)',R_k_c_wT_3__*transpose(R_use__));

%%%%%%%%;
% Now recalculate the first-derivatives. ;
% see Manual_Derivative_SO3_0.pdf. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Recalculating the first-derivatives')); end;
if strcmp(str_version,'');        interpolate_template_R_1_excerpt_0; end;
if strcmp(str_version,'pagefun'); interpolate_template_R_1_excerpt_1; end;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_dd;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Now recalculate second-derivatives. ;
% see Manual_Derivative_SO3_0.pdf. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% Recalculating the second-derivatives')); end;
if strcmp(str_version,'');        interpolate_template_R_1_excerpt_2; end;
if strcmp(str_version,'pagefun'); interpolate_template_R_1_excerpt_3; end;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_dd;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

if (flag_verbose> 0); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;

