% trying to work out wignert_ODE. ;
clear; setup;

%%%%%%%%;
% First determine the normalization constant for the associated legendre-polynomials. ;
% We assume that z = cos(polar_a_) ;
%%%%%%%%;
l_val = 5 ; n_m = 1+l_val;
n_polar_a = 21;
[z_,weight_] = legpts(n_polar_a); weight_ = weight_(:);
% test nodes and weights. ;
I_form = sqrt(pi)*erf(1); I_quad = sum(exp(-z_.^2).*weight_);
disp(sprintf(' %% integrating gaussian: I_form vs I_quad: %0.16f',fnorm(I_form-I_quad)/fnorm(I_form)));
% Now apply to associated legendre function. ;
Llm_ = legendre(l_val,z_,'unnorm');
a1=((2*l_val+1)/(4*pi));
a2_ = zeros(n_m,1);
c_ = zeros(n_m,1);
for nm=0:n_m-1;
m_val = nm;
a2=exp(lfactorial(l_val-abs(m_val)) - lfactorial(l_val+abs(m_val)));
a2_(1+nm) = a2;
c=sqrt(a1*a2);
c_(1+nm) = c;
end;%for nm=0:n_m-1;
Llm_ = diag(c_)*Llm_;
I_form_ = ones(1,n_m)/(2*pi);
I_quad_ = sum(transpose(Llm_).^2.*repmat(weight_,1,n_m),1);
disp(sprintf(' %% integrating Llm_: I_form_ vs I_quad_: %0.16f',fnorm(I_form_-I_quad_)/fnorm(I_form_)));

flag_check=0;
if flag_check;
%%%%%%%%;
% Now verify samaddar 1974. ;
%%%%%%%%;
l_val_max = 5;
n_l = 1+l_val_max;
Llm__ = cell(n_l,1);
for nl=0:n_l-1;
l_val = nl;
n_m = 1+l_val;
Llm_ = zeros(n_m,n_polar_a);
Llm_ = legendre(l_val,z_,'unnorm');
a1=((2*l_val+1)/(4*pi));
a2_ = zeros(n_m,1);
c_ = zeros(n_m,1);
for nm=0:n_m-1;
m_val = nm;
a2=exp(lfactorial(l_val-abs(m_val)) - lfactorial(l_val+abs(m_val)));
a2_(1+nm) = a2;
c=sqrt(a1*a2);
c_(1+nm) = c;
end;%for nm=0:n_m-1;
Llm_ = diag(c_)*Llm_;
Llm__{1+nl} = Llm_;
end;%for nl=0:n_l-1;
%%%%%%%%;
n_m = 1+l_val_max;
for nm=0:n_m-1;
m_val = nm;
for nla=0:n_l-1;
l_val_a = nla;
for nlb=0:n_l-1;
l_val_b = nlb;
if ((abs(m_val)<=l_val_a) & (abs(m_val)<=l_val_b));
a1a=((2*l_val_a+1)/(4*pi)); a2a=exp(lfactorial(l_val_a-abs(m_val)) - lfactorial(l_val_a+abs(m_val))); ca = sqrt(a1a*a2a);
a1b=((2*l_val_b+1)/(4*pi)); a2b=exp(lfactorial(l_val_b-abs(m_val)) - lfactorial(l_val_b+abs(m_val))); cb = sqrt(a1b*a2b);
c = ca*cb;
%%%%%%%%;
if (l_val_a==l_val_b);
dab=2*exp(lfactorial(l_val_b+abs(m_val)) - lfactorial(l_val_b-abs(m_val)))/(2*l_val_b+1);
I_form = dab*c;
I_quad = sum(transpose(Llm__{1+nla}(1+nm,:)).*transpose(Llm__{1+nlb}(1+nm,:)).*weight_);
I_diff = fnorm(I_form-I_quad)/fnorm(I_form);
disp(sprintf(' %% m_val %d l_val_a %d l_val_b %d: I_form vs I_quad: %0.16f',m_val,l_val_a,l_val_b,I_diff));
end;%if (l_val_a==l_val_b);
%%%%%%%%;
if (l_val_b+1==l_val_a);
dab=2*exp(lfactorial(l_val_b+abs(m_val)+1) - lfactorial(l_val_b-abs(m_val)))/(2*l_val_b+1)/(2*l_val_b+3);
I_form = dab*c;
I_quad = sum(z_.*transpose(Llm__{1+nla}(1+nm,:)).*transpose(Llm__{1+nlb}(1+nm,:)).*weight_);
I_diff = fnorm(I_form-I_quad)/fnorm(I_form);
disp(sprintf(' %% m_val %d l_val_a %d l_val_b %d: I_form vs I_quad: %0.16f',m_val,l_val_a,l_val_b,I_diff));
end;%if (l_val_b+1==l_val_a);
%%%%%%%%;
if (l_val_b-1==l_val_a);
dab=2*exp(lfactorial(l_val_b+abs(m_val)) - lfactorial(l_val_b-abs(m_val)-1))/(2*l_val_b-1)/(2*l_val_b+1);
I_form = dab*c;
I_quad = sum(z_.*transpose(Llm__{1+nla}(1+nm,:)).*transpose(Llm__{1+nlb}(1+nm,:)).*weight_);
I_diff = fnorm(I_form-I_quad)/fnorm(I_form);
disp(sprintf(' %% m_val %d l_val_a %d l_val_b %d: I_form vs I_quad: %0.16f',m_val,l_val_a,l_val_b,I_diff));
end;%if (l_val_b-1==l_val_a);
%%%%%%%%;
end;%if ((abs(m_val)<=l_val_a) & (abs(m_val)<=l_val_b));
end;%for nlb=0:n_l-1;
end;%for nla=0:n_l-1;
end;%for nm=0:n_m-1;
%%%%%%%%;
end;%if flag_check;

%%%%%%%%;
% Now construct spherical harmonics and check normalization. ;
%%%%%%%%;
verbose=0; k_p_r_max = 1.0; eq_d = 1.0/16; TorL = 'L';
[n_all,azimu_b_all_,polar_a_all_,weight_all_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_shell_5(k_p_r_max,eq_d,TorL) ;
l_val_max = 4; n_l = 1+l_val_max; l_val_ = 0:l_val_max;
Ylm__ = get_Ylm__(n_l,l_val_,n_all,azimu_b_all_,polar_a_all_);
n_lm = (1+l_val_max)^2;
YY_ = zeros(n_lm,n_lm);
nlma=0;
for nla=0:n_l-1;
l_val_a = nla;
n_ma = 1+2*l_val_a;
for nma=0:n_ma-1;
m_val_a = -l_val_a + nma;
nlmb=0;
for nlb=0:n_l-1;
l_val_b = nlb;
n_mb = 1+2*l_val_b;
for nmb=0:n_mb-1;
m_val_b = -l_val_b + nmb;
YY_(1+nlma,1+nlmb) = sum(ctranspose(Ylm__{1+nla}(1+nma,:)).*transpose(Ylm__{1+nlb}(1+nmb,:)).*weight_all_);
nlmb = nlmb+1;
end;%for nmb=0:n_mb-1;
end;%for nlb=0:n_l-1;
nlma = nlma+1;
end;%for nma=0:n_ma-1;
end;%for nla=0:n_l-1;
disp(sprintf(' %% Integrating Ylm__: YY_ vs I: %0.16f',fnorm(YY_ - eye(n_lm))));

flag_check=0;
if flag_check;
%%%%%%%%;
% Now estimate an entry from wignert(kd). ;
% As kd grows, the error should grow as well. ;
%%%%%%%%;
kd_ = 1e-4*10.^[0:0.25:3];
for nkd=0:length(kd_)-1;
kd = kd_(1+nkd);
l_val_a = 4; l_val_b = 3; m_val = -2;
nla = l_val_a; nlb = l_val_b;
nma = m_val + l_val_a;
nmb = m_val + l_val_b;
%%%%%%%%;
a1a=((2*l_val_a+1)/(4*pi)); a2a=exp(lfactorial(l_val_a-abs(m_val)) - lfactorial(l_val_a+abs(m_val))); ca = sqrt(a1a*a2a);
a1b=((2*l_val_b+1)/(4*pi)); a2b=exp(lfactorial(l_val_b-abs(m_val)) - lfactorial(l_val_b+abs(m_val))); cb = sqrt(a1b*a2b);
c = ca*cb;
%%%%%%%%;
dab=0;
if (l_val_b+1==l_val_a);
dab=2*exp(lfactorial(l_val_b+abs(m_val)+1) - lfactorial(l_val_b-abs(m_val)))/(2*l_val_b+1)/(2*l_val_b+3);
end;%if (l_val_b+1==l_val_a);
if (l_val_b-1==l_val_a);
dab=2*exp(lfactorial(l_val_b+abs(m_val)) - lfactorial(l_val_b-abs(m_val)-1))/(2*l_val_b-1)/(2*l_val_b+1);
end;%if (l_val_b-1==l_val_a);
%%%%%%%%;
%I_form = i*2*pi*2*pi*kd*dab*c ;
%l_pos = max(l_val_a,l_val_b); l_neg = min(l_val_a,l_val_b); m_abs = abs(m_val);
%I_form = i*2*pi*kd*sqrt(exp(lfactorial(l_pos-m_abs)+lfactorial(l_pos+m_abs)-lfactorial(l_neg-m_abs)-lfactorial(l_neg+m_abs))/(2*l_pos+1)/(2*l_neg+1));
I_form = kd*dwignertdkd(m_val,l_val_a,l_val_b);
I_quad = sum(ctranspose(Ylm__{1+nla}(1+nma,:)).*transpose(Ylm__{1+nlb}(1+nmb,:)).*exp(+i*2*pi*k_c_2_all_*kd).*weight_all_) ;
I_diff = fnorm(I_form-I_quad)/fnorm(I_form);
disp(sprintf(' %% forming wignert: kd: %0.6f: m_val %d l_val_a %d l_val_b %d I_form_ vs I_quad_: %0.16f',kd,m_val,l_val_a,l_val_b,I_diff));
%%%%%%%%;
end;%for nkd=0:length(kd_)-1;
%%%%%%%%;
end;%if flag_check;

%%%%%%%%;
% Now use dwignertdkd to construct sparse derivative operator. ;
%%%%%%%%;
m_val = 7;
l_val_max = 64; n_l = 1+l_val_max;
m_abs = abs(m_val);
n_s = 2*(l_val_max - m_abs);
dWtdkd_row_ij_ = zeros(n_s,1);
dWtdkd_col_ij_ = zeros(n_s,1);
dWtdkd_val_ij_ = zeros(n_s,1);
ns=0;
for l_val_a=0:l_val_max;
for l_val_b=[l_val_a-1,min(l_val_max,l_val_a+1)];
if ((m_abs<=l_val_a) & (m_abs<=l_val_b));
dWtdkd_row_ij_(1+ns) = 1+l_val_a;
dWtdkd_col_ij_(1+ns) = 1+l_val_b;
dWtdkd_val_ij_(1+ns) = dwignertdkd(m_val,l_val_a,l_val_b);
ns=ns+1;
end;%if ((m_abs<=l_val_a) & (m_abs<=l_val_b));
end;%for l_val_b=[l_val_a-1,min(l_val_max,l_val_a+1)];
end;%for l_val_a=0:l_val_max;
dWtdkd_ = sparse(dWtdkd_row_ij_,dWtdkd_col_ij_,dWtdkd_val_ij_,n_l,n_l);
flag_plot=0;
if flag_plot;
colormap(colormap_beach());
kd_ = 10.^[-2:0.5:0.5];
for nkd=0:length(kd_)-1;
kd = kd_(1+nkd);
subplot(2,3,1+nkd);
imagesc(abs(expm(dWtdkd_*kd)),[0,1]); axisnotick;
title(sprintf('kd %0.6f',kd));
end;%for nkd=0:length(kd_)-1;
figbig;
end;%if flag_plot;

%%%%%%%%;
% Now check wignert(kd) against expm(dWtdkd_). ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_); m_val = -6; m_abs = abs(m_val);
%%%%%%%%;
verbose=0; k_p_r_max = 1.0; eq_d = 1.0/32; TorL = 'L';
[n_all,azimu_b_all_,polar_a_all_,weight_all_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_shell_5(k_p_r_max,eq_d,TorL) ;
%%%%%%%%;
Ylm__l_val_max = 14; Ylm__n_l = 1+Ylm__l_val_max; Ylm__l_val_ = 0:Ylm__l_val_max; Ylm__m_val = m_val; Ylm__m_abs = abs(Ylm__m_val);
Ylm__ = get_Ylm__(Ylm__n_l,Ylm__l_val_,n_all,azimu_b_all_,polar_a_all_);
%%%%%%%%;
Wt_quad_ = cell(n_kd,1);
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
Wt_quad_{1+nkd} = zeros(Ylm__n_l-Ylm__m_abs,Ylm__n_l-Ylm__m_abs);
for Ylm__nla=0:Ylm__l_val_max;
Ylm__l_val_a = Ylm__nla;
for Ylm__nlb=0:Ylm__l_val_max;
Ylm__l_val_b = Ylm__nlb;
Ylm__nma = Ylm__m_val + Ylm__l_val_a;
Ylm__nmb = Ylm__m_val + Ylm__l_val_b;
I_quad = 0;
if ((Ylm__m_abs> Ylm__l_val_a) | (Ylm__m_abs> Ylm__l_val_b));
I_quad = 1*(Ylm__l_val_a==Ylm__l_val_b);
end;%if ((Ylm__m_abs> Ylm__l_val_a) | (Ylm__m_abs> Ylm__l_val_b));
if ((Ylm__m_abs<=Ylm__l_val_a) & (Ylm__m_abs<=Ylm__l_val_b));
I_quad = sum(ctranspose(Ylm__{1+Ylm__nla}(1+Ylm__nma,:)).*transpose(Ylm__{1+Ylm__nlb}(1+Ylm__nmb,:)).*exp(+i*2*pi*k_c_2_all_*kd).*weight_all_) ;
Wt_quad_{1+nkd}(1+Ylm__nla-Ylm__m_abs,1+Ylm__nlb-Ylm__m_abs) = I_quad;
end;%if ((Ylm__m_abs<=Ylm__l_val_a) & (Ylm__m_abs<=Ylm__l_val_b));
end;%for Ylm__nlb=0:Ylm__l_val_max;
end;%for Ylm__nla=0:Ylm__l_val_max;
end;%for nkd=0:n_kd-1;
%%%%%%%%;
dWtdkd_m_val = m_val;
dWtdkd_l_val_max = 32; dWtdkd_n_l = 1+dWtdkd_l_val_max;
dWtdkd_m_abs = abs(dWtdkd_m_val);
dWtdkd_n_s = 2*(dWtdkd_l_val_max - dWtdkd_m_abs);
dWtdkd_row_ij_ = zeros(dWtdkd_n_s,1);
dWtdkd_col_ij_ = zeros(dWtdkd_n_s,1);
dWtdkd_val_ij_ = zeros(dWtdkd_n_s,1);
dWtdkd_ns=0;
for dWtdkd_l_val_a=dWtdkd_m_abs:dWtdkd_l_val_max;
for dWtdkd_l_val_b=[max(0,dWtdkd_l_val_a-1),min(dWtdkd_l_val_max,dWtdkd_l_val_a+1)];
if ((dWtdkd_m_abs<=dWtdkd_l_val_a) & (dWtdkd_m_abs<=dWtdkd_l_val_b));
dWtdkd_row_ij_(1+dWtdkd_ns) = 1+dWtdkd_l_val_a-dWtdkd_m_abs;
dWtdkd_col_ij_(1+dWtdkd_ns) = 1+dWtdkd_l_val_b-dWtdkd_m_abs;
dWtdkd_val_ij_(1+dWtdkd_ns) = dwignertdkd(dWtdkd_m_val,dWtdkd_l_val_a,dWtdkd_l_val_b);
dWtdkd_ns=dWtdkd_ns+1;
end;%if ((dWtdkd_m_abs<=dWtdkd_l_val_a) & (dWtdkd_m_abs<=dWtdkd_l_val_b));
end;%for dWtdkd_l_val_b=[max(0,dWtdkd_l_val_a-1),min(dWtdkd_l_val_max,dWtdkd_l_val_a+1)];
end;%for dWtdkd_l_val_a=dWtdkd_m_abs:dWtdkd_l_val_max;
dWtdkd_ = sparse(dWtdkd_row_ij_,dWtdkd_col_ij_,dWtdkd_val_ij_,dWtdkd_n_l-dWtdkd_m_abs,dWtdkd_n_l-dWtdkd_m_abs);
disp(sprintf(' %% dWtdkd_ error: %0.16f',fnorm(dWtdkd_ - dwignertdkd_(dWtdkd_m_val,dWtdkd_l_val_max))/fnorm(dWtdkd_)));
%%%%%%%%;
Wt_form_ = cell(n_kd,1);
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
Wt_form_{1+nkd} = zeros(dWtdkd_n_l-dWtdkd_m_abs,dWtdkd_n_l-dWtdkd_m_abs);
Wt_form_{1+nkd} = expm(dWtdkd_*kd);
end;%for nkd=0:n_kd-1;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
I_diff = fnorm(Wt_quad_{1+nkd}(1:Ylm__n_l-Ylm__m_abs,1:Ylm__n_l-Ylm__m_abs) - Wt_form_{1+nkd}(1:Ylm__n_l-Ylm__m_abs,1:Ylm__n_l-Ylm__m_abs))/fnorm(Wt_quad_{1+nkd}(1:Ylm__n_l-Ylm__m_abs,1:Ylm__n_l-Ylm__m_abs));
disp(sprintf(' %% m_val %+d m_abs %d Wt_quad_[l_max %d] vs Wt_form_[l_max %d] kd %0.6f: error %0.16f',m_val,m_abs,Ylm__l_val_max,dWtdkd_l_val_max,kd,I_diff));
end;%for nkd=0:n_kd-1;
%%%%%%%%;
flag_plot=0;
if flag_plot;
colormap(colormap_beach());
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
subplot(2,3,1+nkd);
imagesc(abs(Wt_quad_{1+nkd}(1:Ylm__n_l-Ylm__m_abs,1:Ylm__n_l-Ylm__m_abs) - Wt_form_{1+nkd}(1:Ylm__n_l-Ylm__m_abs,1:Ylm__n_l-Ylm__m_abs))); axisnotick;
title(sprintf('kd %0.6f',kd));
end;%for nkd=0:n_kd-1;
figbig;
end;%if flag_plot;

%%%%%%%%;
% Define functional form for integral. ;
%%%%%%%%;
h_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % taken from test_F_26.m: calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3, rather than 4*pi/3*R_max^3 ;

%%%%%%%%;
% Now try translating a simple plane-wave on a single shell. ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_);
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_shell_5(k_p_r_max,k_eq_d,TorL) ;
n_k_p_r = 1; n_k_all_csum_ = 0; k_p_r_ = k_p_r_max; k_p_r_all_ = k_p_r_max*ones(n_k_all,1); 
weight_k_p_r_ = 1; weight_shell_k_ = weight_k_all_;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_); a_k_Y_quad_ = zeros(n_lm_sum,1);
tmp_t = tic;
[a_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,a_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
%disp(sprintf(' %% use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%disp(sprintf(' %% Again, here we should ensure that a_k_Y_ on the outer shells has decayed to the desired precision.'));
%disp(sprintf(' %% Moreover, we should ensure that a_k_Y_(l,m) has decayed for large l,m at each shell.'));
%%%%%%%%
flag_plot=0;
if flag_plot;
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,log10(abs(a_k_Y_quad_)),[-6,0],colormap_beach());
end;%if flag_plot;
%%%%%%%%;
% Now translate by kd;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
disp(sprintf(' %% shell: kd: %0.6f',kd));
delta_z_c_ = [0;0;+1]*kd/k_p_r_max;
delta_b_c_ = delta_a_c_ + delta_z_c_;
delta_b_p_r = sqrt(delta_b_c_(1+0)^2 + delta_b_c_(1+1)^2 + delta_b_c_(1+2)^2);
disp(sprintf(' %% shell: 2*pi*k_p_r_max*delta_b_p_r = %0.2f',2*pi*k_p_r_max*delta_b_p_r));
b_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_); n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_); b_k_Y_quad_ = zeros(n_lm_sum,1);
tmp_t = tic;
[b_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,b_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% shell: use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;
n_m_max = 2*l_max_max+1;
n_lm_max = max(n_lm_);
Wt__ = cell(1+l_max_max,1);
tmp_t = tic;
for nl=0:l_max_max;
m_val = nl;
Wt__{1+nl} = expm(+kd*dWtdkd__{1+nl});
end;%for nl=0:l_max_max;
tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: create Wt__: time %0.6fs',tmp_t));
tmp_t = tic;
ns=0; clear Wt_row_ij_ Wt_col_ij_ Wt_val_ij_ ;
for nm=0:n_m_max-1;
m_val = -l_max_max + nm; m_abs = abs(m_val);
for l_val_a=m_abs:l_max_max;
nml_a = l_val_a^2 + (m_val+l_val_a);
for l_val_b=m_abs:l_max_max;
nml_b = l_val_b^2 + (m_val+l_val_b);
Wt_row_ij_(1+ns) = 1+nml_a;
Wt_col_ij_(1+ns) = 1+nml_b;
Wt_val_ij_(1+ns) = Wt__{1+m_abs}(1+l_val_a-m_abs,1+l_val_b-m_abs);
ns=ns+1;
end;%for l_val_b=m_abs:l_max_max;
end;%for l_val_a=m_abs:l_max_max;
end;%for nm=0:n_m_max-1;
Wt_ = sparse(Wt_row_ij_,Wt_col_ij_,Wt_val_ij_,n_lm_max,n_lm_max);
tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: create Wt_: time %0.6fs',tmp_t));
%%%%%%%%;
tmp_t = tic; b_k_Y_form_ = Wt_*a_k_Y_quad_; tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: use Wt_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
end;%for nkd=0:n_kd-1;
flag_plot=0;
if flag_plot;
[m1_,l1_,m2_,l2_,pp_,qq_] = permute_ml_to_lm(l_max_max);
colormap(colormap_beach());
subplot(1,2,1);imagesc(log10(abs(Wt_)),[-6,0]); title('Wt (m,l)'); axisnotick; axis image;
subplot(1,2,2);imagesc(log10(abs(Wt_(pp_,pp_))),[-6,0]); title('Wt (l,m)'); axisnotick; axis image;
figbig;
end;%if flag_plot;

%%%%%%%%;
% Now try translating a simple plane-wave on a sphere. ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_);
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_sphere_6(verbose,k_p_r_max,k_eq_d,'L') ;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_); n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
tmp_t = tic;
[a_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,a_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
%disp(sprintf(' %% use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%disp(sprintf(' %% Again, here we should ensure that a_k_Y_ on the outer shells has decayed to the desired precision.'));
%disp(sprintf(' %% Moreover, we should ensure that a_k_Y_(l,m) has decayed for large l,m at each shell.'));
%%%%%%%%
flag_plot=0;
if flag_plot;
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,log10(abs(a_k_Y_quad_)),[-6,0],colormap_beach());
end;%if flag_plot;
%%%%%%%%;
% Now translate by kd;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
disp(sprintf(' %% sphere: kd: %0.6f',kd));
delta_z_c_ = [0;0;+1]*kd/k_p_r_max;
delta_b_c_ = delta_a_c_ + delta_z_c_;
delta_b_p_r = sqrt(delta_b_c_(1+0)^2 + delta_b_c_(1+1)^2 + delta_b_c_(1+2)^2);
disp(sprintf(' %% sphere: 2*pi*k_p_r_max*delta_b_p_r = %0.2f',2*pi*k_p_r_max*delta_b_p_r));
b_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
tmp_t = tic;
[b_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,b_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% sphere: use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
Wt__tmp_t = 0;
tmp_t = tic;
ns=0; clear Wt_row_ij_ Wt_col_ij_ Wt_val_ij_ ;
for nk_p_r = 0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
n_lm_csum = n_lm_csum_(1+nk_p_r);
l_max = l_max_(1+nk_p_r);
Wt__ = cell(1+l_max,1);
tmp_t_sub = tic;
for nl=0:l_max;
m_val = nl;
Wt__{1+nl} = expm(+kd*k_p_r/k_p_r_max*dWtdkd__{1+nl});
end;%for nl=0:l_max_max;
tmp_t_sub = toc(tmp_t_sub); Wt__tmp_t = Wt__tmp_t + tmp_t_sub;
n_m_max = 2*l_max+1;
for nm=0:n_m_max-1;
m_val = -l_max + nm; m_abs = abs(m_val);
for l_val_a=m_abs:l_max;
nml_a = l_val_a^2 + (m_val+l_val_a);
for l_val_b=m_abs:l_max;
nml_b = l_val_b^2 + (m_val+l_val_b);
Wt_row_ij_(1+ns) = n_lm_csum + 1+nml_a;
Wt_col_ij_(1+ns) = n_lm_csum + 1+nml_b;
Wt_val_ij_(1+ns) = Wt__{1+m_abs}(1+l_val_a-m_abs,1+l_val_b-m_abs);
ns=ns+1;
end;%for l_val_b=m_abs:l_max;
end;%for l_val_a=m_abs:l_max;
end;%for nm=0:n_m_max-1;
end;%for nk_p_r = 0:n_k_p_r-1;
Wt_ = sparse(Wt_row_ij_,Wt_col_ij_,Wt_val_ij_,n_lm_sum,n_lm_sum);
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: create Wt__: time %0.6fs',Wt__tmp_t));
disp(sprintf(' %% sphere: create Wt_: time %0.6fs',tmp_t));
%%%%%%%%;
tmp_t = tic; b_k_Y_form_ = Wt_*a_k_Y_quad_; tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: use Wt_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
end;%for nkd=0:n_kd-1;

%%%%%%%%;
% Now try full shift of a simple plane-wave on a single shell. ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_);
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_shell_5(k_p_r_max,k_eq_d,TorL) ;
n_k_p_r = 1; n_k_all_csum_ = 0; k_p_r_ = k_p_r_max; k_p_r_all_ = k_p_r_max*ones(n_k_all,1); 
weight_k_p_r_ = 1; weight_shell_k_ = weight_k_all_;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_); a_k_Y_quad_ = zeros(n_lm_sum,1);
tmp_t = tic;
[a_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,a_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
%disp(sprintf(' %% use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%disp(sprintf(' %% Again, here we should ensure that a_k_Y_ on the outer shells has decayed to the desired precision.'));
%disp(sprintf(' %% Moreover, we should ensure that a_k_Y_(l,m) has decayed for large l,m at each shell.'));
%%%%%%%%
flag_plot=0;
if flag_plot;
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,log10(abs(a_k_Y_quad_)),[-6,0],colormap_beach());
end;%if flag_plot;
%%%%%%%%;
% Now translate by kd;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
disp(sprintf(' %% shell: kd: %0.6f',kd));
delta_z_c_ = [-3,5,7]; delta_z_c_ = delta_z_c_/fnorm(delta_z_c_);
delta_z_p_01 = sqrt(delta_z_c_(1+0).^2 + delta_z_c_(1+1).^2);
delta_z_p_azimu_b = atan2(delta_z_c_(1+1),delta_z_c_(1+0));
delta_z_p_polar_a = atan2(delta_z_p_01,delta_z_c_(1+2));
delta_z_p_euler_pos_ = [0,+delta_z_p_polar_a,+delta_z_p_azimu_b];
delta_z_p_euler_neg_ = [-delta_z_p_azimu_b,-delta_z_p_polar_a,0];
delta_z_c_ = [cos(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);sin(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);cos(delta_z_p_polar_a)]*kd/k_p_r_max;
delta_b_c_ = delta_a_c_ - delta_z_c_; %<--note sign of translation. ;
delta_b_p_r = sqrt(delta_b_c_(1+0)^2 + delta_b_c_(1+1)^2 + delta_b_c_(1+2)^2);
disp(sprintf(' %% shell: 2*pi*k_p_r_max*delta_b_p_r = %0.2f',2*pi*k_p_r_max*delta_b_p_r));
b_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_); n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_); b_k_Y_quad_ = zeros(n_lm_sum,1);
tmp_t = tic;
[b_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,b_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% shell: use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;
n_m_max = 2*l_max_max+1;
n_lm_max = max(n_lm_);
Wt__ = cell(1+l_max_max,1);
tmp_t = tic;
for nl=0:l_max_max;
m_val = nl;
Wt__{1+nl} = expm(-kd*dWtdkd__{1+nl}); %<-- note sign of translation. ;
end;%for nl=0:l_max_max;
tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: create Wt__: time %0.6fs',tmp_t));
tmp_t = tic;
ns=0; clear Wt_row_ij_ Wt_col_ij_ Wt_val_ij_ ;
for nm=0:n_m_max-1;
m_val = -l_max_max + nm; m_abs = abs(m_val);
for l_val_a=m_abs:l_max_max;
nml_a = l_val_a^2 + (m_val+l_val_a);
for l_val_b=m_abs:l_max_max;
nml_b = l_val_b^2 + (m_val+l_val_b);
Wt_row_ij_(1+ns) = 1+nml_a;
Wt_col_ij_(1+ns) = 1+nml_b;
Wt_val_ij_(1+ns) = Wt__{1+m_abs}(1+l_val_a-m_abs,1+l_val_b-m_abs);
ns=ns+1;
end;%for l_val_b=m_abs:l_max_max;
end;%for l_val_a=m_abs:l_max_max;
end;%for nm=0:n_m_max-1;
Wt_ = sparse(Wt_row_ij_,Wt_col_ij_,Wt_val_ij_,n_lm_max,n_lm_max);
tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: create Wt_: time %0.6fs',tmp_t));
%%%%%%%%;
tmp_t = tic; 
tmp_Y_form_ = a_k_Y_quad_;
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_form_ = tmp_Y_form_;
tmp_t = toc(tmp_t);
disp(sprintf(' %% shell: use R_pos*Wt_*R_neg_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
end;%for nkd=0:n_kd-1;
flag_plot=0;
if flag_plot;
[m1_,l1_,m2_,l2_,pp_,qq_] = permute_ml_to_lm(l_max_max);
colormap(colormap_beach());
subplot(1,2,1);imagesc(log10(abs(Wt_)),[-6,0]); title('Wt (m,l)'); axisnotick; axis image;
subplot(1,2,2);imagesc(log10(abs(Wt_(pp_,pp_))),[-6,0]); title('Wt (l,m)'); axisnotick; axis image;
figbig;
end;%if flag_plot;

%%%%%%%%;
% Now try full shift of simple plane-wave on a sphere. ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_);
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_sphere_6(verbose,k_p_r_max,k_eq_d,'L') ;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_); n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
tmp_t = tic;
[a_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,a_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
%disp(sprintf(' %% use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%disp(sprintf(' %% Again, here we should ensure that a_k_Y_ on the outer shells has decayed to the desired precision.'));
%disp(sprintf(' %% Moreover, we should ensure that a_k_Y_(l,m) has decayed for large l,m at each shell.'));
%%%%%%%%
flag_plot=0;
if flag_plot;
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,log10(abs(a_k_Y_quad_)),[-6,0],colormap_beach());
end;%if flag_plot;
%%%%%%%%;
% Now translate by kd;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
disp(sprintf(' %% sphere: kd: %0.6f',kd));
delta_z_c_ = [-3,5,7]; delta_z_c_ = delta_z_c_/fnorm(delta_z_c_);
delta_z_p_01 = sqrt(delta_z_c_(1+0).^2 + delta_z_c_(1+1).^2);
delta_z_p_azimu_b = atan2(delta_z_c_(1+1),delta_z_c_(1+0));
delta_z_p_polar_a = atan2(delta_z_p_01,delta_z_c_(1+2));
delta_z_p_euler_pos_ = [0,+delta_z_p_polar_a,+delta_z_p_azimu_b];
delta_z_p_euler_neg_ = [-delta_z_p_azimu_b,-delta_z_p_polar_a,0];
delta_z_c_ = [cos(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);sin(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);cos(delta_z_p_polar_a)]*kd/k_p_r_max;
delta_b_c_ = delta_a_c_ - delta_z_c_; %<-- note sign of translation. ;
delta_b_p_r = sqrt(delta_b_c_(1+0)^2 + delta_b_c_(1+1)^2 + delta_b_c_(1+2)^2);
disp(sprintf(' %% sphere: 2*pi*k_p_r_max*delta_b_p_r = %0.2f',2*pi*k_p_r_max*delta_b_p_r));
b_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
tmp_t = tic;
[b_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,b_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% sphere: use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
Wt__tmp_t = 0;
tmp_t = tic;
ns=0; clear Wt_row_ij_ Wt_col_ij_ Wt_val_ij_ ;
for nk_p_r = 0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
n_lm_csum = n_lm_csum_(1+nk_p_r);
l_max = l_max_(1+nk_p_r);
Wt__ = cell(1+l_max,1);
tmp_t_sub = tic;
for nl=0:l_max;
m_val = nl;
Wt__{1+nl} = expm(-kd*k_p_r/k_p_r_max*dWtdkd__{1+nl}); %<-- note sign of translation. ;
end;%for nl=0:l_max_max;
tmp_t_sub = toc(tmp_t_sub); Wt__tmp_t = Wt__tmp_t + tmp_t_sub;
n_m_max = 2*l_max+1;
for nm=0:n_m_max-1;
m_val = -l_max + nm; m_abs = abs(m_val);
for l_val_a=m_abs:l_max;
nml_a = l_val_a^2 + (m_val+l_val_a);
for l_val_b=m_abs:l_max;
nml_b = l_val_b^2 + (m_val+l_val_b);
Wt_row_ij_(1+ns) = n_lm_csum + 1+nml_a;
Wt_col_ij_(1+ns) = n_lm_csum + 1+nml_b;
Wt_val_ij_(1+ns) = Wt__{1+m_abs}(1+l_val_a-m_abs,1+l_val_b-m_abs);
ns=ns+1;
end;%for l_val_b=m_abs:l_max;
end;%for l_val_a=m_abs:l_max;
end;%for nm=0:n_m_max-1;
end;%for nk_p_r = 0:n_k_p_r-1;
Wt_ = sparse(Wt_row_ij_,Wt_col_ij_,Wt_val_ij_,n_lm_sum,n_lm_sum);
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: create Wt__: time %0.6fs',Wt__tmp_t));
disp(sprintf(' %% sphere: create Wt_: time %0.6fs',tmp_t));
%%%%%%%%;
tmp_t = tic; 
tmp_Y_form_ = a_k_Y_quad_;
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_form_ = tmp_Y_form_;
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: use R_pos_*Wt_*R_neg_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
%%%%%%%%;
tmp_t = tic; dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create dWtdkd__: time %0.6fs',tmp_t));
tmp_t = tic; Wt___ = expm_dwignertdkd__(dWtdkd__,n_k_p_r,k_p_r_,l_max_,kd/k_p_r_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wt___: time %0.6fs',tmp_t));
tmp_t = tic; Wt_ = wignert_ODE_0(dWtdkd__,Wt___,n_k_p_r,k_p_r_,l_max_,kd/k_p_r_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wt_: time %0.6fs',tmp_t));
tmp_t = tic;
W_beta_neg__ = wignerd_b(l_max_max,delta_z_p_euler_neg_(1+1));
W_beta_pos__ = wignerd_b(l_max_max,delta_z_p_euler_pos_(1+1));
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wd_: time %0.6fs',tmp_t));
tmp_t = tic; 
tmp_Y_form_ = a_k_Y_quad_;
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_neg__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_pos__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_form_ = tmp_Y_form_;
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: use R_pos_*Wt_*R_neg_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
end;%for nkd=0:n_kd-1;

