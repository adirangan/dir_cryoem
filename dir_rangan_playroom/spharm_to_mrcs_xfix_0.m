function ...
[ ...
 parameter ...
,prefix ...
] = ...
spharm_to_mrcs_xfix_0( ...
 parameter ...
,n_x_u ...
,delta_sigma_true ...
,snr_per_AA ...
,n_M ...
,n_CTF ...
,Pixel_A ...
,Voltage ...
,Defocus ...
,Defocus_relative_spread ...
,Amplitude_Contrast ...
);

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_x_u=[]; end; na=na+1;
if (nargin<1+na); delta_sigma_true=[]; end; na=na+1;
if (nargin<1+na); snr_per_AA=[]; end; na=na+1;
if (nargin<1+na); n_M=[]; end; na=na+1;
if (nargin<1+na); n_CTF=[]; end; na=na+1;
if (nargin<1+na); Pixel_A=[]; end; na=na+1;
if (nargin<1+na); Voltage=[]; end; na=na+1;
if (nargin<1+na); Defocus=[]; end; na=na+1;
if (nargin<1+na); Defocus_relative_spread=[]; end; na=na+1;
if (nargin<1+na); Amplitude_Contrast=[]; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;

if isempty(n_x_u); n_x_u = 64; end;
if isempty(delta_sigma_true); delta_sigma_true = 0; end;
if isempty(snr_per_AA); snr_per_AA=0; end; %<-- signal-to-noise per angstrom-squared. ;
if isempty(n_M); n_M = 1024; end;
if isempty(n_CTF); n_CTF = floor(n_M/50); end;
if isempty(Pixel_A); Pixel_A = 4.0; end; %<-- in angstroms. ;
if isempty(Voltage); Voltage = 300.0; end; %<-- in mV. ;
if isempty(Defocus); Defocus = 2e4; end; %<-- for niko. ;
if isempty(Defocus_relative_spread); Defocus_relative_spread = 0.25; end; %<-- for niko. ;
if isempty(Amplitude_Contrast); Amplitude_Contrast = 0.1; end; %<-- for niko. ;

str_n_x_u = '';
if (n_x_u>0); str_n_x_u = sprintf('nx%d',n_x_u); end;
str_delta_sigma_true = '';
if (delta_sigma_true>0); str_delta_sigma_true = sprintf('d%.4d',floor(1000*delta_sigma_true)); end;
str_snr_per_AA = '';
if (snr_per_AA>0); str_snr_per_AA = sprintf('s%.3d',floor(100*snr_per_AA)); end;
str_n_M = '';
if (n_M>0); str_n_M = sprintf('nM%d',n_M); end;
str_n_CTF = '';
if (n_CTF>0); str_n_CTF = sprintf('nCTF%d',n_CTF); end;
str_Pixel_A = '';
if (Pixel_A>0); str_Pixel_A = sprintf('p%.2d',floor(10*Pixel_A)); end;
str_Voltage = '';
if (Voltage>0); str_Voltage = sprintf('V%d',floor(Voltage)); end;
str_Defocus = '';
if (Defocus>0); str_Defocus = sprintf('D%d',floor(Defocus)); end;
str_Defocus_relative_spread = '';
if (Defocus_relative_spread>0); str_Defocus_relative_spread = sprintf('r%.3d',floor(100*Defocus_relative_spread)); end;
str_Amplitude_Contrast = '';
if (Amplitude_Contrast>0); str_Amplitude_Contrast = sprintf('A%.3d',floor(100*Amplitude_Contrast)); end;
prefix = ...
sprintf( ...
 '%s%s%s%s%s%s%s%s%s%s' ...
,str_n_x_u ...
,str_delta_sigma_true ...
,str_snr_per_AA ...
,str_n_M ...
,str_n_CTF ...
,str_Pixel_A ...
,str_Voltage ...
,str_Defocus ...
,str_Defocus_relative_spread ...
,str_Amplitude_Contrast ...
);



