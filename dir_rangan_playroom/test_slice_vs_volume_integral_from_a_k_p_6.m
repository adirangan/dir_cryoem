%%%%%%%%;
% collecting calculations from: ;
% ssnll_from_a_k_p_14 ;
% kappa_basic_apply_4 ;
% to construct gradient and hessian. ;
%%%%%%%%;

%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

str_thisfunction = 'test_slice_vs_volume_integral_from_a_k_p_6';
flag_verbose=1; flag_disp=1; nf=0;

k_int = 8;
k_eq_d_double = 0.250;
t_eq_d_double = 0.500;
n_order = 9;
n_w_int = 2;
KAPPA_basic_l_max_use = k_int;
KAPPA_basic_l_max_ext = ceil(1.25*KAPPA_basic_l_max_use);
KAPPA_basic_l_max_band = floor(KAPPA_basic_l_max_use/2);
KAPPA_qref_k_eq_d_double = k_eq_d_double;
%%%%;
KAPPA_flag_kernel_full = 1;
KAPPA_pole_north_double = 12*pi/24;
KAPPA_pole_south_double = 12*pi/24;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% First define integral of <f,f>. ;
%%%%%%%%;
h2d_ = @(kd) 4*pi^2*(besselj(0,kd) + besselj(2,kd)); % calculates <f_j,f_k>, normalized so that <f,f> = (4*pi^2);
dh2d_ = @(kd) 4*pi^3*(besselj(-1,kd) - besselj(+3,kd));
h3d_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3;
dh3d_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;
%%%%%%%%;
% Now set up and test k-quadrature on sphere. ;
%%%%%%%%;
k_p_r_max = k_int/(2*pi); k_eq_d = k_eq_d_double/(2*pi); str_C2 = 'C2';
flag_uniform_over_n_k_p_r = 1;
flag_uniform_over_polar_a = 0; %<-- This is set to match test_ssnll_from_a_k_p_14 ;
[ ...
 n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,~ ...
,~ ...
,~ ...
,~ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
] = ...
sample_sphere_7( ...
 0*flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_C2 ...
,flag_uniform_over_n_k_p_r ...
,flag_uniform_over_polar_a ...
) ;
%%%%;
% and generate consistant quadrature-grid on shell. ;
%%%%;
qref_k_eq_d = k_eq_d_double/(2*pi)/max(1e-12,k_p_r_max);
tmp_t = tic();
[ ...
 qref_n_shell ...
,qref_azimu_b_shell_ ...
,qref_polar_a_shell_ ...
,qref_weight_shell_ ...
,qref_k_c_0_shell_ ...
,qref_k_c_1_shell_ ...
,qref_k_c_2_shell_ ...
,qref_n_polar_a ...
,qref_polar_a_ ...
,qref_n_azimu_b_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,qref_k_eq_d ...
,str_C2 ...
,flag_uniform_over_polar_a ...
) ;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% sample_shell_6: %0.2fs',tmp_t)); end;
assert(fnorm(qref_azimu_b_shell_-k_p_azimu_b_qk_(1:qref_n_shell))<1e-12);
assert(fnorm(qref_polar_a_shell_-k_p_polar_a_qk_(1:qref_n_shell))<1e-12);
assert(fnorm(sum(qref_weight_shell_)-4*pi)<1e-12);
n_q = qref_n_shell;
weight_3d_k_p_qk__ = reshape(weight_3d_k_p_qk_,[n_q,n_k_p_r]);
weight_shell_qk__ = reshape(weight_shell_qk_,[n_q,n_k_p_r]);
assert(fnorm(4*pi*weight_3d_k_p_r_ - reshape(sum(weight_3d_k_p_qk__,1),[1,n_k_p_r]))<1e-12);
%%%%%%%%;
if (flag_disp>1);
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 2; p_col = 4; n_plot = p_row*p_col;
for nplot=0:n_plot-1;
nk_p_r = max(0,min(n_k_p_r-1,round(n_k_p_r*nplot/n_plot)));
tmp_index_ = n_qk_csum_(1+nk_p_r):n_qk_csum_(1+nk_p_r+1)-1;
subplot(p_row,p_col,1+nplot);
plot3(k_c_0_qk_(1+tmp_index_),k_c_1_qk_(1+tmp_index_),k_c_2_qk_(1+tmp_index_),'.');
axis equal; axis vis3d; axisnotick3d;
title(sprintf('nk_p_r %d/%d',nk_p_r,n_k_p_r),'Interpreter','none');
end;%for nplot=0:n_plot-1;
end;%if flag_disp;

%%%%%%%%;
% Define rotation. ;
%%%%%%%%;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;
polar_a_use = +1*pi/5;
azimu_b_use = +1*pi/7;
gamma_z_use = +1*pi/3;
euler_use_ = [gamma_z_use,polar_a_use,azimu_b_use];
R_use__ = Rz(azimu_b_use)*Ry(polar_a_use)*Rz(gamma_z_use);
fnorm_disp(flag_verbose,'R_use__',R_use__,'euler_to_R_0(euler_use_)',euler_to_R_0(euler_use_));
fnorm_disp(flag_verbose,'euler_use_',euler_use_,'R_to_euler_0(R_use__)',R_to_euler_0(R_use__));
%%%%%%%%;

%%%%%%%%;
% Now define a_k_p_form, as well as the rotated version a_R_k_p_form. ;
%%%%%%%%;
n_source = 4;
rng(0);
delta_a_c__ = zeros(3,n_source);
delta_b_c__ = zeros(3,n_source);
inv_R_delta_a_c__ = zeros(3,n_source);
inv_R_delta_b_c__ = zeros(3,n_source);
for nsource=0:n_source-1;
rng(1+nsource);
delta_a_c_ = 2*rand(3,1)-1; delta_a_c_ = delta_a_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_a_c_)); %<-- ensure small in magnitude. ;
delta_a_c__(:,1+nsource) = delta_a_c_;
delta_b_c_ = 2*rand(3,1)-1; delta_b_c_ = delta_b_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_b_c_)); %<-- ensure small in magnitude. ;
delta_b_c__(:,1+nsource) = delta_b_c_;
inv_R_delta_a_c__(:,1+nsource) = transpose(R_use__)*delta_a_c__(:,1+nsource);
inv_R_delta_b_c__(:,1+nsource) = transpose(R_use__)*delta_b_c__(:,1+nsource);
end;%for nsource=0:n_source-1;
a_k_p_form_ = zeros(n_qk,1);
b_k_p_form_ = zeros(n_qk,1);
a_R_k_p_form_ = zeros(n_qk,1);
b_R_k_p_form_ = zeros(n_qk,1);
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c__(:,1+nsource);
a_k_p_form_ = a_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*delta_a_c_(1+0) + k_c_1_qk_*delta_a_c_(1+1) + k_c_2_qk_*delta_a_c_(1+2)));
delta_b_c_ = delta_b_c__(:,1+nsource);
b_k_p_form_ = b_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*delta_b_c_(1+0) + k_c_1_qk_*delta_b_c_(1+1) + k_c_2_qk_*delta_b_c_(1+2)));
inv_R_delta_a_c_ = inv_R_delta_a_c__(:,1+nsource);
a_R_k_p_form_ = a_R_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*inv_R_delta_a_c_(1+0) + k_c_1_qk_*inv_R_delta_a_c_(1+1) + k_c_2_qk_*inv_R_delta_a_c_(1+2)));
inv_R_delta_b_c_ = inv_R_delta_b_c__(:,1+nsource);
b_R_k_p_form_ = b_R_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*inv_R_delta_b_c_(1+0) + k_c_1_qk_*inv_R_delta_b_c_(1+1) + k_c_2_qk_*inv_R_delta_b_c_(1+2)));
end;%for nsource=0:n_source-1;
%%%%;
I_a_quad = sum(a_k_p_form_.*weight_3d_k_p_qk_);
I_b_quad = sum(b_k_p_form_.*weight_3d_k_p_qk_);
I_a_form = 0;
I_b_form = 0;
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c__(:,1+nsource);
delta_b_c_ = delta_b_c__(:,1+nsource);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c_);
I_a_form = I_a_form + h3d_(tmp_kd)*k_p_r_max^3;
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_b_c_);
I_b_form = I_b_form + h3d_(tmp_kd)*k_p_r_max^3;
end;%for nsource=0:n_source-1;
fnorm_disp(flag_verbose,'I_a_form',I_a_form,'I_a_quad',I_a_quad,' %<-- should be <1e-6');
fnorm_disp(flag_verbose,'I_b_form',I_b_form,'I_b_quad',I_b_quad,' %<-- should be <1e-6');
%%%%%%%%;
% Now set up and test polar-quadrature-weights on disk. ;
%%%%%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = n_w_int*2*(l_max_max+1); n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%;
S_k_p_wk_ = zeros(n_w_sum,1);
T_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
S_k_p_wk_ = S_k_p_wk_ + exp(+2*pi*i*(k_c_0_wk_*delta_a_c__(1+0,1+nsource) + k_c_1_wk_*delta_a_c__(1+1,1+nsource)));
T_k_p_wk_ = T_k_p_wk_ + exp(+2*pi*i*(k_c_0_wk_*delta_b_c__(1+0,1+nsource) + k_c_1_wk_*delta_b_c__(1+1,1+nsource)));
end;%for nsource=0:n_source-1;
I_quad = sum(conj(S_k_p_wk_).*T_k_p_wk_.*weight_2d_wk_)*(4*pi^2);
I_form = 0;
for nsource0=0:n_source-1;
for nsource1=0:n_source-1;
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c__(1:2,1+nsource0) - delta_b_c__(1:2,1+nsource1));
I_form = I_form + h2d_(tmp_kd)/(4*pi^2) * (pi*k_p_r_max^2);
end;%for nsource1=0:n_source-1;
end;%for nsource0=0:n_source-1;
fnorm_disp(flag_verbose,'I_form',I_form,'I_quad',I_quad,'%<-- should be <1e-2');
%%%%;
if (flag_disp>1);
figure(1+nf);nf=nf+1;clf;figmed;
Slim_ = n_source*[-1,+1];
subplot(1,2,1);
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(S_k_p_wk_),Slim_,colormap_beach());
axis image; axisnotick; title('real(S_k_p_wk_)','Interpreter','none');
subplot(1,2,2);
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(T_k_p_wk_),Slim_,colormap_beach());
axis image; axisnotick; title('real(T_k_p_wk_)','Interpreter','none');
end;% if flag_disp;
%%%%%%%%;
% Now set up spherical-harmonics. ;
%%%%%%%%;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_);
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
%%%%;
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
weight_Y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
weight_Y_(1+tmp_index_) = weight_3d_k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%;
a_k_Y_form_ = zeros(n_lm_sum,1);
b_k_Y_form_ = zeros(n_lm_sum,1);
for nsource=0:n_source-1;
a_k_Y_form_ = a_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_a_c__(:,1+nsource),l_max_);
b_k_Y_form_ = b_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_b_c__(:,1+nsource),l_max_);
end;%for nsource=0:n_source-1;
%%%%;
tmp_t = tic;
if ~exist('Ylm_uklma___','var'); Ylm_uklma___ = []; end;
if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__ = []; end;
if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__ = []; end;
if ~exist('l_max_uk_','var'); l_max_uk_ = []; end;
if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_ = []; end;
if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__ = []; end;
[ ...
 a_k_Y_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'a_k_Y_form_',a_k_Y_form_,'a_k_Y_quad_',a_k_Y_quad_,'%<-- should be <1e-2');
%%%%;
tmp_t = tic();
[ ...
 b_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% b_k_Y_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'b_k_Y_form_',b_k_Y_form_,'b_k_Y_quad_',b_k_Y_quad_,'%<-- should be <1e-2');
%%%%;
tmp_t = tic;
[ ...
 a_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_p_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'a_k_p_form_',a_k_p_form_,'a_k_p_quad_',a_k_p_quad_,'%<-- should be <1e-2');
%%%%;
tmp_t = tic;
[ ...
 b_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% b_k_p_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'b_k_p_form_',b_k_p_form_,'b_k_p_quad_',b_k_p_quad_,'%<-- should be <1e-2');
%%%%%%%%;
% prepare a_k_Y_form__ and b_k_Y_form__ ;
%%%%%%%%;
a_k_Y_form_yk_ = a_k_Y_form_;
a_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
a_k_Y_form_yk__(1:n_lm,1+nk_p_r) = a_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% a_k_Y_form_yk__: time %0.6fs',tmp_t)); end;
%%%%;
b_k_Y_form_yk_ = b_k_Y_form_;
b_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
b_k_Y_form_yk__(1:n_lm,1+nk_p_r) = b_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% b_k_Y_form_yk__: time %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% generate template-grids. ;
%%%%%%%%;
tmp_t = tic();
viewing_k_eq_d = t_eq_d_double/k_p_r_max;
template_k_eq_d = t_eq_d_double/k_p_r_max;
str_L = 'L'; %<-- Use C2 to allow for off-grid interpolation. ;
flag_tensor_vs_adap = 0; %<-- use adaptive grid for ddssnll_from_a_k_p, but need tensor grid for ddsssnll_3. ;
[ ...
 n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,viewing_k_c_0_qk_ ...
,viewing_k_c_1_qk_ ...
,viewing_k_c_2_qk_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,template_k_eq_d ...
,str_C2 ...
,flag_tensor_vs_adap ...
) ;
n_S = n_viewing_S;
viewing_gamma_z_S_ = zeros(n_S,1);
if (flag_verbose>0); disp(sprintf(' %% n_S %d, n_viewing_polar_a %d, n_viewing_azimu_b [%d,..,%d]',n_S,n_viewing_polar_a,n_viewing_azimu_b_(1+0),n_viewing_azimu_b_(end))); end;
%%%%;

%%%%;
if (flag_disp>1);
figure(1+nf);nf=nf+1;clf;figsml;
plot3(viewing_k_c_0_qk_,viewing_k_c_1_qk_,viewing_k_c_2_qk_,'.');
axis equal; axisnotick3d; axis vis3d;
end;%if flag_disp;
%%%%;
[ ...
 ~ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_ ...
);
%%%%;
n_w_0in = n_w_max; n_w_0in_ = n_w_max*ones(n_k_p_r,1);
%%%%%%%%;

a_k_p_qk_ = a_k_p_form_ ;
a_R_k_p_qk_ = a_R_k_p_form_ ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% generate templates. ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
tmp_t = tic();
[ ...
 S_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,a_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
S_k_p_wkS__ = reshape(S_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_k_p_wkS__ (pm_template_2): time %0.6fs',tmp_t)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
parameter_interpolate = struct('type','parameter');
parameter_interpolate.flag_verbose = 1;
parameter_interpolate.tolerance_pinv = 1e-6;
parameter_interpolate.flag_check = 0;
parameter_interpolate.flag_parsimonious = 1;
[ ...
 parameter_interpolate ...
,template_from_a_k_p_wkS__ ...
,n_w ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dtemplateda_from_a_k_p_wkS__ ...
,dtemplatedb_from_a_k_p_wkS__ ...
,dtemplatedc_from_a_k_p_wkS__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,dtemplateda_rec_wkS__ ...
,dtemplatedb_rec_wkS__ ...
,dtemplatedc_rec_wkS__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_from_a_k_p_wkS__ ...
,ddtemplatedab_from_a_k_p_wkS__ ...
,ddtemplatedac_from_a_k_p_wkS__ ...
,ddtemplatedbb_from_a_k_p_wkS__ ...
,ddtemplatedbc_from_a_k_p_wkS__ ...
,ddtemplatedcc_from_a_k_p_wkS__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,ddtemplatedaa_rec_wkS__ ...
,ddtemplatedab_rec_wkS__ ...
,ddtemplatedac_rec_wkS__ ...
,ddtemplatedbb_rec_wkS__ ...
,ddtemplatedbc_rec_wkS__ ...
,ddtemplatedcc_rec_wkS__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_6( ...
 parameter_interpolate ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,-1 ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_k_p_wkS__ (interpolate_template_6): time %0.6fs',tmp_t)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
tmp_t = tic();
if ~exist('V_lmm___','var'); V_lmm___=[]; end;
if ~exist('L_lm__','var'); L_lm__=[]; end;
if ~exist('d0W_betazeta_mlma____','var'); d0W_betazeta_mlma____=[]; end;
if ~exist('d1W_betazeta_mlma____','var'); d1W_betazeta_mlma____=[]; end;
if ~exist('d2W_betazeta_mlma____','var'); d2W_betazeta_mlma____=[]; end;
viewing_gamma_z = 0.0;
[ ...
 template_from_a_k_Y_wkS__ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,dtemplateda_from_a_k_Y_wkS__ ...
,dtemplatedb_from_a_k_Y_wkS__ ...
,dtemplatedc_from_a_k_Y_wkS__ ...
,d1W_betazeta_mlma____ ...
,ddtemplatedaa_from_a_k_Y_wkS__ ...
,ddtemplatedab_from_a_k_Y_wkS__ ...
,ddtemplatedac_from_a_k_Y_wkS__ ...
,ddtemplatedbb_from_a_k_Y_wkS__ ...
,ddtemplatedbc_from_a_k_Y_wkS__ ...
,ddtemplatedcc_from_a_k_Y_wkS__ ...
,d2W_betazeta_mlma____ ...
] = ...
sph_template_3( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,local_yk__from_yk_(n_k_p_r,l_max_,a_k_Y_form_) ...
,[] ...
,[] ...
,-1 ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_k_p_wkS__ (sph_template_3): time %0.6fs',tmp_t)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
fnorm_disp(flag_verbose,'S_k_p_wkS__',S_k_p_wkS__,'template_from_a_k_p_wkS__',template_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'S_k_p_wkS__',S_k_p_wkS__,'template_from_a_k_Y_wkS__',template_from_a_k_Y_wkS__);
fnorm_disp(flag_verbose,'template_from_a_k_Y_wkS__',template_from_a_k_Y_wkS__,'template_from_a_k_p_wkS__',template_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+dtemplateda_from_a_k_Y_wkS__',+dtemplateda_from_a_k_Y_wkS__,'+dtemplateda_from_a_k_p_wkS__',+dtemplateda_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+dtemplatedb_from_a_k_Y_wkS__',+dtemplatedb_from_a_k_Y_wkS__,'+dtemplatedb_from_a_k_p_wkS__',+dtemplatedb_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+dtemplatedc_from_a_k_Y_wkS__',+dtemplatedc_from_a_k_Y_wkS__,'-dtemplatedc_from_a_k_p_wkS__',-dtemplatedc_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedaa_from_a_k_Y_wkS__',+ddtemplatedaa_from_a_k_Y_wkS__,'+ddtemplatedaa_from_a_k_p_wkS__',+ddtemplatedaa_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedab_from_a_k_Y_wkS__',+ddtemplatedab_from_a_k_Y_wkS__,'+ddtemplatedab_from_a_k_p_wkS__',+ddtemplatedab_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedac_from_a_k_Y_wkS__',+ddtemplatedac_from_a_k_Y_wkS__,'-ddtemplatedac_from_a_k_p_wkS__',-ddtemplatedac_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedbb_from_a_k_Y_wkS__',+ddtemplatedbb_from_a_k_Y_wkS__,'+ddtemplatedbb_from_a_k_p_wkS__',+ddtemplatedbb_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedbc_from_a_k_Y_wkS__',+ddtemplatedbc_from_a_k_Y_wkS__,'-ddtemplatedbc_from_a_k_p_wkS__',-ddtemplatedbc_from_a_k_p_wkS__);
fnorm_disp(flag_verbose,'+ddtemplatedcc_from_a_k_Y_wkS__',+ddtemplatedcc_from_a_k_Y_wkS__,'+ddtemplatedcc_from_a_k_p_wkS__',+ddtemplatedcc_from_a_k_p_wkS__);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
R_k_p_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
R_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_R__*delta_a_c__(:,1+nsource);
R_k_p_wk_ = R_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
R_k_p_wkS__(:,1+nS) = R_k_p_wk_;
end;%for nS=0:n_S-1;
fnorm_disp(flag_verbose,'R_k_p_wkS__',R_k_p_wkS__,'S_k_p_wkS__',S_k_p_wkS__,' %<-- should be <1e-2');
%%%%%%%%;

%%%%%%%%;
% Now get templates for b_k_Y_form. ;
%%%%%%%%;
tmp_t = tic();
[ ...
 T_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,b_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
T_k_p_wkS__ = reshape(T_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% T_k_p_wkS__ (pm_template_2): time %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 R_k_p_wkS__ ...
] = ...
sph_template_3( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,b_k_Y_form_yk__ ...
,[] ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% R_k_p_wkS__ (sph_template_3): time %0.6fs',tmp_t)); end;
fnorm_disp(flag_verbose,'R_k_p_wkS__',R_k_p_wkS__,'T_k_p_wkS__',T_k_p_wkS__,' %<-- should be <1e-2');
%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
R_k_p_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
T_k_p_wk_ = T_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
R_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_R__*delta_b_c__(:,1+nsource);
R_k_p_wk_ = R_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
R_k_p_wkS__(:,1+nS) = R_k_p_wk_;
end;%for nS=0:n_S-1;
fnorm_disp(flag_verbose,'R_k_p_wkS__',R_k_p_wkS__,'T_k_p_wkS__',T_k_p_wkS__,' %<-- should be <1e-2');
%%%%%%%%;
% Now test integral. ;
%%%%%%%%;
CTF_alpha = 1.5/max(1e-12,k_p_r_max);
CTF_k_p_wk_ = reshape(repmat(reshape(besselj(0,CTF_alpha*k_p_r_),[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1]);
%%%%;
nS = max(0,min(n_S-1,128));
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
nsource_a = 0;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
%%%%;
nT = max(0,min(n_S-1,128));
T_k_p_wk_ = T_k_p_wkS__(:,1+nT);
tmp_azimu_b = viewing_azimu_b_S_(1+nT);
tmp_polar_a = viewing_polar_a_S_(1+nT);
tmp_gamma_z = 0.0;
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
nsource_b = 0;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
%%%%;
I_quad = sum(conj(U_k_p_wk_).*CTF_k_p_wk_.*V_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
I_form = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_U ...
,tmp_omega_U ...
,tmp_delta_V ...
,tmp_omega_V ...
,CTF_alpha ...
);
fnorm_disp(flag_verbose,'I_form',I_form,'I_quad',I_quad,' %<-- should be <1e-6');
J_quad = 0.5 * sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*weight_2d_wk_,'all')*(4*pi^2);
%%%%;
% Note that (Gradshteyn and Ryzhik 5.52.1): ;
% \int_{0}^{K} k besselj(0,alpha*k) dkdpsi = 2*pi*K*besselj(1,alpha*K)/alpha. ;
% and: \lim_{alpha\rightarrow 0} besselj(1,alpha*K)/alpha = K/2. ;
% i.e.: CTF_alpha = 0.2; integral2(@(k,psi) k.*besselj(0,CTF_alpha.*k),0,k_p_r_max,0,2*pi)*CTF_alpha/(2*pi*k_p_r_max*besselj(1,CTF_alpha.*k_p_r_max));
% Note also that (Gradshteyn and Ryzhik 5.54.2): ;
% \int_{0}^{k} k besselj(0,alpha*k)^2 dkdpsi = 2*pi* (K^2/2)*(besselj(0,alpha*K)^2 - besselj(-1,alpha*K)*besselj(+1,alpha*K)). ;
% i.e., ;
% nu = 0; CTF_alpha = 0.2;
% tmp_I = integral(@(k) k.*besselj(nu,CTF_alpha.*k).^2,0,k_p_r_max);
% tmp_J = (k_p_r_max^2/2)*(besselj(nu,CTF_alpha.*k_p_r_max)^2 - besselj(nu+1,CTF_alpha.*k_p_r_max)*besselj(nu-1,CTF_alpha.*k_p_r_max));
% disp(sprintf(' %% fnorm(tmp_I - tmp_J): %0.16f',fnorm(tmp_I-tmp_J)));
% CTF_alpha = 1e-4;
% tmp_J = (k_p_r_max^2/2)*(besselj(nu,CTF_alpha.*k_p_r_max)^2 - besselj(nu+1,CTF_alpha.*k_p_r_max)*besselj(nu-1,CTF_alpha.*k_p_r_max));
% disp(sprintf(' %% fnorm(tmp_J - k_p_r_max^2/2) %0.6f',fnorm(tmp_J - k_p_r_max^2/2)));
%%%%;
G_form = (2*pi)*k_p_r_max^2/2.0; if (CTF_alpha> 1e-12); G_form = (2*pi)*(k_p_r_max^2/2)*(besselj(0,CTF_alpha*k_p_r_max)^2 - besselj(-1,CTF_alpha*k_p_r_max)*besselj(+1,CTF_alpha*k_p_r_max)); end;
H_form = pi*k_p_r_max^2;
J_form = 0.5 * (G_form - 2*I_form + H_form);
%%%%;
n_nS_sub = 8; nS_sub_ = randperm(n_S,n_nS_sub)-1;
n_nT_sub = 10; nT_sub_ = randperm(n_S,n_nT_sub)-1;
I_quad_ST__ = zeros(n_nS_sub,n_nT_sub);
I_form_ST__ = zeros(n_nS_sub,n_nT_sub);
for nnS_sub=0:n_nS_sub-1;
nS_sub = nS_sub_(1+nnS_sub);
nS = nS_sub;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
for nnT_sub=0:n_nT_sub-1;
nT_sub = nT_sub_(1+nnT_sub);
nT = nT_sub;
T_k_p_wk_ = T_k_p_wkS__(:,1+nT);
tmp_azimu_b = viewing_azimu_b_S_(1+nT);
tmp_polar_a = viewing_polar_a_S_(1+nT);
tmp_gamma_z = 0.0;
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
I_quad = sum(conj(U_k_p_wk_).*CTF_k_p_wk_.*V_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
I_form = 0;
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
I_form_sub = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_U ...
,tmp_omega_U ...
,tmp_delta_V ...
,tmp_omega_V ...
,CTF_alpha ...
);
I_form = I_form + I_form_sub;
end;%for nsource_b=0:n_source-1;
end;%for nsource_a=0:n_source-1;
I_quad_ST__(1+nnS_sub,1+nnT_sub) = I_quad;
I_form_ST__(1+nnS_sub,1+nnT_sub) = I_form;
end;%for nnT_sub=0:n_nT_sub-1;
end;%for nnS_sub=0:n_nS_sub-1;
fnorm_disp(flag_verbose,'I_form_ST__',I_form_ST__,'I_quad_ST__',I_quad_ST__,' %<-- should be <1e-6');
%%%%%%%%;

%%%%%%%%;
% Now calculate ssnll. ;
% This does not test anisotropic CTF. ;
% Nor does this test anisotropic eta. (indeed, here we set eta to 1). ;
%%%%%%%%;
n_alpha = 3; CTF_alpha_ = [0.1;0.3;0.5];
n_power = 2; eta_power_ = [0.5;0.75]*0; %<-- turn off eta for volumetric calculation. ;
n_CTF = n_alpha*n_power;
n_eta = n_alpha*n_power;
CTF_k_p_r_kC__ = zeros(n_k_p_r,n_CTF);
CTF_k_p_wkC__ = zeros(n_w_sum,n_CTF);
eta_k_p_r_ke__ = zeros(n_k_p_r,n_eta);
eta_k_p_wke__ = zeros(n_w_sum,n_eta);
for nalpha=0:n_alpha-1;
CTF_alpha = CTF_alpha_(1+nalpha);
for npower=0:n_power-1;
eta_power = eta_power_(1+npower);
nCTF = nalpha+npower*n_alpha;
neta = nalpha+npower*n_alpha;
CTF_k_p_r_k_ = reshape(besselj(0,CTF_alpha*k_p_r_),[n_k_p_r,1]).^(1-eta_power);
eta_k_p_r_k_ = reshape(besselj(0,CTF_alpha*k_p_r_),[n_k_p_r,1]).^(0+eta_power);
CTF_k_p_wk_ = (reshape(repmat(reshape(CTF_k_p_r_k_,[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1]));
CTF_k_p_r_kC__(:,1+nCTF) = CTF_k_p_r_k_;
CTF_k_p_wkC__(:,1+nCTF) = CTF_k_p_wk_;
eta_k_p_wk_ = (reshape(repmat(reshape(eta_k_p_r_k_,[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1]));
eta_k_p_r_ke__(:,1+neta) = eta_k_p_r_k_;
eta_k_p_wke__(:,1+neta) = eta_k_p_wk_;
end;%for npower=0:n_power-1;
end;%for nalpha=0:n_alpha-1;
%%%%;

%%%%%%%%;
% testing full on-grid ssnll. ;
%%%%%%%%;
n_M = n_S; M_k_p_wkM__ = T_k_p_wkS__ ;
index_nCTF_from_nM_ = zeros(n_M,1); for nM=0:n_M-1; index_nCTF_from_nM_(1+nM) = mod(nM,n_CTF); end;%for nM=0:n_M-1;
index_neta_from_nM_ = zeros(n_M,1); for nM=0:n_M-1; index_neta_from_nM_(1+nM) = mod(nM,n_eta); end;%for nM=0:n_M-1;
euler_polar_a_M_ = viewing_polar_a_S_;
euler_azimu_b_M_ = viewing_azimu_b_S_;
rng(0); euler_gamma_z_M_ = 2*pi*rand(n_M,1);
for nM=0:n_M-1;
M_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_wkS__(:,1+nM),+euler_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
%%%%;
ssnll_frm = 0.0d0;
for nM=0:n_M-1;
nS = nM;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
T_k_p_wk_ = T_k_p_wkS__(:,1+nM);
nCTF = index_nCTF_from_nM_(1+nM);
CTF_k_p_wk_ = CTF_k_p_wkC__(:,1+nCTF);
neta = index_neta_from_nM_(1+nM);
eta_k_p_wk_ = eta_k_p_wke__(:,1+neta);
tmp_polar_a = euler_polar_a_M_(1+nM);
tmp_azimu_b = euler_azimu_b_M_(1+nM);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
tmp_R_a__ = tmp_R__; tmp_R_b__ = tmp_R__;
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% S_k_p_wk_ vs U_k_p_wk_: %0.16f',fnorm(S_k_p_wk_ - U_k_p_wk_)/fnorm(S_k_p_wk_))); end;
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% T_k_p_wk_ vs V_k_p_wk_: %0.16f',fnorm(T_k_p_wk_ - V_k_p_wk_)/fnorm(T_k_p_wk_))); end;
ssnll_frm = ssnll_frm + 0.5*sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*eta_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
end;%for nM=0:n_M-1;
%%%%;
tmp_t = tic();
parameter_ssnll = struct('type','parameter');
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
[ ...
 parameter_ssnll ...
,ssnll_q2d_M_ ...
,ssnll_q2d ...
,S_k_p_q2d_wkS__ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,~ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,~ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,[] ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,S_k_p_wkS__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,[] ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,[] ...
,[] ...
,[] ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,[] ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: time %0.6fs',tmp_t)); end;
%%%%;
fnorm_disp(flag_verbose,'ssnll_frm',ssnll_frm,'ssnll_q2d',ssnll_q2d);
%%%%%%%%;

%%%%%%%%;
% Now creating dvol_a_k_Y_form_. ;
%%%%%%%%;
n_source = 4;
rng(1);
delta_dvol_a_c__ = zeros(3,n_source);
inv_R_delta_dvol_a_c__ = zeros(3,n_source);
for nsource=0:n_source-1;
rng(1024+1+nsource);
delta_dvol_a_c_ = 2*rand(3,1)-1; delta_dvol_a_c_ = delta_dvol_a_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_dvol_a_c_)); %<-- ensure small in magnitude. ;
delta_dvol_a_c__(:,1+nsource) = delta_dvol_a_c_;
inv_R_delta_dvol_a_c__(:,1+nsource) = transpose(R_use__)*delta_dvol_a_c__(:,1+nsource);
end;%for nsource=0:n_source-1;
dvol_a_k_p_form_ = zeros(n_qk,1);
dvol_a_R_k_p_form_ = zeros(n_qk,1);
for nsource=0:n_source-1;
delta_dvol_a_c_ = delta_dvol_a_c__(:,1+nsource);
dvol_a_k_p_form_ = dvol_a_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*delta_dvol_a_c_(1+0) + k_c_1_qk_*delta_dvol_a_c_(1+1) + k_c_2_qk_*delta_dvol_a_c_(1+2)));
inv_R_delta_dvol_a_c_ = inv_R_delta_dvol_a_c__(:,1+nsource);
dvol_a_R_k_p_form_ = dvol_a_R_k_p_form_ + exp(+i*2*pi*(k_c_0_qk_*inv_R_delta_dvol_a_c_(1+0) + k_c_1_qk_*inv_R_delta_dvol_a_c_(1+1) + k_c_2_qk_*inv_R_delta_dvol_a_c_(1+2)));
end;%for nsource=0:n_source-1;
%%%%;
I_dvol_a_quad = sum(dvol_a_k_p_form_.*weight_3d_k_p_qk_);
I_dvol_a_form = 0;
for nsource=0:n_source-1;
delta_dvol_a_c_ = delta_dvol_a_c__(:,1+nsource);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_dvol_a_c_);
I_dvol_a_form = I_dvol_a_form + h3d_(tmp_kd)*k_p_r_max^3;
end;%for nsource=0:n_source-1;
fnorm_disp(flag_verbose,'I_a_form',I_a_form,'I_a_quad',I_a_quad,' %<-- should be <1e-6');
%%%%;
dvol_a_k_Y_form_ = zeros(n_lm_sum,1);
for nsource=0:n_source-1;
dvol_a_k_Y_form_ = dvol_a_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_dvol_a_c__(:,1+nsource),l_max_);
end;%for nsource=0:n_source-1;
%%%%;
tmp_t = tic;
[ ...
 dvol_a_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,dvol_a_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% dvol_a_k_Y_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'dvol_a_k_Y_form_',dvol_a_k_Y_form_,'dvol_a_k_Y_quad_',dvol_a_k_Y_quad_,' %<-- should be <1e-2');
%%%%;
tmp_t = tic;
[ ...
 dvol_a_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,dvol_a_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% dvol_a_k_p_quad_ time %0.2fs',tmp_t));
fnorm_disp(flag_verbose,'dvol_a_k_p_form_',dvol_a_k_p_form_,'dvol_a_k_p_quad_',dvol_a_k_p_quad_,' %<-- should be <1e-2');
%%%%%%%%;
% prepare dvol_a_k_Y_form__ ;
%%%%%%%%;
dvol_a_k_Y_form_yk_ = dvol_a_k_Y_form_;
dvol_a_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
dvol_a_k_Y_form_yk__(1:n_lm,1+nk_p_r) = dvol_a_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dvol_a_k_Y_form_yk__: time %0.6fs',tmp_t)); end;
%%%%%%%%;
% generate templates. ;
%%%%%%%%;
tmp_t = tic();
[ ...
 dvol_S_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,dvol_a_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
dvol_S_k_p_wkS__ = reshape(dvol_S_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dvol_S_k_p_wkS__: time %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
dvol_R_k_p_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
dvol_S_k_p_wk_ = dvol_S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_dvol_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
dvol_R_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_dvol_R__*delta_dvol_a_c__(:,1+nsource);
dvol_R_k_p_wk_ = dvol_R_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
dvol_R_k_p_wkS__(:,1+nS) = dvol_R_k_p_wk_;
end;%for nS=0:n_S-1;
fnorm_disp(flag_verbose,'dvol_R_k_p_wkS__',dvol_R_k_p_wkS__,'dvol_S_k_p_wkS__',dvol_S_k_p_wkS__,' %<-- should be <1e-2');
%%%%%%%%;
dvol_a_k_p_qk_ = dvol_a_k_p_form_ ;
dvol_a_R_k_p_qk_ = dvol_a_R_k_p_form_ ;
%%%%%%%%%%%%%%%%;
% Now generate templates from dvol_a_k_p_qk_. ;
%%%%%%%%%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
parameter_interpolate = struct('type','parameter');
parameter_interpolate.flag_verbose = 1;
parameter_interpolate.tolerance_pinv = 1e-6;
parameter_interpolate.flag_check = 0;
parameter_interpolate.flag_parsimonious = 1;
[ ...
 parameter_interpolate ...
,template_ori_wkS__ ...
,n_w ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,R_use__ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dtemplateda_ori_wkS__ ...
,dtemplatedb_ori_wkS__ ...
,dtemplatedc_ori_wkS__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,dtemplateda_rec_wkS__ ...
,dtemplatedb_rec_wkS__ ...
,dtemplatedc_rec_wkS__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_ori_wkS__ ...
,ddtemplatedab_ori_wkS__ ...
,ddtemplatedac_ori_wkS__ ...
,ddtemplatedbb_ori_wkS__ ...
,ddtemplatedbc_ori_wkS__ ...
,ddtemplatedcc_ori_wkS__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,ddtemplatedaa_rec_wkS__ ...
,ddtemplatedab_rec_wkS__ ...
,ddtemplatedac_rec_wkS__ ...
,ddtemplatedbb_rec_wkS__ ...
,ddtemplatedbc_rec_wkS__ ...
,ddtemplatedcc_rec_wkS__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_6( ...
 parameter_interpolate ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,dvol_a_k_p_qk_ ...
,viewing_k_eq_d ...
,-1 ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
dvol_S_k_p_wkS__ = reshape(template_ori_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_6 (dvol_S_k_p_wkS__): %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Set up test with some 'on-grid' images. ;
% Note that these are on the tensor grid from sample_shell above. ;
% For this test we explicitly *exclude* those templates near the pole. ;
% This is because we have difficulty interpolating across the poles. ;
%%%%%%%%;
n_M = 64;
index_nCTF_from_nM_ = transpose(mod(0:n_M-1,n_CTF));
index_neta_from_nM_ = transpose(mod(0:n_M-1,n_eta));
nS_pole_south = max(efind(abs(viewing_polar_a_S_-1*pi)<1e-12)) + 1; if isempty(nS_pole_south); nS_pole_south = n_S-1; end;
nS_pole_north = min(efind(abs(viewing_polar_a_S_-0*pi)<1e-12)) - 1; if isempty(nS_pole_north); nS_pole_north = 0; end;
index_nS_from_nM_ = transpose(round(linspace(nS_pole_south,nS_pole_north,n_M)));
M_k_p_wkM__ = zeros(n_w_sum,n_M);
fromb_polar_a_M_ = viewing_polar_a_S_(1+index_nS_from_nM_);
fromb_azimu_b_M_ = viewing_azimu_b_S_(1+index_nS_from_nM_);
fromb_gamma_z_M_ = reshape(2*pi .* (3 + mod(0:n_M-1,19))/max(1,3+19),[n_M,1]);
for nM=0:n_M-1;
M_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_wkS__(:,1+index_nS_from_nM_(1+nM)),+fromb_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
%%%%;
euler_polar_a_M_ = viewing_polar_a_S_(1+index_nS_from_nM_);
euler_azimu_b_M_ = viewing_azimu_b_S_(1+index_nS_from_nM_);
euler_gamma_z_M_ = fromb_gamma_z_M_;
%%%%;
rng(7);
dtau_euler_polar_a_M_ = 2*pi*rand(n_M,1);
dtau_euler_azimu_b_M_ = 2*pi*rand(n_M,1);
dtau_euler_gamma_z_M_ = 2*pi*rand(n_M,1);
%dtau_fnorm = fnorm([ dtau_euler_polar_a_M_ , dtau_euler_azimu_b_M_ , dtau_euler_gamma_z_M_ ]);
%dtau_euler_polar_a_M_ = dtau_euler_polar_a_M_/max(1e-12,dtau_fnorm);
%dtau_euler_azimu_b_M_ = dtau_euler_azimu_b_M_/max(1e-12,dtau_fnorm);
%dtau_euler_gamma_z_M_ = dtau_euler_gamma_z_M_/max(1e-12,dtau_fnorm);
dtau_M3__ = [ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
] ;
dtau = 1e-3;
%%%%;
ssnll_frm = 0.0d0;
for nM=0:n_M-1;
nS = index_nS_from_nM_(1+nM);
T_k_p_wk_ = T_k_p_wkS__(:,1+nS);
nCTF = index_nCTF_from_nM_(1+nM);
CTF_k_p_wk_ = CTF_k_p_wkC__(:,1+nCTF);
neta = index_neta_from_nM_(1+nM);
eta_k_p_wk_ = eta_k_p_wke__(:,1+neta);
tmp_polar_a = +euler_polar_a_M_(1+nM);
tmp_azimu_b = +euler_azimu_b_M_(1+nM);
tmp_gamma_z = -euler_gamma_z_M_(1+nM);
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
tmp_polar_a = +fromb_polar_a_M_(1+nM);
tmp_azimu_b = +fromb_azimu_b_M_(1+nM);
tmp_gamma_z = -fromb_gamma_z_M_(1+nM);
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% T_k_p_wk_ vs R(V_k_p_wk_): %0.16f',fnorm(T_k_p_wk_ - rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,V_k_p_wk_,+tmp_gamma_z))/fnorm(T_k_p_wk_))); end;
M_k_p_wk_ = M_k_p_wkM__(:,1+nM);
if (flag_verbose>1); disp(sprintf(' %% M_k_p_wk_ vs V_k_p_wk_: %0.16f',fnorm(M_k_p_wk_ - V_k_p_wk_)/fnorm(M_k_p_wk_))); end;
ssnll_frm = ssnll_frm + 0.5*sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*eta_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
end;%for nM=0:n_M-1;
%%%%%%%%;

%%%%%%%%;
% Calculate derivative using ssnll_from_plane_wave_expansion_1. ;
%%%%%%%%;
n_source_a = n_source; v_source_a_ = ones(n_source_a,1);
n_source_b = n_source; v_source_b_ = ones(n_source_b,1);
n_source_dvol_a = n_source; v_source_dvol_a_ = ones(n_source_dvol_a,1);
viewing_gamma_z_S_ = zeros(n_S,1);
parameter_ssnll = struct('type','parameter');
[ ...
 ~ ...
,ssnll_pw1_M_ ...
,ssnll_pw1 ...
,S_k_p_pw1_wkS__ ...
,dvol_ssnll_pw1_M_ ...
,dvol_ssnll_pw1 ...
,dvol_S_k_p_pw1_wkS__ ...
,dvol_dvol_ssnll_pw1 ...
,dtau_ssnll_pw1_M3__ ...
,dtau_ssnll_pw1 ...
,dtau_S_k_p_pw1_wkS3___ ...
,dtau_dvol_ssnll_pw1_M3__ ...
,dtau_dvol_ssnll_pw1 ...
,dtau_dvol_S_k_p_pw1_wkS3___ ...
,dtau_dtau_ssnll_pw1_M33___ ...
,dtau_dtau_ssnll_pw1 ...
,dtau_dtau_S_k_p_pw1_wkS33____ ...
] = ...
ssnll_from_plane_wave_expansion_1( ...
 parameter_ssnll ...
,n_source_a ...
,v_source_a_ ...
,delta_a_c__ ...
,n_source_b ...
,v_source_b_ ...
,delta_b_c__ ...
,n_source_dvol_a ...
,v_source_dvol_a_ ...
,delta_dvol_a_c__ ...
,n_k_p_r ...
,k_p_r_ ...
,n_w_max ...
,weight_2d_wk_ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,n_M ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,fromb_polar_a_M_ ...
,fromb_azimu_b_M_ ...
,fromb_gamma_z_M_ ...
,n_S ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
);
%%%%%%%%;

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_p_14. ;
%%%%%%%%;
tmp_t = tic();
parameter_ssnll = struct('type','parameter');
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
[ ...
 parameter_ssnll ...
,ssnll_q2d_M_ ...
,ssnll_q2d ...
,S_k_p_q2d_wkS__ ...
,dvol_ssnll_q2d_M_ ...
,dvol_ssnll_q2d ...
,dvol_S_k_p_q2d_wkS__ ...
,dvol_dvol_ssnll_q2d ...
,dtau_ssnll_q2d_M3__ ...
,dtau_ssnll_q2d ...
,dtau_S_k_p_q2d_wkS3___ ...
,dtau_dvol_ssnll_q2d_M3__ ...
,dtau_dvol_ssnll_q2d ...
,dtau_dvol_S_k_p_q2d_wkS3___ ...
,dtau_dtau_ssnll_q2d_M33___ ...
,dtau_dtau_ssnll_q2d ...
,dtau_dtau_S_k_p_q2d_wkS33____ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ssnll_from_a_k_p_14( ...
 parameter_ssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,[] ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_p_14: time %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% tabulate results. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
if (flag_verbose>0); disp(sprintf(' %% on-grid test: ')); end;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
fnorm_disp(flag_verbose,'ssnll_frm',ssnll_frm,'ssnll_pw1',ssnll_pw1);
fnorm_disp(flag_verbose,'ssnll_frm',ssnll_frm,'ssnll_q2d',ssnll_q2d);
fnorm_disp(flag_verbose,'ssnll_pw1_M_',ssnll_pw1_M_,'ssnll_q2d_M_',ssnll_q2d_M_);
fnorm_disp(flag_verbose,'ssnll_pw1',ssnll_pw1,'ssnll_q2d',ssnll_q2d);
fnorm_disp(flag_verbose,'S_k_p_pw1_wkS__',S_k_p_pw1_wkS__,'S_k_p_q2d_wkS__',S_k_p_q2d_wkS__);
fnorm_disp(flag_verbose,'dvol_ssnll_pw1_M_',dvol_ssnll_pw1_M_,'dvol_ssnll_q2d_M_',dvol_ssnll_q2d_M_);
fnorm_disp(flag_verbose,'dvol_ssnll_pw1',dvol_ssnll_pw1,'dvol_ssnll_q2d',dvol_ssnll_q2d);
fnorm_disp(flag_verbose,'dvol_S_k_p_pw1_wkS__',dvol_S_k_p_pw1_wkS__,'dvol_S_k_p_q2d_wkS__',dvol_S_k_p_q2d_wkS__);
fnorm_disp(flag_verbose,'dvol_dvol_ssnll_pw1',dvol_dvol_ssnll_pw1,'dvol_dvol_ssnll_q2d',dvol_dvol_ssnll_q2d);
fnorm_disp(flag_verbose,'dtau_ssnll_pw1_M3__',dtau_ssnll_pw1_M3__,'dtau_ssnll_q2d_M3__',dtau_ssnll_q2d_M3__);
fnorm_disp(flag_verbose,'dtau_ssnll_pw1',dtau_ssnll_pw1,'dtau_ssnll_q2d',dtau_ssnll_q2d);
fnorm_disp(flag_verbose,'dtau_S_k_p_pw1_wkS3___',dtau_S_k_p_pw1_wkS3___,'dtau_S_k_p_q2d_wkS3___',dtau_S_k_p_q2d_wkS3___);
fnorm_disp(flag_verbose,'dtau_dvol_ssnll_pw1_M3__',dtau_dvol_ssnll_pw1_M3__,'dtau_dvol_ssnll_q2d_M3__',dtau_dvol_ssnll_q2d_M3__);
fnorm_disp(flag_verbose,'dtau_dvol_ssnll_pw1',dtau_dvol_ssnll_pw1,'dtau_dvol_ssnll_q2d',dtau_dvol_ssnll_q2d);
fnorm_disp(flag_verbose,'dtau_dvol_S_k_p_pw1_wkS3___',dtau_dvol_S_k_p_pw1_wkS3___,'dtau_dvol_S_k_p_q2d_wkS3___',dtau_dvol_S_k_p_q2d_wkS3___);
fnorm_disp(flag_verbose,'dtau_dtau_ssnll_pw1_M33___',dtau_dtau_ssnll_pw1_M33___,'dtau_dtau_ssnll_q2d_M33___',dtau_dtau_ssnll_q2d_M33___);
fnorm_disp(flag_verbose,'dtau_dtau_ssnll_pw1',dtau_dtau_ssnll_pw1,'dtau_dtau_ssnll_q2d',dtau_dtau_ssnll_q2d);
fnorm_disp(flag_verbose,'dtau_dtau_S_k_p_pw1_wkS33____',dtau_dtau_S_k_p_pw1_wkS33____,'dtau_dtau_S_k_p_q2d_wkS33____',dtau_dtau_S_k_p_q2d_wkS33____);
%%%%%%%%;

%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('dvol_a_R_k_p_qk_','var'); dvol_a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
if ~exist('KAPPA','var'); KAPPA = []; end;
parameter_ddssnll = struct('type','parameter');
parameter_ddssnll.flag_verbose = flag_verbose;
parameter_ddssnll.flag_check = 1;
parameter_ddssnll.flag_disp = flag_disp;
parameter_ddssnll.n_order = n_order;
parameter.ddssnll.kernel_basic_qref_k_eq_d_double = k_eq_d_double;
parameter.ddssnll.kernel_basic_l_max_use = l_max;
weight_imagecount_M_ = ones(n_M,1);
[ ...
 parameter_ddssnll ...
,Hvt_qkabc_ ...
,Hv_q3d_k_p_qk_ ...
,Ht_q2d_M3__ ...
,a_restore_C2M0_k_p_qk__ ...
,Hvv_q3d_k_p_qk_ ...
,Hvt_q3d_k_p_qk_ ...
,Htv_q2d_M3__ ...
,Htt_q2d_M3__ ...
,dvol_a_k_p_qk_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,n_dvt ... 
,dvt_ ... 
,dvt ... 
,ssnll_tmp_q2d_dvt_ ... 
,dssnll_mid_q2d ... 
,dssnll_dif_q2d ... 
,dssnll_lsq_q2d ... 
,ddssnll_mid_q2d ... 
,ddssnll_dif_q2d ... 
,ddssnll_lsq_q2d ... 
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
ddssnll_from_a_k_p_4( ...
 parameter_ddssnll ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,qref_k_eq_d ...
,a_k_p_qk_ ...
,dvol_a_k_p_qk_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_viewing_S ...
,S_k_p_q2d_wkS__ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,n_M ...
,weight_imagecount_M_ ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,KAPPA ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,dvol_a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ddssnll_from_a_k_p_4: time %0.6fs',tmp_t)); end;
%%%%%%%%;

disp(sprintf(' %% returning')); return;
