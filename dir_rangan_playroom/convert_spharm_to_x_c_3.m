function ...
[ ... 
  a_x_u_ ...
] = ...
convert_spharm_to_x_c_3( ...
 k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);

verbose=1;
if (verbose); disp(sprintf(' %% [entering convert_spharm_to_x_c_3]')); end;

na=0;
if (nargin<1+na); k_eq_d = []; end; na=na+1;
if (nargin<1+na); n_k_p_r = []; end; na=na+1;
if (nargin<1+na); k_p_r_ = []; end; na=na+1;
if (nargin<1+na); k_p_r_max = []; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_ = []; end; na=na+1;
if (nargin<1+na); l_max_ = []; end; na=na+1;
if (nargin<1+na); a_k_Y_ = []; end; na=na+1;
if (nargin<1+na); half_diameter_x_c = []; end; na=na+1;
if (nargin<1+na); n_x_u_pack = []; end; na=na+1;

if isempty(half_diameter_x_c); half_diameter_x_c = 1.0; end;
if isempty(n_x_u_pack); n_x_u_pack = 64; end;

diameter_x_c = 2.0d0*half_diameter_x_c;
x_p_r_max = half_diameter_x_c;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
[X_u_0_,X_u_1_,X_u_2_] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_X_u = n_x_u_pack^3;
X_u_weight_ = (2*x_p_r_max/n_x_u_pack)^3;
a_x_u_ = zeros(n_X_u,1);

[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,tmp_n_k_p_r ...
,tmp_k_p_r_ ...
,tmp_weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,J_node_ ...
,J_weight_ ...
,J_chebfun_ ...
,J_polyval_ ...
] = ...
sample_sphere_7( ...
 verbose ...
,k_p_r_max ...
,k_eq_d ...
,'L' ...
) ; %<-- sum(weight_3d_k_p_r_)*(4*pi) = (4/3)*pi*k_p_r_max^3 --> sum(weight_3d_k_p_r_) = (1/3)*k_p_r_max^3 ;

flag_continue = ...
( ...
( fnorm(tmp_n_k_p_r - n_k_p_r) < 1e-6 ) ...
& ...
( fnorm(tmp_k_p_r_ - k_p_r_) < 1e-6 ) ...
& ...
( fnorm(tmp_weight_3d_k_p_r_ - weight_3d_k_p_r_) < 1e-6 ) ...
);
if flag_continue==0;
disp(sprintf(' %% Warning, incompatible grids generated in convert_spharm_to_x_c_3'));
end;%if flag_continue==0;

if flag_continue==1;
if (verbose); disp(sprintf(' %% compatible grids generated in convert_spharm_to_x_c_3')); end;

%%%%%%%%;
tmp_t = tic;
[a_k_p_] = ...
convert_spharm_to_k_p_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% a_k_Y_ --> a_k_p_ time %0.2fs',tmp_t)); end;
%%%%%%%%;
eta = pi/k_p_r_max; tmp_t = tic;
a_x_u_ = ...
nufft3d3( ...
 n_k_all ...
,2*pi*k_c_0_all_*eta ...
,2*pi*k_c_1_all_*eta ...
,2*pi*k_c_2_all_*eta ...
,a_k_p_.*(2*pi)^3.*weight_3d_k_all_ ...
,+1 ...
,1e-12 ...
,n_X_u ...
,X_u_0_(:)/eta ...
,X_u_1_(:)/eta ...
,X_u_2_(:)/eta ...
)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% nufft3d3: a_x_u_ time %0.2fs',tmp_t)); end;
%%%%%%%%;

end;%if flag_continue==1;

if (verbose); disp(sprintf(' %% [finished convert_spharm_to_x_c_3]')); end;
