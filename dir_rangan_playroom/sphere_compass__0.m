function ...
[ ...
 parameter ...
] = ...
sphere_compass__0( ...
 parameter ...
,n_S ...
,polar_a_S_ ...
,azimu_b_S_ ...
,delta_polar_a_S_ ...
,delta_azimu_b_S_ ...
,delta_gamma_z_S_ ...
,c_use__ ...
);

str_thisfunction = 'sphere_compass__0';

%%%%%%%%;
if nargin<1;
disp(sprintf(' %% testing %s',str_thisfunction));
verbose=0;
k_p_r_max = 48/(2*pi);
k_eq_d = 1.0;
[ ...
 n_all ...
,azimu_b_all_ ...
,polar_a_all_ ...
,weight_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,n_polar_a ...
,polar_a_ ...
,n_azimu_b_ ...
] = ...
sample_shell_6( ...
 k_p_r_max ...
,k_eq_d ...
) ;
n_S = n_all;
azimu_b_S_ = azimu_b_all_;
polar_a_S_ = polar_a_all_;
gamma_z_S_ = zeros(n_S,1);
%%%%;
polar_cap_dilated_amplitude = 0.25;
polar_cap_dilation = @(point_pole_predilated_polar_a) polar_cap_dilated_amplitude*sin(2*point_pole_predilated_polar_a);
equa_band_dilated_amplitude = 0.15;
equa_band_dilation = @(point_pole_predilated_azimu_b) equa_band_dilated_amplitude*sin(2*point_pole_predilated_azimu_b);
inplane_z_dilated_amplitude = 0.30;
inplane_z_dilation = @(point_pole_predilated_polar_a,point_pole_predilated_azimu_b) inplane_z_dilated_amplitude*sin(1*point_pole_predilated_azimu_b)*sin(point_pole_predilated_polar_a);
delta_azimu_b_S_ = zeros(n_S,1);
delta_polar_a_S_ = zeros(n_S,1);
delta_gamma_z_S_ = zeros(n_S,1);
for nS=0:n_S-1;
polar_a = polar_a_S_(1+nS);
azimu_b = azimu_b_S_(1+nS);
gamma_z = gamma_z_S_(1+nS);
delta_polar_a = polar_cap_dilation(polar_a);
delta_azimu_b = equa_band_dilation(azimu_b);
delta_gamma_z = inplane_z_dilation(polar_a,azimu_b);
delta_polar_a_S_(1+nS) = delta_polar_a;
delta_azimu_b_S_(1+nS) = delta_azimu_b;
delta_gamma_z_S_(1+nS) = delta_gamma_z;
end;%for nS=0:n_S-1;
%%%%;
parameter = struct('type','parameter');
parameter.compass_r_base = 2.0/(2*pi)/k_p_r_max;
figure(1);clf;figmed;
%%%%;
subplot(1,2,1);
parameter.flag_2d_vs_3d = 0;
plot_sphere_grid_0(struct('flag_solid',1));
hold on;
sphere_compass__0( ...
 parameter ...
,n_S ...
,polar_a_S_ ...
,azimu_b_S_ ...
,delta_polar_a_S_ ...
,delta_azimu_b_S_ ...
,delta_gamma_z_S_ ...
);
hold off;
xlabel('x0');
ylabel('x1');
zlabel('x2');
axis equal; axis vis3d; axisnotick3d;
%%%%;
subplot(1,2,2);
parameter.flag_2d_vs_3d = 1;
hold on;
sphere_compass__0( ...
 parameter ...
,n_S ...
,polar_a_S_ ...
,azimu_b_S_ ...
,delta_polar_a_S_ ...
,delta_azimu_b_S_ ...
,delta_gamma_z_S_ ...
);
hold off;
xlim([0,2*pi]); ylim([0,1*pi]);
xlabel('azimu_b','Interpreter','none');
ylabel('polar_a','Interpreter','none');
axisnotick;
%%%%%%%%;
disp('returning'); return;
end;%if nargin<1;
%%%%%%%%;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_S=[]; end; na=na+1;
if (nargin<1+na); polar_a_S_=[]; end; na=na+1;
if (nargin<1+na); azimu_b_S_=[]; end; na=na+1;
if (nargin<1+na); delta_polar_a_S_=[]; end; na=na+1;
if (nargin<1+na); delta_azimu_b_S_=[]; end; na=na+1;
if (nargin<1+na); delta_gamma_z_S_=[]; end; na=na+1;
if (nargin<1+na); c_use__=[]; end; na=na+1;

if isempty(parameter); parameter=struct('type','parameter'); end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose=0; end;
flag_verbose=parameter.flag_verbose;
if ~isfield(parameter,'flag_normalize'); parameter.flag_normalize=0; end;
flag_normalize=parameter.flag_normalize;
if ~isfield(parameter,'compass_r_base'); parameter.compass_r_base=1.0/(2*pi)/2; end;
compass_r_base=parameter.compass_r_base;

if (flag_verbose> 0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

if isempty(n_S); n_S = 0; end;
if isempty(polar_a_S_); polar_a_S_ = zeros(n_S,1); end;
if isempty(azimu_b_S_); azimu_b_S_ = zeros(n_S,1); end;
if isempty(delta_polar_a_S_); delta_polar_a_S_ = zeros(n_S,1); end;
if isempty(delta_azimu_b_S_); delta_azimu_b_S_ = zeros(n_S,1); end;
if isempty(delta_gamma_z_S_); delta_gamma_z_S_ = zeros(n_S,1); end;
if isempty(c_use__); c_use__ = flipud(colormap_81s); end;
n_c_use = size(c_use__,1);

delta_euler_S3__ = [ 1*delta_polar_a_S_(:) , 1*delta_azimu_b_S_(:) , 0*delta_gamma_z_S_(:) ];
delta_euler_fnorm_S_ = sqrt(sum(abs(delta_euler_S3__).^2,2));
delta_euler_fnorm_max = max(delta_euler_fnorm_S_);
delta_euler_norm_S3__ = bsxfun(@rdivide,delta_euler_S3__,max(1e-12,delta_euler_fnorm_max));
delta_polar_a_norm_S_ = delta_euler_norm_S3__(:,1+0);
delta_azimu_b_norm_S_ = delta_euler_norm_S3__(:,1+1);
delta_gamma_z_norm_S_ = delta_euler_norm_S3__(:,1+2);

for nS=0:n_S-1;
parameter_sub = parameter;
tmp_c = 1.0; tmp_d = 1.0;
tmp_c = sqrt(delta_polar_a_norm_S_(1+nS).^2 + delta_azimu_b_norm_S_(1+nS).^2);
tmp_r = compass_r_base * sqrt(tmp_c); if flag_normalize; parameter_sub.compass_r_base = tmp_r; end;%  if flag_normalize;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*tmp_c/1.0)));
parameter_sub.compass_pointer_patchcolor = c_use__(1+nc_use,:);
if (tmp_r>=1e-4);
parameter_sub = ...
sphere_compass_0( ...
 parameter_sub ...
,polar_a_S_(1+nS) ...
,azimu_b_S_(1+nS) ...
,delta_polar_a_norm_S_(1+nS) ...
,delta_azimu_b_norm_S_(1+nS) ...
,delta_gamma_z_norm_S_(1+nS) ...
);
end;%if (tmp_r>=1e-4);
end;%for nS=0:n_S-1;
if (flag_verbose> 0); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;



