%%%%%%%%;
% Check spherical-grid for consistency. ;
% For efficiency the spherical-grid should be generated using: ;
% flag_uniform_over_n_k_p_r = 1;
% flag_uniform_over_polar_a = 0;
% str_T_vs_L = 'C2';
% For accuracy one might consider increasing the angular-resolution (on each shell) ;
% without necessarily increasing the radial-resolution (i.e., the distance between shells). ;
%%%%%%%%;
[ ...
 parameter ...
,polar_a_single_shell_ ...
,n_azimu_b_single_shell_ ...
,n_polar_a_single_shell ...
,polar_a_single_shell_lim_ ...
,n_q_single_shell ...
,k_c_0_single_shell_ ...
,k_c_1_single_shell_ ...
,k_c_2_single_shell_ ...
,k_p_azimu_b_single_shell_ ...
,k_p_polar_a_single_shell_ ...
,weight_3d_k_single_shell_ ...
,weight_shell_qk_single_shell_ ...
,weight_shell_qk_unit_shell_ ...
] = ...
interpolate_template_consistency_check_0( ...
 parameter ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
);
%%%%%%%%;
str_C2 = 'C2';
flag_tensor_vs_adap = 0;
tmp_t = tic();
[ ...
 qref_n_shell ...
,qref_azimu_b_shell_ ...
,qref_polar_a_shell_ ...
,qref_weight_shell_ ...
,qref_k_c_0_shell_ ...
,qref_k_c_1_shell_ ...
,qref_k_c_2_shell_ ...
,qref_n_polar_a ...
,qref_polar_a_ ...
,qref_n_azimu_b_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,qref_k_eq_d ...
,str_C2 ...
,flag_tensor_vs_adap ...
) ;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% sample_shell_5: %0.2fs',tmp_t)); end;
%%%%%%%%;
fnorm_disp(flag_verbose,'qref_n_shell',qref_n_shell,'n_q_single_shell',n_q_single_shell);
fnorm_disp(flag_verbose,'qref_azimu_b_shell_',qref_azimu_b_shell_,'k_p_azimu_b_single_shell_',k_p_azimu_b_single_shell_);
fnorm_disp(flag_verbose,'qref_polar_a_shell_',qref_polar_a_shell_,'k_p_polar_a_single_shell_',k_p_polar_a_single_shell_);
fnorm_disp(flag_verbose,'qref_weight_shell_',qref_weight_shell_,'weight_shell_qk_unit_shell_',weight_shell_qk_unit_shell_);
fnorm_disp(flag_verbose,'qref_k_c_0_shell_',qref_k_c_0_shell_,'k_c_0_single_shell_',k_c_0_single_shell_);
fnorm_disp(flag_verbose,'qref_k_c_1_shell_',qref_k_c_1_shell_,'k_c_1_single_shell_',k_c_1_single_shell_);
fnorm_disp(flag_verbose,'qref_k_c_2_shell_',qref_k_c_2_shell_,'k_c_2_single_shell_',k_c_2_single_shell_);
fnorm_disp(flag_verbose,'qref_n_polar_a',qref_n_polar_a,'n_polar_a_single_shell',n_polar_a_single_shell);
fnorm_disp(flag_verbose,'qref_polar_a_',qref_polar_a_,'polar_a_single_shell_',polar_a_single_shell_);
fnorm_disp(flag_verbose,'qref_n_azimu_b_',qref_n_azimu_b_,'n_azimu_b_single_shell_',n_azimu_b_single_shell_);
%%%%%%%%;
qref_n_shell = n_q_single_shell;
qref_azimu_b_shell_ = k_p_azimu_b_single_shell_;
qref_polar_a_shell_ = k_p_polar_a_single_shell_;
qref_weight_shell_ = weight_shell_qk_unit_shell_;
qref_k_c_0_shell_ = k_c_0_single_shell_;
qref_k_c_1_shell_ = k_c_1_single_shell_;
qref_k_c_2_shell_ = k_c_2_single_shell_;
qref_n_polar_a = n_polar_a_single_shell;
qref_polar_a_ = polar_a_single_shell_;
qref_n_azimu_b_ = n_azimu_b_single_shell_;
%%%%%%%%;
