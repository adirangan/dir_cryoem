n_image = n_M;

scaling_volumetric = (4*pi)^2 * sqrt(pi/2);
%%%%%%%%;
% Set up weights. ;
%%%%%%%%;
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
weight_Y_ = zeros(n_lm_sum,1);
weight_3d_riesz_yk_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
weight_Y_(1+tmp_index_) = weight_3d_k_p_r_(1+nk_p_r);
weight_3d_riesz_yk_(1+tmp_index_) = weight_3d_riesz_k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%;
n_ykabc = n_lm_sum + n_image*3;
weight_3d_riesz_ykabc_ = cat(1,weight_3d_riesz_yk_/scaling_volumetric,ones(3*n_image,1));
numerator_root_weight_3d_riesz_ykabc_ = reshape(sqrt(weight_3d_riesz_ykabc_),[n_ykabc,1]);
denomator_root_weight_3d_riesz_ykabc_ = 1./max(1e-12,reshape(sqrt(weight_3d_riesz_ykabc_),[n_ykabc,1]));
%%%%%%%%;

%%%%%%%%;
% Calculate volumetric terms. ;
%%%%%%%%;
tmp_t = tic();
parameter_KAPPA = struct('type','KAPPA');
parameter_KAPPA.flag_kernel_qpro_d0 = 1;
parameter_KAPPA.flag_kernel_qpro_d1 = 1;
parameter_KAPPA.kernel_qpro_polar_a_pole_north=KAPPA_pole_north_double;
parameter_KAPPA.kernel_qpro_polar_a_pole_south=KAPPA_pole_south_double;
parameter_KAPPA.kernel_qpro_l_max_use = l_max;
parameter_KAPPA.kernel_qpro_qref_k_eq_d_double = KAPPA_qref_k_eq_d_double;
parameter_KAPPA.flag_kernel_full = KAPPA_flag_kernel_full;
KAPPA = [];
[ ...
 parameter_KAPPA ...
,KAPPA ...
,a_restore_C2M0_k_Y_yk__ ...
,a_restore_C1M1_k_Y_yk__ ...
,a_restore_C0M2_k_Y_yk__ ...
] = ...
kappa_qpro_apply_2( ...
 parameter_KAPPA ...
,KAPPA ...
,n_w_max ...
,n_image ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,[] ...
,[] ...
,[] ...
,n_k_p_r ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% kappa_qpro_apply_2 (not derivatives) time %0.2fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Convert volumetric terms. ;
%%%%%%%%;
for n_type = 0:3-1;
if n_type==0; tmp_yk__ = a_restore_C2M0_k_Y_yk__; end;
if n_type==1; tmp_yk__ = a_restore_C1M1_k_Y_yk__; end;
if n_type==2; tmp_yk__ = a_restore_C0M2_k_Y_yk__; end;
%%%%;
tmp_yk_ = zeros(n_lm_sum,1);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
tmp_yk_(1+tmp_index_) = tmp_yk__(1:n_lm,1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% tmp_yk_: time %0.6fs',tmp_t)); end;
%%%%;
tmp_t = tic;
[ ...
 tmp_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_yk_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% tmp_quad_ time %0.2fs',tmp_t));
if n_type==0; a_restore_C2M0_k_p_quad_ = tmp_quad_; end;
if n_type==1; a_restore_C1M1_k_p_quad_ = tmp_quad_; end;
if n_type==2; a_restore_C0M2_k_p_quad_ = tmp_quad_; end;
end;%for n_type = 0:3-1;
%%%%%%%%;

%%%%%%%%;
n_x_u_pack = 64;
x_u_0_ = transpose(linspace(-1,+1,n_x_u_pack));
x_u_1_ = transpose(linspace(-1,+1,n_x_u_pack));
x_u_2_ = transpose(linspace(-1,+1,n_x_u_pack));
[x_u_0___,x_u_1___,x_u_2___] = ndgrid(x_u_0_,x_u_1_,x_u_2_);
n_xxx_u = n_x_u_pack^3;
%%%%%%%%;
eta = pi/k_p_r_max; tmp_t = tic;
a_restore_C2M0_x_u_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,a_restore_C2M0_k_p_quad_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_restore_C2M0_x_u_ time %0.2fs',tmp_t));
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 2; p_col = 5; np=0;
str_title = 'a_restore_C2M0_x_u_';
for percent_threshold=[05:10:95];
subplot(p_row,p_col,1+np);np=np+1;cla;
isosurface_f_x_u_1(struct('percent_threshold_',[percent_threshold]),a_restore_C2M0_x_u_);
title(sprintf('p %.2f',percent_threshold));
end;%for percent_threshold=[05:10:95];
end;%if flag_disp;
%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;fig80s;
a_restore_C2M0_x_u___ = reshape(a_restore_C2M0_x_u_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]);
subplot(1,3,1);
imagesc(squeeze(real(a_restore_C2M0_x_u___(:,:,end/2))));
axis image; axisnotick; colorbar;
subplot(1,3,2);
imagesc(squeeze(real(a_restore_C2M0_x_u___(:,end/2,:))));
axis image; axisnotick; colorbar;
subplot(1,3,3);
imagesc(squeeze(real(a_restore_C2M0_x_u___(end/2,:,:))));
axis image; axisnotick; colorbar;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now try to find eigenvectors of volumetric-term in hessian. ;
%%%%%%%%;
parameter_eig = struct('type','eig');
parameter_eig.flag_verbose = flag_verbose;
parameter_eig.flag_check = 1;
parameter_eig.flag_disp = 1;
parameter_eig.flag_kernel_qpro_d0 = parameter_KAPPA.flag_kernel_qpro_d0;
parameter_eig.flag_kernel_qpro_d1 = parameter_KAPPA.flag_kernel_qpro_d1;
parameter_eig.kernel_qpro_polar_a_pole_north = parameter_KAPPA.kernel_qpro_polar_a_pole_north;
parameter_eig.kernel_qpro_polar_a_pole_south = parameter_KAPPA.kernel_qpro_polar_a_pole_south;
parameter_eig.kernel_qpro_l_max_use = parameter_KAPPA.kernel_qpro_l_max_use;
parameter_eig.kernel_qpro_qref_k_eq_d_double = parameter_KAPPA.kernel_qpro_qref_k_eq_d_double;
parameter_eig.flag_kernel_full = parameter_KAPPA.flag_kernel_full;
parameter_eig.lanczos_n_iteration_max = 64;
parameter_eig.flag_ignore_U = 1;
parameter_eig.flag_ignore_tau = 1;
U_tilde_SmallRotation_Delta_ykabc3__ = [];
a_k_Y_quad_yk_ = a_k_Y_form_yk_;
KAPPA = [];
v_tilde_ykabci__ = [];
w_tilde_ykabc_ = [];
alph_tilde_i_ = [];
beta_tilde_i_ = [];
[ ...
 parameter_eig ...
,U_tilde_SmallRotation_Delta_ykabc3__ ...
,v_tilde_ykabci__  ...
,w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
] = ...
eig_ddssnll_lanczos_1( ...
 parameter_eig ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_quad_yk_ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,weight_3d_k_p_r_ ...
,a_k_p_quad_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,S_k_p_q2d_wkS__ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_image ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,KAPPA ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
,U_tilde_SmallRotation_Delta_ykabc3__ ...
,v_tilde_ykabci__  ...
,w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
);
%%%%%%%%;
n_iteration = size(v_tilde_ykabci__,2); T__ = real(spdiags([circshift(beta_tilde_i_,-1),alph_tilde_i_,beta_tilde_i_],[-1,0,+1],n_iteration,n_iteration));
vv_i4__ = zeros(n_iteration,4);
for niteration=0:n_iteration-1;
tmp_v_ykabc_ = v_tilde_ykabci__(:,1+niteration);
[tmp_v_dvol_yk_,tmp_v_polar_a_M_,tmp_v_azimu_b_M_,tmp_v_euler_gamma_z_M_] = local_yk_a_b_c_from_ykabc_(n_k_p_r,l_max_,n_image,tmp_v_ykabc_);
[tmp_vv,tmp_vv_dvol,tmp_vv_a,tmp_vv_b,tmp_vv_c] = local_f_bar_dot_g_(n_k_p_r,weight_3d_riesz_k_p_r_,l_max_,n_image,tmp_v_ykabc_,tmp_v_ykabc_);
vv_i4__(1+niteration,:) = [tmp_vv_dvol,tmp_vv_a,tmp_vv_b,tmp_vv_c]/max(1e-12,tmp_vv);
end;%for niteration=0:n_iteration-1;
if (flag_verbose>0);
disp(sprintf(' %% vv_i4__:'));
disp(num2str(vv_i4__,'%.6f '));
end;%if (flag_verbose>0);
%%%%%%%%;
lambda_xi__ = -Inf*ones(n_iteration,n_iteration);
for niteration=0:n_iteration-1;
T_sub__ = T__(1:1+niteration,1:1+niteration);
lambda_sub_ = eigs(T_sub__,[],1+niteration);
lambda_xi__(1:1+niteration,1+niteration) = sort(lambda_sub_,'ascend');
end;%for niteration=0:n_iteration-1;
S_x_ = sort(eigs(T__,[],n_iteration),'ascend');
n_iteration = n_iteration;
S_x_ = S_x_;
S_x_min = min(S_x_);
S_x_max = max(S_x_);
lambda_xi__ = lambda_xi__;
%%%%;
ee_ns4___ = zeros(n_iteration,n_iteration,4);
for niteration=0:n_iteration-1;
T_sub__ = T__(1:1+niteration,1:1+niteration);
[TV_sub__,lambda_sub__] = eigs(T_sub__,[],1+niteration);
lambda_sub_ = diag(lambda_sub__);
[lambda_srt_,ij_srt_] = sort(lambda_sub_,'ascend');
for index_lambda=0:1+niteration-1;
ij_use = ij_srt_(1+index_lambda);
lambda_use = lambda_srt_(1+index_lambda);
TV_eig_ = TV_sub__(:,ij_use);
v_eig_ykabc_ = v_tilde_ykabci__(:,1:1+niteration)*TV_eig_;
[v_eig_dvol_yk_,v_eig_polar_a_M_use_,v_eig_azimu_b_M_use_,v_eig_gamma_z_M_use_] = local_yk_a_b_c_from_ykabc_(n_k_p_r,l_max_,n_image,v_eig_ykabc_);
[tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c] = local_f_bar_dot_g_(n_k_p_r,weight_3d_riesz_k_p_r_,l_max_,n_image,v_eig_ykabc_,v_eig_ykabc_);
str_ee = sprintf('tmp_ee %0.2f,tmp_ee_dvol %0.2f,tmp_ee_a %0.2f,tmp_ee_b %0.2f,tmp_ee_c %0.2f',tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c);
if (flag_verbose>1); disp(sprintf(' %% %s',str_ee)); end;
ee_ns4___(1+niteration,1+index_lambda,:) = [tmp_ee_dvol;tmp_ee_a;tmp_ee_b;tmp_ee_c];
end;%for index_lambda=0:1+niteration-1;
end;%for niteration=0:n_iteration-1;
%%%%%%%%;

%%%%%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;fig81s;
markersize_use = 8;
linewidth_sml = 0.5;
linewidth_big = 2;
%%%%;
hold on;
plot(repmat([0;n_iteration],[1,n_iteration]),repmat(reshape(S_x_,[1,n_iteration]),[2,1]),'-','Color',0.85*[1,1,1],'LineWidth',linewidth_sml);
ni_xi__ = repmat([1:n_iteration],[n_iteration,1]);
tmp_index_ = efind(isfinite(lambda_xi__));
plot(ni_xi__(1+tmp_index_),lambda_xi__(1+tmp_index_),'r.','MarkerSize',markersize_use);
hold off;
xlabel('iteration'); ylabel('sigma');
xlim([0,1+n_iteration]);
ylim([S_x_min-0.25,S_x_max+0.25]);
title(str_title,'Interpreter','none');
%%%%;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
niteration = n_iteration-1;
index_lambda = 1; %<-- 0 is lowest, niteration is highest. ;
T_tilde_sub__ = T_tilde__(1:1+niteration,1:1+niteration);
%%%%%%%%;
% use T_tilde_sub__ to estimate minimum eigenvector. ;
%%%%%%%%;
[TV_tilde_sub__,lambda_sub__] = eigs(T_tilde_sub__,[],1+niteration);
lambda_sub_ = diag(lambda_sub__);
[lambda_srt_,ij_srt_] = sort(lambda_sub_,'ascend');
%[~,index_lambda] = min(abs(lambda_srt_)); index_lambda = index_lambda - 1; %<-- pick min(abs). ;
ij_use = ij_srt_(1+index_lambda);
lambda_use = lambda_srt_(1+index_lambda);
TV_tilde_eig_ = TV_tilde_sub__(:,ij_use);
v_tilde_eig_ykabc_ = v_tilde_ykabci__(:,1:1+niteration)*TV_tilde_eig_;
[v_tilde_eig_dvol_yk_,v_tilde_eig_polar_a_M_use_,v_tilde_eig_azimu_b_M_use_,v_tilde_eig_gamma_z_M_use_] = local_yk_a_b_c_from_ykabc_(n_k_p_r,l_max_,n_image,v_tilde_eig_ykabc_);
[tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c] = local_weightless_f_bar_dot_g_(n_k_p_r,weight_3d_riesz_k_p_r_,l_max_,n_image,v_tilde_eig_ykabc_,v_tilde_eig_ykabc_);
str_ee = sprintf('tmp_ee %0.2f,tmp_ee_dvol %0.2f,tmp_ee_a %0.2f,tmp_ee_b %0.2f,tmp_ee_c %0.2f',tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c);
if (flag_verbose>0); disp(sprintf(' %% %s',str_ee)); end;
v_eig_ykabc_ = bsxfun(@times,denomator_root_weight_3d_riesz_ykabc_,v_tilde_eig_ykabc_);
[v_eig_dvol_yk_,v_eig_polar_a_M_use_,v_eig_azimu_b_M_use_,v_eig_gamma_z_M_use_] = local_yk_a_b_c_from_ykabc_(n_k_p_r,l_max_,n_image,v_eig_ykabc_);
[tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c] = local_f_bar_dot_g_(n_k_p_r,weight_3d_riesz_k_p_r_,l_max_,n_image,v_eig_ykabc_,v_eig_ykabc_);
str_ee = sprintf('tmp_ee %0.2f,tmp_ee_dvol %0.2f,tmp_ee_a %0.2f,tmp_ee_b %0.2f,tmp_ee_c %0.2f',tmp_ee,tmp_ee_dvol,tmp_ee_a,tmp_ee_b,tmp_ee_c);
if (flag_verbose>0); disp(sprintf(' %% %s',str_ee)); end;
%%%%%%%%;
% visualize v_eig_dvol_yk_;
%%%%%%%%;
v_k_Y_use_yk_ = v_eig_dvol_yk_;
tmp_t = tic;
if ~exist('Ylm_uklma___','var'); Ylm_uklma___ = []; end;
if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__ = []; end;
if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__ = []; end;
if ~exist('l_max_uk_','var'); l_max_uk_ = []; end;
if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_ = []; end;
if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__ = []; end;
[ ...
 v_k_p_use_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,v_k_Y_use_yk_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% v_k_p_reco_ time %0.2fs',tmp_t));
%%%%;
eta = pi/k_p_r_max; tmp_t = tic;
v_x_u_use_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,v_k_p_use_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: v_x_u_use_ time %0.2fs',tmp_t));
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 2; p_col = 5; np=0;
for percent_threshold=[05:10:95];
subplot(p_row,p_col,1+np);np=np+1;cla;
isosurface_f_x_u_1(struct('percent_threshold_',[percent_threshold]),v_x_u_use_);
title(sprintf('p %.2f',percent_threshold));
end;%for percent_threshold=[05:10:95];
sgtitle(sprintf('v_eig_dvol_yk_: %s niteration %d lambda %0.2f = exp(%+0.2f) index_lambda %d/%d: %s ',str_title,niteration,lambda_use,log(lambda_use),index_lambda,niteration,str_ee),'Interpreter','none');
end;%if flag_disp;
%%%%;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;fig80s;
v_x_u_use___ = reshape(v_x_u_use_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]);
subplot(1,3,1);
imagesc(squeeze(real(v_x_u_use___(:,:,end/2))));
axis image; axisnotick; colorbar;
subplot(1,3,2);
imagesc(squeeze(real(v_x_u_use___(:,end/2,:))));
axis image; axisnotick; colorbar;
subplot(1,3,3);
imagesc(squeeze(real(v_x_u_use___(end/2,:,:))));
axis image; axisnotick; colorbar;
sgtitle(sprintf('%s niteration %d lambda %0.2f = exp(%+0.2f) index_lambda %d/%d: %s ',str_title,niteration,lambda_use,log(lambda_use),index_lambda,niteration,str_ee),'Interpreter','none');
end;%if flag_disp;
%%%%%%%%;

