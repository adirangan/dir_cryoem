flag_verbose = 1;
flag_disp = 1; nf=0;


k_p_r_max = 24.0/(2*pi);
k_eq_d_double = 0.5/(2*pi);
n_order = 15;
str_parameter = sprintf('2*pi*k_p_r_max %d k_eq_d_double %0.4f n_order %d',round(2*pi*k_p_r_max),k_eq_d_double,n_order);

%{
%%%%%%%%;
% Standard spherical grid for reference. ;
%%%%%%%%;
k_eq_d = k_eq_d_double/(2*pi);
str_T_vs_L = [];
flag_unif_vs_adap = [];
flag_tensor_vs_adap = [];
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,J_node_ ...
,J_weight_ ...
,J_chebfun_ ...
,J_polyval_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
] = ...
sample_sphere_7( ...
 flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_T_vs_L ...
,flag_unif_vs_adap ...
,flag_tensor_vs_adap ...
) ;
%%%%%%%%;
%}

%%%%%%%%;
% define quadrature grid. ;
%%%%%%%%;
tmp_t = tic();
template_k_eq_d = k_eq_d_double/max(1e-12,k_p_r_max);
str_T_vs_L = 'C2';
flag_tensor_vs_adap = 0;
[ ...
 n_S ...
,azimu_b_S_ ...
,polar_a_S_ ...
,weight_S_ ...
,k_c_0_S_ ...
,k_c_1_S_ ...
,k_c_2_S_ ...
,n_polar_a ...
,polar_a_ ...
,n_azimu_b_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,template_k_eq_d ...
,str_T_vs_L ...
,flag_tensor_vs_adap ...
) ;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% sample_shell_6: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% define functions on quadrature grid. ;
%%%%%%%%;
tmp_t = tic();
l_max_upb = round(2*pi*k_p_r_max); %<-- typically sufficient for 2-3 digits of precision. ;
l_max = l_max_upb;
n_l = 1+l_max;
l_val_ = transpose(0:l_max);
if ~exist('sqrt_2lp1_','var'); sqrt_2lp1_=[]; end;
if ~exist('sqrt_2mp1_','var'); sqrt_2mp1_=[]; end;
if ~exist('sqrt_rat0_','var'); sqrt_rat0_=[]; end;
if ~exist('sqrt_rat3__','var'); sqrt_rat3__=[]; end;
if ~exist('sqrt_rat4__','var'); sqrt_rat4__=[]; end;
flag_flip = 0;
[ ...
 d0Y_lmj___ ...
,sqrt_2lp1_ ...
,sqrt_2mp1_ ...
,sqrt_rat0_ ...
,sqrt_rat3__ ...
,sqrt_rat4__ ...
,d1Y_lmj___ ...
,d2Y_lmj___ ...
] = ...
get_Ylm__1( ...
 n_l ...
,l_val_ ...
,n_S ...
,azimu_b_S_ ...
,polar_a_S_ ...
,flag_flip ...
,sqrt_2lp1_ ...
,sqrt_2mp1_ ...
,sqrt_rat0_ ...
,sqrt_rat3__ ...
,sqrt_rat4__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% get_Ylm__1: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% define scattered points. ;
%%%%%%%%;
tmp_t = tic();
n_scatter = 1024;
rng(0);
polar_a_scatter_ = [ 1*pi*rand(n_scatter,1) ];
%tmp_ij_ = randperm(n_scatter,floor(n_scatter/4));
%polar_a_scatter_(tmp_ij_) = 1*pi*round(2*rand(numel(tmp_ij_),1))/2; %<-- ensure that some values of polar_a_scatter_ are at multiples of pi/2. ;
azimu_b_scatter_ = [ 2*pi*rand(n_scatter,1) ];
tmp_ij_ = randperm(n_scatter,floor(n_scatter/4));
azimu_b_scatter_(tmp_ij_) = 2*pi*round(4*rand(numel(tmp_ij_),1))/4; %<-- ensure that some values of azimu_b_scatter_ are at multiples of pi/2. ;
k_c_0_s_ = k_p_r_max*cos(azimu_b_scatter_).*sin(polar_a_scatter_);
k_c_1_s_ = k_p_r_max*sin(azimu_b_scatter_).*sin(polar_a_scatter_);
k_c_2_s_ = k_p_r_max*cos(polar_a_scatter_);
if ~exist('sqrt_2lp1_','var'); sqrt_2lp1_=[]; end;
if ~exist('sqrt_2mp1_','var'); sqrt_2mp1_=[]; end;
if ~exist('sqrt_rat0_','var'); sqrt_rat0_=[]; end;
if ~exist('sqrt_rat3__','var'); sqrt_rat3__=[]; end;
if ~exist('sqrt_rat4__','var'); sqrt_rat4__=[]; end;
flag_flip = 0;
[ ...
 d0Y_lms___ ...
,sqrt_2lp1_ ...
,sqrt_2mp1_ ...
,sqrt_rat0_ ...
,sqrt_rat3__ ...
,sqrt_rat4__ ...
,d1Y_lms___ ...
,d2Y_lms___ ...
] = ...
get_Ylm__1( ...
 n_l ...
,l_val_ ...
,n_scatter ...
,azimu_b_scatter_ ...
,polar_a_scatter_ ...
,flag_flip ...
,sqrt_2lp1_ ...
,sqrt_2mp1_ ...
,sqrt_rat0_ ...
,sqrt_rat3__ ...
,sqrt_rat4__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% get_Ylm__1: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% visualize one of the functions. ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
l_val = 3;
m_val = +2;%m_val = -l_val;%m_val = -l_val + round(l_val/4);
figure(1+nf);nf=nf+1;clf;figbig;
markersize_use = 8;
p_row = 2; p_col = 3; np=0;
c_use__ = colormap_pm; n_c_use = size(c_use__,1);
flag_2d_vs_3d = 0;
for ntype=0:3-1;
if ntype==0; tmp_j_ = reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd0Y_j_'; end;
if ntype==1; tmp_j_ = reshape(d1Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd1Y_j_'; end;
if ntype==2; tmp_j_ = reshape(d2Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd2Y_j_'; end;
if ntype==0; tmp_s_ = reshape(d0Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
if ntype==1; tmp_s_ = reshape(d1Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
if ntype==2; tmp_s_ = reshape(d2Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
tmp_lim_ = max(abs(tmp_j_))*[-1,+1];
for nivsr=0:1;
if nivsr==0; tmp_tmp_j_ = real(tmp_j_); tmp_tmp_s_ = real(tmp_s_); tmp_tmp_str_ = sprintf('real(%s)',tmp_str_); end;
if nivsr==1; tmp_tmp_j_ = imag(tmp_j_); tmp_tmp_s_ = imag(tmp_s_); tmp_tmp_str_ = sprintf('imag(%s)',tmp_str_); end;
subplot(p_row,p_col,1+ntype+nivsr*p_col);
imagesc_polar_a_azimu_b_0( ...
 polar_a_S_ ... 
,azimu_b_S_ ... 
,tmp_tmp_j_ ...
,tmp_lim_ ... 
,c_use__ ... 
,flag_2d_vs_3d ...
,k_p_r_max ...
);
hold on;
for nscatter=0:n_scatter-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(tmp_tmp_s_(1+nscatter)-min(tmp_lim_))/diff(tmp_lim_))));
plot3(k_c_0_s_(1+nscatter),k_c_1_s_(1+nscatter),k_c_2_s_(1+nscatter),'ko','MarkerSize',markersize_use,'MarkerFaceColor',c_use__(1+nc_use,:));
end;%for nscatter=0:n_scatter-1;
hold off;
axis equal; axisnotick3d; xlabel('x');ylabel('y');zlabel('z');
title(sprintf('%s',tmp_tmp_str_),'Interpreter','none');
view([0,90])
end;%for nivsr=0:1;
end;%for ntype=0:3-1;
sgtitle(sprintf('l_val %+d m_val %+d',l_val,m_val),'Interpreter','none');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now construct interpolant. ;
%%%%%%%%;
tmp_t = tic();
polar_a_lim_ = [polar_a_(1+0),polar_a_(end)];
[ ...
 scatter_from_tensor_sba__ ...
 dscatterda_from_tensor_sba__ ...
 dscatterdb_from_tensor_sba__ ...
 ddscatterdaa_from_tensor_sba__ ...
 ddscatterdab_from_tensor_sba__ ...
 ddscatterdbb_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ ...
,azimu_b_scatter_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9: %0.6fs',tmp_t)); end;
%%%%%%%%;

da = 1.25e-4;
db = 0.75e-4;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_pos_a_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ + 1*da ...
,azimu_b_scatter_ + 0*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 pos_a : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_neg_a_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ - 1*da ...
,azimu_b_scatter_ + 0*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 neg_a : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_pos_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ + 0*da ...
,azimu_b_scatter_ + 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 pos_b : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_neg_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ + 0*da ...
,azimu_b_scatter_ - 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 neg_b : %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_pos_a_pos_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ + 1*da ...
,azimu_b_scatter_ + 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 pos_a_pos_b : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_pos_a_neg_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ + 1*da ...
,azimu_b_scatter_ - 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 pos_a_neg_b : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_neg_a_pos_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ - 1*da ...
,azimu_b_scatter_ + 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 neg_a_pos_b : %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
[ ...
 scatter_neg_a_neg_b_from_tensor_sba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a ...
,n_azimu_b_ ...
,polar_a_lim_ ...
,n_scatter ...
,polar_a_scatter_ - 1*da ...
,azimu_b_scatter_ - 1*db ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9 neg_a_neg_b : %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Plot interpolant alongside quadrature grid. ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
l_val = 3;
m_val = +2;%m_val = -l_val;%m_val = -l_val + round(l_val/4);
figure(1+nf);nf=nf+1;clf;figbig;
markersize_use = 8;
p_row = 2; p_col = 3; np=0;
c_use__ = colormap_pm; n_c_use = size(c_use__,1);
flag_2d_vs_3d = 0;
for ntype=0:3-1;
if ntype==0; tmp_j_ = reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd0Y_j_'; end;
if ntype==1; tmp_j_ = reshape(d1Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd1Y_j_'; end;
if ntype==2; tmp_j_ = reshape(d2Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); tmp_str_ = 'd2Y_j_'; end;
if ntype==0; tmp_i_ = scatter_from_tensor_sba__*reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); end;
if ntype==1; tmp_i_ = dscatterda_from_tensor_sba__*reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); end;
if ntype==2; tmp_i_ = ddscatterdaa_from_tensor_sba__*reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]); end;
if ntype==0; tmp_s_ = reshape(d0Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
if ntype==1; tmp_s_ = reshape(d1Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
if ntype==2; tmp_s_ = reshape(d2Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]); end;
tmp_lim_ = max(abs(tmp_j_))*[-1,+1];
for nivsr=0:1;
if nivsr==0; tmp_tmp_j_ = real(tmp_j_); tmp_tmp_i_ = real(tmp_i_); tmp_tmp_s_ = real(tmp_s_); tmp_tmp_str_ = sprintf('real(%s)',tmp_str_); end;
if nivsr==1; tmp_tmp_j_ = imag(tmp_j_); tmp_tmp_i_ = imag(tmp_i_); tmp_tmp_s_ = imag(tmp_s_); tmp_tmp_str_ = sprintf('imag(%s)',tmp_str_); end;
subplot(p_row,p_col,1+ntype+nivsr*p_col);
imagesc_polar_a_azimu_b_0( ...
 polar_a_S_ ... 
,azimu_b_S_ ... 
,tmp_tmp_j_ ...
,tmp_lim_ ... 
,c_use__ ... 
,flag_2d_vs_3d ...
,k_p_r_max ...
);
hold on;
for nscatter=0:n_scatter-1;
nc_use = max(0,min(n_c_use-1,floor(n_c_use*(tmp_tmp_i_(1+nscatter)-min(tmp_lim_))/diff(tmp_lim_))));
%nc_use = max(0,min(n_c_use-1,floor(n_c_use*(tmp_tmp_s_(1+nscatter)-min(tmp_lim_))/diff(tmp_lim_))));
plot3(k_c_0_s_(1+nscatter),k_c_1_s_(1+nscatter),k_c_2_s_(1+nscatter),'ko','MarkerSize',markersize_use,'MarkerFaceColor',c_use__(1+nc_use,:));
plot3(k_c_0_s_(1+nscatter),k_c_1_s_(1+nscatter),k_c_2_s_(1+nscatter),'ko','MarkerSize',markersize_use,'MarkerFaceColor',c_use__(1+nc_use,:));
end;%for nscatter=0:n_scatter-1;
hold off;
axis equal; axisnotick3d; xlabel('x');ylabel('y');zlabel('z');
title(sprintf('%s',tmp_tmp_str_),'Interpreter','none');
view([0,90])
end;%for nivsr=0:1;
end;%for ntype=0:3-1;
sgtitle(sprintf('l_val %+d m_val %+d',l_val,m_val),'Interpreter','none');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Compare interpolant with evaluation. ;
%%%%%%%%;
tmp_t = tic();
tmp_l_y_ = zeros((1+l_max)^2,1);
tmp_m_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d0_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d1_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d2_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d0_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d1_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d2_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d1_a_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d1_b_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d2_aa_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d2_ab_y_ = zeros((1+l_max)^2,1);
tmp_errabs_d2_bb_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d1_a_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d1_b_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d2_aa_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d2_ab_y_ = zeros((1+l_max)^2,1);
tmp_errrel_d2_bb_y_ = zeros((1+l_max)^2,1);
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_d0_j_ = reshape(d0Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]);
tmp_d1_j_ = reshape(d1Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]);
tmp_d2_j_ = reshape(d2Y_lmj___{1+l_val}(1+l_val+m_val,:),[n_S,1]);
tmp_d0_i_ = scatter_from_tensor_sba__*tmp_d0_j_;
tmp_d1_i_ = dscatterda_from_tensor_sba__*tmp_d0_j_;
tmp_d2_i_ = ddscatterdaa_from_tensor_sba__*tmp_d0_j_;
tmp_d0_s_ = reshape(d0Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]);
tmp_d1_s_ = reshape(d1Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]);
tmp_d2_s_ = reshape(d2Y_lms___{1+l_val}(1+l_val+m_val,:),[n_scatter,1]);
tmp_d0_pos_a_i_ = scatter_pos_a_from_tensor_sba__*tmp_d0_j_;
tmp_d0_neg_a_i_ = scatter_neg_a_from_tensor_sba__*tmp_d0_j_;
tmp_d0_pos_b_i_ = scatter_pos_b_from_tensor_sba__*tmp_d0_j_;
tmp_d0_neg_b_i_ = scatter_neg_b_from_tensor_sba__*tmp_d0_j_;
tmp_d0_pos_a_pos_b_i_ = scatter_pos_a_pos_b_from_tensor_sba__*tmp_d0_j_;
tmp_d0_pos_a_neg_b_i_ = scatter_pos_a_neg_b_from_tensor_sba__*tmp_d0_j_;
tmp_d0_neg_a_pos_b_i_ = scatter_neg_a_pos_b_from_tensor_sba__*tmp_d0_j_;
tmp_d0_neg_a_neg_b_i_ = scatter_neg_a_neg_b_from_tensor_sba__*tmp_d0_j_;
tmp_d1_a_i_ = dscatterda_from_tensor_sba__*tmp_d0_j_;
tmp_d1_b_i_ = dscatterdb_from_tensor_sba__*tmp_d0_j_;
tmp_d2_aa_i_ = ddscatterdaa_from_tensor_sba__*tmp_d0_j_;
tmp_d2_ab_i_ = ddscatterdab_from_tensor_sba__*tmp_d0_j_;
tmp_d2_bb_i_ = ddscatterdbb_from_tensor_sba__*tmp_d0_j_;
tmp_d1_a_d_ = (tmp_d0_pos_a_i_ - tmp_d0_neg_a_i_)/max(1e-12,2*da);
tmp_d1_b_d_ = (tmp_d0_pos_b_i_ - tmp_d0_neg_b_i_)/max(1e-12,2*db);
tmp_d2_aa_d_ = (tmp_d0_pos_a_i_ - 2*tmp_d0_i_ + tmp_d0_neg_a_i_)/max(1e-12,da^2);
tmp_d2_ab_d_ = (tmp_d0_pos_a_pos_b_i_ + tmp_d0_neg_a_neg_b_i_ - tmp_d0_pos_a_neg_b_i_ - tmp_d0_neg_a_pos_b_i_)/max(1e-12,4*da*db);
tmp_d2_bb_d_ = (tmp_d0_pos_b_i_ - 2*tmp_d0_i_ + tmp_d0_neg_b_i_)/max(1e-12,db^2);
ny = l_val^2+l_val+m_val;
tmp_l_y_(1+ny) = l_val;
tmp_m_y_(1+ny) = m_val;
tmp_errabs_d0_y_(1+ny) = fnorm(tmp_d0_s_-tmp_d0_i_);
tmp_errabs_d1_y_(1+ny) = fnorm(tmp_d1_s_-tmp_d1_i_);
tmp_errabs_d2_y_(1+ny) = fnorm(tmp_d2_s_-tmp_d2_i_);
tmp_errrel_d0_y_(1+ny) = fnorm(tmp_d0_s_-tmp_d0_i_)/max(1e-12,fnorm(tmp_d0_s_));
tmp_errrel_d1_y_(1+ny) = fnorm(tmp_d1_s_-tmp_d1_i_)/max(1e-12,fnorm(tmp_d1_s_));
tmp_errrel_d2_y_(1+ny) = fnorm(tmp_d2_s_-tmp_d2_i_)/max(1e-12,fnorm(tmp_d2_s_));
tmp_errabs_d1_a_y_(1+ny) = fnorm(tmp_d1_a_d_-tmp_d1_a_i_);
tmp_errabs_d1_b_y_(1+ny) = fnorm(tmp_d1_b_d_-tmp_d1_b_i_);
tmp_errabs_d2_aa_y_(1+ny) = fnorm(tmp_d2_aa_d_-tmp_d2_aa_i_);
tmp_errabs_d2_ab_y_(1+ny) = fnorm(tmp_d2_ab_d_-tmp_d2_ab_i_);
tmp_errabs_d2_bb_y_(1+ny) = fnorm(tmp_d2_bb_d_-tmp_d2_bb_i_);
tmp_errrel_d1_a_y_(1+ny) = fnorm(tmp_d1_a_d_-tmp_d1_a_i_)/max(1e-12,fnorm(tmp_d1_a_d_));
tmp_errrel_d1_b_y_(1+ny) = fnorm(tmp_d1_b_d_-tmp_d1_b_i_)/max(1e-12,fnorm(tmp_d1_b_d_));
tmp_errrel_d2_aa_y_(1+ny) = fnorm(tmp_d2_aa_d_-tmp_d2_aa_i_)/max(1e-12,fnorm(tmp_d2_aa_d_));
tmp_errrel_d2_ab_y_(1+ny) = fnorm(tmp_d2_ab_d_-tmp_d2_ab_i_)/max(1e-12,fnorm(tmp_d2_ab_d_));
tmp_errrel_d2_bb_y_(1+ny) = fnorm(tmp_d2_bb_d_-tmp_d2_bb_i_)/max(1e-12,fnorm(tmp_d2_bb_d_));
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% apply scatter_from_tensor_sba__: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% visualize errors in a-derivatives as a function of l_val. ;
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
markersize_use = 12;
fontsize_use = 12;
p_row = 2; p_col = 3;
%%%%;
for pcol=0:p_col-1;
if pcol==0; tmp_errabs_y_ = tmp_errabs_d0_y_; tmp_errrel_y_ = tmp_errrel_d0_y_; tmp_str_y = 'd0'; end;
if pcol==1; tmp_errabs_y_ = tmp_errabs_d1_y_; tmp_errrel_y_ = tmp_errrel_d1_y_; tmp_str_y = 'd1'; end;
if pcol==2; tmp_errabs_y_ = tmp_errabs_d2_y_; tmp_errrel_y_ = tmp_errrel_d2_y_; tmp_str_y = 'd2'; end;
for prow=0:p_row-1;
if prow==0; xlim_ = [0,l_max]; tmp_x_y_ = tmp_l_y_; tmp_str_x = 'l_val'; end;
if prow==1; xlim_ = l_max*[-1,+1]; tmp_x_y_ = tmp_m_y_; tmp_str_x = 'm_val'; end;
ylim_ = [-8,+2];
subplot(p_row,p_col,1+pcol+prow*p_col); cla;
hold on;
plot(tmp_x_y_,max(min(ylim_),min(max(ylim_),log10(abs(tmp_errabs_y_)))),'rd','MarkerSize',markersize_use,'MarkerFaceColor',0.65*[1,0,0]);
plot(tmp_x_y_,max(min(ylim_),min(max(ylim_),log10(abs(tmp_errrel_y_)))),'go','MarkerSize',markersize_use,'MarkerFaceColor',0.65*[0,1,0]);
hold off;
xlim(xlim_); xlabel(tmp_str_x,'Interpreter','none');
ylim(ylim_); ylabel(sprintf('log10(abs(%s))',tmp_str_y),'Interpreter','none');
title(sprintf('%s',tmp_str_y),'Interpreter','none');
grid on; set(gca,'FontSize',fontsize_use);
end;%for prow=0:p_row-1;
end;%for pcol=0:p_col-1;
sgtitle(sprintf('%s',str_parameter),'Interpreter','none');
end;%if flag_disp;

%%%%%%%%;
% visualize errors in a- and b-derivatives as a function of l_val. ;
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
markersize_big = 16;
markersize_sml = 8;
fontsize_use = 12;
p_row = 2; p_col = 4; np=0;
%%%%;
for np=0:8-1;
na=0;
if np==na; tmp_errabs_y_ = tmp_errabs_d0_y_; tmp_errrel_y_ = tmp_errrel_d0_y_; tmp_str_y = 'd0'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d1_y_; tmp_errrel_y_ = tmp_errrel_d1_y_; tmp_str_y = 'd1'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d2_y_; tmp_errrel_y_ = tmp_errrel_d2_y_; tmp_str_y = 'd2'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d1_a_y_; tmp_errrel_y_ = tmp_errrel_d1_a_y_; tmp_str_y = 'd1_a'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d1_b_y_; tmp_errrel_y_ = tmp_errrel_d1_b_y_; tmp_str_y = 'd1_b'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d2_aa_y_; tmp_errrel_y_ = tmp_errrel_d2_aa_y_; tmp_str_y = 'd2_aa'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d2_ab_y_; tmp_errrel_y_ = tmp_errrel_d2_ab_y_; tmp_str_y = 'd2_ab'; end; na=na+1;
if np==na; tmp_errabs_y_ = tmp_errabs_d2_bb_y_; tmp_errrel_y_ = tmp_errrel_d2_bb_y_; tmp_str_y = 'd2_bb'; end; na=na+1;
xlim_ = [0,l_max]; tmp_x_y_ = tmp_l_y_; tmp_str_x = 'l_val';
ylim_ = [-8,+2];
subplot(p_row,p_col,1+np);np=np+1;cla;
hold on;
tmp_y0_ = max(min(ylim_),min(max(ylim_),log10(abs(tmp_errabs_y_))));
plot(tmp_x_y_,tmp_y0_,'rd','MarkerSize',markersize_big,'MarkerFaceColor',0.65*[1,0,0]);
tmp_y1_ = max(min(ylim_),min(max(ylim_),log10(abs(tmp_errrel_y_))));
plot(tmp_x_y_,tmp_y1_,'cs','MarkerSize',markersize_big,'MarkerFaceColor',0.65*[0,1,1]);
tmp_y2_ = min(tmp_y0_,tmp_y1_);
plot(tmp_x_y_,tmp_y2_,'y^','MarkerSize',markersize_sml,'MarkerFaceColor',0.65*[1,1,0]);
hold off;
xlim(xlim_); xlabel(tmp_str_x,'Interpreter','none');
ylim(ylim_); ylabel(sprintf('log10(abs(%s))',tmp_str_y),'Interpreter','none');
title(sprintf('%s',tmp_str_y),'Interpreter','none');
grid on; set(gca,'FontSize',fontsize_use);
end;%for np=0:8-1;
sgtitle(sprintf('%s',str_parameter),'Interpreter','none');
end;%if flag_disp;




