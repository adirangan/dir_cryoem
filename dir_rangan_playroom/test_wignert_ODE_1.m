% trying to set up wignert_ODE using lsq-interpolation to handle multiple translations. ;
clear; setup;

%%%%%%%%;
% First define integral of <f,f>. ;
%%%%%%%%;
h_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3, rather than 4*pi/3*R_max^3 ;
dh_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;

%%%%%%%%;
% Now set up and test k-quadrature on sphere. ;
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_sphere_6(verbose,k_p_r_max,k_eq_d,'L') ;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
I_quad = sum(a_k_all_form_.*weight_k_all_);
I_form = h_(2*pi*k_p_r_max*fnorm(delta_a_c_))*k_p_r_max^3;
disp(sprintf(' %% I_form vs I_quad %0.16f',fnorm(I_form-I_quad)/fnorm(I_form)));

%%%%%%%%;
% Now optimize nodes for lsq-interpolation. ;
%%%%%%%%;
N_pixel = 3.5; z_target = N_pixel/sqrt(2); delta_p_r_max = z_target/(2*pi*k_p_r_max);
% First define coarse nodes for lsq: ;
delta_eq_d = 1.0/0.5*delta_p_r_max; TorL = 'L';
[n_delta_all,n_delta_all_csum_,delta_p_r_all_,delta_p_azimu_b_all_,delta_p_polar_a_all_,weight_delta_all_,weight_shell_delta_,n_delta_p_r,delta_p_r_,weight_delta_p_r_,delta_c_0_all_,delta_c_1_all_,delta_c_2_all_] = sample_sphere_6(verbose,delta_p_r_max,delta_eq_d,'L') ;
n_delta_node = n_delta_all;
%delta_node_ = transpose([delta_c_0_all_,delta_c_1_all_,delta_c_2_all_]);
%delta_node_ = delta_node_ + 0.01*randn(3,n_delta_node)/sqrt(3)*delta_p_r_max ;
delta_node_ = randn(3,n_delta_node)/sqrt(3); %delta_node_ = randn(3,n_delta_node)/sqrt(3)*delta_p_r_max;
disp(sprintf(' %% n_delta_node: %d',n_delta_node));
% Then define fine samples for quadrature: ;
delta_eq_d = 1.0/32*delta_p_r_max; TorL = 'L';
[n_delta_all,n_delta_all_csum_,delta_p_r_all_,delta_p_azimu_b_all_,delta_p_polar_a_all_,weight_delta_all_,weight_shell_delta_,n_delta_p_r,delta_p_r_,weight_delta_p_r_,delta_c_0_all_,delta_c_1_all_,delta_c_2_all_] = sample_sphere_6(verbose,delta_p_r_max,delta_eq_d,'L') ;

svd_tolerance = 1e-6;
t_frame = 0.0; % draw every t_frame seconds. ;
n_iteration = 8; dt = 0.05;
E3_quad_ = zeros(n_iteration,1);
E3_avg_ = zeros(n_iteration,1);
t_start = tic; t_draw = toc(t_start);
for niteration=1:n_iteration;
%%%%%%%%%%%%%%%%;
H_ = zeros(n_delta_node,n_delta_node);
for ndelta_nodeA=1:n_delta_node; for ndelta_nodeB=1:n_delta_node;
tmp_d = (delta_node_(:,ndelta_nodeB) - delta_node_(:,ndelta_nodeA));
if (ndelta_nodeA~=ndelta_nodeB); H_(ndelta_nodeA,ndelta_nodeB) = h_(2*pi*norm(tmp_d)*k_p_r_max); end;
if (ndelta_nodeA==ndelta_nodeB); H_(ndelta_nodeA,ndelta_nodeB) = (4*pi/3); end;
end;end;%for ndelta_nodeA=1:n_delta_node; for ndelta_nodeB=1:n_delta_node;
%disp(sprintf(' %% ni %d/%d n_delta_node %d cond(H_) %0.2f',niteration,n_iteration,n_delta_node,cond(H_)));
%[HU_,HS_,HV_] = svd(H_); HS_ = diag(HS_); H_ij_ = find(HS_./HS_(1) < svd_tolerance);
%GS_ = 1./HS_; GS_(H_ij_)=0; GS_ = diag(GS_);
%G_ = HV_*GS_*transpose(HU_);
G_ = pinv(H_,norm(H_)*svd_tolerance);
dhx__ = zeros(n_delta_node,n_delta_node);
dhy__ = zeros(n_delta_node,n_delta_node);
dhz__ = zeros(n_delta_node,n_delta_node);
ddx_ = repmat(delta_node_(1+0,:),n_delta_node,1) - repmat(transpose(delta_node_(1+0,:)),1,n_delta_node);
ddy_ = repmat(delta_node_(1+1,:),n_delta_node,1) - repmat(transpose(delta_node_(1+1,:)),1,n_delta_node);
ddz_ = repmat(delta_node_(1+2,:),n_delta_node,1) - repmat(transpose(delta_node_(1+2,:)),1,n_delta_node);
hypot_dd_ = sqrt(ddx_.^2+ddy_.^2+ddz_.^2);
tmp_ = 2*pi*dh_(2*pi*hypot_dd_*k_p_r_max)*k_p_r_max./hypot_dd_; tmp_(find(hypot_dd_==0)) = 0;
dhx__ = - tmp_ .* ddx_;
dhy__ = - tmp_ .* ddy_;
dhz__ = - tmp_ .* ddz_;
%%%%%%%%%%%%%%%%;
dE3k_sample___ = zeros(n_delta_all,2,n_delta_node);
ddx_ = repmat(delta_c_0_all_',n_delta_node,1) - repmat(delta_node_(1+0,:)',1,n_delta_all);
ddy_ = repmat(delta_c_1_all_',n_delta_node,1) - repmat(delta_node_(1+1,:)',1,n_delta_all);
ddz_ = repmat(delta_c_2_all_',n_delta_node,1) - repmat(delta_node_(1+2,:)',1,n_delta_all);
hypot_dd_ = sqrt(ddx_.^2+ddy_.^2+ddz_.^2);
ij_=find(hypot_dd_==0);
ft_ = h_(2*pi*hypot_dd_*k_p_r_max); ft_(ij_) = (4*pi/3);
alpha_= G_*ft_;
E3_sample_ = ( (4*pi/3) - sum(alpha_.*ft_,1) ) / (4*pi/3); % Sampled relative error. ;
E3_quad = abs(E3_sample_)*weight_delta_all_ / delta_p_r_max^3;
tmp_ = 2*pi*dh_(2*pi*hypot_dd_*k_p_r_max)*k_p_r_max./hypot_dd_; tmp_(ij_) = 0;
dftx_ = - tmp_.*ddx_;
dfty_ = - tmp_.*ddy_;
dftz_ = - tmp_.*ddz_;
dE3x_sample_ = 2*alpha_.*(dhx__*alpha_) - 2*alpha_.*dftx_;
dE3y_sample_ = 2*alpha_.*(dhy__*alpha_) - 2*alpha_.*dfty_;
dE3z_sample_ = 2*alpha_.*(dhz__*alpha_) - 2*alpha_.*dftz_;
t_mid = toc(t_start); if (mod(niteration,100)==0); disp(sprintf(' %% ni %d/%d; time %f E3 %0.16f',niteration,n_iteration,t_mid,E3_quad)); end;
E3_quad_(niteration) = E3_quad; E3_avg_(niteration) = E3_quad;
dE3x_quad_ = dE3x_sample_*weight_delta_all_ / delta_p_r_max^3;
dE3y_quad_ = dE3y_sample_*weight_delta_all_ / delta_p_r_max^3;
dE3z_quad_ = dE3z_sample_*weight_delta_all_ / delta_p_r_max^3;
%%%%%%%%%%%%%%%%;
if ((t_frame>0) & (t_mid-t_draw>t_frame)); flag_disp=1; else flag_disp=0; end;
if (niteration==n_iteration); flag_disp=1; end;
if flag_disp & verbose;
figure(); clf; 
subplot(1,3,3); cla; hold on;
plot3(delta_node_(1+0,:),delta_node_(1+1,:),delta_node_(1+2,:),'s','MarkerSize',15,'MarkerFaceColor','g');
set(gca,'XTick',[],'YTick',[],'Ztick',[]);axis vis3d;
subplot(1,3,1); cla; hold on;
plot(1:niteration,E3_avg_(1:niteration),'k.-');ylim([0,max(E3_avg_)]); xlim([1,n_iteration]); xlabel('iteration'); ylabel('Avg Error');
hold off;
subplot(1,3,2); cla; hold on;
plot(1:niteration,log10(abs(E3_avg_(1:niteration))),'k.-');ylim([-9,0]); xlim([1,n_iteration]); xlabel('iteration'); ylabel('log10(Avg Error)');
hold off;
figbig;
drawnow(); t_mid = toc(t_start); t_draw = t_mid;
end;%if flag_disp & verbose;
%%%%%%%%%%%%%%%%;
delta_node_ = delta_node_ - dt*transpose([ dE3x_quad_ , dE3y_quad_ , dE3z_quad_ ]);
for ndelta_node=1:n_delta_node;
tmp = sqrt( delta_node_(1+0,ndelta_node).^2 + delta_node_(1+1,ndelta_node).^2 + delta_node_(1+2,ndelta_node).^2 );
if (tmp>1.25*delta_p_r_max); delta_node_(:,ndelta_node) = 1.25*delta_p_r_max * delta_node_(:,ndelta_node)/tmp; end;
end;%for ndelta_node=1:n_delta_node;
%%%%%%%%%%%%%%%%;
% if mod(niteration,32)==0; delta_node_ = delta_node_ + 0.01*randn(3,n_delta_node)*fnorm(delta_node_); end; %<-- jiggle. ;
end;%for niteration=1:n_iteration;
%%%%%%%%%%%%%%%%;
disp(sprintf(' %% start error: %0.16f',E3_avg_(end)));
%%%%%%%%;
[t_,delta_node_IE__] = ode23(@(t,y) transf_3d_gradient(t,y,svd_tolerance,k_p_r_max,delta_p_r_max,n_delta_all,delta_c_0_all_,delta_c_1_all_,delta_c_2_all_,weight_delta_all_),[0:1:n_iteration],[delta_node_(:);0]);
l2error_ = [1;diff(delta_node_IE__(:,end))];
plot_flag=0;
if plot_flag;
figure(); clf;
subplot(1,2,1); plot(t_,delta_node_IE__(:,1:end-1),'-'); xlabel('t'); ylabel('delta'); title('delta');
subplot(1,2,2); plot(t_,log10(abs(l2error_)),'kx-'); xlabel('t'); ylabel('log10(l2error)'); title('error');
figbig;
end;%if plot_flag;
%%%%%%%%;
disp(sprintf(' %% final error: %0.16f',l2error_(end)));

disp('returning'); return;


%%%%%%%%;
% Now try full shift of simple plane-wave on a sphere. ;
%%%%%%%%;
kd_ = 10.^[-2:0.5:0.5]; n_kd = length(kd_);
%%%%%%%%;
verbose=0; k_p_r_max = 9.0d0; k_eq_d = 1.0/32*k_p_r_max*0.95; TorL = 'L';
[n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,k_c_0_all_,k_c_1_all_,k_c_2_all_] = sample_sphere_6(verbose,k_p_r_max,k_eq_d,'L') ;
delta_a_c_ = [+0.15;-0.25;+0.35];
delta_a_p_r = sqrt(delta_a_c_(1+0)^2 + delta_a_c_(1+1)^2 + delta_a_c_(1+2)^2);
%disp(sprintf(' %% 2*pi*k_p_r_max*delta_a_p_r = %0.2f',2*pi*k_p_r_max*delta_a_p_r));
a_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
l_max_ = 1+ceil(2*pi*k_p_r_); n_lm_ = (l_max_+1).^2; n_lm_sum = sum(n_lm_);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
tmp_t = tic;
[a_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,a_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;

%%%%%%%%;
% Now translate by kd;
%%%%%%%%;
for nkd=0:n_kd-1;
kd = kd_(1+nkd);
disp(sprintf(' %% sphere: kd: %0.6f',kd));
delta_z_c_ = [-3,5,7]; delta_z_c_ = delta_z_c_/fnorm(delta_z_c_);
delta_z_p_01 = sqrt(delta_z_c_(1+0).^2 + delta_z_c_(1+1).^2);
delta_z_p_azimu_b = atan2(delta_z_c_(1+1),delta_z_c_(1+0));
delta_z_p_polar_a = atan2(delta_z_p_01,delta_z_c_(1+2));
delta_z_p_euler_pos_ = [0,+delta_z_p_polar_a,+delta_z_p_azimu_b];
delta_z_p_euler_neg_ = [-delta_z_p_azimu_b,-delta_z_p_polar_a,0];
delta_z_c_ = [cos(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);sin(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);cos(delta_z_p_polar_a)]*kd/k_p_r_max;
delta_b_c_ = delta_a_c_ - delta_z_c_; %<-- note sign of translation. ;
delta_b_p_r = sqrt(delta_b_c_(1+0)^2 + delta_b_c_(1+1)^2 + delta_b_c_(1+2)^2);
disp(sprintf(' %% sphere: 2*pi*k_p_r_max*delta_b_p_r = %0.2f',2*pi*k_p_r_max*delta_b_p_r));
b_k_all_form_ = exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
tmp_t = tic;
[b_k_Y_quad_] = convert_k_p_to_spharm_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_k_p_r_,l_max_,b_k_all_form_);
tmp_t = toc(tmp_t); tmp_g = n_lm_sum/tmp_t/1e6;
disp(sprintf(' %% sphere: use convert_k_p_to_spharm_1 to form a_k_Y_quad_... time %0.6fs (%0.6f Mnumps)',tmp_t,tmp_g));
%%%%%%%%;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
Wt__tmp_t = 0;
tmp_t = tic;
ns=0; clear Wt_row_ij_ Wt_col_ij_ Wt_val_ij_ ;
for nk_p_r = 0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
n_lm_csum = n_lm_csum_(1+nk_p_r);
l_max = l_max_(1+nk_p_r);
Wt__ = cell(1+l_max,1);
tmp_t_sub = tic;
for nl=0:l_max;
m_val = nl;
Wt__{1+nl} = expm(-kd*k_p_r/k_p_r_max*dWtdkd__{1+nl}); %<-- note sign of translation. ;
end;%for nl=0:l_max_max;
tmp_t_sub = toc(tmp_t_sub); Wt__tmp_t = Wt__tmp_t + tmp_t_sub;
n_m_max = 2*l_max+1;
for nm=0:n_m_max-1;
m_val = -l_max + nm; m_abs = abs(m_val);
for l_val_a=m_abs:l_max;
nml_a = l_val_a^2 + (m_val+l_val_a);
for l_val_b=m_abs:l_max;
nml_b = l_val_b^2 + (m_val+l_val_b);
Wt_row_ij_(1+ns) = n_lm_csum + 1+nml_a;
Wt_col_ij_(1+ns) = n_lm_csum + 1+nml_b;
Wt_val_ij_(1+ns) = Wt__{1+m_abs}(1+l_val_a-m_abs,1+l_val_b-m_abs);
ns=ns+1;
end;%for l_val_b=m_abs:l_max;
end;%for l_val_a=m_abs:l_max;
end;%for nm=0:n_m_max-1;
end;%for nk_p_r = 0:n_k_p_r-1;
Wt_ = sparse(Wt_row_ij_,Wt_col_ij_,Wt_val_ij_,n_lm_sum,n_lm_sum);
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: create Wt__: time %0.6fs',Wt__tmp_t));
disp(sprintf(' %% sphere: create Wt_: time %0.6fs',tmp_t));
%%%%%%%%;
tmp_t = tic; 
tmp_Y_form_ = a_k_Y_quad_;
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_1(0,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_form_ = tmp_Y_form_;
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: use R_pos_*Wt_*R_neg_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
%%%%%%%%;
tmp_t = tic; dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create dWtdkd__: time %0.6fs',tmp_t));
tmp_t = tic; Wt___ = expm_dwignertdkd__(dWtdkd__,n_k_p_r,k_p_r_,l_max_,kd/k_p_r_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wt___: time %0.6fs',tmp_t));
tmp_t = tic; Wt_ = wignert_ODE_0(dWtdkd__,Wt___,n_k_p_r,k_p_r_,l_max_,kd/k_p_r_max);
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wt_: time %0.6fs',tmp_t));
tmp_t = tic;
W_beta_neg__ = wignerd_b(l_max_max,delta_z_p_euler_neg_(1+1));
W_beta_pos__ = wignerd_b(l_max_max,delta_z_p_euler_pos_(1+1));
tmp_t = toc(tmp_t); disp(sprintf(' %% sphere: create Wd_: time %0.6fs',tmp_t));
tmp_t = tic; 
tmp_Y_form_ = a_k_Y_quad_;
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_neg__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_pos__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_form_ = tmp_Y_form_;
tmp_t = toc(tmp_t);
disp(sprintf(' %% sphere: use R_pos_*Wt_*R_neg_: time %0.6fs: error %0.16f',tmp_t,fnorm(b_k_Y_quad_-b_k_Y_form_)/fnorm(b_k_Y_quad_)));
end;%for nkd=0:n_kd-1;

