%%%%%%%%;
% updated from test_pm_medres_1.m ;
% Note that we do not have enough memory to calculate the a_k_Y_ for k_p_r_max = 3*48. ;
% Here instead we try and calculate the fsc directly from a_x_u_. ;
%%%%%%%%;
% set up to compare: ;
% '/data/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_A2_gpu_run_class001.mrc' <-- run from trpv1_x0_X_2d_xcor_d0_a1t0152n20r2.mrc ;
% to: ;
% '/data/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_B2_gpu_run_class001.mrc' <-- run from job_1024/run_it300_class001.mrc ;
%%%%%%%%;
% Go to: ;
% rangan@ccmlin035:~/ceph/dir_cryoem/dir_trpv1/dir_relion_mat ;
% and run something like: ;
%%%%%%%%;
% #!/bin/bash -l
% #SBATCH -p gpu  
% #SBATCH -t 4:00:00
% #SBATCH -N 1      
% #SBATCH --gpus=1  
% #SBATCH --tasks-per-node=3
% #SBATCH --cpus-per-task=4
% 
% module purge
% module load openmpi/4
% module load cuda/11
% module load relion/mpi-3.1.3
% 
% export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
% 
% mpirun -n 3 \ 
% --map-by socket:pe=$OMP_NUM_THREADS relion_refine_mpi \ 
% --i tv1_relion_job_8192.star \ 
% --o job_B2_gpu/run \ 
% --auto_refine \ 
% --split_random_halves \ 
% --ref job_1024/run_it300_class001.mrc \ 
% --firstiter_cc \ 
% --ini_high 60 \ 
% --dont_combine_weights_via_disc \ 
% --preread_images  \ 
% --pool 3 \ 
% --pad 1  \ 
% --ctf \ 
% --particle_diameter 250 \ 
% --flatten_solvent \ 
% --zero_mask \ 
% --oversampling 1 \ 
% --healpix_order 2 \ 
% --auto_local_healpix_order 4 \ 
% --offset_range 8 \ 
% --offset_step 1 \ 
% --K 1 \ 
% --tau2_fudge 4 \ 
% --sym C4 \ 
% --low_resol_join_halves 40 \ 
% --norm \ 
% --scale \ 
% --j $OMP_NUM_THREADS \ 
% --gpu \ 
% --pipeline_control job_B2_gpu/ ;
%%%%%%%%;

global_parameter=[];
fname_prefix='trpv1_x0';
dir_nopath_data_star='trpv1';
Pixel_Spacing=1.2156;
fname_nopath_volume='emd_5778.mrc';
fname_nopath_star='tv1_relion_data.star';
%global_parameter=struct('type','parameter');
global_parameter.n_M = 8192;
global_parameter.flag_replot = 1;

verbose=1;
if (verbose); disp(sprintf(' %% [entering test_pm_medres_5]')); end;

%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

if isempty(global_parameter); global_parameter = struct('type','parameter'); end;
if (~isfield(global_parameter,'flag_recalc')); global_parameter.flag_recalc = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_replot')); global_parameter.flag_replot = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_volume')); global_parameter.flag_center_volume = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_image')); global_parameter.flag_center_image = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_invert')); global_parameter.flag_invert = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'tolerance_master')); global_parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'n_M')); global_parameter.n_M = 1024; end; %<-- parameter_bookmark. ;
flag_recalc = global_parameter.flag_recalc;
flag_replot = global_parameter.flag_replot;
flag_center_volume = global_parameter.flag_center_volume;
flag_center_image = global_parameter.flag_center_image;
flag_invert = global_parameter.flag_invert;
tolerance_master = global_parameter.tolerance_master;
n_M = global_parameter.n_M;
nf=0;

%%%%%%%%;
fname_prefix_xfix = sprintf('%s',fname_prefix);
dir_pm = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_pm',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_pm)); mkdir(sprintf('%s_mat',dir_pm)); end;
if (~exist(sprintf('%s_jpg',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_pm)); mkdir(sprintf('%s_jpg',dir_pm)); end;
dir_relion = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_relion',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_relion)); mkdir(sprintf('%s_mat',dir_relion)); end;
if (~exist(sprintf('%s_jpg',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_relion)); mkdir(sprintf('%s_jpg',dir_relion)); end;
string_rusty_root = 'mnt/home';
dir_relion_bin = sprintf('/%s/rangan/relion/build/bin',string_rusty_root);
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
%%%%%%%%;
% all classes and subclasses. ;
%%%%%%%%;
fname_nopath_volume_ = ...
{ ...
 fname_nopath_volume ... %<-- class 0. ;
};
n_volume = numel(fname_nopath_volume_);
flag_het = 0; if (n_volume> 1); flag_het = 1; end;

%%%%%%%%;
% First load consensus volume. ;
%%%%%%%%;
fname_emd = sprintf('%s/%s',dir_data_star,fname_nopath_volume);
a_x_u_load_ = cast(ReadMRC(fname_emd),'double');
n_x_u = size(a_x_u_load_,1);
n_x_M_u = n_x_u; %<-- true for trpv1, not necessarily true for other molecules. ;
%%%%%%%%;
half_diameter_x_c = 1.0d0;
diameter_x_c = 2.0d0*half_diameter_x_c;
x_p_r_max = 1.0;
n_x_u_pack = 256; %<-- used here for preliminary alignment. ;
n_pack = n_x_u/n_x_u_pack;
pack_row_ij_ = zeros(n_x_u_pack,1);
pack_col_ij_ = zeros(n_x_u_pack,1);
pack_val_ij_ = zeros(n_x_u_pack,1);
na=0;
for nx_u=0:n_x_u-1;
pack_row_ij_(1+na) = 1+nx_u;
pack_col_ij_(1+na) = 1+floor(nx_u/n_pack);
pack_val_ij_(1+na) = 1/n_pack;
na=na+1;
end;%for nx_u=0:n_x_u-1;
x_u_pack_ = sparse(pack_row_ij_,pack_col_ij_,pack_val_ij_,n_x_u,n_x_u_pack);
a_x_u_pack_ = reshape(a_x_u_load_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
clear a_x_u_load_;
%%%%%%%%;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
[x_u_0___,x_u_1___,x_u_2___] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_xxx_u = n_x_u_pack^3;
xxx_u_weight_ = (2*x_p_r_max/n_x_u_pack)^3;
%%%%%%%%;
% Calculate moments. ;
%%%%%%%%;
a_rho_x_u_pack_ = a_x_u_pack_ + min(a_x_u_pack_,[],'all');
a_rho_x_c_0_avg = sum(x_u_0___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_1_avg = sum(x_u_1___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_2_avg = sum(x_u_2___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_0_std = sum((x_u_0___ - a_rho_x_c_0_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_1_std = sum((x_u_1___ - a_rho_x_c_1_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_2_std = sum((x_u_2___ - a_rho_x_c_2_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_avg_ = [a_rho_x_c_0_avg ; a_rho_x_c_1_avg ; a_rho_x_c_2_avg];
a_rho_x_c_std_ = [a_rho_x_c_0_std ; a_rho_x_c_1_std ; a_rho_x_c_2_std];
disp(sprintf(' %% a_rho_x_c_std_ vs a_rho_x_c_avg_: %0.2f',fnorm(a_rho_x_c_std_)/fnorm(a_rho_x_c_avg_)));
if (max(abs(a_rho_x_c_avg_))> diameter_x_c/n_x_u_pack);
disp(sprintf(' %% Warning, molecule may not be well centered. Consider recentering.'));
end;%if (max(abs(a_rho_x_c_avg_))> diameter_x_c/n_x_u_pack);
%%%%%%%%;
% Possible to re-center. ;
%%%%%%%%;
k_u_0_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
k_u_1_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
k_u_2_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
[k_u_0___,k_u_1___,k_u_2___] = ndgrid(k_u_0_,k_u_1_,k_u_2_); n_kkk_u = n_x_u_pack^3;
b_rho_x_u_pack_ = real(ifftn(fftn(a_rho_x_u_pack_).*exp(+i*2*pi*(k_u_0___*a_rho_x_c_0_avg + k_u_1___*a_rho_x_c_1_avg + k_u_2___*a_rho_x_c_2_avg))));
b_rho_x_c_0_avg = sum(x_u_0___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_1_avg = sum(x_u_1___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_2_avg = sum(x_u_2___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_0_std = sum((x_u_0___ - b_rho_x_c_0_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_1_std = sum((x_u_1___ - b_rho_x_c_1_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_2_std = sum((x_u_2___ - b_rho_x_c_2_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_avg_ = [b_rho_x_c_0_avg ; b_rho_x_c_1_avg ; b_rho_x_c_2_avg];
b_rho_x_c_std_ = [b_rho_x_c_0_std ; b_rho_x_c_1_std ; b_rho_x_c_2_std];
disp(sprintf(' %% b_rho_x_c_std_ vs b_rho_x_c_avg_: %0.2f',fnorm(b_rho_x_c_std_)/fnorm(b_rho_x_c_avg_)));
%%%%%%%%;
a_x_u_base_ = a_x_u_pack_;
if flag_center_volume;
disp(sprintf(' %% centering volume'));
a_x_u_base_ = b_rho_x_u_pack_;
end;%if flag_center_volume;
%%%%%%%%;

flag_recalc=0;
str_kx = sprintf('K48'); k_p_r_max = 1*48/(2*pi); %<-- used here for preliminary alignment. ;
fname_load_mat = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_load_%s.mat',string_root,str_kx);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if ( flag_recalc | ~exist(fname_load_mat,'file') );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%;
% Now convert to a_k_p_ ;
%%%%%%%%;
tmp_t = tic;
k_eq_d = 1.0/(2*pi);
flag_unif_vs_adap = 1;
flag_tensor_vs_adap = 1;
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,J_node_ ...
,J_weight_ ...
,J_chebfun_ ...
,J_polyval_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
] = ...
sample_sphere_7( ...
 verbose ...
,k_p_r_max ...
,k_eq_d ...
,'L' ...
,flag_unif_vs_adap ...
,flag_tensor_vs_adap ...
) ; %<-- sum(weight_3d_k_p_r_)*(4*pi) = (4/3)*pi*k_p_r_max^3 --> sum(weight_3d_k_p_r_) = (1/3)*k_p_r_max^3 ;
n_k_per_shell = [];
k_p_r_all_bak__ = [];
k_p_azimu_b_all_bak__ = [];
k_p_polar_a_all_bak__ = [];
weight_3d_k_all_bak__ = [];
k_c_0_all_bak__ = [];
k_c_1_all_bak__ = [];
k_c_2_all_bak__ = [];
if flag_unif_vs_adap==1; 
n_k_per_shell = n_k_all_csum_(1+1);
k_p_r_all_bak__ = reshape(k_p_r_all_,[n_k_per_shell,n_k_p_r]);
k_p_azimu_b_all_bak__ = reshape(k_p_azimu_b_all_,[n_k_per_shell,n_k_p_r]);
k_p_polar_a_all_bak__ = reshape(k_p_polar_a_all_,[n_k_per_shell,n_k_p_r]);
weight_3d_k_all_bak__ = reshape(weight_3d_k_all_,[n_k_per_shell,n_k_p_r]);
k_c_0_all_bak__ = reshape(k_c_0_all_,[n_k_per_shell,n_k_p_r]);
k_c_1_all_bak__ = reshape(k_c_1_all_,[n_k_per_shell,n_k_p_r]);
k_c_2_all_bak__ = reshape(k_c_2_all_,[n_k_per_shell,n_k_p_r]);
end;%if flag_unif_vs_adap==1; 
tmp_t = toc(tmp_t); disp(sprintf(' %% sample_sphere_7: time %0.2fs',tmp_t));
eta = pi/x_p_r_max; tmp_t = tic;
a_k_p_quad_ = xxnufft3d3(n_xxx_u,x_u_0___(:)*eta,x_u_1___(:)*eta,x_u_2___(:)*eta,a_x_u_base_(:).*xxx_u_weight_(:),-1,1e-12,n_k_all,2*pi*k_c_0_all_/eta,2*pi*k_c_1_all_/eta,2*pi*k_c_2_all_/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_k_p_quad_ time %0.2fs',tmp_t));
%%%%%%%%;
eta = pi/k_p_r_max; tmp_t = tic;
a_x_u_reco_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,a_k_p_quad_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_x_u_reco_ time %0.2fs',tmp_t));
disp(sprintf(' %% xxnufft3d3: a_x_u_reco error: %0.16f',fnorm(a_x_u_base_(:)-a_x_u_reco_)/fnorm(a_x_u_base_(:))));
disp(sprintf(' %% at this point one should ensure that a_k_p_quad_ on the outer shells (i.e., near k_p_r_max) has decayed to the desired precision.'));
%%%%%%%%;
%%%%;
%%%%%%%%;
% simple visualization of a_base. ;
%%%%%%%%
flag_disp=0;
if flag_disp;
prctile_ = [98.5];%prctile_ = [94.0:0.5:99.5];
n_prctile = numel(prctile_);
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 1; p_col = 2; ns=0;%p_row = 3; p_col = 4; ns=0;
for nprctile=0:n_prctile-1;
subplot(p_row,p_col,1+ns); ns=ns+1;
tmp_p = prctile_(1+nprctile);
isosurface_f_x_u_0(a_x_u_base_,tmp_p);
title(sprintf('a base %.1f',tmp_p));
end;%for nprctile=0:n_prctile-1;
for nprctile=0:n_prctile-1;
subplot(p_row,p_col,1+ns); ns=ns+1;
tmp_p = prctile_(1+nprctile);
isosurface_f_x_u_0(a_x_u_reco_,tmp_p);
title(sprintf('a reco %.1f',tmp_p));
end;%for nprctile=0:n_prctile-1;
%%%%;
end;%if flag_disp;
%%%%;
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
plot(k_p_r_all_,log10(abs(a_k_p_quad_)),'.'); xlabel('k'); ylabel('log10(|a(k)|)');
end;%if flag_disp;
%%%%%%%%;
%%%%;
%%%%%%%%;
% Now convert to a_k_Y_ ; 
%%%%%%%%;
l_max_upb = round(2*pi*k_p_r_max); %<-- typically sufficient for 2-3 digits of precision. ;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
weight_Y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
weight_Y_(1+tmp_index_) = weight_3d_k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
[ ...
 Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
get_Ylm_condense_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_p_reco_ ...
] = ...
convert_spharm_to_k_p_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ --> a_k_p_reco_ time %0.2fs',tmp_t));
disp(sprintf(' %% a_k_p_quad_ vs a_k_p_reco_: %0.16f',fnorm(a_k_p_quad_-a_k_p_reco_)/fnorm(a_k_p_quad_))); %<-- this should be 2-3 digits. ;
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_Y_reco_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_reco_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
a_k_Y_quad_lmk__ = zeros(n_lm_max,n_k_p_r);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
a_k_Y_quad_lmk__(1:n_lm_(1+nk_p_r),1+nk_p_r) = a_k_Y_quad_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
%%%%;
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
subplot(1,3,1); plot(Y_l_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_l_val_','Interpreter','none'); ylabel('log10(abs(a))');
subplot(1,3,2); plot(Y_m_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_m_val_','Interpreter','none'); ylabel('log10(abs(a))');
subplot(1,3,3); plot(Y_k_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_k_val_','Interpreter','none'); ylabel('log10(abs(a))');
end;%if flag_disp;
%%%%%%%%;
%%%%;
%%%%%%%%;
% measure fsc for quad vs reco (should be nearly 1). ;
%%%%%%%%;
[ ...
 ~ ...
,fsc_a_k_p_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,n_k_all ...
,n_k_p_r ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,a_k_p_quad_ ...
,a_k_p_reco_ ...
);
%%%%;
[ ...
 ~ ...
,fsc_a_k_Y_k_ ...
] = ...
fsc_from_a_k_Y_0( ...
 [] ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_reco_ ...
);
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,2,1);
k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
hold on;
plot(k_Ainv_p_r_,real(fsc_a_k_p_k_),'r-',k_Ainv_p_r_,real(fsc_a_k_Y_k_),'b-',k_Ainv_p_r_,0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
xlim([0,k_Ainv_p_r_max]);
ylim([0,1]);
xlabel('k'); ylabel('fsc_a_k_p_k_ (red), fsc_a_k_Y_k_ (blue)','Interpreter','none');
hold off;
subplot(1,2,2);
kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
hold on;
plot(log10(kinv_A_p_r_),real(fsc_a_k_p_k_),'r-',log10(kinv_A_p_r_),real(fsc_a_k_Y_k_),'b-',log10(kinv_A_p_r_),0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
xlim([0,+2]);
ylim([0,1]);
xlabel('log10(l = 1/k)'); ylabel('fsc_a_k_p_k_ (red), fsc_a_k_Y_k_ (blue)','Interpreter','none');
hold off;
end;%if flag_disp;
%%%%%%%%;
%%%%;
%%%%%%%%;
% define n_w_. ;
%%%%%%%%
n_w_max = 2*(l_max_max+1);
template_k_eq_d = -1;
n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_k_all_ ...
] = ...
get_weight_2d_1( ...
 verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,template_k_eq_d ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);
%%%%;
save(fname_load_mat ...
     ,'str_kx','k_p_r_max' ...
     ,'k_eq_d','flag_unif_vs_adap' ...
     ,'n_k_all','n_k_all_csum_','k_p_r_all_','k_p_azimu_b_all_','k_p_polar_a_all_','weight_3d_k_all_','weight_shell_k_' ...
     ,'n_k_p_r','k_p_r_','weight_3d_k_p_r_','k_c_0_all_','k_c_1_all_','k_c_2_all_' ...
     ,'n_polar_a_k_','polar_a_ka__','n_azimu_b_ka__' ...
     ,'a_k_p_quad_' ...
     ,'l_max_','l_max_upb','n_lm_','n_lm_max','n_lm_sum','n_lm_csum_','l_max_max','m_max_','n_m_max','Y_l_val_','Y_m_val_','Y_k_val_','weight_Y_' ...
     ,'a_k_Y_quad_' ...
     ,'fsc_a_k_p_k_','fsc_a_k_Y_k_' ...
     ,'n_w_max','n_w_','weight_2d_k_p_r_','weight_2d_k_all_','n_w_sum','n_w_csum_' ...
     ,'-v7.3' ...
     );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if ( flag_recalc | ~exist(fname_load_mat,'file') );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if  exist(fname_load_mat,'file');
load(fname_load_mat);
end;%if  exist(fname_load_mat,'file');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% prepare hi-res grid. ;
%%%%%%%%;
tmp_t = tic;
hires_k_p_r_max = 4.0*48/(2*pi);
hires_k_eq_d = 1.0/(2*pi);
hires_flag_unif_vs_adap = 1;
hires_flag_tensor_vs_adap = 1;
[ ...
 hires_n_k_all ...
,hires_n_k_all_csum_ ...
,hires_k_p_r_all_ ...
,hires_k_p_azimu_b_all_ ...
,hires_k_p_polar_a_all_ ...
,hires_weight_3d_k_all_ ...
,hires_weight_shell_k_ ...
,hires_n_k_p_r ...
,hires_k_p_r_ ...
,hires_weight_3d_k_p_r_ ...
,hires_k_c_0_all_ ...
,hires_k_c_1_all_ ...
,hires_k_c_2_all_ ...
,hires_J_node_ ...
,hires_J_weight_ ...
,hires_J_chebfun_ ...
,hires_J_polyval_ ...
,hires_n_polar_a_k_ ...
,hires_polar_a_ka__ ...
,hires_n_azimu_b_ka__ ...
] = ...
sample_sphere_7( ...
 verbose ...
,hires_k_p_r_max ...
,hires_k_eq_d ...
,'L' ...
,hires_flag_unif_vs_adap ...
,hires_flag_tensor_vs_adap ...
) ; %<-- sum(weight_3d_k_p_r_)*(4*pi) = (4/3)*pi*k_p_r_max^3 --> sum(weight_3d_k_p_r_) = (1/3)*k_p_r_max^3 ;
tmp_t = toc(tmp_t); disp(sprintf(' %% sample_sphere_7: time %0.2fs',tmp_t));
%%%%%%%%;
hires_a_x_u_load_ = cast(ReadMRC(fname_emd),'double');
hires_n_x_u = size(hires_a_x_u_load_,1);
hires_x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
hires_x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
hires_x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
[hires_x_u_0___,hires_x_u_1___,hires_x_u_2___] = ndgrid(hires_x_u_0_,hires_x_u_1_,hires_x_u_2_); hires_n_xxx_u = hires_n_x_u^3;
hires_xxx_u_weight_ = (2*x_p_r_max/hires_n_x_u)^3;
%%%%%%%%;
eta = pi/x_p_r_max; tmp_t = tic;
hires_a_k_p_quad_ = xxnufft3d3(hires_n_xxx_u,hires_x_u_0___(:)*eta,hires_x_u_1___(:)*eta,hires_x_u_2___(:)*eta,hires_a_x_u_load_(:).*xxx_u_weight_(:),-1,1e-12,hires_n_k_all,2*pi*hires_k_c_0_all_/eta,2*pi*hires_k_c_1_all_/eta,2*pi*hires_k_c_2_all_/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: hires_a_k_p_quad_ time %0.2fs',tmp_t));
%%%%%%%%;

%%%%%%%%;
% Assume tensor grid on each shell. ;
%%%%%%%%;
n_polar_a = n_polar_a_k_(1+0); assert(max(diff(n_polar_a_k_))==0);
polar_a_ = polar_a_ka__{1+0}; assert(max(diff(cell2mat(polar_a_ka__),1,2),[],'all')==0);
n_azimu_b = n_azimu_b_ka__{1+0}(1+0); assert(std(cell2mat(n_azimu_b_ka__),1,'all')==0);
%%%%%%%%;
hires_n_polar_a = hires_n_polar_a_k_(1+0); assert(max(diff(hires_n_polar_a_k_))==0);
hires_polar_a_ = hires_polar_a_ka__{1+0}; assert(max(diff(cell2mat(hires_polar_a_ka__),1,2),[],'all')==0);
hires_n_azimu_b = hires_n_azimu_b_ka__{1+0}(1+0); assert(std(cell2mat(hires_n_azimu_b_ka__),1,'all')==0);

%%%%%%%%;
% define rotation matrices. ;
%%%%%%%%;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;

%%%%%%%%;
% Now load outputs from relion. ;
%%%%%%%%;
for tmp_str_ = {'A','B'};
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
tmp_str = tmp_str_{1};
fname_reli_mat = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_%s2_gpu_run_class001_%s.mat',string_root,tmp_str,str_kx);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if ( flag_recalc | ~exist(fname_reli_mat,'file') );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
fname_reli_mrc = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_%s2_gpu_run_class001.mrc',string_root,tmp_str);
c_x_u_reli_ = cast(ReadMRC(fname_reli_mrc),'double');
c_x_u_reli_pack_ = reshape(c_x_u_reli_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = reshape(permute(reshape(c_x_u_reli_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = reshape(permute(reshape(c_x_u_reli_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = permute(reshape(c_x_u_reli_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;np=0;
subplot(1,2,1+np); np=np+1; isosurface_f_x_u_0(a_x_u_pack_,97.5); title('a_x_u_pack_','Interpreter','none');
subplot(1,2,1+np); np=np+1; isosurface_f_x_u_0(c_x_u_reli_pack_,97.5); title('c_x_u_reli_pack_','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;
if ~exist('Ylm_uklma___','var');
[ ...
 Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
get_Ylm_condense_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
end;%if ~exist('Ylm_uklma___','var');
%%%%%%%%;
tmp_t = tic;
[ ...
 c_k_p_reli_ ...
] = ...
convert_x_c_to_k_p_1( ...
 verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,c_x_u_reli_pack_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_x_u_reli_pack_ --> c_k_p_reli_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ...
 c_k_Y_reli_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,c_k_p_reli_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_p_reli_ --> c_k_Y_reli_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ... 
 c_k_Y_reli_alig_ ...
,reli_X_best ...
,reli_flag_flip ...
,reli_euler_polar_a_best ...
,reli_euler_azimu_b_best ...
,reli_euler_gamma_z_best ...
,reli_image_delta_x_best ...
,reli_image_delta_y_best ...
,reli_image_delta_z_best ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,c_k_Y_reli_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_Y_reli_ --> c_k_Y_reli_alig_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ...
 c_k_p_reli_alig_ ...
] = ...
convert_spharm_to_k_p_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,c_k_Y_reli_alig_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_Y_reli_alig_ --> c_k_p_reli_alig_ time %0.2fs',tmp_t));
%%%%%%%%;
% Check alignment. ;
%%%%%%%%;
if reli_flag_flip==1; reli_euler_best_ = [+reli_euler_azimu_b_best,+reli_euler_polar_a_best,+reli_euler_gamma_z_best]; end;
if reli_flag_flip==0; reli_euler_best_ = [-reli_euler_azimu_b_best,-reli_euler_polar_a_best,-reli_euler_gamma_z_best]; end; %<-- unsure about this. ;
reli_n_order = 7;
tmp_t = tic();
[ ...
 ~ ...
,shell_scatter_from_tensor_sba__ ...
] = ...
shell_rotate_k_p_to_k_p_0( ...
 verbose ...
,n_azimu_b ...
,n_polar_a ...
,polar_a_ ...
,[] ...
,reli_euler_best_ ...
,reli_flag_flip ...
,reli_n_order ...
);
c_k_p_reli_ali2_ = zeros(n_k_all,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = [n_k_all_csum_(1+nk_p_r+0):n_k_all_csum_(1+nk_p_r+1)-1];
c_k_p_reli_ali2_(1+tmp_index_) = shell_scatter_from_tensor_sba__*c_k_p_reli_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_p_reli_ --> c_k_p_reli_ali2_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_a_k_p_avg = sum(a_k_p_quad_.*weight_3d_k_all_)/sum(weight_3d_k_all_);
tmp_a_k_p_var = sum(conj(a_k_p_quad_-tmp_a_k_p_avg).*(a_k_p_quad_-tmp_a_k_p_avg).*weight_3d_k_all_);
tmp_a_k_p_quad_ = (a_k_p_quad_-tmp_a_k_p_avg)/sqrt(tmp_a_k_p_var);
tmp_c_k_p_avg = sum(c_k_p_reli_.*weight_3d_k_all_)/sum(weight_3d_k_all_);
tmp_c_k_p_var = sum(conj(c_k_p_reli_-tmp_c_k_p_avg).*(c_k_p_reli_-tmp_c_k_p_avg).*weight_3d_k_all_);
tmp_c_k_p_reli_ = (c_k_p_reli_-tmp_c_k_p_avg)/sqrt(tmp_c_k_p_var);
tmp_ac0 = sum(conj(tmp_a_k_p_quad_).*(tmp_c_k_p_reli_).*weight_3d_k_all_);
tmp_c_k_p_avg = sum(c_k_p_reli_alig_.*weight_3d_k_all_)/sum(weight_3d_k_all_);
tmp_c_k_p_var = sum(conj(c_k_p_reli_alig_-tmp_c_k_p_avg).*(c_k_p_reli_alig_-tmp_c_k_p_avg).*weight_3d_k_all_);
tmp_c_k_p_reli_alig_ = (c_k_p_reli_alig_-tmp_c_k_p_avg)/sqrt(tmp_c_k_p_var);
tmp_ac1 = sum(conj(tmp_a_k_p_quad_).*(tmp_c_k_p_reli_alig_).*weight_3d_k_all_);
tmp_c_k_p_avg = sum(c_k_p_reli_ali2_.*weight_3d_k_all_)/sum(weight_3d_k_all_);
tmp_c_k_p_var = sum(conj(c_k_p_reli_ali2_-tmp_c_k_p_avg).*(c_k_p_reli_ali2_-tmp_c_k_p_avg).*weight_3d_k_all_);
tmp_c_k_p_reli_ali2_ = (c_k_p_reli_ali2_-tmp_c_k_p_avg)/sqrt(tmp_c_k_p_var);
tmp_ac2 = sum(conj(tmp_a_k_p_quad_).*(tmp_c_k_p_reli_ali2_).*weight_3d_k_all_);
if (verbose> 0); disp(sprintf(' %% X_best:  %+0.16f (original)',reli_X_best)); end;
if (verbose> 0); disp(sprintf(' %% tmp_ac0: %+0.16f (unaligned)',tmp_ac0)); end;
if (verbose> 0); disp(sprintf(' %% tmp_ac1: %+0.16f (Y-aligned)',tmp_ac1)); end;
if (verbose> 0); disp(sprintf(' %% tmp_ac2: %+0.16f (k-aligned)',tmp_ac2)); end;
%%%%%%%%;
% quick estimate of fsc. ;
%%%%%%%%;
[ ...
 ~ ...
,fsc_reli_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,n_k_all ...
,n_k_p_r ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,a_k_p_quad_ ...
,c_k_p_reli_ ...
);
[ ...
 ~ ...
,fsc_reli_alig_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,n_k_all ...
,n_k_p_r ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,a_k_p_quad_ ...
,c_k_p_reli_alig_ ...
);
%%%%%%%%;
flag_disp=1;
if flag_disp;
k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
figure(1+nf);nf=nf+1;clf;figsml;
plot(log10(kinv_A_p_r_),real(fsc_reli_k_),'r.-',log10(kinv_A_p_r_),real(fsc_reli_alig_k_),'g.-');
tmp_xtick_ = 1.0:0.25:2.0;
tmp_xticklabel_ = num2str(transpose(round(10.^(tmp_xtick_))));
set(gca,'xdir','reverse');
xlim([min(tmp_xtick_)-0.025,max(tmp_xtick_)+0.025]); set(gca,'XTick',tmp_xtick_,'XTickLabel',tmp_xticklabel_);
ylim([0,1]);
xlabel('Angstroms','Interpreter','none');
ylabel('fsc_k_','Interpreter','none');
legend({'reli','alig'},'Location','SouthWest','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;
% Now repeat for hires version. ;
%%%%%%%%;
hires_c_x_u_reli_ = cast(ReadMRC(fname_reli_mrc),'double');
hires_n_x_u = size(hires_c_x_u_reli_,1);
hires_x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
hires_x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
hires_x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,hires_n_x_u);
[hires_x_u_0___,hires_x_u_1___,hires_x_u_2___] = ndgrid(hires_x_u_0_,hires_x_u_1_,hires_x_u_2_); hires_n_xxx_u = hires_n_x_u^3;
hires_xxx_u_weight_ = (2*x_p_r_max/hires_n_x_u)^3;
%%%%%%%%;
eta = pi/x_p_r_max; tmp_t = tic;
hires_c_k_p_reli_ = xxnufft3d3(hires_n_xxx_u,hires_x_u_0___(:)*eta,hires_x_u_1___(:)*eta,hires_x_u_2___(:)*eta,hires_c_x_u_reli_(:).*xxx_u_weight_(:),-1,1e-12,hires_n_k_all,2*pi*hires_k_c_0_all_/eta,2*pi*hires_k_c_1_all_/eta,2*pi*hires_k_c_2_all_/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: hires_c_k_p_reli_ time %0.2fs',tmp_t));
%%%%%%%%;
% Recapitulate alignment. ;
%%%%%%%%;
if reli_flag_flip==1; reli_euler_best_ = [+reli_euler_azimu_b_best,+reli_euler_polar_a_best,+reli_euler_gamma_z_best]; end;
if reli_flag_flip==0; reli_euler_best_ = [-reli_euler_azimu_b_best,-reli_euler_polar_a_best,-reli_euler_gamma_z_best]; end; %<-- unsure about this. ;
reli_n_order = 7;
tmp_t = tic();
[ ...
 ~ ...
,hires_shell_scatter_from_tensor_sba__ ...
] = ...
shell_rotate_k_p_to_k_p_0( ...
 verbose ...
,hires_n_azimu_b ...
,hires_n_polar_a ...
,hires_polar_a_ ...
,[] ...
,reli_euler_best_ ...
,reli_flag_flip ...
,reli_n_order ...
);
hires_c_k_p_reli_alig_ = zeros(hires_n_k_all,1);
for hires_nk_p_r=0:hires_n_k_p_r-1;
tmp_index_ = [hires_n_k_all_csum_(1+hires_nk_p_r+0):hires_n_k_all_csum_(1+hires_nk_p_r+1)-1];
hires_c_k_p_reli_alig_(1+tmp_index_) = hires_shell_scatter_from_tensor_sba__*hires_c_k_p_reli_(1+tmp_index_);
end;%for hires_nk_p_r=0:hires_n_k_p_r-1;
tmp_t = toc(tmp_t); disp(sprintf(' %% hires_c_k_p_reli_ --> hires_c_k_p_reli_alig_ time %0.2fs',tmp_t));
%%%%%%%%;
% quick hires estimate of fsc. ;
%%%%%%%%;
[ ...
 ~ ...
,hires_fsc_reli_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,hires_n_k_all ...
,hires_n_k_p_r ...
,hires_n_k_all_csum_ ...
,hires_weight_3d_k_all_ ...
,hires_a_k_p_quad_ ...
,hires_c_k_p_reli_ ...
);
[ ...
 ~ ...
,hires_fsc_reli_alig_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,hires_n_k_all ...
,hires_n_k_p_r ...
,hires_n_k_all_csum_ ...
,hires_weight_3d_k_all_ ...
,hires_a_k_p_quad_ ...
,hires_c_k_p_reli_alig_ ...
);
%%%%%%%%;
flag_disp=1;
if flag_disp;
hires_k_Ainv_p_r_ = (2*hires_k_p_r_)/(n_x_M_u * Pixel_Spacing);
hires_k_Ainv_p_r_max = (2*hires_k_p_r_max)/(n_x_M_u * Pixel_Spacing);
hires_kinv_A_p_r_ = 1./max(1e-12,hires_k_Ainv_p_r_);
figure(1+nf);nf=nf+1;clf;figsml;
plot(log10(hires_kinv_A_p_r_),real(hires_fsc_reli_k_),'r.-',log10(hires_kinv_A_p_r_),real(hires_fsc_reli_alig_k_),'g.-');
tmp_xtick_ = 0.7:0.25:2.0;
tmp_xticklabel_ = num2str(transpose(round(10.^(tmp_xtick_))));
set(gca,'xdir','reverse');
xlim([min(tmp_xtick_)-0.025,max(tmp_xtick_)+0.025]); set(gca,'XTick',tmp_xtick_,'XTickLabel',tmp_xticklabel_);
ylim([0,1]);
xlabel('Angstroms','Interpreter','none');
ylabel('hires_fsc_k_','Interpreter','none');
legend({'hires_reli','hires_alig'},'Location','SouthWest','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;
save(fname_reli_mat ...
,'k_p_r_max','reli_X_best','reli_flag_flip' ...
,'reli_euler_polar_a_best','reli_euler_azimu_b_best','reli_euler_gamma_z_best','reli_image_delta_x_best' ...
,'reli_image_delta_y_best','reli_image_delta_z_best' ...
,'hires_k_p_r_max','hires_fsc_reli_alig_k_','hires_k_Ainv_p_r_','hires_k_Ainv_p_r_max','hires_kinv_A_p_r_' ...
);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if ( flag_recalc | ~exist(fname_reli_mat,'file') );
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%for tmp_str_ = {'A','B'};
%%%%%%%%;

fname_reli_A_mat = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_%s2_gpu_run_class001_%s.mat',string_root,'A',str_kx);
fname_reli_B_mat = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_%s2_gpu_run_class001_%s.mat',string_root,'B',str_kx);
if (  exist(fname_reli_A_mat,'file') &  exist(fname_reli_B_mat,'file') );
tmp_A_ = load(fname_reli_A_mat); tmp_B_ = load(fname_reli_B_mat);

fname_reli_fig_pre = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_x2_gpu_run_class001_%s_FIGC',string_root,str_kx);
fname_reli_fig_jpg = sprintf('%s.jpg',fname_reli_fig_pre);
fname_reli_fig_eps = sprintf('%s.eps',fname_reli_fig_pre);
if (flag_replot | ~exist(fname_reli_fig_jpg,'file'));
figure(1+nf);nf=nf+1;figsml;
linewidth_use = 2; fontsize_use = 24;
hold on;
%%%%;
tmp_A_.hires_k_Ainv_p_r_ = (2*hires_k_p_r_)/(n_x_M_u * Pixel_Spacing);
tmp_A_.hires_k_Ainv_p_r_max = (2*tmp_A_.hires_k_p_r_max)/(n_x_M_u * Pixel_Spacing);
tmp_A_.hires_kinv_A_p_r_ = 1./max(1e-12,tmp_A_.hires_k_Ainv_p_r_);
plot(log10(tmp_A_.hires_kinv_A_p_r_),real(tmp_A_.hires_fsc_reli_alig_k_),'-','Color','m','LineWidth',linewidth_use);
%%%%;
tmp_B_.hires_k_Ainv_p_r_ = (2*hires_k_p_r_)/(n_x_M_u * Pixel_Spacing);
tmp_B_.hires_k_Ainv_p_r_max = (2*tmp_B_.hires_k_p_r_max)/(n_x_M_u * Pixel_Spacing);
tmp_B_.hires_kinv_A_p_r_ = 1./max(1e-12,tmp_B_.hires_k_Ainv_p_r_);
plot(log10(tmp_B_.hires_kinv_A_p_r_),real(tmp_B_.hires_fsc_reli_alig_k_),'-','Color','b','LineWidth',linewidth_use);
%%%%;
hold off;
tmp_xtick_ = 0.7:0.25:2.0;
tmp_xticklabel_ = num2str(transpose(round(10.^(tmp_xtick_))));
set(gca,'xdir','reverse');
xlim([min(tmp_xtick_)-0.025,max(tmp_xtick_)+0.025]); set(gca,'XTick',tmp_xtick_,'XTickLabel',tmp_xticklabel_);
ylim([0,1]);
xlabel('Angstroms','Interpreter','none');
ylabel('correlation','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
sgtitle(sprintf('%s',fname_reli_mat),'Interpreter','none');
if (verbose); disp(sprintf(' %% Writing %s',fname_reli_fig_pre)); end;
print('-djpeg',fname_reli_fig_jpg);
print('-depsc',fname_reli_fig_eps);
sgtitle('');
tmp_dir = sprintf('/%s/rangan/dir_cryoem/dir_ampm_manuscript/dir_ampm_fig_medres',string_root);
fname_fig_jpg_strip = sprintf('%s/tv1_job_x2_gpu_run_class001_FIGC_%s_strip.jpg',tmp_dir,str_kx);
disp(sprintf(' %% writing %s',fname_fig_jpg_strip));
print('-djpeg',sprintf('%s',fname_fig_jpg_strip));
%%%%;
end;%if (flag_replot | ~exist(fname_reli_fig_jpg,'file'));

fname_reli_fig_pre = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_x2_gpu_run_class001_%s_FIGD',string_root,str_kx);
fname_reli_fig_jpg = sprintf('%s.jpg',fname_reli_fig_pre);
fname_reli_fig_eps = sprintf('%s.eps',fname_reli_fig_pre);
if (flag_replot | ~exist(fname_reli_fig_jpg,'file'));
figure(1+nf);nf=nf+1;figsml;
linewidth_use = 2; fontsize_use = 24;
hold on;
%%%%;
tmp_A_.hires_k_Ainv_p_r_ = (2*hires_k_p_r_)/(n_x_M_u * Pixel_Spacing);
tmp_A_.hires_k_Ainv_p_r_max = (2*tmp_A_.hires_k_p_r_max)/(n_x_M_u * Pixel_Spacing);
tmp_A_.hires_kinv_A_p_r_ = 1./max(1e-12,tmp_A_.hires_k_Ainv_p_r_);
plot(    (tmp_A_.hires_kinv_A_p_r_),real(tmp_A_.hires_fsc_reli_alig_k_),'-','Color','m','LineWidth',linewidth_use);
%%%%;
tmp_B_.hires_k_Ainv_p_r_ = (2*hires_k_p_r_)/(n_x_M_u * Pixel_Spacing);
tmp_B_.hires_k_Ainv_p_r_max = (2*tmp_B_.hires_k_p_r_max)/(n_x_M_u * Pixel_Spacing);
tmp_B_.hires_kinv_A_p_r_ = 1./max(1e-12,tmp_B_.hires_k_Ainv_p_r_);
plot(    (tmp_B_.hires_kinv_A_p_r_),real(tmp_B_.hires_fsc_reli_alig_k_),'-','Color','b','LineWidth',linewidth_use);
%%%%;
hold off;
tmp_xtick_ = 4:4:24;
tmp_xticklabel_ = num2str(transpose(round(tmp_xtick_)));
set(gca,'xdir','reverse');
xlim([min(tmp_xtick_)-0.025,max(tmp_xtick_)+0.025]); set(gca,'XTick',tmp_xtick_,'XTickLabel',tmp_xticklabel_);
ylim([0,1]); grid on;
xlabel('Angstroms','Interpreter','none');
ylabel('correlation','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
sgtitle(sprintf('%s',fname_reli_mat),'Interpreter','none');
if (verbose); disp(sprintf(' %% Writing %s',fname_reli_fig_pre)); end;
print('-djpeg',fname_reli_fig_jpg);
print('-depsc',fname_reli_fig_eps);
sgtitle('');
tmp_dir = sprintf('/%s/rangan/dir_cryoem/dir_ampm_manuscript/dir_ampm_fig_medres',string_root);
fname_fig_jpg_strip = sprintf('%s/tv1_job_x2_gpu_run_class001_FIGD_%s_strip.jpg',tmp_dir,str_kx);
disp(sprintf(' %% writing %s',fname_fig_jpg_strip));
print('-djpeg',sprintf('%s',fname_fig_jpg_strip));
%%%%;
end;%if (flag_replot | ~exist(fname_reli_fig_jpg,'file'));

end;%if (  exist(fname_reli_A_mat,'file') &  exist(fname_reli_B_mat,'file') );
