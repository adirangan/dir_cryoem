function ...
[ ...
 b_k_Y_best_ ...
,b_k_Y__ ...
,flip_flag_ ...
] = ...
am3d_0( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,n_model ...
,l_max_ ...
,a_k_Y__ ...
);
% simple alternating-minimization for volume-alignment. ;
% Assumes N_wavelength = 0. ;

verbose=1;
if (verbose>0); disp(sprintf(' %% [entering am3d_0] n_model %d',n_model)); end;

n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
N_wavelength = 0;

b_k_Y__ = zeros(n_lm_sum,n_model);
for nmodel=0:n_model-1; b_k_Y__(:,1+nmodel) = spharm_normalize_1(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y__(:,1+nmodel)); end;
b_k_Y_best_ = spharm_normalize_1(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,mean(b_k_Y__(:,1:n_model),2));
c_k_Y__ = b_k_Y__;
flip_flag_ = zeros(n_model,1);

n_iteration = 8;
fnorm_db_k_Y_ = zeros(n_iteration,1);
for niteration=0:n_iteration-1;
tmp_t=tic();
X_best_ = zeros(n_model,1);
for nmodel=0:n_model-1;
%%%%%%%%;
[ ...
 tmp_X_best_orig ...
,~ ...
,~ ...
,~ ...
,~ ...
,c_k_Y_orig_ ...
,~ ...
] = ...
register_spharm_to_spharm_wigner_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,b_k_Y__(:,1+nmodel) ...
,b_k_Y_best_ ...
);
%%%%%%%%;
[ ...
 tmp_X_best_flip ...
,~ ...
,~ ...
,~ ...
,~ ...
,c_k_Y_flip_ ...
,~ ...
] = ...
register_spharm_to_spharm_wigner_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,flipY(n_k_p_r,l_max_,b_k_Y__(:,1+nmodel)) ...
,b_k_Y_best_ ...
);
%%%%%%%%;
if (tmp_X_best_orig>=tmp_X_best_flip);
tmp_X_best = tmp_X_best_orig; flip_flag_(1+nmodel)=0; c_k_Y__(:,1+nmodel) = c_k_Y_orig_; 
end;%if (tmp_X_best_orig>=tmp_X_best_flip);
if (tmp_X_best_orig< tmp_X_best_flip);
tmp_X_best = tmp_X_best_flip; flip_flag_(1+nmodel)=1; c_k_Y__(:,1+nmodel) = c_k_Y_flip_;
end;%if (tmp_X_best_orig< tmp_X_best_flip);
X_best_(1+nmodel) = tmp_X_best;
end;%for nmodel=0:n_model-1;
X_best_avg = mean(X_best_);
fnorm_db_k_Y = fnorm(b_k_Y__ - c_k_Y__)/fnorm(b_k_Y__);
fnorm_db_k_Y_(1+niteration) = fnorm_db_k_Y;
tmp_t = toc(tmp_t);
if (verbose>0); disp(sprintf(' %% niteration %d/%d X_best_avg %0.2f fnorm_db_k_Y_ %0.2f (time %0.2fs)',niteration,n_iteration,X_best_avg,fnorm_db_k_Y_(1+niteration),tmp_t)); end;
b_k_Y__ = c_k_Y__;
b_k_Y_best_ = spharm_normalize_1(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,mean(b_k_Y__(:,1:n_model),2));
end;%for niteration=0:n_iteration-1;

if (verbose>0); disp(sprintf(' %% [finished am3d_0] n_model %d',n_model)); end;
