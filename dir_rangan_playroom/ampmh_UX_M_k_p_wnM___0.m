function ...
[ ...
 UX_M_k_q_wnM___ ...
,UX_M_k_p_wnM___ ...
] = ...
ampmh_UX_M_k_p_wnM___0( ...
 FTK ...
,n_w_ ...
,pm_n_UX_rank ...
,n_M ...
,svd_VUXM_lwnM____ ...
,image_delta_x_ ...
,image_delta_y_ ...
);
n_w_max = max(n_w_);
if (nargin< 6); image_delta_x_ = []; end;
if (nargin< 7); image_delta_y_ = []; end;
if isempty(image_delta_x_); image_delta_x_ = zeros(n_M,1); end;
if isempty(image_delta_y_); image_delta_y_ = zeros(n_M,1); end;
%%%%%%%%;
% find out which on-grid displacements correspond most closely to current displacements. ;
%%%%%%%%;
image_delta_j_ = knnsearch([FTK.delta_x_,FTK.delta_y_],[image_delta_x_,image_delta_y_]) - 1;
%%%%%%%%;
% use current displacements to form principal-images. ;
%%%%%%%%;
UX_M_k_q_wnM___ = zeros(n_w_max,pm_n_UX_rank,n_M);
UX_M_k_p_wnM___ = zeros(n_w_max,pm_n_UX_rank,n_M);
for nM=0:n_M-1;
UX_M_k_q_wnM___(:,:,1+nM) = reshape(FTK.svd_U_d_expiw_s__(1+image_delta_j_(1+nM),:)*reshape(svd_VUXM_lwnM____(:,:,:,1+nM),[FTK.n_svd_l,n_w_max*pm_n_UX_rank]),[n_w_max,pm_n_UX_rank]) * n_w_max;
end;%for nM=0:n_M-1;
UX_M_k_p_wnM___ = ifft(UX_M_k_q_wnM___,[],1)*sqrt(n_w_max);
