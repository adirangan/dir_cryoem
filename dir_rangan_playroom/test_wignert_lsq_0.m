% generate wignert_lsq;
N_pixels = 3.0;
n_l = 20; 
K = 100; d_ = linspace(0,N_pixels/sqrt(2)/(K-1),32); n_dk = length(d_); k = K;
W_ = zeros((n_l+1).^2,(n_l+1).^2,n_dk);
pp_ = zeros((n_l+1).^2,n_dk);
m2_ = zeros((n_l+1).^2,n_dk);
l2_ = zeros((n_l+1).^2,n_dk);
for ndk=1:n_dk;
[W_tmp,pp_tmp,m2_tmp,l2_tmp] = wignert_lsq(n_l,[0,0,d_(ndk)*k]);
W_(:,:,ndk) = W_tmp;
pp_(:,ndk) = pp_tmp;
m2_(:,ndk) = m2_tmp;
l2_(:,ndk) = l2_tmp;
end;% for ndk=1:n_dk;

%{
  % examine t for m==0 as function of k ;
  n_l_cut = 10;
  m2_tmp = m2_(:,1); l2_tmp = l2_(:,1); m2_ij = find(m2_tmp==0 & l2_tmp<=n_l_cut); m2_length = length(m2_ij);
  W00 = zeros(m2_length,m2_length, ndk);
  for ndk=1:n_dk;
  W_tmp = W_(pp_(:,ndk)+1,pp_(:,ndk)+1,ndk); 
  W00(:,:,ndk) = W_tmp(m2_ij,m2_ij);
  end;%for ndk=1:n_dk;
  %}
%{
  % examine t for various values of m as function of k ;
  n_s = 5;
  S_ = zeros(n_s,n_dk);
  n_l_cut = 10;
  m_val_ = -n_l_cut:n_l_cut;
  for nm=1:length(m_val_);
  m_val = m_val_(nm);
  m2_tmp = m2_(:,1); l2_tmp = l2_(:,1); m2_ij = find(m2_tmp==m_val & l2_tmp<=n_l_cut); m2_length = length(m2_ij);
  W_m = zeros(m2_length,m2_length, ndk);
  for ndk=1:n_dk;
  W_tmp = W_(pp_(:,ndk)+1,pp_(:,ndk)+1,ndk); 
  W_m(:,:,ndk) = W_tmp(m2_ij,m2_ij);
  end;%for ndk=1:n_dk;
  S_tmp = svds(reshape(W_m,m2_length*m2_length,n_dk),n_s);
  S_(1:length(S_tmp),nm) = S_tmp;
  end;% for nm=1:length(m_val_);
  %}

% examine t for all values of m as function of delta*k ;
clear WXX_;
WXX_ = zeros(0,n_dk);
n_l_cut = 10;
m_val_ = -n_l_cut:n_l_cut;
for nm=1:length(m_val_);
m_val = m_val_(nm);
m2_tmp = m2_(:,1); l2_tmp = l2_(:,1); m2_ij = find(m2_tmp==m_val & l2_tmp<=n_l_cut); m2_length = length(m2_ij);
W_m = zeros(m2_length,m2_length, ndk);
for ndk=1:n_dk;
W_tmp = W_(pp_(:,ndk)+1,pp_(:,ndk)+1,ndk); 
W_m(:,:,ndk) = W_tmp(m2_ij,m2_ij);
end;%for ndk=1:n_dk;
WXX_ = [ WXX_ ; reshape(W_m,m2_length*m2_length,n_dk) ];
end;% for nm=1:length(m_val_);
n_s = 6;
[UXX_,SXX_,VXX_] = svds(WXX_,n_s);

% estimate errors associated with WXX_ factorization ;
n_l_cut = 10;
m_val_ = -n_l_cut:n_l_cut;
S_error_ = zeros(length(m_val_),n_dk,n_s);
n_sum = 0;
for nm=1:length(m_val_);
m_val = m_val_(nm);
m2_tmp = m2_(:,1); l2_tmp = l2_(:,1); m2_ij = find(m2_tmp==m_val & l2_tmp<=n_l_cut); m2_length = length(m2_ij);
for ndk=1:n_dk;
W_tmp = W_(pp_(:,ndk)+1,pp_(:,ndk)+1,ndk); 
W_tmp = W_tmp(m2_ij,m2_ij);
W_XXX = WXX_(n_sum + (1:m2_length.^2),ndk);
W_XXX = reshape(W_XXX,m2_length,m2_length);
U_XXX = UXX_(n_sum + (1:m2_length.^2),1:n_s);
USV_X = zeros(m2_length,m2_length); 
for ns=1:n_s; USV_X = USV_X + reshape(U_XXX(:,ns),m2_length,m2_length)*SXX_(ns,ns)*VXX_(ndk,ns); S_error_(nm,ndk,ns) = norm(W_XXX-USV_X); end;
%disp(sprintf(' %% nm %d m_val %d ndk %d e0 %f e1 %f',nm,m_val,ndk,norm(W_XXX-W_tmp),norm(W_XXX-USV_X)));
end;%for ndk=1:n_dk;
n_sum = n_sum + m2_length.^2;
end;% for nm=1:length(m_val_);
figure; 
for ns=1:n_s; 
subplot(2,3,ns); 
S_tmp = squeeze(S_error_(:,:,ns));
imagesc(log10(S_tmp),[-5,0]); colorbar; 
title(sprintf('emax %f',max(S_tmp(:))));
end; %for ns=1:n_s; 
