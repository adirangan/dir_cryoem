function ...
[ ...
 I ...
] = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,delta_S ...
,omega_S ...
,delta_M ...
,omega_M ...
,alpha ...
);

%%%%%%%%;
% integral of plane-wave times bessel times plane-wave. ;
% (i.e., isotropic CTF). ;
%%%%%%%%;
% C = J_{0}(\alpha k) ;
% S = exp(i 2\pi \vk \dot \vd_{S}) = exp(i 2\pi k \delta_{S} cos(\psi - \omega_{S})) ;
% M = exp(i 2\pi \vk \dot \vd_{M}) = exp(i 2\pi k \delta_{M} cos(\psi - \omega_{M})) ;
% \vd_{T} = \vd_{M} - \vd_{S} = \delta_{T} [ \cos(\omega_{T}) ; \sin(\omega_{T}) ] ;
% a = \alpha K ;
% b = 2\pi K \delta_{T} ;
% \int_{0}^{K}\int_{0}^{2\pi} [C\cdot S]^{\dagger} M d\psi kdk ... ;
%                            = 2\pi K^2 \frac{ bJ_{-1}(b)J_{0}(a) - aJ_{-1}(a)J_{0}(b) }{ a^2 - b^2 } ;
%%%%%%%%;

flag_verbose=0;
str_thisfunction = 'plane_bessel_plane_integral_0';

%%%%%%%%;
if nargin<1;
%%%%%%%%;
flag_verbose=1;
if (flag_verbose>0); disp(sprintf(' %% testing %s',str_thisfunction)); end;
%%%%;
h2d_ = @(kd) 4*pi^2*(besselj(0,kd) + besselj(2,kd)); % calculates <f_j,f_k>, normalized so that <f,f> = (4*pi^2);
dh2d_ = @(kd) 4*pi^3*(besselj(-1,kd) - besselj(+3,kd));
h3d_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3;
dh3d_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;
%%%%;
k_p_r_max = 48/(2*pi);
delta_max = 0.1;
tmp_delta_S = rand()*delta_max;
tmp_omega_S = 2*pi*rand();
tmp_delta_S_ = tmp_delta_S * [cos(tmp_omega_S) ; sin(tmp_omega_S)];
tmp_delta_M = rand()*delta_max;
tmp_omega_M = 2*pi*rand();
tmp_delta_M_ = tmp_delta_M * [cos(tmp_omega_M) ; sin(tmp_omega_M)];
tmp_delta_T_ = tmp_delta_M_ - tmp_delta_S_;
tmp_delta_T = fnorm(tmp_delta_T_);
tmp_omega_T = atan2(tmp_delta_T_(1+1),tmp_delta_T_(1+0));
tmp_alpha = rand();
tmp_alpha = 0.0;
%%%%;
tmp_kd = 2*pi*k_p_r_max*fnorm(tmp_delta_S_ - tmp_delta_M_);
tmp_H = h2d_(tmp_kd)/(2*pi)^2 * (pi*k_p_r_max^2);
tmp_I = integral2( ...
@(k_p_r,psi) k_p_r ...
 .* conj(besselj(0,tmp_alpha*k_p_r).*exp(2*pi*i*k_p_r.*tmp_delta_S.*cos(psi-tmp_omega_S))) ...
 .* exp(2*pi*i*k_p_r.*tmp_delta_M.*cos(psi-tmp_omega_M)) ...
,0,k_p_r_max,0,2*pi);
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_H: %0.16f %%<-- should only be <1e-6 if 0=:tmp_alpha=%0.6f ',fnorm(tmp_I-tmp_H)/fnorm(tmp_I),tmp_alpha)); end;
%%%%;
tmp_a = tmp_alpha*k_p_r_max;
tmp_b = 2*pi*k_p_r_max*tmp_delta_T;
tmp_c = max(tmp_a,tmp_b); tmp_d = min(tmp_a,tmp_b);
tmp_J = 2*pi*k_p_r_max^2 * (tmp_d*besselj(-1,tmp_d)*besselj(0,tmp_c) - tmp_c*besselj(-1,tmp_c)*besselj(0,tmp_d))/max(1e-12,tmp_c^2-tmp_d^2);
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_J: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_I-tmp_J)/fnorm(tmp_I))); end;
%%%%;
tmp_K = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_S ...
,tmp_omega_S ...
,tmp_delta_M ...
,tmp_omega_M ...
,tmp_alpha ...
);
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_K: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_I-tmp_K)/fnorm(tmp_I))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_J vs tmp_K: %0.16f %%<-- should be <1e-12 ',fnorm(tmp_J-tmp_K)/fnorm(tmp_J))); end;
%%%%;
k_p_r_max = 48.0/(2*pi); k_eq_d = 1.0/(2*pi); TorL = 'L';
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
] = ...
sample_sphere_7( ...
 0*flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,TorL ...
) ;
%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = 2*(l_max_max+1); n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%;
CTF_alpha = tmp_alpha;
CTF_k_p_wk_ = reshape(repmat(reshape(besselj(0,CTF_alpha*k_p_r_),[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1]);
%%%%;
tmp_L = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_S ...
,tmp_omega_S ...
,tmp_delta_M ...
,tmp_omega_M ...
,CTF_alpha ...
);
%%%%;
S_k_p_wk_ = exp(+i*2*pi*(k_c_0_wk_*tmp_delta_S_(1+0) + k_c_1_wk_*tmp_delta_S_(1+1)));
M_k_p_wk_ = exp(+i*2*pi*(k_c_0_wk_*tmp_delta_M_(1+0) + k_c_1_wk_*tmp_delta_M_(1+1)));
tmp_M = sum(conj(S_k_p_wk_).*CTF_k_p_wk_.*M_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
%%%%;
S_k_p_wk_ = exp(+i*2*pi*tmp_delta_S*k_p_r_wk_.*cos(k_p_w_wk_ - tmp_omega_S));
M_k_p_wk_ = exp(+i*2*pi*tmp_delta_M*k_p_r_wk_.*cos(k_p_w_wk_ - tmp_omega_M));
tmp_N = sum(conj(S_k_p_wk_).*CTF_k_p_wk_.*M_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
%%%%;
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_L: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_I-tmp_L)/fnorm(tmp_I))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_J vs tmp_L: %0.16f %%<-- should be <1e-12 ',fnorm(tmp_J-tmp_L)/fnorm(tmp_J))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_K vs tmp_L: %0.16f %%<-- should be <1e-12 ',fnorm(tmp_K-tmp_L)/fnorm(tmp_K))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_M: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_I-tmp_M)/fnorm(tmp_I))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_J vs tmp_M: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_J-tmp_M)/fnorm(tmp_J))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_K vs tmp_M: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_K-tmp_M)/fnorm(tmp_K))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_L vs tmp_M: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_L-tmp_M)/fnorm(tmp_L))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_I vs tmp_N: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_I-tmp_N)/fnorm(tmp_I))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_J vs tmp_N: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_J-tmp_N)/fnorm(tmp_J))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_K vs tmp_N: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_K-tmp_N)/fnorm(tmp_K))); end;
if (flag_verbose>0); disp(sprintf(' %% tmp_L vs tmp_N: %0.16f %%<-- should be <1e-6 ',fnorm(tmp_L-tmp_N)/fnorm(tmp_L))); end;
%%%%%%%%;
disp(sprintf(' %% returning')); return;
end;%if nargin<1;
%%%%%%%%;

na=0;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); delta_S=[]; end; na=na+1;
if (nargin<1+na); omega_S=[]; end; na=na+1;
if (nargin<1+na); delta_M=[]; end; na=na+1;
if (nargin<1+na); omega_M=[]; end; na=na+1;
if (nargin<1+na); alpha=[]; end; na=na+1;

if (flag_verbose>0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

if isempty(alpha); alpha=1.0d0; end;

delta_S_ = delta_S * [cos(omega_S) ; sin(omega_S)];
delta_M_ = delta_M * [cos(omega_M) ; sin(omega_M)];
delta_T_ = delta_M_ - delta_S_;
delta_T = fnorm(delta_T_);
omega_T = atan2(delta_T_(1+1),delta_T_(1+0));
a = alpha*k_p_r_max;
b = 2*pi*k_p_r_max*delta_T;
c = max(a,b); d = min(a,b);
I = 2*pi*k_p_r_max^2 * (d*besselj(-1,d)*besselj(0,c) - c*besselj(-1,c)*besselj(0,d))/max(1e-12,c^2-d^2);

if (flag_verbose>0); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;

