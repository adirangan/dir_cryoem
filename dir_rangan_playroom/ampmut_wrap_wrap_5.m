function ...
parameter = ...
ampmut_wrap_wrap_5( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,n_M ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,a_k_Y_true_yk_ ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
);

verbose=1;
if (verbose); disp(sprintf(' %% [entering ampmut_wrap_wrap_5]')); end;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_k_p_r=[]; end; na=na+1;
if (nargin<1+na); k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); weight_2d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); n_w_max=[]; end; na=na+1;
if (nargin<1+na); l_max_=[]; end; na=na+1;
if (nargin<1+na); n_M=[]; end; na=na+1;
if (nargin<1+na); M_k_p_wkM__=[]; end; na=na+1;
if (nargin<1+na); n_CTF=[]; end; na=na+1;
if (nargin<1+na); index_nCTF_from_nM_=[]; end; na=na+1;
if (nargin<1+na); CTF_k_p_r_kC__=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_true_yk_=[]; end; na=na+1;
if (nargin<1+na); euler_polar_a_true_=[]; end; na=na+1;
if (nargin<1+na); euler_azimu_b_true_=[]; end; na=na+1;
if (nargin<1+na); euler_gamma_z_true_=[]; end; na=na+1;
if (nargin<1+na); image_delta_x_true_=[]; end; na=na+1;
if (nargin<1+na); image_delta_y_true_=[]; end; na=na+1;

if isempty(parameter);
parameter = struct('type','parameter');
end;%if isempty(parameter);
%%%%%%%%;
if (~isfield(parameter,'tolerance_master')); parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_rank_vs_tolerance')); parameter.flag_rank_vs_tolerance = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_clump_vs_cluster')); parameter.flag_clump_vs_cluster = parameter.flag_rank_vs_tolerance; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'tolerance_pm')); parameter.tolerance_pm = parameter.tolerance_master; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'rank_pm')); parameter.rank_pm = 10; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'rank_CTF'));
SCTF_ = svd(CTF_k_p_r_kC__(:,1+index_nCTF_from_nM_(1:n_M)));
rank_CTF = max(find(SCTF_/max(SCTF_)>parameter.tolerance_master));
parameter.rank_CTF = rank_CTF; %<-- parameter_bookmark. ;
end;%if (~isfield(parameter,'rank_CTF')); 
if (~isfield(parameter,'dir_pm')); parameter.dir_pm = pwd; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'rseed')); parameter.rseed = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'k_p_r_max')); parameter.k_p_r_max = k_p_r_max; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'sample_sphere_k_eq_d')); parameter.sample_sphere_k_eq_d = 1/(2*pi); end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'half_diameter_x_c')); parameter.half_diameter_x_c = 1.0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'n_x_u_pack')); parameter.n_x_u_pack = 64; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'delta_r_max')); parameter.delta_r_max = 0.1; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'delta_r_upb')); parameter.delta_r_upb = 0.2; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'cg_lsq_n_order')); parameter.cg_lsq_n_order = 5; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'date_diff_threshold')); parameter.date_diff_threshold = 0.25; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_force_create_mat')); parameter.flag_force_create_mat = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_force_create_tmp')); parameter.flag_force_create_tmp = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_alternate_MS_vs_SM')); parameter.flag_alternate_MS_vs_SM = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'flag_qbp_vs_lsq')); parameter.flag_qbp_vs_lsq = 1; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'qbp_eps')); parameter.qbp_eps = parameter.tolerance_master; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'str_strategy_prefix')); parameter.str_strategy_prefix = ''; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'n_complete_calculation')); parameter.n_complete_calculation = 0; end; %<-- parameter_bookmark. ;
%%%%%%%%;
tolerance_master = parameter.tolerance_master;
flag_rank_vs_tolerance = parameter.flag_rank_vs_tolerance;
parameter.flag_clump_vs_cluster = parameter.flag_rank_vs_tolerance; flag_clump_vs_cluster = parameter.flag_clump_vs_cluster; %<-- force;
tolerance_pm = parameter.tolerance_pm;
rank_pm = parameter.rank_pm;
rank_CTF = parameter.rank_CTF;
flag_alternate_MS_vs_SM = parameter.flag_alternate_MS_vs_SM;
flag_qbp_vs_lsq = parameter.flag_qbp_vs_lsq;
qbp_eps = parameter.qbp_eps;
str_strategy = parameter.str_strategy_prefix;
if (flag_alternate_MS_vs_SM); str_strategy = sprintf('%sa1',str_strategy); end;
dir_pm = parameter.dir_pm;
string_root = dir_pm(2:strfind(dir_pm,'rangan')-2);

rseed = parameter.rseed;
sample_sphere_k_eq_d = parameter.sample_sphere_k_eq_d;
half_diameter_x_c = parameter.half_diameter_x_c;
n_x_u_pack = parameter.n_x_u_pack;
delta_r_max = parameter.delta_r_max;
delta_r_upb = parameter.delta_r_upb;
cg_lsq_n_order = parameter.cg_lsq_n_order;
date_diff_threshold = parameter.date_diff_threshold;
flag_force_create_mat = parameter.flag_force_create_mat;
flag_force_create_tmp = parameter.flag_force_create_tmp;

str_delta_r_max = sprintf('t%.4d',floor(1000*delta_r_max));
str_tolerance_pm = sprintf('p%.2d',floor(10*-log10(tolerance_pm)));
str_rank_pm = sprintf('n%.2d',rank_pm);
str_rseed = sprintf('r%d',rseed);
if (flag_rank_vs_tolerance==0); str_xfix = sprintf('%s%s%s%s',str_strategy,str_delta_r_max,str_tolerance_pm,str_rseed); end;
if (flag_rank_vs_tolerance==1); str_xfix = sprintf('%s%s%s%s',str_strategy,str_delta_r_max,str_rank_pm,str_rseed); end;

XA_fname_mat = sprintf('%s_mat/X_2d_Memp_d1_%s.mat',dir_pm,str_xfix);
XA_fname_align_a_k_Y_pre = sprintf('%s_mat/X_2d_Memp_d1_%s_align_a_k_Y_',dir_pm,str_xfix);
XA_fname_align_a_k_Y_jpg = sprintf('%s.jpg',XA_fname_align_a_k_Y_pre);
XA_fname_snapshot_pre = sprintf('%s_mat/X_2d_Memp_d1_%s_snapshot',dir_pm,str_xfix);
XA_fname_snapshot_jpg = sprintf('%s.jpg',XA_fname_snapshot_pre);
XA_fname_compare_image_rank_pre = sprintf('%s_mat/X_2d_Memp_d1_%s_compare_image_rank',dir_pm,str_xfix);
XA_fname_compare_image_rank_jpg = sprintf('%s.jpg',XA_fname_compare_image_rank_pre);
XB_fname_mat = sprintf('%s_mat/X_2d_xcor_d0_%s.mat',dir_pm,str_xfix);
XB_fname_align_a_k_Y_pre = sprintf('%s_mat/X_2d_xcor_d0_%s_align_a_k_Y_',dir_pm,str_xfix);
XB_fname_align_a_k_Y_jpg = sprintf('%s.jpg',XB_fname_align_a_k_Y_pre);
XB_fname_snapshot_pre = sprintf('%s_mat/X_2d_xcor_d0_%s_snapshot',dir_pm,str_xfix);
XB_fname_snapshot_jpg = sprintf('%s.jpg',XB_fname_snapshot_pre);
XB_fname_compare_image_rank_pre = sprintf('%s_mat/X_2d_xcor_d0_%s_compare_image_rank',dir_pm,str_xfix);
XB_fname_compare_image_rank_jpg = sprintf('%s.jpg',XB_fname_compare_image_rank_pre);
flag_skip_all = 0;
if ( ...
        exist(XA_fname_mat,'file') ...
     &  exist(XA_fname_align_a_k_Y_jpg,'file') ...
     &  exist(XA_fname_snapshot_jpg,'file') ...
     &  exist(XA_fname_compare_image_rank_jpg,'file') ...
     &  exist(XB_fname_mat,'file') ...
     &  exist(XB_fname_align_a_k_Y_jpg,'file') ...
     &  exist(XB_fname_snapshot_jpg,'file') ...
     &  exist(XB_fname_compare_image_rank_jpg,'file') ...
   ); flag_skip_all = 1; end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if ~flag_skip_all;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

verbose=2;
if (verbose); disp(sprintf(' %% [entering ampmut_wrap_wrap_5]')); end;

%%%%%%%%;
n_w_max = n_w_max + mod(n_w_max,2); %<-- round up to nearest even number. ;
l_max_max = n_w_max/2 - 1; assert(l_max_max==max(l_max_));
n_w_ = n_w_max*ones(n_k_p_r,1);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
%%%%%%%%;

%%%%%%%%;
% Now run the basic ampmut using the empirical-principal-modes. ;
%%%%%%%%;
XA_fname_pre = sprintf('%s_mat/X_2d_Memp_d1_%s',dir_pm,str_xfix);
[XA_flag_skip,XA_fname_mat] = open_fname_tmp(XA_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~XA_flag_skip;
%%%%%%%%;
disp(sprintf(' %% %s not found, creating',XA_fname_mat));
XA_parameter = struct('type','parameter');
XA_parameter = parameter; %<-- copy parameter and all its fields. ;
XA_parameter.fname_pre = XA_fname_pre;
ampmut_wrap_5( ...
 XA_parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,index_nCTF_from_nM_ ...
,n_CTF ...
,CTF_k_p_r_kC__ ...
,n_M ...
,M_k_p_wkM__ ...
);
parameter.n_complete_calculation = parameter.n_complete_calculation + 1;
close_fname_tmp(XA_fname_pre);
end;%if ~XA_flag_skip;

%%%%%%%%;
if ( exist(XA_fname_mat,'file'));
%%%%%%%%;
% First collect statistics. ;
%%%%%%%%;
if (verbose); disp(sprintf(' %% %s found, aligning',XA_fname_mat)); end;
tmp_XA_ = load(XA_fname_mat);
if (~isfield(tmp_XA_.parameter,'fname_pre')); tmp_XA_.parameter.fname_pre = XA_fname_pre; end; %<-- parameter_bookmark. ;
%%%%%%%%;
tmp_XA_fname_pre = sprintf('%s_align_a_CTF_avg_UX_Y_',tmp_XA_.parameter.fname_pre);
tmp_XA_fname_pre = rootswitch(tmp_XA_fname_pre,string_root,'rangan');
tmp_XA_.parameter.fname_align_a_CTF_avg_UX_Y_pre = tmp_XA_fname_pre;
[tmp_XA_flag_skip,tmp_XA_fname_mat] = open_fname_tmp(tmp_XA_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~tmp_XA_flag_skip;
% do nothing. ;
close_fname_tmp(tmp_XA_fname_pre);
end;%if ~tmp_XA_flag_skip;
%%%%%%%%;
tmp_XA_fname_pre = sprintf('%s_align_a_k_Y_',tmp_XA_.parameter.fname_pre);
tmp_XA_fname_pre = rootswitch(tmp_XA_fname_pre,string_root,'rangan');
tmp_XA_.parameter.fname_align_a_k_Y_pre = tmp_XA_fname_pre;
[tmp_XA_flag_skip,tmp_XA_fname_mat] = open_fname_tmp(tmp_XA_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~tmp_XA_flag_skip;
%try;
disp(sprintf(' %% %s not found, creating',tmp_XA_fname_mat));
ampmut_align_to_a_k_Y_1( ...
 tmp_XA_.parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_ ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,[] ...
,tmp_XA_.euler_polar_a_Mi__ ...
,tmp_XA_.euler_azimu_b_Mi__ ...
,tmp_XA_.euler_gamma_z_Mi__ ...
,tmp_XA_.image_delta_x_acc_Mi__ + tmp_XA_.image_delta_x_upd_Mi__ ...
,tmp_XA_.image_delta_y_acc_Mi__ + tmp_XA_.image_delta_y_upd_Mi__ ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
);
%catch; disp(sprintf(' %% WARNING: error generating %s',tmp_XA_fname_mat)); end;%try;
close_fname_tmp(tmp_XA_fname_pre);
end;%if ~tmp_XA_flag_skip;
%%%%%%%%;
% Now use the final step to reconstruct the molecule. ;
%%%%%%%%;
tmp_XA_euler_polar_a_ = tmp_XA_.euler_polar_a_Mi__(:,end);
tmp_XA_euler_azimu_b_ = tmp_XA_.euler_azimu_b_Mi__(:,end);
tmp_XA_euler_gamma_z_ = tmp_XA_.euler_gamma_z_Mi__(:,end);
tmp_XA_image_delta_x_ = tmp_XA_.image_delta_x_acc_Mi__(:,end) + tmp_XA_.image_delta_x_upd_Mi__(:,end);
tmp_XA_image_delta_y_ = tmp_XA_.image_delta_y_acc_Mi__(:,end) + tmp_XA_.image_delta_y_upd_Mi__(:,end);
fname_XA_k_Y_mat = sprintf('%s_a_k_Y_.mat',tmp_XA_.parameter.fname_pre);
fname_XA_k_Y_mat = rootswitch(fname_XA_k_Y_mat,string_root,'rangan');
if (~exist(fname_XA_k_Y_mat,'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_XA_k_Y_mat)); end;
if flag_qbp_vs_lsq==0;
a_k_Y_reco_ = ...
cg_lsq_6( ...
 cg_lsq_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,tmp_XA_euler_polar_a_ ...
,tmp_XA_euler_azimu_b_ ...
,tmp_XA_euler_gamma_z_ ...
,tmp_XA_image_delta_x_ ...
,tmp_XA_image_delta_y_ ...
);
end;%if flag_qbp_vs_lsq==0;
if flag_qbp_vs_lsq==1;
a_k_Y_reco_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,tmp_XA_euler_polar_a_ ...
,tmp_XA_euler_azimu_b_ ...
,tmp_XA_euler_gamma_z_ ...
,tmp_XA_image_delta_x_ ...
,tmp_XA_image_delta_y_ ...
);
end;%if flag_qbp_vs_lsq==1;
save(fname_XA_k_Y_mat,'a_k_Y_reco_');
end;%if (~exist(fname_XA_k_Y_mat,'file'));

%%%%%%%%;
if ( exist(fname_XA_k_Y_mat,'file'));
%%%%%%%%;
tmp_ = load(fname_XA_k_Y_mat); tmp_XA_a_k_Y_reco_ = tmp_.a_k_Y_reco_; clear tmp_;

%%%%%%%%;
% Now run ampmut once again, this time using the updated-principal-modes. ;
%%%%%%%%;
XB_fname_pre = sprintf('%s_mat/X_2d_xcor_d0_%s',dir_pm,str_xfix);
[XB_flag_skip,XB_fname_mat] = open_fname_tmp(XB_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~XB_flag_skip;
%%%%%%%%;
%try;
disp(sprintf(' %% %s not found, creating',XB_fname_mat));
XB_parameter = struct('type','parameter');
XB_parameter = parameter; %<-- copy parameter and all its fields. ;
XB_parameter.fname_pre = XB_fname_pre;
ampmut_wrap_5( ...
 XB_parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,index_nCTF_from_nM_ ...
,n_CTF ...
,CTF_k_p_r_kC__ ...
,n_M ...
,M_k_p_wkM__ ...
,tmp_XA_euler_polar_a_ ...
,tmp_XA_euler_azimu_b_ ...
,tmp_XA_euler_gamma_z_ ...
,tmp_XA_image_delta_x_ ...
,tmp_XA_image_delta_y_ ...
,tmp_XA_a_k_Y_reco_ ...
);
parameter.n_complete_calculation = parameter.n_complete_calculation + 1;
%catch; disp(sprintf(' %% WARNING: error generating %s',XB_fname_mat)); end;%try;
close_fname_tmp(XB_fname_pre);
end;%if ~XB_flag_skip;

%%%%%%%%;
if ( exist(XB_fname_mat,'file'));
%%%%%%%%;
% First collect statistics. ;
%%%%%%%%;
if (verbose); disp(sprintf(' %% %s found, aligning',XB_fname_mat)); end;
tmp_XB_ = load(XB_fname_mat);
if (~isfield(tmp_XB_.parameter,'fname_pre')); tmp_XB_.parameter.fname_pre = XB_fname_pre; end; %<-- parameter_bookmark. ;
%%%%%%%%;
tmp_XB_fname_pre = sprintf('%s_align_a_CTF_avg_UX_Y_',tmp_XB_.parameter.fname_pre);
tmp_XB_fname_pre = rootswitch(tmp_XB_fname_pre,string_root,'rangan');
tmp_XB_.parameter.fname_align_a_CTF_avg_UX_Y_pre = tmp_XB_fname_pre;
[tmp_XB_flag_skip,tmp_XB_fname_mat] = open_fname_tmp(tmp_XB_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~tmp_XB_flag_skip;
% do nothing. ;
close_fname_tmp(tmp_XB_fname_pre);
end;%if ~tmp_XB_flag_skip;
%%%%%%%%;
tmp_XB_fname_pre = sprintf('%s_align_a_k_Y_',tmp_XB_.parameter.fname_pre);
tmp_XB_fname_pre = rootswitch(tmp_XB_fname_pre,string_root,'rangan');
tmp_XB_.parameter.fname_align_a_k_Y_pre = tmp_XB_fname_pre;
[tmp_XB_flag_skip,tmp_XB_fname_mat] = open_fname_tmp(tmp_XB_fname_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp);
if ~tmp_XB_flag_skip;
%try;
disp(sprintf(' %% %s not found, creating',tmp_XB_fname_mat));
ampmut_align_to_a_k_Y_1( ...
 tmp_XB_.parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_ ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,[] ...
,tmp_XB_.euler_polar_a_Mi__ ...
,tmp_XB_.euler_azimu_b_Mi__ ...
,tmp_XB_.euler_gamma_z_Mi__ ...
,tmp_XB_.image_delta_x_acc_Mi__ + tmp_XB_.image_delta_x_upd_Mi__ ...
,tmp_XB_.image_delta_y_acc_Mi__ + tmp_XB_.image_delta_y_upd_Mi__ ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
);
%catch; disp(sprintf(' %% WARNING: error generating %s',tmp_XB_fname_mat)); end;%try;
close_fname_tmp(tmp_XB_fname_pre);
end;%if ~tmp_XB_flag_skip;
%%%%%%%%;
% Now use the final step to reconstruct the molecule. ;
%%%%%%%%;
tmp_XB_euler_polar_a_ = tmp_XB_.euler_polar_a_Mi__(:,end);
tmp_XB_euler_azimu_b_ = tmp_XB_.euler_azimu_b_Mi__(:,end);
tmp_XB_euler_gamma_z_ = tmp_XB_.euler_gamma_z_Mi__(:,end);
tmp_XB_image_delta_x_ = tmp_XB_.image_delta_x_acc_Mi__(:,end) + tmp_XB_.image_delta_x_upd_Mi__(:,end);
tmp_XB_image_delta_y_ = tmp_XB_.image_delta_y_acc_Mi__(:,end) + tmp_XB_.image_delta_y_upd_Mi__(:,end);
fname_XB_k_Y_mat = sprintf('%s_a_k_Y_.mat',tmp_XB_.parameter.fname_pre);
fname_XB_k_Y_mat = rootswitch(fname_XB_k_Y_mat,string_root,'rangan');
if (~exist(fname_XB_k_Y_mat,'file'));
if (verbose); disp(sprintf(' %% %s not found, creating',fname_XB_k_Y_mat)); end;
if flag_qbp_vs_lsq==0;
a_k_Y_reco_ = ...
cg_lsq_6( ...
 cg_lsq_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,tmp_XB_euler_polar_a_ ...
,tmp_XB_euler_azimu_b_ ...
,tmp_XB_euler_gamma_z_ ...
,tmp_XB_image_delta_x_ ...
,tmp_XB_image_delta_y_ ...
);
end;%if flag_qbp_vs_lsq==0;
if flag_qbp_vs_lsq==1;
a_k_Y_reco_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,tmp_XB_euler_polar_a_ ...
,tmp_XB_euler_azimu_b_ ...
,tmp_XB_euler_gamma_z_ ...
,tmp_XB_image_delta_x_ ...
,tmp_XB_image_delta_y_ ...
);
end;%if flag_qbp_vs_lsq==1;
save(fname_XB_k_Y_mat,'a_k_Y_reco_');
end;%if (~exist(fname_XB_k_Y_mat,'file'));
%tmp_ = load(fname_XB_k_Y_mat); tmp_XB_a_k_Y_reco_ = tmp_.a_k_Y_reco_; clear tmp_; %<-- not used. ;
%%%%%%%%;
end;%if ( exist(XB_fname_mat,'file'));
%%%%%%%%;

%%%%%%%%;
end;%if ( exist(fname_XA_k_Y_mat,'file'));
%%%%%%%%;
%%%%%%%%;
end;%if ( exist(XA_fname_mat,'file'));
%%%%%%%%;

%%%%%%%%;
if ( exist(XA_fname_mat,'file') & ~exist(XA_fname_snapshot_jpg) );
[XA_fname_snapshot_flag_skip,XA_fname_snapshot_jpg] = open_fname_tmp(XA_fname_snapshot_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp,'jpg');
if ~XA_fname_snapshot_flag_skip;
%%%%%%%%;
if (verbose) disp(sprintf(' %% %s not found, creating',XA_fname_snapshot_jpg)); end;
tmp_XA_ = load(XA_fname_mat);
flag_found = 1; tmp_XA_align_a_k_Y_ = []; tmp_XA_a_k_Y_ = [];
%%%%;
tmp_XA_fname_pre = sprintf('%s_align_a_k_Y_',tmp_XA_.parameter.fname_pre);
tmp_XA_fname_pre = rootswitch(tmp_XA_fname_pre,string_root,'rangan');
tmp_XA_.parameter.fname_align_a_k_Y_pre = tmp_XA_fname_pre;
tmp_XA_fname_mat = sprintf('%s.mat',tmp_XA_fname_pre);
if (~exist(tmp_XA_fname_mat,'file'));
disp(sprintf(' %% Warning, %s not found in ampmut_wrap_wrap_5',tmp_XA_fname_mat));
flag_found = 0;
end;%if (~exist(tmp_XA_fname_mat,'file'));
if ( exist(tmp_XA_fname_mat,'file'));
tmp_XA_align_a_k_Y_ = load(tmp_XA_fname_mat);
end;%if ( exist(tmp_XA_fname_mat,'file'));
%%%%;
tmp_XA_fname_pre = sprintf('%s_a_k_Y_',tmp_XA_.parameter.fname_pre);
tmp_XA_fname_pre = rootswitch(tmp_XA_fname_pre,string_root,'rangan');
tmp_XA_.parameter.fname_a_k_Y_pre = tmp_XA_fname_pre;
tmp_XA_fname_mat = sprintf('%s.mat',tmp_XA_fname_pre);
if (~exist(tmp_XA_fname_mat,'file'));
disp(sprintf(' %% Warning, %s not found in ampmut_wrap_wrap_5',tmp_XA_fname_mat));
flag_found = 0;
end;%if (~exist(tmp_XA_fname_mat,'file'));
if ( exist(tmp_XA_fname_mat,'file'));
tmp_XA_a_k_Y_ = load(tmp_XA_fname_mat);
end;%if ( exist(tmp_XA_fname_mat,'file'));
%%%%;
if ( flag_found & ~isempty(tmp_XA_align_a_k_Y_) & ~isempty(tmp_XA_a_k_Y_) );
%%%%;
tmp_X_best = tmp_XA_align_a_k_Y_.X_best_(end);
tmp_flag_flip = tmp_XA_align_a_k_Y_.X_best_flag_flip_(end);
tmp_polar_a_best = tmp_XA_align_a_k_Y_.polar_a_best_(end);
tmp_azimu_b_best = tmp_XA_align_a_k_Y_.azimu_b_best_(end);
tmp_gamma_z_best = tmp_XA_align_a_k_Y_.gamma_z_best_(end);
tmp_delta_x_best = tmp_XA_align_a_k_Y_.delta_best__(1+0,end);
tmp_delta_y_best = tmp_XA_align_a_k_Y_.delta_best__(1+1,end);
tmp_a_k_Y_reco_ = tmp_XA_a_k_Y_.a_k_Y_reco_;
%%%%;
[ ... 
 tmp_b_k_Y_reco_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,tmp_a_k_Y_reco_ ...
,0 ...
,tmp_X_best ...
,tmp_flag_flip ...
,tmp_polar_a_best ...
,tmp_azimu_b_best ...
,tmp_gamma_z_best ...
,tmp_delta_x_best ...
,tmp_delta_y_best ...
);
%%%%;
[ ... 
  tmp_b_x_u_reco_ ...
] = ...
convert_spharm_to_x_c_3( ...
 sample_sphere_k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_b_k_Y_reco_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
%%%%;
figure(5);clf;figbig;
subplot(1,2,1);
isosurface_f_x_u_0(reshape(real(tmp_b_x_u_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[90,95,99]);
title(sprintf('tmp_b_x_u_: corr %0.4f',tmp_X_best),'Interpreter','none');
subplot(1,2,2);
isosurface_f_x_u_0(reshape(real(tmp_b_x_u_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[98.5]);
title(sprintf('tmp_b_x_u_: corr %0.4f',tmp_X_best),'Interpreter','none');
sgtitle(XA_fname_snapshot_jpg,'Interpreter','none');
disp(sprintf(' %% writing %s',XA_fname_snapshot_jpg));
print('-djpeg',XA_fname_snapshot_jpg);
close(gcf);
%%%%%%%%;
end;%if ( flag_found & ~isempty(tmp_XA_align_a_k_Y_) & ~isempty(tmp_XA_a_k_Y_) );
%%%%%%%%;
close_fname_tmp(XA_fname_snapshot_pre);
end;%if ~XA_fname_snapshot_flag_skip;
end;%if ( exist(XA_fname_mat,'file') & ~exist(XA_fname_snapshot_jpg) );
%%%%%%%%;

%%%%%%%%;
if ( exist(XB_fname_mat,'file') & ~exist(XB_fname_snapshot_jpg) );
[XB_fname_snapshot_flag_skip,XB_fname_snapshot_jpg] = open_fname_tmp(XB_fname_snapshot_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp,'jpg');
if ~XB_fname_snapshot_flag_skip;
%%%%%%%%;
if (verbose) disp(sprintf(' %% %s not found, creating',XB_fname_snapshot_jpg)); end;
tmp_XB_ = load(XB_fname_mat);
flag_found = 1; tmp_XB_align_a_k_Y_ = []; tmp_XB_a_k_Y_ = [];
%%%%;
tmp_XB_fname_pre = sprintf('%s_align_a_k_Y_',tmp_XB_.parameter.fname_pre);
tmp_XB_fname_pre = rootswitch(tmp_XB_fname_pre,string_root,'rangan');
tmp_XB_.parameter.fname_align_a_k_Y_pre = tmp_XB_fname_pre;
tmp_XB_fname_mat = sprintf('%s.mat',tmp_XB_fname_pre);
if (~exist(tmp_XB_fname_mat,'file'));
disp(sprintf(' %% Warning, %s not found in ampmut_wrap_wrap_5',tmp_XB_fname_mat));
flag_found = 0;
end;%if (~exist(tmp_XB_fname_mat,'file'));
if ( exist(tmp_XB_fname_mat,'file'));
tmp_XB_align_a_k_Y_ = load(tmp_XB_fname_mat);
end;%if ( exist(tmp_XB_fname_mat,'file'));
%%%%;
tmp_XB_fname_pre = sprintf('%s_a_k_Y_',tmp_XB_.parameter.fname_pre);
tmp_XB_fname_pre = rootswitch(tmp_XB_fname_pre,string_root,'rangan');
tmp_XB_.parameter.fname_a_k_Y_pre = tmp_XB_fname_pre;
tmp_XB_fname_mat = sprintf('%s.mat',tmp_XB_fname_pre);
if (~exist(tmp_XB_fname_mat,'file'));
disp(sprintf(' %% Warning, %s not found in ampmut_wrap_wrap_5',tmp_XB_fname_mat));
flag_found = 0;
end;%if (~exist(tmp_XB_fname_mat,'file'));
if ( exist(tmp_XB_fname_mat,'file'));
tmp_XB_a_k_Y_ = load(tmp_XB_fname_mat);
end;%if ( exist(tmp_XB_fname_mat,'file'));
%%%%;
if ( flag_found & ~isempty(tmp_XB_align_a_k_Y_) & ~isempty(tmp_XB_a_k_Y_) );
%%%%;
tmp_X_best = tmp_XB_align_a_k_Y_.X_best_(end);
tmp_flag_flip = tmp_XB_align_a_k_Y_.X_best_flag_flip_(end);
tmp_polar_a_best = tmp_XB_align_a_k_Y_.polar_a_best_(end);
tmp_azimu_b_best = tmp_XB_align_a_k_Y_.azimu_b_best_(end);
tmp_gamma_z_best = tmp_XB_align_a_k_Y_.gamma_z_best_(end);
tmp_delta_x_best = tmp_XB_align_a_k_Y_.delta_best__(1+0,end);
tmp_delta_y_best = tmp_XB_align_a_k_Y_.delta_best__(1+1,end);
tmp_a_k_Y_reco_ = tmp_XB_a_k_Y_.a_k_Y_reco_;
%%%%;
[ ... 
 tmp_b_k_Y_reco_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,tmp_a_k_Y_reco_ ...
,0 ...
,tmp_X_best ...
,tmp_flag_flip ...
,tmp_polar_a_best ...
,tmp_azimu_b_best ...
,tmp_gamma_z_best ...
,tmp_delta_x_best ...
,tmp_delta_y_best ...
);
%%%%;
[ ... 
  tmp_b_x_u_reco_ ...
] = ...
convert_spharm_to_x_c_3( ...
 sample_sphere_k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_b_k_Y_reco_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
%%%%;
figure(5);clf;figbig;
subplot(1,2,1);
isosurface_f_x_u_0(reshape(real(tmp_b_x_u_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[90,95,99]);
title(sprintf('tmp_b_x_u_: corr %0.4f',tmp_X_best),'Interpreter','none');
subplot(1,2,2);
isosurface_f_x_u_0(reshape(real(tmp_b_x_u_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[98.5]);
title(sprintf('tmp_b_x_u_: corr %0.4f',tmp_X_best),'Interpreter','none');
sgtitle(XB_fname_snapshot_jpg,'Interpreter','none');
disp(sprintf(' %% writing %s',XB_fname_snapshot_jpg));
print('-djpeg',XB_fname_snapshot_jpg);
close(gcf);
%%%%%%%%;
end;%if ( flag_found & ~isempty(tmp_XB_align_a_k_Y_) & ~isempty(tmp_XB_a_k_Y_) );
%%%%%%%%;
close_fname_tmp(XB_fname_snapshot_pre);
end;%if ~XB_fname_snapshot_flag_skip;
end;%if ( exist(XB_fname_mat,'file') & ~exist(XB_fname_snapshot_jpg) );
%%%%%%%%;

%%%%%%%%;
if ( exist(XA_fname_mat,'file') & ~exist(XA_fname_compare_image_rank_jpg) );
[XA_fname_compare_image_rank_flag_skip,XA_fname_compare_image_rank_jpg] = open_fname_tmp(XA_fname_compare_image_rank_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp,'jpg');
if ~XA_fname_compare_image_rank_flag_skip;
%%%%%%%%;
if (verbose) disp(sprintf(' %% %s not found, creating',XA_fname_compare_image_rank_jpg)); end;
tmp_XA_parameter = parameter;
[ ...
 tmp_XA_parameter ...
] = ...
ampmut_compare_image_rank_1( ...
 tmp_XA_parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,n_CTF ...
,1 ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
,[] ...
,XA_fname_mat ...
,XA_fname_compare_image_rank_pre ...
);
%%%%%%%%;
close_fname_tmp(XA_fname_compare_image_rank_pre);
end;%if ~XA_fname_compare_image_rank_flag_skip;
end;%if ( exist(XA_fname_mat,'file') & ~exist(XA_fname_compare_image_rank_jpg) );
%%%%%%%%;

%%%%%%%%;
if ( exist(XB_fname_mat,'file') & ~exist(XB_fname_compare_image_rank_jpg) );
[XB_fname_compare_image_rank_flag_skip,XB_fname_compare_image_rank_jpg] = open_fname_tmp(XB_fname_compare_image_rank_pre,date_diff_threshold,flag_force_create_mat,flag_force_create_tmp,'jpg');
if ~XB_fname_compare_image_rank_flag_skip;
%%%%%%%%;
if (verbose) disp(sprintf(' %% %s not found, creating',XB_fname_compare_image_rank_jpg)); end;
tmp_XB_parameter = parameter;
[ ...
 tmp_XB_parameter ...
] = ...
ampmut_compare_image_rank_1( ...
 tmp_XB_parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_ ...
,n_M ...
,M_k_p_wkM__ ...
,n_CTF ...
,1 ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_true_yk_ ...
,euler_polar_a_true_ ...
,euler_azimu_b_true_ ...
,euler_gamma_z_true_ ...
,image_delta_x_true_ ...
,image_delta_y_true_ ...
,[] ...
,XB_fname_mat ...
,XB_fname_compare_image_rank_pre ...
);
%%%%%%%%;
close_fname_tmp(XB_fname_compare_image_rank_pre);
end;%if ~XB_fname_compare_image_rank_flag_skip;
end;%if ( exist(XB_fname_mat,'file') & ~exist(XB_fname_compare_image_rank_jpg) );
%%%%%%%%;

if (verbose); disp(sprintf(' %% [finished ampmut_wrap_wrap_5]')); end;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if ~flag_skip_all;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
