function ...
[ ...
 parameter ...
,fsc_ampm_k_ ...
,corr_base_vs_ampm ...
,corr_reco_vs_ampm ...
,fsc_crop_ampm_kx__ ...
,corr_crop_base_vs_crop_ampm_x_ ...
,corr_full_base_vs_crop_ampm_x_ ...
,corr_crop_reco_vs_crop_ampm_x_ ...
,corr_full_reco_vs_crop_ampm_x_ ...
,k_Ainv_p_r_ ...
,k_Ainv_p_r_max ...
,kinv_A_p_r_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
crop_from_x_c_1( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_ampm_ ...
,a_k_Y_ampm_alig_ ...
,half_diameter_x_c ...
,n_x_M_u ...
,n_x_u_pack ...
,a_x_u_base_ ...
,a_x_u_reco_ ...
,a_x_u_ampm_alig_ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
%%%%;

str_thisfunction = 'crop_from_x_c_1';

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_k_p_r=[]; end; na=na+1;
if (nargin<1+na); k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); l_max_=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_quad_=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_ampm_=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_ampm_alig_=[]; end; na=na+1;
if (nargin<1+na); half_diameter_x_c=[]; end; na=na+1;
if (nargin<1+na); n_x_M_u=[]; end; na=na+1;
if (nargin<1+na); n_x_u_pack=[]; end; na=na+1;
if (nargin<1+na); a_x_u_base_=[]; end; na=na+1;
if (nargin<1+na); a_x_u_reco_=[]; end; na=na+1;
if (nargin<1+na); a_x_u_ampm_alig_=[]; end; na=na+1;
if (nargin<1+na); n_k_all=[]; end; na=na+1;
if (nargin<1+na); n_k_all_csum_=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_all_=[]; end; na=na+1;
if (nargin<1+na); k_c_0_all_=[]; end; na=na+1;
if (nargin<1+na); k_c_1_all_=[]; end; na=na+1;
if (nargin<1+na); k_c_2_all_=[]; end; na=na+1;
if (nargin<1+na); Ylm_uklma___=[]; end; na=na+1;

if isempty(parameter); parameter=struct('type','parameter'); end;
if ~isfield(parameter,'flag_recalc'); parameter.flag_recalc=0; end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose=0; end;
if ~isfield(parameter,'Pixel_Spacing'); parameter.Pixel_Spacing=1; end;
flag_recalc = parameter.flag_recalc;
flag_verbose = parameter.flag_verbose;
Pixel_Spacing = parameter.Pixel_Spacing;

if (flag_verbose); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

flag_Ylm_create = 0; 
if isempty(Ylm_uklma___);
if (flag_verbose); disp(sprintf(' %% calling get_Ylm_condense_wrap_0: ')); end;
tmp_t = tic();
flag_Ylm_create=1;
[ ...
 Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
get_Ylm_condense_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% get_Ylm_condense_wrap_0: %0.6fs',tmp_t)); end;
end;%if isempty(Ylm_uklma___);

if (flag_verbose); disp(sprintf(' %% setting grids. ')); end;
x_p_r_max = half_diameter_x_c;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
[x_u_0___,x_u_1___,x_u_2___] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_xxx_u = n_x_u_pack^3;
x_u_r___ = sqrt(x_u_0___.^2 + x_u_1___.^2 + x_u_2___.^2);
k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
sample_sphere_k_eq_d = 1/(2*pi);
%%%%%%%%;
if isempty(a_x_u_ampm_alig_);
if (flag_verbose); disp(sprintf(' %% a_x_u_ampm_alig_ is empty')); end;
if isempty(a_k_Y_ampm_alig_);
if (flag_verbose); disp(sprintf(' %% a_k_Y_ampm_alig_ is empty')); end;
if (flag_verbose); disp(sprintf(' %% calling spharm_register_and_rotate_2: ')); end;
tmp_t = tic();
[ ... 
 a_k_Y_ampm_alig_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_ampm_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% spharm_register_and_rotate_2: %0.6fs',tmp_t)); end;
end;%if isempty(a_k_Y_ampm_alig_);
%%%%;
if (flag_verbose); disp(sprintf(' %% calling convert_spharm_to_x_c_4: ')); end;
tmp_t = tic();
[ ... 
  a_x_u_ampm_alig_ ...
] = ...
convert_spharm_to_x_c_4( ...
 sample_sphere_k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ampm_alig_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% convert_spharm_to_x_c_4: %0.6fs',tmp_t)); end;
end;%if isempty(a_x_u_ampm_alig_);
%%%%%%%%;
if (flag_verbose); disp(sprintf(' %% calculating corr_full_reco_vs_crop_ampm_x_: ')); end;
n_crop = n_x_u_pack;
corr_base_vs_ampm = real(corr( a_x_u_base_(:) , a_x_u_ampm_alig_(:) ));
corr_reco_vs_ampm = real(corr( a_x_u_reco_(:) , a_x_u_ampm_alig_(:) ));
corr_full_base_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_crop_base_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_full_reco_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_crop_reco_vs_crop_ampm_x_ = zeros(n_crop,1);
for ncrop=0:n_crop-1;
r_crop = 1.0*ncrop/(n_crop-1);
tmp_m_x_u_ = reshape(x_u_r___<=r_crop,[n_xxx_u,1]);
corr_crop_base_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_base_(:).*tmp_m_x_u_ , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_full_base_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_base_(:)             , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_crop_reco_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_reco_(:).*tmp_m_x_u_ , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_full_reco_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_reco_(:)             , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
end;%for ncrop=0:n_crop-1;
%%%%%%%%;
if (flag_verbose); disp(sprintf(' %% calculating fsc_crop_ampm_kx__: ')); end;
fsc_crop_ampm_k_ = zeros(n_k_p_r,1);
fsc_crop_ampm_kx__ = zeros(n_k_p_r,n_x_u_pack);
%%%%%%%%;
parameter_fsc = struct('type','parameter');
if (flag_verbose); disp(sprintf(' %% numel(a_k_Y_ampm_alig_) %d',numel(a_k_Y_ampm_alig_))); end;
parameter_fsc.flag_register = 0;
[ ...
 parameter_fsc ...
,fsc_ampm_k_ ...
] = ...
fsc_from_a_k_Y_0( ...
 parameter_fsc ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_ampm_alig_ ...
);
%%%%;
tmp_t = tic();
for ncrop=0:n_crop-1;
if (flag_verbose>0); disp(sprintf(' %% ncrop %d/%d',ncrop,n_crop)); end;
r_crop = 1.0*ncrop/(n_crop-1);
tmp_m_x_u_ = reshape(x_u_r___<=r_crop,[n_xxx_u,1]);
[ ...
 c_k_p_base_ ...
] = ...
convert_x_c_to_k_p_1( ...
 flag_verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,[] ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,half_diameter_x_c ...
,a_x_u_base_(:).*tmp_m_x_u_ ...
);
[ ...
 d_k_p_ampm_ ...
] = ...
convert_x_c_to_k_p_1( ...
 flag_verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,[] ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,half_diameter_x_c ...
,a_x_u_ampm_alig_(:).*tmp_m_x_u_ ...
);
parameter_fsc = struct('type','parameter');
[ ...
 parameter_fsc ...
,fsc_crop_ampm_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 parameter_fsc ...
,n_k_all ...
,n_k_p_r ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,c_k_p_base_ ...
,d_k_p_ampm_ ...
);
fsc_crop_ampm_kx__(:,1+ncrop) = fsc_crop_ampm_k_;
end;%for ncrop=0:n_crop-1;
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% calculating fsc_crop_ampm_kx__: %0.6fs',tmp_t)); end;


if (flag_verbose); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;


		   
