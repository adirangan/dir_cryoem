%%%%%%%%;
% testing dir_Kexin_mip_vs_CoC: ;
%{
%%%%;
147_Mar12_12.21.27_159_0_coc_3_2.mrc
147_Mar12_12.21.27_159_0_mip_3_2.mrc
147_Mar12_12.21.27_159_0_phi_3_2.mrc
147_Mar12_12.21.27_159_0_psi_3_2.mrc
147_Mar12_12.21.27_159_0_scaled_mip_3_2.mrc
147_Mar12_12.21.27_159_0_theta_3_2.mrc
coordinates_147_9_4_thres_7.85_with_defocus_search.txt
yeast_ribo_search_3_2_radius_10px.csv
yeast_ribo_search_3_2_radius_50px.csv
%%%%;
 %}
%%%%%%%%;

%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

flag_verbose=1; flag_disp=1; nf=0;
flag_replot = 1;

dir_base = sprintf('/%s/rangan/dir_cryoem',string_root);
dir_Kexin = sprintf('%s/dir_Kexin_mip_vs_CoC',dir_base);
dir_Kexin_147 = sprintf('%s/dir_Kexin_147_mip_vs_CoC',dir_Kexin);
if ~exist(dir_Kexin_147,'dir'); disp(sprintf(' %% mkdir %s',dir_Kexin_147)); mkdir(dir_Kexin_147); end;
dir_jpg = sprintf('%s/dir_jpg',dir_Kexin_147);
if ~exist(dir_jpg,'dir'); disp(sprintf(' %% mkdir %s',dir_jpg)); mkdir(dir_jpg); end;

%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_mip_3_2_mrc = sprintf('%s/%s_mip_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_mip_3_2_ = ReadMRC_0(fname_mip_3_2_mrc);
%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_CoC_3_2_mrc = sprintf('%s/%s_coc_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_CoC_3_2_ = ReadMRC_0(fname_CoC_3_2_mrc);
%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_phi_3_2_mrc = sprintf('%s/%s_phi_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_phi_3_2_ = ReadMRC_0(fname_phi_3_2_mrc);
%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_psi_3_2_mrc = sprintf('%s/%s_psi_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_psi_3_2_ = ReadMRC_0(fname_psi_3_2_mrc);
%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_the_3_2_mrc = sprintf('%s/%s_theta_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_the_3_2_ = ReadMRC_0(fname_the_3_2_mrc);
%%%%;
fname_prefix = '147_Mar12_12.21.27_159_0';
fname_smi_3_2_mrc = sprintf('%s/%s_scaled_mip_3_2.mrc',dir_Kexin,fname_prefix);
Micrograph_smi_3_2_ = ReadMRC_0(fname_smi_3_2_mrc);
%%%%;

infix_mip_3_2 = 'yeast_mip';
infix_CoC_3_2 = 'yeast_CoC';
infix_phi_3_2 = 'yeast_phi';
infix_the_3_2 = 'yeast_the';
infix_psi_3_2 = 'yeast_psi';
infix_smi_3_2 = 'yeast_smi';

flag_disp=0;
%%%%%%%%;
if flag_disp;
%%%%%%%%;
% display the mrc files. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figbig;fig81s;
fontsize_use = 12;
p_row = 2; p_col = 3; np=0;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_mip_3_2_));axis image; axisnotick; title(infix_mip_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_CoC_3_2_));axis image; axisnotick; title(infix_CoC_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_phi_3_2_));axis image; axisnotick; title(infix_phi_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_the_3_2_));axis image; axisnotick; title(infix_the_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_psi_3_2_));axis image; axisnotick; title(infix_psi_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc(rot90(Micrograph_smi_3_2_));axis image; axisnotick; title(infix_smi_3_2,'Interpreter','none'); set(gca,'FontSize',fontsize_use);
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_display_FIGA',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% rename scaled_mip (smi) to mip: ;
%%%%%%%%;
Micrograph_mip_unscaled_3_2_ = Micrograph_mip_3_2_;
Micrograph_mip_3_2_ = Micrograph_smi_3_2_;

%%%%%%%%;
% readtable. ;
%%%%%%%%;
Table_3_2_10_rc__ = readtable(sprintf('%s/yeast_ribo_search_3_2_radius_10px.csv',dir_Kexin));
Array_3_2_10_rc__ = table2array(Table_3_2_10_rc__);
Table_3_2_10_VariableNames_c_ = Table_3_2_10_rc__.Properties.VariableNames;
% try: sprintf('%s\n',Table_3_2_10_VariableNames_c_{:}) ;
nc=0;
nc_10_Var1 = nc; nc=nc+1; %<-- ?? ;
nc_10_Psi = nc; nc=nc+1; %<-- euler angles best matched ;
nc_10_Theta = nc; nc=nc+1; %<-- euler angles best matched ;
nc_10_Phi = nc; nc=nc+1; %<-- euler angles best matched ;
nc_10_X = nc; nc=nc+1; %<-- coordinates ;
nc_10_Y = nc; nc=nc+1; %<-- coordinates ;
nc_10_Z = nc; nc=nc+1; %<-- defocus ;
nc_10_PixelSize = nc; nc=nc+1;
nc_10_Peak = nc; nc=nc+1; %<-- Peak: z-score ;
nc_10_ScalingFactor = nc; nc=nc+1; %<-- ScalingFactor: the ratio between z-score/CC_max ;
nc_10_CoC = nc; nc=nc+1; %<-- coc: correlation of correlations ;
nc_10_mip = nc; nc=nc+1; %<-- mip: the maximum CC ;
n_c_10 = nc;
%%%%%%%%;
Table_3_2_50_rc__ = readtable(sprintf('%s/yeast_ribo_search_3_2_radius_50px.csv',dir_Kexin));
Array_3_2_50_rc__ = table2array(Table_3_2_50_rc__);
Table_3_2_50_VariableNames_c_ = Table_3_2_50_rc__.Properties.VariableNames;
% try: sprintf('%s\n',Table_3_2_50_VariableNames_c_{:}) ;
nc=0;
nc_50_Var1 = nc; nc=nc+1; %<-- ?? ;
nc_50_Psi = nc; nc=nc+1; %<-- euler angles best matched ;
nc_50_Theta = nc; nc=nc+1; %<-- euler angles best matched ;
nc_50_Phi = nc; nc=nc+1; %<-- euler angles best matched ;
nc_50_X = nc; nc=nc+1; %<-- coordinates ;
nc_50_Y = nc; nc=nc+1; %<-- coordinates ;
nc_50_Z = nc; nc=nc+1; %<-- defocus ;
nc_50_PixelSize = nc; nc=nc+1;
nc_50_Peak = nc; nc=nc+1; %<-- Peak: z-score ;
nc_50_ScalingFactor = nc; nc=nc+1; %<-- ScalingFactor: the ratio between z-score/CC_max ;
nc_50_CoC = nc; nc=nc+1; %<-- coc: correlation of correlations ;
nc_50_mip = nc; nc=nc+1; %<-- mip: the maximum CC ;
n_c_50 = nc;
%%%%%%%%;

%%%%%%%%;
n_50_r = size(Array_3_2_50_rc__,1);
Var_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Var1);
mip_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Peak);
CoC_50_r_ = Array_3_2_50_rc__(:,1+nc_50_CoC);
nx_50_r_ = Array_3_2_50_rc__(:,1+nc_50_X);
ny_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Y);
n_10_r = size(Array_3_2_10_rc__,1);
Var_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Var1);
mip_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Peak);
lab_50_r_ = (mip_50_r_>=7.47); %<-- arbitrary threshold. ;
CoC_10_r_ = Array_3_2_10_rc__(:,1+nc_10_CoC);
nx_10_r_ = Array_3_2_10_rc__(:,1+nc_10_X);
ny_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Y);
tmp_index_1_ = efind(lab_50_r_==1);
[tmp_ij_] = knnsearch([mip_10_r_,CoC_10_r_],[mip_50_r_(1+tmp_index_1_),CoC_50_r_(1+tmp_index_1_)]);
lab_10_r_ = zeros(n_10_r,1); lab_10_r_(tmp_ij_) = 1; clear tmp_ij_;
%%%%;
psi_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Psi)*pi/180;
the_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Theta)*pi/180;
phi_10_r_ = Array_3_2_10_rc__(:,1+nc_10_Phi)*pi/180;
%%%%;
psi_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Psi)*pi/180;
the_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Theta)*pi/180;
phi_50_r_ = Array_3_2_50_rc__(:,1+nc_50_Phi)*pi/180;
%%%%%%%%;

%%%%%%%%;
% check for errors. ;
%%%%%%%%;
tmp_mip_error = 0;
tmp_CoC_error = 0;
tmp_index_1_ = efind(lab_50_r_==1);
for nl=0:numel(tmp_index_1_)-1;
tmp_index_1 = tmp_index_1_(1+nl);
tmp_nx = Array_3_2_50_rc__(1+tmp_index_1,1+nc_50_X);
tmp_ny = Array_3_2_50_rc__(1+tmp_index_1,1+nc_50_Y);
tmp_mip_error = tmp_mip_error + abs(mip_50_r_(1+tmp_index_1) - Micrograph_mip_3_2_(1+tmp_nx,1+tmp_ny));
tmp_CoC_error = tmp_CoC_error + abs(CoC_50_r_(1+tmp_index_1) - Micrograph_CoC_3_2_(1+tmp_nx,1+tmp_ny));
end;%for nl=0:numel(tmp_index_1_)-1;
disp(sprintf(' %% tmp_mip_error: %0.16f',tmp_mip_error));
disp(sprintf(' %% tmp_CoC_error: %0.16f',tmp_CoC_error));

flag_disp=0;
%%%%%%%%;
if flag_disp;
%%%%%%%%;
% Align the detected points to the mip mrc. ;
% Note that the coordinates are transposed and zero-based. ;
%%%%%%%%;
figure(1);clf;figbig;fig81s;fontsize_use = 12;
markersize_big = 12;
markersize_med = 8;
markersize_sml = 4;
linewidth_med = 1;
linewidth_sml = 0.5;
subplot(1,2,1);
hold on;
imagesc(Micrograph_mip_3_2_);
plot(1+Array_3_2_50_rc__(:,1+nc_50_Y),1+Array_3_2_50_rc__(:,1+nc_50_X),'go','MarkerSize',markersize_sml,'LineWidth',linewidth_med);
%plot(1+Array_3_2_10_rc__(:,1+nc_10_Y),1+Array_3_2_10_rc__(:,1+nc_10_X),'go','MarkerSize',markersize_sml,'LineWidth',linewidth_sml);
hold off;
axis image; axisnotick; title(sprintf('%s (full): 50: only',infix_mip_3_2),'Interpreter','none'); set(gca,'FontSize',fontsize_use);
subplot(1,2,2);
hold on;
imagesc(Micrograph_mip_3_2_);
plot(1+Array_3_2_50_rc__(:,1+nc_50_Y),1+Array_3_2_50_rc__(:,1+nc_50_X),'go');
plot(1+Array_3_2_50_rc__(:,1+nc_50_Y),1+Array_3_2_50_rc__(:,1+nc_50_X),'go','MarkerSize',markersize_med,'LineWidth',linewidth_med);
plot(1+Array_3_2_10_rc__(:,1+nc_10_Y),1+Array_3_2_10_rc__(:,1+nc_10_X),'go','MarkerSize',markersize_sml,'LineWidth',linewidth_sml);
hold off;
axis(1024*2+[0,512-1,0,512-1]); axis square;
axisnotick; title(sprintf('%s (512x512): 50 big+sml; 10 sml only',infix_mip_3_2),'Interpreter','none'); set(gca,'FontSize',fontsize_use);
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_3_2_50_display_FIGB',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

flag_disp=0;
%%%%%%%%;
if flag_disp;
%%%%%%%%;
% Show the z-score vs CoC scatterplot, colored by label. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figbig;
fontsize_use = 12;
hold on;
plot(mip_10_r_,CoC_10_r_,'x','Color',0.75*[1,1,1]);
tmp_index_0_ = efind(lab_50_r_==0);
plot(mip_50_r_(1+tmp_index_0_),CoC_50_r_(1+tmp_index_0_),'o','Color',0.35*[1,1,1]);
tmp_index_1_ = efind(lab_50_r_==1);
plot(mip_50_r_(1+tmp_index_1_),CoC_50_r_(1+tmp_index_1_),'o','Color',1.00*[1,0,1]);
hold off;
legend({'50 xx','10 fp','10 tp'},'Location','SouthEast');
xlabel('z-score (mip)'); ylabel('CoC');
title('3_2_10 + 3_2_50','Interpreter','none');
set(gca,'FontSize',fontsize_use);
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_FIGC',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

flag_disp=0;
if flag_disp;
%%%%%%%%;
% plot Peak vs CoC as well as net. ;
%%%%%%%%;
[n_x,n_y] = size(Micrograph_mip_3_2_);
tmp_r = 1; %<-- radius of square net. ;
cut_mip = 6.500;
cut_CoC = 0.006;
figure(1+nf);nf=nf+1;clf;figbig;
fontsize_use = 12;
linewidth_sml = 1.5; alpha_use = 0.5;
c_fp_ = 0.65*[1,1,1]; c_fp2_ = 0.35*[1,1,1];
c_tp_ = [1,0.85,1]; c_tp2_ = [1,0,1];
hold on;
%%%%%%%%;
tmp_index_0_ = efind(lab_50_r_==0);
%plot(mip_50_r_(1+tmp_index_0_),CoC_50_r_(1+tmp_index_0_),'ko');
for nl=0:numel(tmp_index_0_)-1;
tmp_index_0 = tmp_index_0_(1+nl);
tmp_mip = mip_50_r_(1+tmp_index_0);
tmp_CoC = Array_3_2_50_rc__(1+tmp_index_0,1+nc_50_CoC);
%%%%;
if (tmp_mip> cut_mip) & (tmp_CoC> cut_CoC);
tmp_nx = Array_3_2_50_rc__(1+tmp_index_0,1+nc_50_X);
tmp_ny = Array_3_2_50_rc__(1+tmp_index_0,1+nc_50_Y);
tmp_nx_ = max(0,min(n_x-1,tmp_nx + [-tmp_r:+tmp_r]));
tmp_ny_ = max(0,min(n_y-1,tmp_ny + [-tmp_r:+tmp_r]));
[tmp_nx__,tmp_ny__] = ndgrid(tmp_nx_,tmp_ny_);
tmp_index_ = tmp_nx__(:) + tmp_ny__(:)*n_x;
tmp_mip__ = reshape(Micrograph_mip_3_2_(tmp_index_),[1+2*tmp_r,1+2*tmp_r]);
tmp_CoC__ = reshape(Micrograph_CoC_3_2_(tmp_index_),[1+2*tmp_r,1+2*tmp_r]);
l=line(          tmp_mip__ ,          tmp_CoC__ ,'Color',[c_fp_,alpha_use],'LineWidth',linewidth_sml);
l=line(transpose(tmp_mip__),transpose(tmp_CoC__),'Color',[c_fp_,alpha_use],'LineWidth',linewidth_sml);
plot(tmp_mip,tmp_CoC,'o','Color',[c_fp_],'MarkerFaceColor',c_fp2_);
end;%if (tmp_mip> cut_mip) & (tmp_CoC> cut_CoC);
%%%%;
end;%for nl=0:numel(tmp_index_0_)-1;
%%%%%%%%;
tmp_index_1_ = efind(lab_50_r_==1);
%plot(mip_50_r_(1+tmp_index_1_),CoC_50_r_(1+tmp_index_1_),'mo');
for nl=0:numel(tmp_index_1_)-1;
tmp_index_1 = tmp_index_1_(1+nl);
tmp_mip = mip_50_r_(1+tmp_index_1);
tmp_CoC = CoC_50_r_(1+tmp_index_1);
%%%%;
if (tmp_mip> 6.0) & (tmp_CoC> 0.01);
tmp_nx = Array_3_2_50_rc__(1+tmp_index_1,1+nc_50_X);
tmp_ny = Array_3_2_50_rc__(1+tmp_index_1,1+nc_50_Y);
tmp_nx_ = max(0,min(n_x-1,tmp_nx + [-tmp_r:+tmp_r]));
tmp_ny_ = max(0,min(n_y-1,tmp_ny + [-tmp_r:+tmp_r]));
[tmp_nx__,tmp_ny__] = ndgrid(tmp_nx_,tmp_ny_);
tmp_index_ = tmp_nx__(:) + tmp_ny__(:)*n_x;
tmp_mip__ = reshape(Micrograph_mip_3_2_(tmp_index_),[1+2*tmp_r,1+2*tmp_r]);
tmp_CoC__ = reshape(Micrograph_CoC_3_2_(tmp_index_),[1+2*tmp_r,1+2*tmp_r]);
l=line(          tmp_mip__ ,          tmp_CoC__ ,'Color',[c_tp_,alpha_use],'LineWidth',linewidth_sml);
l=line(transpose(tmp_mip__),transpose(tmp_CoC__),'Color',[c_tp_,alpha_use],'LineWidth',linewidth_sml);
plot(tmp_mip,tmp_CoC,'o','Color',[c_tp_],'MarkerFaceColor',c_tp2_);
end;%if (tmp_mip> 6.0) & (tmp_CoC> 0.01);
%%%%;
end;%for nl=0:numel(tmp_index_1_)-1;
%%%%%%%%;
hold off;
%%%%%%%%;
xlabel('z-score (mip)'); ylabel('CoC');
title('3_2_50 + 3x3 net','Interpreter','none');
set(gca,'FontSize',fontsize_use);
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_FIGD',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
end;%if flag_disp;

%%%%%%%%;
% quick test of erf. ;
% Note: CDF of gaussian = 0.5 + 0.5*erf(x/sqrt(2));
% also: CDFinv(z) = sqrt(2)*erfinv(2*z-1);
%%%%%%%%;
flag_disp=0;
if flag_disp;
tmp_x_ = linspace(-3,+3,1024);
tmp_e_ = 0.5*(1+erf(tmp_x_/sqrt(2)));
tmp_g_ = 1/sqrt(2*pi) * exp(-tmp_x_.^2/2);
tmp_de_ = (tmp_e_(2:end)-tmp_e_(1:end-1))/max(1e-12,mean(diff(tmp_x_)));
tmp_x2_ = 0.5*tmp_x_(2:end) + 0.5*tmp_x_(1:end-1);
tmp_y3_ = linspace(0,1,1024);
tmp_x3_ = erfinv(2*tmp_y3_-1)*sqrt(2);
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,2,1); plot(tmp_x2_,tmp_de_,'rx',tmp_x_,tmp_g_,'go'); legend({'derf/dx','g(x)'});
subplot(1,2,2); plot(tmp_x_,tmp_e_,'rx',tmp_x3_,tmp_y3_,'go'); legend({'erf(x)','erfinv'});
end;%if flag_disp;

%%%%%%%%;
% set limits for plotting. ;
%%%%%%%%;
mip_lim_ = [5,14]; CoC_lim_ = 1e-3*[-2,+16]; 
pro_lim_ = 4.5*[-1,+1];

flag_disp=1;
if flag_disp;
%%%%%%%%;
% Now apply probit to both the Peak and the CoC. ;
% For now we apply probit globally (to bulk and outliers). ;
%%%%%%%%;
[~,rank_mip_50_r_] = sort(mip_50_r_,'ascend'); [~,rank_mip_50_r_] = sort(rank_mip_50_r_,'ascend'); rank_mip_50_r_ = (rank_mip_50_r_-0.5)/max(1,numel(mip_50_r_)); pro_mip_50_r_ = sqrt(2.0)*erfinv(2.0*rank_mip_50_r_ - 1.0);
[~,rank_CoC_50_r_] = sort(CoC_50_r_,'ascend'); [~,rank_CoC_50_r_] = sort(rank_CoC_50_r_,'ascend'); rank_CoC_50_r_ = (rank_CoC_50_r_-0.5)/max(1,numel(CoC_50_r_)); pro_CoC_50_r_ = sqrt(2.0)*erfinv(2.0*rank_CoC_50_r_ - 1.0);
[~,rank_mip_10_r_] = sort(mip_10_r_,'ascend'); [~,rank_mip_10_r_] = sort(rank_mip_10_r_,'ascend'); rank_mip_10_r_ = (rank_mip_10_r_-0.5)/max(1,numel(mip_10_r_)); pro_mip_10_r_ = sqrt(2.0)*erfinv(2.0*rank_mip_10_r_ - 1.0);
[~,rank_CoC_10_r_] = sort(CoC_10_r_,'ascend'); [~,rank_CoC_10_r_] = sort(rank_CoC_10_r_,'ascend'); rank_CoC_10_r_ = (rank_CoC_10_r_-0.5)/max(1,numel(CoC_10_r_)); pro_CoC_10_r_ = sqrt(2.0)*erfinv(2.0*rank_CoC_10_r_ - 1.0);
figure(1+nf);nf=nf+1;clf;set(gcf,'Position',1+[0,0,1024+256,1024]);
p_row = 2; p_col = 2; np=0;
markersize_dot = 16;
markersize_cir = 12;
fontsize_use = 12;
c_use__ = colormap('cool');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(mip_50_r_,CoC_50_r_,markersize_dot,lab_50_r_,'filled'); colormap(c_use__);
tmp_index_1_ = efind(lab_50_r_==1);
plot(mip_50_r_(1+tmp_index_1_),CoC_50_r_(1+tmp_index_1_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(mip_lim_); ylim(CoC_lim_);axis square; grid on;
colorbar;
legend({'50 xx','50 tp'},'Location','SouthEast');
xlabel('mip'); ylabel('CoC');
title('3_2_50 mip vs CoC (colored by lab_50_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(pro_mip_50_r_,pro_CoC_50_r_,markersize_dot,lab_50_r_,'filled'); colormap(c_use__);
tmp_index_1_ = efind(lab_50_r_==1);
plot(pro_mip_50_r_(1+tmp_index_1_),pro_CoC_50_r_(1+tmp_index_1_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(pro_lim_); ylim(pro_lim_);axis square; grid on;
colorbar;
legend({'50 xx','50 tp'},'Location','SouthEast');
xlabel('pro_mip','Interpreter','none'); ylabel('pro_CoC','Interpreter','none');
title('3_2_50 pro_mip vs pro_CoC (colored by lab_50_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(mip_10_r_,CoC_10_r_,markersize_dot,lab_10_r_,'filled'); colormap(c_use__);
tmp_index_1_ = efind(lab_50_r_==1);
plot(mip_50_r_(1+tmp_index_1_),CoC_50_r_(1+tmp_index_1_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(mip_lim_); ylim(CoC_lim_);axis square; grid on;
colorbar;
legend({'10 xx','50 tp'},'Location','SouthEast');
xlabel('mip'); ylabel('CoC');
title('3_2_10 mip vs CoC (colored by lab_10_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(pro_mip_10_r_,pro_CoC_10_r_,markersize_dot,lab_10_r_,'filled'); colormap(c_use__);
tmp_ij_ = find(lab_10_r_==1);
plot(pro_mip_10_r_(tmp_ij_),pro_CoC_10_r_(tmp_ij_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(pro_lim_); ylim(pro_lim_);axis square; grid on;
colorbar;
legend({'10 xx','50 tp'},'Location','SouthEast');
xlabel('pro_mip','Interpreter','none'); ylabel('pro_CoC','Interpreter','none');
title('3_2_10 pro_mip vs pro_CoC (colored by lab_10_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%%%%%;
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_xx_FIGH',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

flag_disp=1;
if flag_disp;
%%%%%%%%;
% Now plot the associated histograms. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;set(gcf,'Position',1+[0,0,1024+256,1024]);fig81s;
p_row = 2; p_col = 2; np=0;
fontsize_use = 12; n_h = 128; lhlim_ = 4*[-1,+1];
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(mip_50_r_,CoC_50_r_,n_h,n_h,mip_lim_,CoC_lim_);
pseudocount = 1/max(1,n_50_r);
tmp_lh__ = log(pseudocount + tmp_h__/sum(tmp_h__,'all')*n_h^2);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('mip'); ylabel('CoC');
title('log(pseudocount+hist(3_2_50 mip vs CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(pro_mip_50_r_,pro_CoC_50_r_,n_h,n_h,pro_lim_,pro_lim_);
pseudocount = 1/max(1,n_50_r);
tmp_lh__ = log(pseudocount + tmp_h__/sum(tmp_h__,'all')*n_h^2);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('pro_mip','Interpreter','none'); ylabel('pro_CoC','Interpreter','none');
title('log(pseudocount+hist(3_2_50 pro_mip vs pro_CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(mip_10_r_,CoC_10_r_,n_h,n_h,mip_lim_,CoC_lim_);
pseudocount = 1/max(1,n_10_r);
tmp_lh__ = log(pseudocount + tmp_h__/sum(tmp_h__,'all')*n_h^2);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('mip'); ylabel('CoC');
title('log(pseudocount+hist(3_2_10 mip vs CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(pro_mip_10_r_,pro_CoC_10_r_,n_h,n_h,pro_lim_,pro_lim_);
pseudocount = 1/max(1,n_10_r);
tmp_lh__ = log(pseudocount + tmp_h__/sum(tmp_h__,'all')*n_h^2);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('pro_mip','Interpreter','none'); ylabel('pro_CoC','Interpreter','none');
title('log(pseudocount+hist(3_2_10 pro_mip vs pro_CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%%%%%;
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_xx_FIGI',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% quick test of generalized-extreme-value-distribution (gev). ;
%%%%%%%%;
gev_mu0 = 10; %<-- location mu. ;
gev_lsi = 0; %<-- log(scale) log(sigma). ;
gev_zet = -0.5; %<-- shape zeta. ;
gev_sig = exp(gev_lsi);
xlim_ = 8*gev_sig*[-1,+1] + gev_mu0;
if gev_zet> 0; xlim_(1+0) = gev_mu0 - gev_sig/max(1e-12,+gev_zet); end;
if gev_zet< 0; xlim_(1+1) = gev_mu0 + gev_sig/max(1e-12,-gev_zet); end;
gev_t00 = @(x_) exp(-(x_-gev_mu0)/max(1e-12,gev_sig));
if gev_zet> 0; gev_t00 = @(x_) (1 + gev_zet*(x_-gev_mu0)/max(1e-12,gev_sig)).^(-1/max(1e-12,+gev_zet)); end;
if gev_zet< 0; gev_t00 = @(x_) (1 + gev_zet*(x_-gev_mu0)/max(1e-12,gev_sig)).^(+1/max(1e-12,-gev_zet)); end;
gev_cdf = @(x_) exp(-gev_t00(x_));
gev_pdf = @(x_) gev_cdf(x_).*(gev_t00(x_)).^(1+gev_zet)/max(1e-12,gev_sig);
tmp_x_ = linspace(xlim_(1+0),xlim_(1+1),1024);
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,2,1); cla;
plot(tmp_x_,gev_pdf(tmp_x_),'ro-',tmp_x_,gevpdf(tmp_x_,gev_zet,gev_sig,gev_mu0),'k-'); xlim(xlim_); title('gev_pdf','Interpreter','none');
subplot(1,2,2); cla;
plot(tmp_x_,gev_cdf(tmp_x_),'ro-',tmp_x_,gevcdf(tmp_x_,gev_zet,gev_sig,gev_mu0),'k-'); xlim(xlim_); title('gev_cdf','Interpreter','none');
%%%%;

%%%%%%%%;
% Here we set the 'outlier threshold' for the calculation below. ;
% For now we exclude data-points which are below the 1th-percentile or above the 99th-percentile. ;
% Note that this need not be symmetric! e.g., We could only exclude the upper outliers. ;
%%%%%%%%;
CDF_threshold = 0.01; %<-- used on both ends below. ;

%%%%%%%%;
% Now we fit the 'middle' of the mip-distribution with an extreme-value-distribution (gev). ;
%%%%%%%%;
[~,rank_mip_10_r_] = sort(mip_10_r_,'ascend'); [~,rank_mip_10_r_] = sort(rank_mip_10_r_,'ascend'); rank_mip_10_r_ = (rank_mip_10_r_-0.5)/max(1,numel(mip_10_r_)); pro_mip_10_r_ = sqrt(2.0)*erfinv(2.0*rank_mip_10_r_ - 1.0);
tmp_index_mip_ = efind(rank_mip_10_r_>=CDF_threshold & rank_mip_10_r_<=1-CDF_threshold);
tmp_rank_mip_10_r_ = rank_mip_10_r_(1+tmp_index_mip_);
tmp_mip_10_r_ = mip_10_r_(1+tmp_index_mip_);
tmp_mip_lim_ = [min(tmp_mip_10_r_),max(tmp_mip_10_r_)]; tmp_mip_lim_ = mean(tmp_mip_lim_) + 0.5*1.25*diff(tmp_mip_lim_)*[-1,+1];
tmp_mip_med = median(tmp_mip_10_r_);
gev_mip_med_mu0 = @(tmp_gev_mip_zet,tmp_gev_mip_sig) tmp_mip_med - tmp_gev_mip_sig*(log(2)^(-tmp_gev_mip_zet)-1)/tmp_gev_mip_zet ; %<-- assume tmp_gev_mip_zet~=0. ;
tmp_gev_mip_pdf = @(x_,gev_mip_zet,gev_mip_sig) gevpdf(x_,gev_mip_zet,gev_mip_sig,gev_mip_med_mu0(gev_mip_zet,gev_mip_sig));
tmp_gev_mip_cdf = @(x_,gev_mip_zet,gev_mip_sig) gevcdf(x_,gev_mip_zet,gev_mip_sig,gev_mip_med_mu0(gev_mip_zet,gev_mip_sig));
n_gev_mip_zet = 64; gev_mip_zet_ = linspace(-0.75,+0.75,n_gev_mip_zet);
n_gev_mip_sig = 96; gev_mip_sig_ = std(tmp_mip_10_r_,1)*exp(linspace(-0.5,+0.5,n_gev_mip_sig));
gev_mip_ll_zs__ = zeros(n_gev_mip_zet,n_gev_mip_sig); %<-- standard log-likelihood is not a good measure since we have truncated tmp_mip_10_r_. ;
gev_mip_ks_zs__ = zeros(n_gev_mip_zet,n_gev_mip_sig); %<-- kolmogorov-smirnov makes more sense here. ;
for ngev_mip_zet=0:n_gev_mip_zet-1;
if mod(ngev_mip_zet,4)==0; disp(sprintf(' %% ngev_mip_zet %d/%d',ngev_mip_zet,n_gev_mip_zet)); end;
for ngev_mip_sig=0:n_gev_mip_sig-1;
tmp_gev_mip_pdf_x_ = tmp_gev_mip_pdf(tmp_mip_10_r_,gev_mip_zet_(1+ngev_mip_zet),gev_mip_sig_(1+ngev_mip_sig));
gev_mip_ll_zs__(1+ngev_mip_zet,1+ngev_mip_sig) = sum(log(tmp_gev_mip_pdf_x_),'all');
tmp_gev_mip_cdf_x_ = tmp_gev_mip_cdf(tmp_mip_10_r_,gev_mip_zet_(1+ngev_mip_zet),gev_mip_sig_(1+ngev_mip_sig));
gev_mip_ks_zs__(1+ngev_mip_zet,1+ngev_mip_sig) = sum(abs(tmp_rank_mip_10_r_ - tmp_gev_mip_cdf_x_),'all');
end;%for ngev_mip_sig=0:n_gev_mip_sig-1;
end;%for ngev_mip_zet=0:n_gev_mip_zet-1;
%%%%;
[~,tmp_ij] = max(gev_mip_ll_zs__,[],'all','linear');
tmp_index=tmp_ij-1; tmp_index_zet = mod(tmp_index,n_gev_mip_zet); tmp_index_sig = floor(tmp_index/n_gev_mip_zet);
tmp_gev_mip_ll_zet = gev_mip_zet_(1+tmp_index_zet);
tmp_gev_mip_ll_sig = gev_mip_sig_(1+tmp_index_sig);
tmp_gev_mip_ll_mu0 = gev_mip_med_mu0(tmp_gev_mip_ll_zet,tmp_gev_mip_ll_sig);
[~,tmp_ij] = min(gev_mip_ks_zs__,[],'all','linear');
tmp_index=tmp_ij-1; tmp_index_zet = mod(tmp_index,n_gev_mip_zet); tmp_index_sig = floor(tmp_index/n_gev_mip_zet);
tmp_gev_mip_ks_zet = gev_mip_zet_(1+tmp_index_zet);
tmp_gev_mip_ks_sig = gev_mip_sig_(1+tmp_index_sig);
tmp_gev_mip_ks_mu0 = gev_mip_med_mu0(tmp_gev_mip_ks_zet,tmp_gev_mip_ks_sig);
%%%%%%%%;

%%%%%%%%;
% Now we fit the 'middle' of the CoC-distribution with an extreme-value-distribution (gev). ;
%%%%%%%%;
[~,rank_CoC_10_r_] = sort(CoC_10_r_,'ascend'); [~,rank_CoC_10_r_] = sort(rank_CoC_10_r_,'ascend'); rank_CoC_10_r_ = (rank_CoC_10_r_-0.5)/max(1,numel(CoC_10_r_)); pro_CoC_10_r_ = sqrt(2.0)*erfinv(2.0*rank_CoC_10_r_ - 1.0);
tmp_index_CoC_ = efind(rank_CoC_10_r_>=CDF_threshold & rank_CoC_10_r_<=1-CDF_threshold);
tmp_rank_CoC_10_r_ = rank_CoC_10_r_(1+tmp_index_CoC_);
tmp_CoC_10_r_ = CoC_10_r_(1+tmp_index_CoC_);
tmp_CoC_lim_ = [min(tmp_CoC_10_r_),max(tmp_CoC_10_r_)]; tmp_CoC_lim_ = mean(tmp_CoC_lim_) + 0.5*1.25*diff(tmp_CoC_lim_)*[-1,+1];
tmp_CoC_med = median(tmp_CoC_10_r_);
gev_CoC_med_mu0 = @(tmp_gev_CoC_zet,tmp_gev_CoC_sig) tmp_CoC_med - tmp_gev_CoC_sig*(log(2)^(-tmp_gev_CoC_zet)-1)/tmp_gev_CoC_zet ; %<-- assume tmp_gev_CoC_zet~=0. ;
tmp_gev_CoC_pdf = @(x_,gev_CoC_zet,gev_CoC_sig) gevpdf(x_,gev_CoC_zet,gev_CoC_sig,gev_CoC_med_mu0(gev_CoC_zet,gev_CoC_sig));
tmp_gev_CoC_cdf = @(x_,gev_CoC_zet,gev_CoC_sig) gevcdf(x_,gev_CoC_zet,gev_CoC_sig,gev_CoC_med_mu0(gev_CoC_zet,gev_CoC_sig));
n_gev_CoC_zet = 64; gev_CoC_zet_ = linspace(-0.75,+0.75,n_gev_CoC_zet);
n_gev_CoC_sig = 96; gev_CoC_sig_ = std(tmp_CoC_10_r_,1)*exp(linspace(-0.5,+0.5,n_gev_CoC_sig));
gev_CoC_ll_zs__ = zeros(n_gev_CoC_zet,n_gev_CoC_sig); %<-- standard log-likelihood is not a good measure since we have truncated tmp_CoC_10_r_. ;
gev_CoC_ks_zs__ = zeros(n_gev_CoC_zet,n_gev_CoC_sig); %<-- kolmogorov-smirnov makes more sense here. ;
for ngev_CoC_zet=0:n_gev_CoC_zet-1;
if mod(ngev_CoC_zet,4)==0; disp(sprintf(' %% ngev_CoC_zet %d/%d',ngev_CoC_zet,n_gev_CoC_zet)); end;
for ngev_CoC_sig=0:n_gev_CoC_sig-1;
tmp_gev_CoC_pdf_x_ = tmp_gev_CoC_pdf(tmp_CoC_10_r_,gev_CoC_zet_(1+ngev_CoC_zet),gev_CoC_sig_(1+ngev_CoC_sig));
gev_CoC_ll_zs__(1+ngev_CoC_zet,1+ngev_CoC_sig) = sum(log(tmp_gev_CoC_pdf_x_),'all');
tmp_gev_CoC_cdf_x_ = tmp_gev_CoC_cdf(tmp_CoC_10_r_,gev_CoC_zet_(1+ngev_CoC_zet),gev_CoC_sig_(1+ngev_CoC_sig));
gev_CoC_ks_zs__(1+ngev_CoC_zet,1+ngev_CoC_sig) = sum(abs(tmp_rank_CoC_10_r_ - tmp_gev_CoC_cdf_x_),'all');
end;%for ngev_CoC_sig=0:n_gev_CoC_sig-1;
end;%for ngev_CoC_zet=0:n_gev_CoC_zet-1;
%%%%;
[~,tmp_ij] = max(gev_CoC_ll_zs__,[],'all','linear');
tmp_index=tmp_ij-1; tmp_index_zet = mod(tmp_index,n_gev_CoC_zet); tmp_index_sig = floor(tmp_index/n_gev_CoC_zet);
tmp_gev_CoC_ll_zet = gev_CoC_zet_(1+tmp_index_zet);
tmp_gev_CoC_ll_sig = gev_CoC_sig_(1+tmp_index_sig);
tmp_gev_CoC_ll_mu0 = gev_CoC_med_mu0(tmp_gev_CoC_ll_zet,tmp_gev_CoC_ll_sig);
[~,tmp_ij] = min(gev_CoC_ks_zs__,[],'all','linear');
tmp_index=tmp_ij-1; tmp_index_zet = mod(tmp_index,n_gev_CoC_zet); tmp_index_sig = floor(tmp_index/n_gev_CoC_zet);
tmp_gev_CoC_ks_zet = gev_CoC_zet_(1+tmp_index_zet);
tmp_gev_CoC_ks_sig = gev_CoC_sig_(1+tmp_index_sig);
tmp_gev_CoC_ks_mu0 = gev_CoC_med_mu0(tmp_gev_CoC_ks_zet,tmp_gev_CoC_ks_sig);
%%%%%%%%;

%%%%%%%%;
% Now we plot the fits. ;
% For comparison we show the fit obtained with a standard log-likelihood (ignoring the thresholding), ;
% as well as the fit obtained via a kolmogorov-smirnov test (more appropriate). ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figmed;
fontsize_use = 12;
%%%%;
subplot(1,2,1);
hold on;
plot(tmp_mip_10_r_,tmp_rank_mip_10_r_,'ro');
plot(tmp_mip_10_r_,gevcdf(tmp_mip_10_r_,tmp_gev_mip_ll_zet,tmp_gev_mip_ll_sig,tmp_gev_mip_ll_mu0),'g.');
plot(tmp_mip_10_r_,gevcdf(tmp_mip_10_r_,tmp_gev_mip_ks_zet,tmp_gev_mip_ks_sig,tmp_gev_mip_ks_mu0),'k.');
hold off;
xlim(tmp_mip_lim_); ylim([0,1]); set(gca,'XTick',tmp_mip_lim_); set(gca,'YTick',0:0.1:1.0); grid on;
xlabel('mip'); ylabel('CDF');
legend({'emp','ll','ks'},'Location','NorthWest');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(1,2,2);
hold on;
plot(tmp_CoC_10_r_,tmp_rank_CoC_10_r_,'ro');
plot(tmp_CoC_10_r_,gevcdf(tmp_CoC_10_r_,tmp_gev_CoC_ll_zet,tmp_gev_CoC_ll_sig,tmp_gev_CoC_ll_mu0),'g.');
plot(tmp_CoC_10_r_,gevcdf(tmp_CoC_10_r_,tmp_gev_CoC_ks_zet,tmp_gev_CoC_ks_sig,tmp_gev_CoC_ks_mu0),'k.');
hold off;
xlim(tmp_CoC_lim_); ylim([0,1]); set(gca,'XTick',tmp_CoC_lim_); set(gca,'YTick',0:0.1:1.0); grid on;
xlabel('CoC'); ylabel('CDF');
legend({'emp','ll','ks'},'Location','NorthWest');
set(gca,'FontSize',fontsize_use);
%%%%;
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_ll_vs_ks_FIGK',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
%close(gcf);
%%%%%%%%;

%%%%%%%%;
% Now we use the gevs above to rescale the mip and the CoC. ;
% The prefix used here is 'gfg' implying 'gaussian-from-gev'. ;
% This is in contrast to the 'pro' prefix used earlier (referring to the probit function). ;
%%%%;
% To perform this calculation we need to 'crop' the rescaled values. ;
% This is because the extreme-value distributions can easily be mapped very far away from rest of the gaussian. ;
%%%%%%%%;
gfg_threshold = 128; %<-- 128 standard-deviations away. ;
gfg_rank_mip_10_r_ = gevcdf(mip_10_r_,tmp_gev_mip_ks_zet,tmp_gev_mip_ks_sig,tmp_gev_mip_ks_mu0);
gfg_mip_10_r_ = sqrt(2.0)*erfinv(2.0*gfg_rank_mip_10_r_ - 1.0);
gfg_mip_10_r_ = max(-gfg_threshold,min(+gfg_threshold,gfg_mip_10_r_));
gfg_rank_CoC_10_r_ = gevcdf(CoC_10_r_,tmp_gev_CoC_ks_zet,tmp_gev_CoC_ks_sig,tmp_gev_CoC_ks_mu0);
gfg_CoC_10_r_ = sqrt(2.0)*erfinv(2.0*gfg_rank_CoC_10_r_ - 1.0);
gfg_CoC_10_r_ = max(-gfg_threshold,min(+gfg_threshold,gfg_CoC_10_r_));
gfg_rank_mip_50_r_ = gevcdf(mip_50_r_,tmp_gev_mip_ks_zet,tmp_gev_mip_ks_sig,tmp_gev_mip_ks_mu0);
gfg_mip_50_r_ = sqrt(2.0)*erfinv(2.0*gfg_rank_mip_50_r_ - 1.0);
gfg_mip_50_r_ = max(-gfg_threshold,min(+gfg_threshold,gfg_mip_50_r_));
gfg_rank_CoC_50_r_ = gevcdf(CoC_50_r_,tmp_gev_CoC_ks_zet,tmp_gev_CoC_ks_sig,tmp_gev_CoC_ks_mu0);
gfg_CoC_50_r_ = sqrt(2.0)*erfinv(2.0*gfg_rank_CoC_50_r_ - 1.0);
gfg_CoC_50_r_ = max(-gfg_threshold,min(+gfg_threshold,gfg_CoC_50_r_));

%%%%%%%%;
% Define anisotropic-gaussian. ;
%%%%%%%%;
mip_lim_ = [5,15]; CoC_lim_ = 1e-3*[-1,+175];
gfg_lim_ = [-7,+10];
n_gfg_x = 128; n_gfg_y = n_gfg_x+1; %<-- for error checking. ;
gfg_x_ = linspace(min(gfg_lim_),max(gfg_lim_),n_gfg_x);
gfg_dx = mean(diff(gfg_x_));
gfg_y_ = linspace(min(gfg_lim_),max(gfg_lim_),n_gfg_y);
gfg_dy = mean(diff(gfg_y_));
[gfg_x__,gfg_y__] = ndgrid(gfg_x_,gfg_y_);
gfg_r__ = sqrt(gfg_x__.^2 + gfg_y__.^2);
gfg_w__ = atan2(gfg_y__,gfg_x__);
rho_g2 = @(x_,y_,C__) 1/(2*pi) * sqrt(det(C__)) * exp(-0.5*(x_.*x_.*C__(1,1) + x_.*y_.*(C__(1,2)+C__(2,1)) + y_.*y_.*C__(2,2)));
%%%%%%%%;
% Now estimate the anisotropic-gaussian associated with gfg_mip and gfg_CoC. ;
%%%%%%%%;
tmp_ij_mip_ = find( (gfg_mip_10_r_>=min(gfg_lim_)) & (gfg_mip_10_r_<=max(gfg_lim_)) );
tmp_ij_CoC_ = find( (gfg_CoC_10_r_>=min(gfg_lim_)) & (gfg_CoC_10_r_<=max(gfg_lim_)) );
tmp_ij_ = intersect(tmp_ij_mip_,tmp_ij_CoC_);
tmp_ = [gfg_mip_10_r_(tmp_ij_),gfg_CoC_10_r_(tmp_ij_)];
Cinv_10__ = transpose(tmp_)*tmp_/numel(tmp_ij_);
[Uinv_10__,Dinv_10_] = eigs(Cinv_10__); Dinv_10_ = diag(Dinv_10_);
C_10__ = inv(Cinv_10__);
[U_10__,D_10_] = eigs(C_10__); D_10_ = diag(D_10_);
g_10__ = rho_g2(gfg_x__,gfg_y__,C_10__);
clear tmp_;
%%%%;
tmp_ij_mip_ = find( (gfg_mip_50_r_>=min(gfg_lim_)) & (gfg_mip_50_r_<=max(gfg_lim_)) );
tmp_ij_CoC_ = find( (gfg_CoC_50_r_>=min(gfg_lim_)) & (gfg_CoC_50_r_<=max(gfg_lim_)) );
tmp_ij_ = intersect(tmp_ij_mip_,tmp_ij_CoC_);
tmp_ = [gfg_mip_50_r_(tmp_ij_),gfg_CoC_50_r_(tmp_ij_)];
Cinv_50__ = transpose(tmp_)*tmp_/numel(tmp_ij_);
[Uinv_50__,Dinv_50_] = eigs(Cinv_50__); Dinv_50_ = diag(Dinv_50_);
C_50__ = inv(Cinv_50__);
[U_50__,D_50_] = eigs(C_50__); D_50_ = diag(D_50_);
g_50__ = rho_g2(gfg_x__,gfg_y__,C_50__);
clear tmp_;
%%%%;

flag_disp=1;
if flag_disp;
%%%%%%%%;
% Now plot the rescaled data against the estimated anisotropic-gaussians. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;set(gcf,'Position',1+[0,0,1024+256,1024]);fig81s;
p_row = 2; p_col = 2; np=0;
fontsize_use = 12; n_h = 128; lhlim_ = [-8,-2];
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(gfg_mip_50_r_,gfg_CoC_50_r_,n_gfg_x,n_gfg_y,gfg_lim_,gfg_lim_);
tmp_h__ = tmp_h__/sum(tmp_h__,'all')/max(1e-12,gfg_dx)/max(1e-12,gfg_dy);
pseudocount = 0*1/max(1,n_50_r);
tmp_lh__ = log(pseudocount + tmp_h__);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('log(0+hist(3_2_50 gfg_mip vs gfg_CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_lh__ = log(g_50__);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('log(g_50__)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_h__ = hist2d_0(gfg_mip_10_r_,gfg_CoC_10_r_,n_gfg_x,n_gfg_y,gfg_lim_,gfg_lim_);
tmp_h__ = tmp_h__/sum(tmp_h__,'all')/max(1e-12,gfg_dx)/max(1e-12,gfg_dy);
pseudocount = 0*1/max(1,n_10_r);
tmp_lh__ = log(pseudocount + tmp_h__);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('log(0+hist(3_2_10 gfg_mip vs gfg_CoC))','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
tmp_lh__ = log(g_10__);
imagesc(tmp_lh__,lhlim_);
set(gca,'Ydir','normal'); axisnotick; axis square;
colorbar;
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('log(g_10__)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%%%%%;
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_xx_FIGL',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now calculate pvalues with a 1-quadrant constraint. ;
%%%%%%%%;
tmp_index_ = efind( (gfg_x__> 0) & (gfg_y__> 0) );
p1q_denominator_10 = sum(g_10__(1+tmp_index_),'all')*gfg_dx*gfg_dy; %<-- fraction of rho in 1-quadrant. ;
%%%%;
% empirical p-value. ;
%%%%;
p1q_emp_10_r_ = zeros(n_10_r,1);
for n10_r=0:n_10_r-1;
if flag_verbose & (mod(n10_r,1024*4)==0); disp(sprintf(' %% n10_r %d/%d',n10_r,n_10_r)); end;
gfg_mip = gfg_mip_10_r_(1+n10_r);
gfg_CoC = gfg_CoC_10_r_(1+n10_r);
p1q_emp = 1.0;
if (gfg_mip> 0) & (gfg_CoC> 0);
gfg_rho = rho_g2(gfg_mip,gfg_CoC,C_10__);
tmp_index_ = efind( (g_10__< gfg_rho) & (gfg_x__> 0) & (gfg_y__> 0) );
p1q_emp = sum(g_10__(1+tmp_index_),'all')*gfg_dx*gfg_dy;
end;%if (gfg_mip> 0) & (gfg_CoC> 0);
p1q_emp_10_r_(1+n10_r) = p1q_emp;
end;%for n10_r=0:n_10_r-1;
%%%%;
% calculated p-value. ;
%%%%;
pq1_equ_10_r_ = zeros(n_10_r,1);
tmp_a = max(sqrt(Dinv_10_)); tmp_b = min(sqrt(Dinv_10_)); tmp_w = pi/4; %<-- assumes correlated with major-axis at pi/4. ;
tmp_gamma = atan2(1.0,0.5*sin(2*tmp_w)*(tmp_b/tmp_a - tmp_a/tmp_b)); %<-- angular formula only valid in 2-dimensions. ;
for n10_r=0:n_10_r-1;
if flag_verbose & (mod(n10_r,1024*4)==0); disp(sprintf(' %% n10_r %d/%d',n10_r,n_10_r)); end;
gfg_mip = gfg_mip_10_r_(1+n10_r);
gfg_CoC = gfg_CoC_10_r_(1+n10_r);
p1q_equ = 1.0;
if (gfg_mip> 0) & (gfg_CoC> 0);
tmp_x_0 = +cos(tmp_w)*gfg_mip + sin(tmp_w)*gfg_CoC;
tmp_x_1 = -sin(tmp_w)*gfg_mip + cos(tmp_w)*gfg_CoC;
tmp_y_0 = tmp_x_0/max(1e-12,tmp_a);
tmp_y_1 = tmp_x_1/max(1e-12,tmp_b);
tmp_y_r = sqrt(tmp_y_0.^2 + tmp_y_1.^2);
p1q_equ = exp(-tmp_y_r.^2/2)*tmp_gamma/(2*pi); %<-- note that r-integral gfgduces exp(-tmp_y_r.^2/2) only in 2-dimensions. ;
end;%if (gfg_mip> 0) & (gfg_CoC> 0);
p1q_equ_10_r_(1+n10_r) = p1q_equ;
end;%for n10_r=0:n_10_r-1;
%%%%%%%%;
% illustrate similarity between empirical and calculated p-values. ;
% subplot(1,2,1); plot(p1q_emp_10_r_,p1q_equ_10_r_,'.'); subplot(1,2,2); hist(p1q_emp_10_r_(find(p1q_emp_10_r_< 1)),32);
%%%%%%%%;

flag_disp=1;
if flag_disp;
%%%%%%%%;
% Now illustrate p-values in scatterplot. ;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;set(gcf,'Position',1+[0,0,1024+256,512]);
p_row = 1; p_col = 2; np=0;
markersize_dot = 16;
markersize_cir = 8;
fontsize_use = 12;
c_use__ = 0.35*flipud(colormap_80s) + 0.65*colormap_81s;
nlplim_ = [0,15];
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(gfg_mip_10_r_,gfg_CoC_10_r_,markersize_dot,-log(p1q_equ_10_r_),'filled');
colormap(c_use__); caxis(nlplim_);
tmp_ij_ = find(lab_10_r_==1);
plot(gfg_mip_10_r_(tmp_ij_),gfg_CoC_10_r_(tmp_ij_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(gfg_lim_); ylim(gfg_lim_);axis square; grid on;
set(gca,'XTick',[-4:+4]); set(gca,'YTick',[-4:+4]);
colorbar;
%legend({'10 xx','50 tp'},'Location','NorthWest');
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('3_2_10 gfg_mip vs gfg_CoC (colored by p1q_equ_10_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%;
subplot(p_row,p_col,1+np);np=np+1;
hold on;
scatter(gfg_mip_10_r_,gfg_CoC_10_r_,markersize_dot,-log(p1q_equ_10_r_),'filled');
colormap(c_use__); caxis(nlplim_);
tmp_ij_ = find(lab_10_r_==1);
plot(gfg_mip_10_r_(tmp_ij_),gfg_CoC_10_r_(tmp_ij_),'o','Color',c_use__(1,:),'MarkerSize',markersize_cir);
hold off;
xlim(gfg_lim_); ylim(gfg_lim_);axis square; grid on;
xlim([min(gfg_lim_) + 0.45*diff(gfg_lim_),max(gfg_lim_)]);
ylim([min(gfg_lim_) + 0.45*diff(gfg_lim_),max(gfg_lim_)]);
set(gca,'XTick',[2,3,4]); set(gca,'YTick',[2,3,4]);
colorbar;
%legend({'10 xx','50 tp'},'Location','NorthWest');
xlabel('gfg_mip','Interpreter','none'); ylabel('gfg_CoC','Interpreter','none');
title('3_2_10 gfg_mip vs gfg_CoC (colored by p1q_equ_10_r_)','Interpreter','none');
set(gca,'FontSize',fontsize_use);
%%%%%%%%;
fname_fig_pre = sprintf('%s/test_Kexin_147_mip_vs_CoC_3_2_10_FIGM',dir_jpg);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg));
disp(sprintf(' %% Writing %s',fname_fig_pre));
sgtitle(fname_fig_pre,'Interpreter','none');
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg));
close(gcf);
%%%%%%%%;
end;%if flag_disp;
%%%%%%%%;




