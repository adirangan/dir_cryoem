%%%%%%%%;
% intended for use with test_slice_vs_volume_integral_trpv1_11.m ;
% and test_slice_vs_volume_integral_12.m ;
% not limiting to principal-modes. ;
%%%%%%%%;

[~,str_hostname] = system('hostname');
flag_256G = 0 ...
| ~isempty(strfind(str_hostname,'crunchy')) ...
| ~isempty(strfind(str_hostname,'linserv')) ...
;

n_3 = 3;
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('Ylm_uklma___','var'); Ylm_uklma___=[]; end;
if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__=[]; end;
if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__=[]; end;
if ~exist('l_max_uk_','var'); l_max_uk_=[]; end;
if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__=[]; end;
if ~exist('V_lmm___','var'); V_lmm___=[]; end;
if ~exist('L_lm__','var'); L_lm__=[]; end;
if ~exist('d0W_betazeta_mlma____','var'); d0W_betazeta_mlma____=[]; end;
if ~exist('d1W_betazeta_mlma____','var'); d1W_betazeta_mlma____=[]; end;
if ~exist('d2W_betazeta_mlma____','var'); d2W_betazeta_mlma____=[]; end;

X_weight_r_ = ones(n_k_p_r,1);
n_UX_rank = n_k_p_r;
pm_n_UX_rank = n_UX_rank;
pm_n_k_all = n_k_all; pm_n_k_all_csum_ = n_k_all_csum_;
pm_k_p_r_all_ = k_p_r_all_; pm_k_p_azimu_b_all_ = k_p_azimu_b_all_; pm_k_p_polar_a_all_ = k_p_polar_a_all_;
pm_weight_3d_k_all_ = weight_3d_k_all_; pm_weight_shell_k_ = weight_shell_k_;
pm_n_k_p_r = n_k_p_r; pm_k_p_r_ = k_p_r_; pm_k_p_r_max = k_p_r_max;
pm_weight_3d_k_p_r_ = weight_3d_k_p_r_;
pm_l_max_ = l_max_;
pm_Ylm_uklma___ = Ylm_uklma___;
pm_k_p_azimu_b_sub_uka__ = k_p_azimu_b_sub_uka__;
pm_k_p_polar_a_sub_uka__ = k_p_polar_a_sub_uka__;
pm_l_max_uk_ = l_max_uk_;
pm_index_nu_n_k_per_shell_from_nk_p_r_ = index_nu_n_k_per_shell_from_nk_p_r_;
pm_index_k_per_shell_uka__ = index_k_per_shell_uka__;
pm_X_weight_r_ = X_weight_r_;
pm_n_w_ = n_w_; pm_n_w_max = n_w_max; pm_n_w_sum = n_w_sum; pm_n_w_csum_ = n_w_csum_;
pm_weight_2d_k_p_r_ = weight_2d_k_p_r_; pm_weight_2d_wk_ = weight_2d_wk_;

%%%%%%%%;
% Use identity for principal-modes. ;
%%%%%%%%;
X_kk__ = eye(n_k_p_r,n_k_p_r);
UX_kn__ = eye(n_k_p_r,n_k_p_r);
SX_k_ = ones(n_k_p_r,1);
tolerance_pm = 0;
nlt = -log10(tolerance_pm);
str_tolerance_pm = sprintf('nltInfpm%d',pm_n_UX_rank);
if (flag_verbose>0); disp(sprintf(' %% tolerance_pm %0.6f: pm_n_UX_rank %d/%d --> %s',tolerance_pm,pm_n_UX_rank,n_UX_rank,str_tolerance_pm)); end;
%%%%%%%%;
pm_n_w_max = max(pm_n_w_);
pm_n_w_sum = sum(pm_n_w_);
pm_n_w_csum_ = cumsum([0;pm_n_w_]);
pm_n_lm_ = (pm_l_max_+1).^2;
pm_n_lm_max = max(pm_n_lm_);
pm_n_lm_sum = sum(pm_n_lm_);
pm_n_lm_csum_ = cumsum([0;pm_n_lm_]);
pm_l_max_max = max(pm_l_max_);
%%%%%%%%;

%%%%%%%%;
% Now form a_x1_UX_Y_reco_empi_yn__ ;
%%%%%%%%;
a_x1_UX_Y_reco_empi_yn__ = zeros(n_lm_max,pm_n_UX_rank);
for nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_l_max = l_max_(1+nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank) = a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank) + UX_kn__(1+nk_p_r,1+nUX_rank)*X_weight_r_(1+nk_p_r)*a_k_Y_reco_empi_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nUX_rank=0:pm_n_UX_rank-1;
a_x1_UX_Y_reco_empi_yn_ = local_yk_from_yk__(pm_n_k_p_r,pm_l_max_,a_x1_UX_Y_reco_empi_yn__);
pm_a_k_Y_reco_empi_yk__ = a_x1_UX_Y_reco_empi_yn__;
pm_a_k_Y_reco_empi_yk_ = a_x1_UX_Y_reco_empi_yn_;
%%%%;
flag_check=1;
if flag_check;
a_k_Y_reco_frompm_yk_ = zeros(n_lm_sum,1);
for nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
tmp_l_max = l_max_(1+nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
a_k_Y_reco_frompm_yk_(1+tmp_index_) = a_k_Y_reco_frompm_yk_(1+tmp_index_) + UX_kn__(1+nk_p_r,1+nUX_rank)/max(1e-12,X_weight_r_(1+nk_p_r))*a_x1_UX_Y_reco_empi_yn__(1:tmp_n_lm,1+nUX_rank);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nUX_rank=0:pm_n_UX_rank-1;
a_k_Y_diff_empi_yk_ = a_k_Y_reco_empi_yk_ - a_k_Y_reco_frompm_yk_;
[~,~,a_k_Y_reco_empi_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_reco_empi_yk_,0);
[~,~,a_k_Y_reco_frompm_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_reco_frompm_yk_,0);
[~,~,a_k_Y_diff_empi_l3] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_diff_empi_yk_,0);
[~,~,a_k_Y_reco_empi_l2] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_2d_k_p_r_,l_max_,a_k_Y_reco_empi_yk_,0);
[~,~,a_k_Y_reco_frompm_l2] = spharm_normalize_2(n_k_p_r,k_p_r_,weight_2d_k_p_r_,l_max_,a_k_Y_reco_frompm_yk_,0);
[~,~,pm_a_k_Y_reco_empi_l2] = spharm_normalize_2(pm_n_k_p_r,pm_k_p_r_,pm_weight_3d_k_p_r_,pm_l_max_,pm_a_k_Y_reco_empi_yk_,0);
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_yk_ vs a_k_Y_reco_frompm_yk_: %0.16f %%<-- will not be small if tolerance_pm> 0',a_k_Y_diff_empi_l3/max(1e-12,a_k_Y_reco_empi_l3))); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_l3 %0.6f',a_k_Y_reco_empi_l3)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_frompm_l3 %0.6f',a_k_Y_reco_frompm_l3)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_empi_l2 %0.6f',a_k_Y_reco_empi_l2)); end;
if (flag_verbose>0); disp(sprintf(' %% a_k_Y_reco_frompm_l2 %0.6f',a_k_Y_reco_frompm_l2)); end;
if (flag_verbose>0); disp(sprintf(' %% pm_a_k_Y_reco_empi_l2 %0.6f',pm_a_k_Y_reco_empi_l2)); end;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Use a_k_Y_reco_empi_yk_ to generate pm_S_use_k_p_wkS__ := S_x1_UX_k_p_wnS__. ;
% Note that poles are included for subsequent interpolation (when estimating ddssnll_lsq). ;
%%%%%%%%;
a_k_Y_reco_empi_yk__ = local_yk__from_yk_(pm_n_k_p_r,pm_l_max_,a_k_Y_reco_empi_yk_);
[ ...
 n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,viewing_k_c_0_S_use_ ...
,viewing_k_c_1_S_use_ ...
,viewing_k_c_2_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,1.0/k_p_r_max ...
,'C' ...
,1 ...
) ;
%%%%;
tmp_t = tic();
[ ...
 pm_S_use_k_p_wkS___ ...
,~ ...
,n_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,pm_n_k_p_r ...
,a_k_Y_reco_empi_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
);
pm_S_use_k_p_wkS__ = reshape(pm_S_use_k_p_wkS___,[pm_n_w_sum,n_S_use]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% pm_S_use_k_p_wkS__ (pm_template_2): %0.6fs',tmp_t)); end;
%%%%%%%%;
% Test.; 
%%%%%%%%;
flag_check=1;
if flag_check;
tmp_t = tic();
[ ...
 S_use_k_p_wkS___ ...
,~ ...
,n_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,a_k_Y_reco_empi_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_viewing_S_use ...
,viewing_azimu_b_S_use_ ...
,viewing_polar_a_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
);
S_use_k_p_wkS__ = reshape(S_use_k_p_wkS___,[n_w_sum,n_S_use]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_use_k_p_wkS__ (pm_template_2): %0.6fs',tmp_t)); end;
nS_use = 13;
pm_S_use_k_p_wk__ = pm_S_use_k_p_wkS___(:,:,1+nS_use);
pm_T_use_k_p_wk__ = zeros(n_w_max,pm_n_UX_rank);
S_use_k_p_wk__ = S_use_k_p_wkS___(:,:,1+nS_use);
for pm_nUX_rank=0:pm_n_UX_rank-1;
for nk_p_r=0:n_k_p_r-1;
pm_T_use_k_p_wk__(:,1+pm_nUX_rank) = pm_T_use_k_p_wk__(:,1+pm_nUX_rank) + UX_kn__(1+nk_p_r,1+pm_nUX_rank)*X_weight_r_(1+nk_p_r)*S_use_k_p_wk__(:,1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for pm_nUX_rank=0:pm_n_UX_rank-1;
if (flag_verbose>0); disp(sprintf(' %% nS_use %d/%d: pm_T_use_k_p_wk__ vs pm_S_use_k_p_wk__: %0.16f',nS_use,n_S_use,fnorm(pm_T_use_k_p_wk__-pm_S_use_k_p_wk__)/max(1e-12,fnorm(pm_T_use_k_p_wk__)))); end;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Now define pm_M_use_k_p_wkM__. ;
% Note that poles are excluded (to allow for finite derivatives in U_SmallRotation_2). ;
%%%%%%%%;
n_M_use = 1024;
euler_polar_a_M_use_ = euler_polar_a_empi_(1:n_M_use);
euler_azimu_b_M_use_ = euler_azimu_b_empi_(1:n_M_use);
euler_gamma_z_M_use_ = euler_gamma_z_empi_(1:n_M_use);
image_delta_x_M_use_ = image_delta_x_empi_(1:n_M_use);
image_delta_y_M_use_ = image_delta_y_empi_(1:n_M_use);
M_use_k_p_wkM__ = M_k_p_wkM__(:,1:n_M_use);
for nM_use=0:n_M_use-1;
M_use_k_p_wkM__(:,1+nM_use) = transf_p_to_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,M_use_k_p_wkM__(:,1+nM_use),+image_delta_x_M_use_(1+nM_use),+image_delta_y_M_use_(1+nM_use));
end;%for nM_use=0:n_M-1;
pm_n_M_use = n_M_use;
pm_M_use_k_p_wkM__ = M_use_k_p_wkM__;
pm_n_CTF = n_CTF;
pm_index_nCTF_from_nM_use_ = index_nCTF_from_nM_(1:n_M_use);
pm_CTF_k_p_r_kC__ = CTF_k_p_r_kC__;
pm_CTF_k_p_wkC__ = CTF_k_p_wkC__;
%%%%%%%%;
tmp_index_ = efind( abs(euler_polar_a_M_use_-0*pi)>1e-6 & abs(euler_polar_a_M_use_-1*pi)>1e-6 );
n_M_use = numel(tmp_index_);
pm_M_use_k_p_wkM__ = pm_M_use_k_p_wkM__(:,1+tmp_index_);
pm_index_nCTF_from_nM_use_ = pm_index_nCTF_from_nM_use_(1+tmp_index_);
euler_polar_a_M_use_ = euler_polar_a_M_use_(1+tmp_index_);
euler_azimu_b_M_use_ = euler_azimu_b_M_use_(1+tmp_index_);
euler_gamma_z_M_use_ = euler_gamma_z_M_use_(1+tmp_index_);
%%%%%%%%;

%%%%%%%%;
flag_implicit_dtau = 1;
viewing_weight_M_use_ = ones(n_M_use,1);
factor_imagecount_M_use_ = 1/max(1e-12,sum(viewing_weight_M_use_));
weight_imagecount_M_use_ = viewing_weight_M_use_ .* factor_imagecount_M_use_ ;
nlsigma_dist = 0; n_lsigma_dist = 1; lsigma_dist = NaN;
str_infix = sprintf('p_reco_empi');
if (flag_verbose>0); disp(sprintf(' %% %s',str_infix)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
flag_calc=flag_256G;
if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
str_dir_mat = sprintf('%s_mat',dir_ssnll);
str_dir_jpg = sprintf('%s_jpg',dir_ssnll);
if flag_implicit_dtau==0; str_fname_nopath_prefix = sprintf('eig_from_image_%s_%s',str_tolerance_pm,str_infix); end;
if flag_implicit_dtau==1; str_fname_nopath_prefix = sprintf('eig_i1_from_image_%s_%s',str_tolerance_pm,str_infix); end;
%%%%;
fname_pre = sprintf('%s/%s',str_dir_mat,str_fname_nopath_prefix);
[flag_skip,fname_mat] = open_fname_tmp(fname_pre);
%%%%%%%%%%%%%%%%;
if flag_recalc | ~flag_skip
%%%%%%%%%%%%%%%%;
tmp_lanczos_n_iteration_max = 0;
if ( exist(fname_mat,'file'));
tmp_ = load(fname_mat);
if isfield(tmp_,'alph_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_i_); end;
if isfield(tmp_,'alph_tilde_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_tilde_i_); end;
clear tmp_;
disp(sprintf(' %% %s found, tmp_lanczos_n_iteration_max %.2d',fname_mat,tmp_lanczos_n_iteration_max));
end;%if ( exist(fname_mat,'file'));
if (flag_recalc | ~exist(fname_mat,'file') | tmp_lanczos_n_iteration_max< lanczos_n_iteration_max);
disp(sprintf(' %% %s not complete, calculating',fname_mat));
parameter_eig = struct('type','eig');
parameter_eig.flag_verbose = flag_verbose;
parameter_eig.flag_implicit_dtau = flag_implicit_dtau;
parameter_eig.flag_check = 1;
parameter_eig.flag_disp = 1;
parameter_eig.flag_kernel_qpro_d0 = 1;
parameter_eig.flag_kernel_qpro_d1 = 1;
parameter_eig.kernel_qpro_polar_a_pole_north=KAPPA_pole_north_double;
parameter_eig.kernel_qpro_polar_a_pole_south=KAPPA_pole_south_double;
parameter_eig.kernel_qpro_qref_k_eq_d_double=KAPPA_qref_k_eq_d_double;
parameter_eig.kernel_qpro_l_max_use = pm_l_max_max;
parameter_eig.lanczos_n_iteration_max = lanczos_n_iteration_max;
pm_U_SmallRotation_Delta_ykabc3__ = []; %<-- construct internally. ;
pm_U_tilde_SmallRotation_Delta_ykabc3__ = []; %<-- construct internally. ;
%%%%;
if ( flag_recalc | ~exist(fname_mat,'file'));
tmp_lanczos_n_iteration_max = 0;
rng(0);
pm_v_tilde_ykabci__=[];
pm_w_tilde_ykabc_=[];
alph_tilde_i_=[];
beta_tilde_i_=[];
dvol_a_k_Y_quad_yki__=[];
dtau_euler_polar_a_Mi__=[];
dtau_euler_azimu_b_Mi__=[];
dtau_euler_gamma_z_Mi__=[];
end;%if (~exist(fname_mat,'file'));
%%%%;
if (~flag_recalc &  exist(fname_mat,'file'));
tmp_ = load(fname_mat);
if isfield(tmp_,'alph_tilde_i_'); tmp_lanczos_n_iteration_max = numel(tmp_.alph_tilde_i_); end;
if isfield(tmp_,'pm_U_tilde_SmallRotation_Delta_ykabc3__'); pm_U_tilde_SmallRotation_Delta_ykabc3__ = tmp_.pm_U_tilde_SmallRotation_Delta_ykabc3__; end;
if isfield(tmp_,'pm_v_tilde_ykabci__'); pm_v_tilde_ykabci__ = tmp_.pm_v_tilde_ykabci__; end;
if isfield(tmp_,'pm_w_tilde_ykabc_'); pm_w_tilde_ykabc_ = tmp_.pm_w_tilde_ykabc_; end;
if isfield(tmp_,'alph_tilde_i_'); alph_tilde_i_ = tmp_.alph_tilde_i_; end;
if isfield(tmp_,'beta_tilde_i_'); beta_tilde_i_ = tmp_.beta_tilde_i_; end;
if isfield(tmp_,'dvol_a_k_Y_quad_yki__'); dvol_a_k_Y_quad_yki__ = tmp_.dvol_a_k_Y_quad_yki__; end;
if isfield(tmp_,'dtau_euler_polar_a_Mi__'); dtau_euler_polar_a_Mi__ = tmp_.dtau_euler_polar_a_Mi__; end;
if isfield(tmp_,'dtau_euler_azimu_b_Mi__'); dtau_euler_azimu_b_Mi__ = tmp_.dtau_euler_azimu_b_Mi__; end;
if isfield(tmp_,'dtau_euler_gamma_z_Mi__'); dtau_euler_gamma_z_Mi__ = tmp_.dtau_euler_gamma_z_Mi__; end;
clear tmp_;
end;%if ( exist(fname_mat,'file'));
%%%%;
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('pm_Ylm_uklma___','var'); pm_Ylm_uklma___=[]; end;
if ~exist('pm_k_p_azimu_b_sub_uka__','var'); pm_k_p_azimu_b_sub_uka__=[]; end;
if ~exist('pm_k_p_polar_a_sub_uka__','var'); pm_k_p_polar_a_sub_uka__=[]; end;
if ~exist('pm_l_max_uk_','var'); pm_l_max_uk_=[]; end;
if ~exist('pm_index_nu_n_k_per_shell_from_nk_p_r_','var'); pm_index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('pm_index_k_per_shell_uka__','var'); pm_index_k_per_shell_uka__=[]; end;
if ~exist('pm_V_lmm___','var'); pm_V_lmm___=[]; end;
if ~exist('pm_L_lm__','var'); pm_L_lm__=[]; end;
if ~exist('pm_d0W_betazeta_mlma____','var'); pm_d0W_betazeta_mlma____=[]; end;
if ~exist('pm_d1W_betazeta_mlma____','var'); pm_d1W_betazeta_mlma____=[]; end;
if ~exist('pm_d2W_betazeta_mlma____','var'); pm_d2W_betazeta_mlma____=[]; end;
if ~exist('pm_U_tilde_SmallRotation_Delta_ykabc3__','var'); pm_pm_U_tilde_SmallRotation_Delta_ykabc3__=[]; end;
%%%%;
%if ~exist('pm_v_tilde_ykabci__ ','var'); pm_v_tilde_ykabci__ =[]; end;
%if ~exist('pm_w_tilde_ykabc_ ','var'); pm_w_tilde_ykabc_ =[]; end;
%if ~exist('alph_tilde_i_','var'); alph_tilde_i_=[]; end;
%if ~exist('beta_tilde_i_ ','var'); beta_tilde_i_ =[]; end;
%%%%;
pm_a_k_p_reco_empi_ = [];
[ ...
 parameter_eig ...
,pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,pm_v_tilde_ykabci__  ...
,pm_w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
,dvol_pm_a_k_Y_quad_yki__ ...
,dtau_euler_polar_a_Mi__ ...
,dtau_euler_azimu_b_Mi__ ...
,dtau_euler_gamma_z_Mi__ ...
] = ...
eig_ddssnll_lanczos_3( ...
 parameter_eig ...
,pm_n_k_p_r ...
,pm_k_p_r_ ...
,pm_k_p_r_max ...
,pm_l_max_ ...
,pm_a_k_Y_reco_empi_yk_ ...
,pm_n_k_all ...
,pm_n_k_all_csum_ ...
,pm_k_p_r_all_ ...
,pm_k_p_azimu_b_all_ ...
,pm_k_p_polar_a_all_ ...
,pm_weight_3d_k_all_ ...
,pm_weight_shell_k_ ...
,pm_weight_3d_k_p_r_ ...
,pm_a_k_p_reco_empi_ ...
,pm_n_w_ ...
,pm_weight_2d_k_p_r_ ...
,pm_weight_2d_wk_ ...
,n_S_use ...
,pm_S_use_k_p_wkS__ ...
,viewing_polar_a_S_use_ ...
,viewing_azimu_b_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
,n_M_use ...
,weight_imagecount_M_use_ ...
,pm_M_use_k_p_wkM__ ...
,pm_n_CTF ...
,pm_index_nCTF_from_nM_use_ ...
,pm_CTF_k_p_r_kC__ ...
,pm_CTF_k_p_wkC__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,euler_polar_a_M_use_ ...
,euler_azimu_b_M_use_ ...
,euler_gamma_z_M_use_ ...
,KAPPA ...
,pm_Ylm_uklma___ ...
,pm_k_p_azimu_b_sub_uka__ ...
,pm_k_p_polar_a_sub_uka__ ...
,pm_l_max_uk_ ...
,pm_index_nu_n_k_per_shell_from_nk_p_r_ ...
,pm_index_k_per_shell_uka__ ...
,pm_V_lmm___ ...
,pm_L_lm__ ...
,pm_d0W_betazeta_mlma____ ...
,pm_d1W_betazeta_mlma____ ...
,pm_d2W_betazeta_mlma____ ...
,pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,pm_v_tilde_ykabci__  ...
,pm_w_tilde_ykabc_  ...
,alph_tilde_i_ ...
,beta_tilde_i_ ... 
);
save(fname_mat ...
     ,'parameter_eig' ...
     ,'pm_n_k_p_r' ...
     ,'pm_k_p_r_' ...
     ,'pm_k_p_r_max' ...
     ,'pm_l_max_' ...
     ,'pm_n_k_all' ...
     ,'pm_n_k_all_csum_' ...
     ,'pm_k_p_r_all_' ...
     ,'pm_k_p_azimu_b_all_' ...
     ,'pm_k_p_polar_a_all_' ...
     ,'pm_weight_3d_k_all_' ...
     ,'pm_weight_shell_k_' ...
     ,'pm_weight_3d_k_p_r_' ...
     ,'pm_n_w_' ...
     ,'pm_weight_2d_k_p_r_' ...
     ,'pm_weight_2d_wk_' ...
     ,'n_S_use' ...
     ,'pm_S_use_k_p_wkS__' ...
     ,'viewing_polar_a_S_use_' ...
     ,'viewing_azimu_b_S_use_' ...
     ,'viewing_weight_S_use_' ...
     ,'n_viewing_polar_a_use' ...
     ,'viewing_polar_a_use_' ...
     ,'n_viewing_azimu_b_use_' ...
     ,'pm_U_tilde_SmallRotation_Delta_ykabc3__' ...
     ,'pm_v_tilde_ykabci__'  ...
     ,'pm_w_tilde_ykabc_' ...
     ,'alph_tilde_i_' ...
     ,'beta_tilde_i_' ... 
     ,'dvol_pm_a_k_Y_quad_yki__ '...
     ,'dtau_euler_polar_a_Mi__' ...
     ,'dtau_euler_azimu_b_Mi__' ...
     ,'dtau_euler_gamma_z_Mi__' ...
     ,'n_M_use' ...
     ,'viewing_weight_M_use_' ...
     ,'weight_imagecount_M_use_' ...
     ,'factor_imagecount_M_use_' ...
     ,'pm_M_use_k_p_wkM__' ...
     ,'pm_n_CTF' ...
     ,'pm_index_nCTF_from_nM_use_' ...
     ,'pm_CTF_k_p_r_kC__' ...
     ,'pm_CTF_k_p_wkC__' ...
     ,'euler_polar_a_M_use_' ...
     ,'euler_azimu_b_M_use_' ...
     ,'euler_gamma_z_M_use_' ...
     );
close_fname_tmp(fname_pre);
%%%%%%%%;
end;%if (flag_recalc | ~exist(fname_mat,'file') | tmp_lanczos_n_iteration_max< lanczos_n_iteration_max);
%%%%%%%%%%%%%%%%;
end;%if flag_recalc | ~flag_skip
%%%%%%%%%%%%%%%%;
if ( exist(fname_mat,'file'));
disp(sprintf(' %% %s found, not creating',fname_mat));
end;%if ( exist(fname_mat,'file'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%disp(sprintf(' %% returning before diagnostic')); return;

if flag_calc;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
flag_implicit_dtau = 1;
viewing_weight_M_use_ = ones(n_M_use,1);
factor_imagecount_M_use_ = 1/max(1e-12,sum(viewing_weight_M_use_));
weight_imagecount_M_use_ = viewing_weight_M_use_ .* factor_imagecount_M_use_ ;
nlsigma_dist = 0; n_lsigma_dist = 1; lsigma_dist = NaN;
str_infix = sprintf('p_reco_empi');
if (flag_verbose>0); disp(sprintf(' %% %s',str_infix)); end;
str_dir_mat = sprintf('%s_mat',dir_ssnll);
str_dir_jpg = sprintf('%s_jpg',dir_ssnll);
if flag_implicit_dtau==0; str_fname_nopath_prefix = sprintf('eig_from_image_%s_%s',str_tolerance_pm,str_infix); end;
if flag_implicit_dtau==1; str_fname_nopath_prefix = sprintf('eig_i1_from_image_%s_%s',str_tolerance_pm,str_infix); end;
fname_mat = sprintf('%s/%s.mat',str_dir_mat,str_fname_nopath_prefix);
if ~exist(fname_mat,'file');
disp(sprintf(' %% Warning, %s not found, not running diagnostic',fname_mat));
end;%if ~exist(fname_mat,'file');
if  exist(fname_mat,'file');
tmp_ = load(fname_mat);
if ~exist('KAPPA','var'); KAPPA=[]; end;
if ~exist('pm_Ylm_uklma___','var'); pm_Ylm_uklma___=[]; end;
if ~exist('pm_k_p_azimu_b_sub_uka__','var'); pm_k_p_azimu_b_sub_uka__=[]; end;
if ~exist('pm_k_p_polar_a_sub_uka__','var'); pm_k_p_polar_a_sub_uka__=[]; end;
if ~exist('pm_l_max_uk_','var'); pm_l_max_uk_=[]; end;
if ~exist('pm_index_nu_n_k_per_shell_from_nk_p_r_','var'); pm_index_nu_n_k_per_shell_from_nk_p_r_=[]; end;
if ~exist('pm_index_k_per_shell_uka__','var'); pm_index_k_per_shell_uka__=[]; end;
if ~exist('pm_V_lmm___','var'); pm_V_lmm___=[]; end;
if ~exist('pm_L_lm__','var'); pm_L_lm__=[]; end;
if ~exist('pm_d0W_betazeta_mlma____','var'); pm_d0W_betazeta_mlma____=[]; end;
if ~exist('pm_d1W_betazeta_mlma____','var'); pm_d1W_betazeta_mlma____=[]; end;
if ~exist('pm_d2W_betazeta_mlma____','var'); pm_d2W_betazeta_mlma____=[]; end;
if ~exist('pm_U_tilde_SmallRotation_Delta_ykabc3__','var'); pm_U_tilde_SmallRotation_Delta_ykabc3__=[]; end;
parameter_eig_diagnostic = struct('type','eig_diagnostic');
parameter_eig_diagnostic.flag_verbose = flag_verbose;
parameter_eig_diagnostic.flag_implicit_dtau = flag_implicit_dtau;
parameter_eig_diagnostic.flag_recalc = 0;
parameter_eig_diagnostic.flag_check = 1;
parameter_eig_diagnostic.flag_disp = 1;
parameter_eig_diagnostic.flag_replot = 0;
parameter_eig_diagnostic.flag_kernel_qpro_d0 = 1;
parameter_eig_diagnostic.flag_kernel_qpro_d1 = 1;
parameter_eig_diagnostic.kernel_qpro_polar_a_pole_north=KAPPA_pole_north_double;
parameter_eig_diagnostic.kernel_qpro_polar_a_pole_south=KAPPA_pole_south_double;
parameter_eig_diagnostic.kernel_qpro_qref_k_eq_d_double=KAPPA_qref_k_eq_d_double;
parameter_eig_diagnostic.kernel_qpro_l_max_use = pm_l_max_max;
parameter_eig_diagnostic.lanczos_n_iteration_max = lanczos_n_iteration_max;
eig_ddssnll_lanczos_diagnostic_4( ...
 parameter_eig_diagnostic ...
,pm_n_k_p_r ...
,pm_k_p_r_ ...
,pm_k_p_r_max ...
,pm_l_max_ ...
,pm_a_k_Y_reco_empi_yk_ ...
,pm_n_k_all ...
,pm_n_k_all_csum_ ...
,pm_k_p_r_all_ ...
,pm_k_p_azimu_b_all_ ...
,pm_k_p_polar_a_all_ ...
,pm_weight_3d_k_all_ ...
,pm_weight_shell_k_ ...
,pm_weight_3d_k_p_r_ ...
,[] ...
,pm_n_w_ ...
,pm_weight_2d_k_p_r_ ...
,pm_weight_2d_wk_ ...
,n_S_use ...
,pm_S_use_k_p_wkS__ ...
,viewing_polar_a_S_use_ ...
,viewing_azimu_b_S_use_ ...
,viewing_weight_S_use_ ...
,n_viewing_polar_a_use ...
,viewing_polar_a_use_ ...
,n_viewing_azimu_b_use_ ...
,n_M_use ...
,weight_imagecount_M_use_ ...
,pm_M_use_k_p_wkM__ ...
,pm_n_CTF ...
,pm_index_nCTF_from_nM_use_ ...
,pm_CTF_k_p_r_kC__ ...
,pm_CTF_k_p_wkC__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,euler_polar_a_M_use_ ...
,euler_azimu_b_M_use_ ...
,euler_gamma_z_M_use_ ...
,KAPPA ...
,pm_Ylm_uklma___ ...
,pm_k_p_azimu_b_sub_uka__ ...
,pm_k_p_polar_a_sub_uka__ ...
,pm_l_max_uk_ ...
,pm_index_nu_n_k_per_shell_from_nk_p_r_ ...
,pm_index_k_per_shell_uka__ ...
,pm_V_lmm___ ...
,pm_L_lm__ ...
,pm_d0W_betazeta_mlma____ ...
,pm_d1W_betazeta_mlma____ ...
,pm_d2W_betazeta_mlma____ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
,UX_kn__ ...
,X_weight_r_ ...
,n_x_u_pack ...
,tmp_.pm_U_tilde_SmallRotation_Delta_ykabc3__ ...
,tmp_.pm_v_tilde_ykabci__  ...
,tmp_.pm_w_tilde_ykabc_  ...
,tmp_.alph_tilde_i_ ...
,tmp_.beta_tilde_i_ ... 
,str_dir_mat ...
,str_dir_jpg ...
,str_fname_nopath_prefix ...
);
clear tmp_;
end;%if  exist(fname_mat,'file');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_calc;

%{

  %%%%%%%%;
  % First collect/collate data. ;
  %%%%%%%%;
  platform = 'rusty';
  if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
  if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
  if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
  if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
  if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
  str_dir_mat = sprintf('%s_mat',dir_ssnll);
  str_dir_jpg = sprintf('%s_jpg',dir_ssnll);
  flag_implicit_dtau = 1;
  viewing_weight_M_use_ = ones(n_M_use,1);
  factor_imagecount_M_use_ = 1/max(1e-12,sum(viewing_weight_M_use_));
  weight_imagecount_M_use_ = viewing_weight_M_use_ .* factor_imagecount_M_use_ ;
  nlsigma_dist = 0; n_lsigma_dist = 1; lsigma_dist = NaN;
  str_infix = sprintf('p_reco_empi');
  if (flag_verbose>0); disp(sprintf(' %% %s',str_infix)); end;
  lanczos_n_iteration_max = 32;
  ddssnll_mid_q2d_i_ = zeros(1,lanczos_n_iteration_max);
  ddssnll_dif_q2d_i_ = zeros(1,lanczos_n_iteration_max);
  ddssnll_lsq_q2d_i_ = zeros(1,lanczos_n_iteration_max);
  nfound = 0;
  str_fname_nopath_prefix = sprintf('eig_i1_from_image_%s_%s',str_tolerance_pm,str_infix);
  str_dir_sub_mat = sprintf('%s/dir_%s',str_dir_mat,str_fname_nopath_prefix);
  for index_lambda=0:lanczos_n_iteration_max-1;
  str_fname_nopath_sub_prefix = sprintf('%s_i%.3dl%.3d',str_fname_nopath_prefix,lanczos_n_iteration_max-1,index_lambda);
  tmp_fname_sub_mat = sprintf('%s/%s.mat',str_dir_sub_mat,str_fname_nopath_sub_prefix);
  if ~exist(tmp_fname_sub_mat,'file');
  disp(sprintf(' %% Warning, %s not found',tmp_fname_sub_mat));
  end;%if ~exist(tmp_fname_sub_mat,'file');
  if  exist(tmp_fname_sub_mat,'file');
  tmp_ = load(tmp_fname_sub_mat,'tmp_ddssnll_mid_q2d','tmp_ddssnll_dif_q2d','tmp_ddssnll_lsq_q2d');
  disp(sprintf(' %% %% %s: mid %+16.4f dif %+16.4f lsq %+16.4f',str_fname_nopath_sub_prefix,tmp_.tmp_ddssnll_mid_q2d,tmp_.tmp_ddssnll_dif_q2d,tmp_.tmp_ddssnll_lsq_q2d));
  ddssnll_mid_q2d_i_(1,1+index_lambda) = tmp_.tmp_ddssnll_mid_q2d;
  ddssnll_dif_q2d_i_(1,1+index_lambda) = tmp_.tmp_ddssnll_dif_q2d;
  ddssnll_lsq_q2d_i_(1,1+index_lambda) = tmp_.tmp_ddssnll_lsq_q2d;
  nfound  = nfound+1;
  clear tmp_;
  end;%if  exist(tmp_fname_sub_mat,'file');
  end;%for index_lambda=0:lanczos_n_iteration_max-1;
  disp(sprintf(' %% '));
  if (flag_verbose>0); disp(sprintf(' %% found %d/%d',nfound,lanczos_n_iteration_max)); end;
  %%%%%%%%;

  %%%%%%%%;
  % reconstruct tmp_a_x_u_reco_frompm_. ;
  %%%%%%%%;
  a_k_Y_reco_frompm_yk_ = zeros(n_lm_sum,1);
  for pm_nk_p_r=0:pm_n_k_p_r-1;
  for nk_p_r=0:n_k_p_r-1;
  if (flag_verbose>1); disp(sprintf(' %% adding pm_nk_p_r %d/%d nk_p_r %d/%d',pm_nk_p_r,pm_n_k_p_r,nk_p_r,n_k_p_r)); end;
  tmp_l_max = l_max_(1+nk_p_r);
  pm_tmp_l_max = pm_l_max_(1+pm_nk_p_r);
  tmp_n_lm = (tmp_l_max+1).^2;
  tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
  pm_tmp_n_lm = (pm_tmp_l_max+1).^2;
  pm_tmp_index_ = pm_n_lm_csum_(1+pm_nk_p_r) + (0:pm_tmp_n_lm-1);
  a_k_Y_reco_frompm_yk_(1+tmp_index_) = a_k_Y_reco_frompm_yk_(1+tmp_index_) + UX_kn__(1+nk_p_r,1+pm_nk_p_r)/max(1e-12,X_weight_r_(1+nk_p_r))*pm_a_k_Y_reco_empi_yk__(1:tmp_n_lm,1+pm_nk_p_r);
  end;%for nk_p_r=0:n_k_p_r-1;
  end;%for pm_nk_p_r=0:pm_n_k_p_r-1;
  %%%%;
  tmp_a_k_p_reco_frompm_ = zeros(n_k_all,1);
  tmp_t = tic;
  if ~exist('Ylm_uklma___','var'); Ylm_uklma___ = []; end;
  if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__ = []; end;
  if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__ = []; end;
  if ~exist('l_max_uk_','var'); l_max_uk_ = []; end;
  if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_ = []; end;
  if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__ = []; end;
  [ ...
		 tmp_a_k_p_reco_frompm_ ...
				 ,Ylm_uklma___ ...
				 ,k_p_azimu_b_sub_uka__ ...
				 ,k_p_polar_a_sub_uka__ ...
				 ,l_max_uk_ ...
				 ,index_nu_n_k_per_shell_from_nk_p_r_ ...
				 ,index_k_per_shell_uka__ ...
    ] = ...
    convert_spharm_to_k_p_4( ...
			     0*flag_verbose ...
			     ,n_k_all ...
			     ,n_k_all_csum_ ...
			     ,k_p_r_all_ ...
			     ,k_p_azimu_b_all_ ...
			     ,k_p_polar_a_all_ ...
			     ,weight_3d_k_all_ ...
			     ,weight_shell_k_ ...
			     ,n_k_p_r ...
			     ,k_p_r_ ...
			     ,weight_3d_k_p_r_ ...
			     ,l_max_ ...
			     ,a_k_Y_reco_frompm_yk_ ...
			     ,Ylm_uklma___ ...
			     ,k_p_azimu_b_sub_uka__ ...
			     ,k_p_polar_a_sub_uka__ ...
			     ,l_max_uk_ ...
			     ,index_nu_n_k_per_shell_from_nk_p_r_ ...
			     ,index_k_per_shell_uka__ ...
			     );
  tmp_t = toc(tmp_t); disp(sprintf(' %% tmp_a_k_p_reco_frompm_ time %0.2fs',tmp_t));
  %%%%;
  eta = pi/k_p_r_max; tmp_t = tic;
  tmp_a_x_u_reco_frompm_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,tmp_a_k_p_reco_frompm_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
  tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: tmp_a_x_u_reco_frompm_ time %0.2fs',tmp_t));
  %%%%%%%%;

  lambda_cut = 3.5;
  index_lambda=17;
  %%%%%%%%;
  lambda_mid = real(ddssnll_mid_q2d_i_(1,1+index_lambda));
  lambda_dif = real(ddssnll_dif_q2d_i_(1,1+index_lambda));
  lambda_lsq = real(ddssnll_lsq_q2d_i_(1,1+index_lambda));
  lambda_mid_min = min(real(ddssnll_mid_q2d_i_(1,:)));
  lambda_dif_min = min(real(ddssnll_dif_q2d_i_(1,:)));
  lambda_lsq_min = min(real(ddssnll_lsq_q2d_i_(1,:)));
  flag_ismin = (lambda_dif==lambda_dif_min) | (lambda_lsq==lambda_lsq_min);
  disp(sprintf(' %% index_lambda %d lambda_mid +%0.6f lambda_dif +%0.6f lambda_lsq +%0.6f',index_lambda,lambda_mid,lambda_dif,lambda_lsq));

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  if (flag_ismin | (lambda_dif<=lambda_cut & lambda_lsq<=lambda_cut));
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  nlsigma_dist = 0; n_lsigma_dist = 1; lsigma_dist = NaN;
  str_infix = sprintf('p_reco_empi');
  if (flag_verbose>0); disp(sprintf(' %% %s',str_infix)); end;
  str_dir_sub_mat = sprintf('%s/dir_%s',str_dir_mat,str_fname_nopath_prefix);
  str_dir_sub_jpg = sprintf('%s/dir_%s',str_dir_jpg,str_fname_nopath_prefix);
  str_fname_nopath_sub_prefix = sprintf('%s_i%.3dl%.3d',str_fname_nopath_prefix,lanczos_n_iteration_max-1,index_lambda);
  tmp_fname_sub_mat = sprintf('%s/%s.mat',str_dir_sub_mat,str_fname_nopath_sub_prefix);
  if ~exist(tmp_fname_sub_mat,'file');
  disp(sprintf(' %% Warning, %s not found',tmp_fname_sub_mat));
  end;%if ~exist(tmp_fname_sub_mat,'file');

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  if  exist(tmp_fname_sub_mat,'file');
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  tmp_ = load(tmp_fname_sub_mat);
  %%%%;
  from_pm_UX_kn__ = UX_kn__;
  pm_n_k_p_r = tmp_.pm_n_k_p_r;
  pm_k_p_r_ = tmp_.pm_k_p_r_;
  pm_k_p_r_max = tmp_.pm_k_p_r_max;
  pm_l_max_ = tmp_.pm_l_max_;
  pm_weight_3d_k_p_r_ = tmp_.pm_weight_3d_k_p_r_;
  n_M_use = tmp_.n_M_use;
  weight_imagecount_M_use_ = tmp_.weight_imagecount_M_use_;
  euler_polar_a_M_use_ = tmp_.euler_polar_a_M_use_;
  euler_azimu_b_M_use_ = tmp_.euler_azimu_b_M_use_;
  euler_gamma_z_M_use_ = tmp_.euler_gamma_z_M_use_;
  n_M_imp = tmp_.n_M_imp;
  weight_imagecount_M_imp_ = tmp_.weight_imagecount_M_imp_;
  scaling_volumetric = tmp_.scaling_volumetric;
  pm_weight_3d_riesz_k_p_r_ = tmp_.pm_weight_3d_riesz_k_p_r_;
  pm_weight_3d_riesz_weight_imagecount_ykabc_ = tmp_.pm_weight_3d_riesz_weight_imagecount_ykabc_;
  pm_v_tilde_eig_ykabc_ = tmp_.pm_v_tilde_eig_ykabc_;
  pm_v_eig_ykabc_ = tmp_.pm_v_eig_ykabc_;
  %%%%;

  %%%%%%%%;
  % visualize pm_v_eig_dvol_yk_;
  %%%%%%%%;
  [pm_v_tilde_eig_dvol_yk_,pm_v_tilde_eig_polar_a_M_use_,pm_v_tilde_eig_azimu_b_M_use_,pm_v_tilde_eig_gamma_z_M_use_] = local_yk_a_b_c_from_ykabc_(pm_n_k_p_r,pm_l_max_,n_M_imp,pm_v_tilde_eig_ykabc_);
  [pm_v_eig_dvol_yk_,pm_v_eig_polar_a_M_use_,pm_v_eig_azimu_b_M_use_,pm_v_eig_gamma_z_M_use_] = local_yk_a_b_c_from_ykabc_(pm_n_k_p_r,pm_l_max_,n_M_imp,pm_v_eig_ykabc_);
  pm_v_k_Y_use_yk_ = pm_v_eig_dvol_yk_;
  pm_v_k_Y_use_yk__ = local_yk__from_yk_(pm_n_k_p_r,pm_l_max_,pm_v_k_Y_use_yk_);
  v_k_Y_reco_yk_ = zeros(n_lm_sum,1);
  pm_n_UX_rank = pm_n_k_p_r;
  for nUX_rank=0:pm_n_UX_rank-1;
  for nk_p_r=0:n_k_p_r-1;
  tmp_l_max = l_max_(1+nk_p_r);
  tmp_n_lm = (tmp_l_max+1).^2;
  tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:tmp_n_lm-1);
  v_k_Y_reco_yk_(1+tmp_index_) = v_k_Y_reco_yk_(1+tmp_index_) + from_pm_UX_kn__(1+nk_p_r,1+nUX_rank)/max(1e-12,X_weight_r_(1+nk_p_r))*pm_v_k_Y_use_yk__(1:tmp_n_lm,1+nUX_rank);
  end;%for nk_p_r=0:n_k_p_r-1;
  end;%for nUX_rank=0:pm_n_UX_rank-1;
  %%%%;
  tmp_t = tic;
  if ~exist('Ylm_uklma___','var'); Ylm_uklma___ = []; end;
  if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__ = []; end;
  if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__ = []; end;
  if ~exist('l_max_uk_','var'); l_max_uk_ = []; end;
  if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_ = []; end;
  if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__ = []; end;
  [ ...
	     v_k_p_reco_ ...
			 ,Ylm_uklma___ ...
			 ,k_p_azimu_b_sub_uka__ ...
			 ,k_p_polar_a_sub_uka__ ...
			 ,l_max_uk_ ...
			 ,index_nu_n_k_per_shell_from_nk_p_r_ ...
			 ,index_k_per_shell_uka__ ...
    ] = ...
    convert_spharm_to_k_p_4( ...
			     0*flag_verbose ...
			     ,n_k_all ...
			     ,n_k_all_csum_ ...
			     ,k_p_r_all_ ...
			     ,k_p_azimu_b_all_ ...
			     ,k_p_polar_a_all_ ...
			     ,weight_3d_k_all_ ...
			     ,weight_shell_k_ ...
			     ,n_k_p_r ...
			     ,k_p_r_ ...
			     ,weight_3d_k_p_r_ ...
			     ,l_max_ ...
			     ,v_k_Y_reco_yk_ ...
			     ,Ylm_uklma___ ...
			     ,k_p_azimu_b_sub_uka__ ...
			     ,k_p_polar_a_sub_uka__ ...
			     ,l_max_uk_ ...
			     ,index_nu_n_k_per_shell_from_nk_p_r_ ...
			     ,index_k_per_shell_uka__ ...
			     );
  tmp_t = toc(tmp_t); disp(sprintf(' %% v_k_p_reco_ time %0.2fs',tmp_t));
  %%%%;
  eta = pi/k_p_r_max; tmp_t = tic;
  v_x_u_reco_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,v_k_p_reco_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
  tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: v_x_u_reco_ time %0.2fs',tmp_t));
  %%%%;
  tmp_a_x_u_reco_ = tmp_a_x_u_reco_frompm_;

  %%%%;
  fname_fig_pre = sprintf('%s/%s_FIGF',str_dir_sub_jpg,str_fname_nopath_sub_prefix);
  fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
  fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
  if flag_replot | ~exist(fname_fig_jpg,'file');
  figure(1+nf);nf=nf+1;clf;figbig;fig80s;
  vmax = max(abs(v_x_u_reco_),[],'all');
  amax = max(abs(tmp_a_x_u_reco_),[],'all');
  dvol_ = 3e-1*[-1:+1]; p_col = numel(dvol_);
  prct_ = [98.5,99.0]; p_row = numel(prct_);
  np=0;
  for prow=0:p_row-1;
  prct = prct_(1+prow);
  pcol=0;
  for dvol=0:numel(dvol_)-1;
  subplot(p_row,p_col,1+np);np=np+1;cla;
  dvol = dvol_(1+dvol);
  tmp_tmp_a_x_u_reco_ = tmp_a_x_u_reco_/max(1e-12,amax) + dvol*v_x_u_reco_/max(1e-12,vmax);
  isosurface_f_x_u_1(struct('percent_threshold_',[prct]),tmp_tmp_a_x_u_reco_);
  title(sprintf('prct %5.2f dvol %0.2f',prct,dvol));
  pcol=pcol+1;
  end;%for dvol=0:numel(dvol_)-1;
  end;%for prow=0:p_row-1;
  set(gcf,'Position',1+[0,0,1024*2,2*(768-128)]);
  str_sgtitle = sprintf('%s index_lambda %d lambda %+0.2f[%+0.2f] = exp(%+0.2f)[exp(%+0.2f)]',str_fname_nopath_prefix,index_lambda,lambda_dif,lambda_lsq,log(abs(lambda_dif)),log(abs(lambda_lsq)));
  sgtitle(str_sgtitle,'Interpreter','none');
  %sgtitle(fname_fig_pre,'Interpreter','none');
  disp(sprintf(' %% writing %s',fname_fig_pre));
  print('-djpeg',fname_fig_jpg);
  %print('-depsc',fname_fig_eps);
  close(gcf);
  end;%if flag_replot | ~exist(fname_fig_jpg,'file');
  %%%%;

  %%%%;
  fname_fig_pre = sprintf('%s/%s_FIGG',str_dir_sub_jpg,str_fname_nopath_sub_prefix);
  fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
  fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
  if flag_replot | ~exist(fname_fig_jpg,'file');
  figure(1+nf);nf=nf+1;clf;figbig;fig80s;
  prct_ = [98.5,99.0]; p_row = numel(prct_);
  p_col = 2; np=0;
  for prow=0:p_row-1;
  prct = prct_(1+prow);
  subplot(p_row,p_col,1+np);np=np+1;cla;
  isosurface_f_x_u_1(struct('percent_threshold_',[100-prct,prct],'c_use__',colormap_pm),v_x_u_reco_);
  title(sprintf('prct [%5.2f,%5.2f]:',[100-prct,prct]));
  subplot(p_row,p_col,1+np);np=np+1;cla;
  isosurface_f_x_u_2(struct('percent_threshold_',prct),tmp_a_x_u_reco_,v_x_u_reco_);
  title(sprintf('prct [%5.2f]:',[prct]));
  end;%for prow=0:p_row-1;
  set(gcf,'Position',1+[0,0,1024*1.5,1024*1.5]);
  str_sgtitle = sprintf('%s index_lambda %d lambda %+0.2f[%+0.2f] = exp(%+0.2f)[exp(%+0.2f)]',str_fname_nopath_prefix,index_lambda,lambda_dif,lambda_lsq,log(abs(lambda_dif)),log(abs(lambda_lsq)));
  sgtitle(str_sgtitle,'Interpreter','none');
  %sgtitle(fname_fig_pre,'Interpreter','none');
  disp(sprintf(' %% writing %s',fname_fig_pre));
  print('-djpeg',fname_fig_jpg);
  %print('-depsc',fname_fig_eps);
  close(gcf);
  end;%if flag_replot | ~exist(fname_fig_jpg,'file');
  %%%%;
 
  %%%%;
  fname_fig_pre = sprintf('%s/%s_FIGH',str_dir_sub_jpg,str_fname_nopath_sub_prefix);
  fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
  fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
  if flag_replot | ~exist(fname_fig_jpg,'file');
  figure(1+nf);nf=nf+1;clf;figmed;
  tmp_dtau_euler_fnorm = sum(bsxfun(@times,[tmp_.tmp_dtau_euler_polar_a_M_use_,tmp_.tmp_dtau_euler_azimu_b_M_use_,tmp_.tmp_dtau_euler_gamma_z_M_use_].^2,tmp_.weight_imagecount_M_use_),'all');
  tmp_dtau_euler_nrm_polar_a_M_ = tmp_.tmp_dtau_euler_polar_a_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  tmp_dtau_euler_nrm_azimu_b_M_ = tmp_.tmp_dtau_euler_azimu_b_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  tmp_dtau_euler_nrm_gamma_z_M_ = tmp_.tmp_dtau_euler_gamma_z_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  factor_amplify = 4.0;%factor_amplify = 2.0;
  figbig;
  subplot(1,1,1);
  hold on;
  sphere_compass__0( ...
		     struct('type','sphere_compass','compass_r_base',factor_amplify*1.0/(2*pi)/2*sqrt(0.5),'flag_2d_vs_3d',1,'flag_normalize',1) ...
		     ,tmp_.n_M_use ...
		     ,tmp_.euler_polar_a_M_use_ ...
		     ,tmp_.euler_azimu_b_M_use_ ...
		     ,tmp_dtau_euler_nrm_polar_a_M_ ...
		     ,tmp_dtau_euler_nrm_azimu_b_M_ ...
		     ,tmp_dtau_euler_nrm_gamma_z_M_ ...
		     );
  hold off;
  xlim([0,2*pi]); xlabel('azimu_b','Interpreter','none');
  ylim([0,1*pi]); ylabel('polar_a','Interpreter','none');
  axisnotick;
  title('dtau_euler_','Interpreter','none');
  str_sgtitle = sprintf('%s index_lambda %d lambda %+0.2f[%+0.2f] = exp(%+0.2f)[exp(%+0.2f)]',str_fname_nopath_prefix,index_lambda,lambda_dif,lambda_lsq,log(abs(lambda_dif)),log(abs(lambda_lsq)));
  sgtitle(str_sgtitle,'Interpreter','none');
  %sgtitle(fname_fig_pre,'Interpreter','none');
  disp(sprintf(' %% writing %s',fname_fig_pre));
  print('-djpeg',fname_fig_jpg);
  %print('-depsc',fname_fig_eps);
  close(gcf);
  end;%if flag_replot | ~exist(fname_fig_jpg,'file');
  %%%%;

  %%%%;
  fname_fig_pre = sprintf('%s/%s_FIGI',str_dir_sub_jpg,str_fname_nopath_sub_prefix);
  fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
  fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
  if flag_replot | ~exist(fname_fig_jpg,'file');
  figure(1+nf);nf=nf+1;clf;figmed;
  tmp_dtau_euler_fnorm = sum(bsxfun(@times,[tmp_.tmp_dtau_euler_polar_a_M_use_,tmp_.tmp_dtau_euler_azimu_b_M_use_,tmp_.tmp_dtau_euler_gamma_z_M_use_].^2,tmp_.weight_imagecount_M_use_),'all');
  tmp_dtau_euler_nrm_polar_a_M_ = tmp_.tmp_dtau_euler_polar_a_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  tmp_dtau_euler_nrm_azimu_b_M_ = tmp_.tmp_dtau_euler_azimu_b_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  tmp_dtau_euler_nrm_gamma_z_M_ = tmp_.tmp_dtau_euler_gamma_z_M_use_/max(1e-12,tmp_dtau_euler_fnorm);
  factor_amplify = 4.0;%factor_amplify = 2.0;
  %%%%;
  figbig;
  for np=0:1;
  subplot(1,2,1+np);
  hold on;
  plot_sphere_grid_0(struct('flag_solid',1));
  sphere_compass__0( ...
		     struct('type','sphere_compass','compass_r_base',factor_amplify*1.0/(2*pi)/4,'flag_2d_vs_3d',0,'flag_normalize',1) ...
		     ,tmp_.n_M_use ...
		     ,tmp_.euler_polar_a_M_use_ ...
		     ,tmp_.euler_azimu_b_M_use_ ...
		     ,tmp_dtau_euler_nrm_polar_a_M_ ...
		     ,tmp_dtau_euler_nrm_azimu_b_M_ ...
		     ,tmp_dtau_euler_nrm_gamma_z_M_ ...
		     );
  hold off;
  xlabel('x0'); ylabel('x1'); zlabel('x2'); axis equal; axis vis3d; axisnotick3d;
  if np==0; view(0,+90); title('dtau_euler_ view(0,+90)','Interpreter','none'); end;
  if np==1; view(0,-90); title('dtau_euler_ view(0,-90)','Interpreter','none'); end;
  end;%for np=0:1;
  %%%%;
  sgtitle(str_sgtitle,'Interpreter','none');
  %sgtitle(fname_fig_pre,'Interpreter','none');
  disp(sprintf(' %% writing %s',fname_fig_pre));
  print('-djpeg',fname_fig_jpg);
  %print('-depsc',fname_fig_eps);
  close(gcf);
  end;%if flag_replot | ~exist(fname_fig_jpg,'file');
  %%%%;

  %%%%%%%%;
  % estimate magnitude of perturbation. ;
  %%%%%%%%;
  [~,~,tmp_v_std] = spharm_normalize_2(pm_n_k_p_r,pm_k_p_r_,pm_weight_3d_k_p_r_,pm_l_max_,pm_v_eig_dvol_yk_);
  [~,~,tmp_a_std] = spharm_normalize_2(pm_n_k_p_r,pm_k_p_r_,pm_weight_3d_k_p_r_,pm_l_max_,pm_a_k_Y_quad_yk_);
  if (flag_verbose>0); disp(sprintf(' %% tmp_v_std/tmp_a_std %0.6f',tmp_v_std/tmp_a_std)); end;
  % tmp_v_std/tmp_a_std --> 78. ;
  % fnorm(v_x_u_reco_)/fnorm(tmp_a_x_u_reco_) --> 25. ;
  [pm_a_k_Y_quad_lr] = sqrt(local_f_bar_dot_g_(pm_n_k_p_r,pm_weight_3d_riesz_k_p_r_,pm_l_max_,0,pm_a_k_Y_quad_yk_,pm_a_k_Y_quad_yk_));
  [pm_v_tilde_eig_dvol_lr] = sqrt(local_weightless_f_bar_dot_g_(pm_n_k_p_r,pm_l_max_,0,pm_v_tilde_eig_dvol_yk_,pm_v_tilde_eig_dvol_yk_));
  [pm_v_eig_dvol_lr] = sqrt(local_f_bar_dot_g_(pm_n_k_p_r,pm_weight_3d_riesz_k_p_r_,pm_l_max_,0,pm_v_eig_dvol_yk_,pm_v_eig_dvol_yk_));
  if (flag_verbose>0); disp(sprintf(' %% pm_v_eig_dvol_lr/pm_a_k_Y_quad_lr %0.6f',pm_v_eig_dvol_lr/pm_a_k_Y_quad_lr)); end;
  % pm_v_eig_dvol_lr/pm_a_k_Y_quad_lr --> 64. ;
  % So we can imagine multiplying pm_v_eig_dvol_yk_ by (1/78) to produce something with equivalent norm to pm_a_k_Y_quad_yk_. ;
  % This then multiplies the value of H by (1/78^2) --> lambda_mid*(tmp_a_std/tmp_v_std)^2 --> 28.4e-5 (in image-driven units). ;
  % Note that sum(weight_imagecount_M_use_) --> 1.0, ;
  % so our likelihood takes the form of:
  % ssnll(a+delta*dvol) - ssnll(a) = N_image * (0.5 * 28.4e-5 * delta^2) ; %<-- here a and dvol have comparable l2-norm. ;
  % nll(a+delta*dvol) - nll(a) = sigma^-2 * N_image * (0.5 * 28.4e-5 * delta^2) ; %<-- delta could be thought of as dimensionless. ;
  % nll(a+delta*dvol) - nll(a) = 7.7e4 * N_image * (0.5 * 28.4e-5 * delta^2) ;
  % nll(a+delta*dvol) - nll(a) = 10.9 [bits/image] * N_image * delta^2 ;
  % log(20) [bits] = 10.9 [bits/image] * [1000 images] * delta^2 --> 0.00028 = delta^2 --> 0.017 = delta. ;
  % Meaning that about 0.017 (or 1/60) of the volume dvol can be added onto a before the new hypothesis can be rejected in favor of the data. ;
  % Note that, here, a and dvol are basically parallel: ;
  % [pm_a_dot_v_lr] = local_f_bar_dot_g_(pm_n_k_p_r,pm_weight_3d_riesz_k_p_r_,pm_l_max_,0,pm_a_k_Y_quad_yk_,pm_v_eig_dvol_yk_) --> 1.2e-2. ;
  % pm_a_dot_v_lr/max(1e-12,pm_a_k_Y_quad_lr*pm_v_eig_dvol_lr) --> 0.79. ;
  %%%%%%%%;
  tmp_a_x_u_reco_fnrm_ = tmp_a_x_u_reco_/max(1e-12,fnorm(tmp_a_x_u_reco_));
  v_x_u_reco_fnrm_ = v_x_u_reco_/max(1e-12,fnorm(v_x_u_reco_));
  tmp_H_scale = min(lambda_dif,lambda_lsq)*(tmp_a_std/tmp_v_std)^2;
  tmp_N_image = 1024;
  tmp_inv_sigma_squared = inv(RR_bar/n_x_u_pack^2);
  tmp_log20 = 3.0;
  tmp_dvol_mag = real(sqrt(tmp_log20 / (tmp_inv_sigma_squared * 0.5 * tmp_H_scale) / tmp_N_image ));
  if (flag_verbose>0); disp(sprintf(' %% tmp_dvol_mag %+0.6f',tmp_dvol_mag)); end;
  %%%%%%%%;
  
  %%%%%%%%;
  % Make frames for perturbation movie. ;
  %%%%%%%%;
  dvol_ = tmp_dvol_mag*[-1:0.5:+1]; n_dvol = numel(dvol_);
  prct_ = [98.75]; prct = prct_(1+0);
  for ndvol=0:n_dvol-1;
  dvol = dvol_(1+ndvol);
  figure(1+nf);nf=nf+1;clf;figsml;
  tmp_tmp_a_x_u_reco_fnrm_ = tmp_a_x_u_reco_fnrm_ + dvol*v_x_u_reco_fnrm_;
  isosurface_f_x_u_1(struct('percent_threshold_',[prct]),tmp_tmp_a_x_u_reco_fnrm_);
  %isosurface_f_x_u_2(struct('percent_threshold_',[prct]),tmp_tmp_a_x_u_reco_fnrm_,v_x_u_reco_);
  title(sprintf('prct %5.2f dvol %+.04f',prct,dvol));
  set(gcf,'Position',1+[0,0,1024*2,2*(768-128)]);
  str_sgtitle = sprintf('%s index_lambda %d lambda_dif %0.4f tmp_dvol_mag %0.6f',str_fname_nopath_prefix,index_lambda,lambda_dif,tmp_dvol_mag);
  sgtitle(str_sgtitle,'Interpreter','none');
  str_subplot = sprintf('p%.4d_dvol%d',100*prct,ndvol);
  fname_fig_pre = sprintf('%s/%s_FIGK_%s',str_dir_sub_jpg,str_fname_nopath_sub_prefix,str_subplot);
  fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
  fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
  if flag_replot | ~exist(fname_fig_jpg,'file');
  disp(sprintf(' %% writing %s',fname_fig_pre));
  print('-djpeg',fname_fig_jpg);
  end;%if flag_replot | ~exist(fname_fig_jpg,'file');
  end;%for ndvol=0:n_dvol-1;

  %%%%;
  clear tmp_;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  end;%if  exist(tmp_fname_sub_mat,'file');
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
  end;%if (lambda_dif<=lambda_cut & lambda_lsq<=lambda_cut);
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%}

disp(sprintf(' %% returning after diagnostic')); return;



