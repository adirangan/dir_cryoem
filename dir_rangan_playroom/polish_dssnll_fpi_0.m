function ...
[ ...
 parameter ...
,a_k_Y_crit_yk_ ...
,euler_polar_a_crit_M_ ...
,euler_azimu_b_crit_M_ ...
,euler_gamma_z_crit_M_ ...
,G_fnorm_crit ...
] = ...
polish_dssnll_fpi_0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_quad_yk_ ...
,a_k_Y_quad_yk__ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,weight_3d_k_p_r_ ...
,a_k_p_quad_ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,S_k_p_q2d_wkS__ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,KAPPA ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
);

str_thisfunction = 'polish_dssnll_fpi_0';

%%%%%%%%;
if (nargin<1);
%%%%%%%%;
test_slice_vs_volume_integral_5;
%%%%%%%%;
disp(sprintf(' %% returning')); return;
%%%%%%%%;
end;%if (nargin<1);
%%%%%%%%;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_k_p_r=[]; end; na=na+1;
if (nargin<1+na); k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); l_max_=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_quad_yk_=[]; end; na=na+1;
if (nargin<1+na); a_k_Y_quad_yk__=[]; end; na=na+1;
if (nargin<1+na); n_k_all=[]; end; na=na+1;
if (nargin<1+na); n_k_all_csum_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_all_=[]; end; na=na+1;
if (nargin<1+na); k_p_azimu_b_all_=[]; end; na=na+1;
if (nargin<1+na); k_p_polar_a_all_=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_all_=[]; end; na=na+1;
if (nargin<1+na); weight_shell_k_=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); a_k_p_quad_=[]; end; na=na+1;
if (nargin<1+na); n_w_=[]; end; na=na+1;
if (nargin<1+na); weight_2d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); weight_2d_wk_=[]; end; na=na+1;
if (nargin<1+na); n_S=[]; end; na=na+1;
if (nargin<1+na); S_k_p_q2d_wkS__=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_azimu_b_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_weight_S_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_polar_a=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_azimu_b_=[]; end; na=na+1;
if (nargin<1+na); n_M=[]; end; na=na+1;
if (nargin<1+na); M_k_p_wkM__=[]; end; na=na+1;
if (nargin<1+na); n_CTF=[]; end; na=na+1;
if (nargin<1+na); index_nCTF_from_nM_=[]; end; na=na+1;
if (nargin<1+na); CTF_k_p_r_kC__=[]; end; na=na+1;
if (nargin<1+na); CTF_k_p_wkC__=[]; end; na=na+1;
if (nargin<1+na); n_eta=[]; end; na=na+1;
if (nargin<1+na); index_neta_from_nM_=[]; end; na=na+1;
if (nargin<1+na); eta_k_p_r_ke__=[]; end; na=na+1;
if (nargin<1+na); eta_k_p_wke__=[]; end; na=na+1;
if (nargin<1+na); euler_polar_a_M_=[]; end; na=na+1;
if (nargin<1+na); euler_azimu_b_M_=[]; end; na=na+1;
if (nargin<1+na); euler_gamma_z_M_=[]; end; na=na+1;
if (nargin<1+na); KAPPA=[]; end; na=na+1;
if (nargin<1+na); Ylm_uklma___=[]; end; na=na+1;
if (nargin<1+na); k_p_azimu_b_sub_uka__=[]; end; na=na+1;
if (nargin<1+na); k_p_polar_a_sub_uka__=[]; end; na=na+1;
if (nargin<1+na); l_max_uk_=[]; end; na=na+1;
if (nargin<1+na); index_nu_n_k_per_shell_from_nk_p_r_=[]; end; na=na+1;
if (nargin<1+na); index_k_per_shell_uka__=[]; end; na=na+1;
if (nargin<1+na); V_lmm___=[]; end; na=na+1;
if (nargin<1+na); L_lm__=[]; end; na=na+1;
if (nargin<1+na); d0W_betazeta_mlma____=[]; end; na=na+1;
if (nargin<1+na); d1W_betazeta_mlma____=[]; end; na=na+1;
if (nargin<1+na); d2W_betazeta_mlma____=[]; end; na=na+1;

if isempty(parameter);
parameter = struct('type','parameter');
end;%if isempty(parameter);
%%%%%%%%;
if (~isfield(parameter,'flag_verbose')); parameter.flag_verbose = 0; end; %<-- parameter_bookmark. ;
flag_verbose = parameter.flag_verbose;
if (~isfield(parameter,'flag_check')); parameter.flag_check = 0; end; %<-- parameter_bookmark. ;
flag_check = parameter.flag_check;
if (~isfield(parameter,'flag_disp')); parameter.flag_disp = 0; end; %<-- parameter_bookmark. ;
flag_disp = parameter.flag_disp; nf=0;
if (~isfield(parameter,'tolerance_master')); parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
tolerance_master = parameter.tolerance_master;
if (~isfield(parameter,'flag_polish_update_volume')); parameter.flag_polish_update_volume = 0; end; %<-- parameter_bookmark. ;
flag_polish_update_volume = parameter.flag_polish_update_volume;
if (~isfield(parameter,'polish_dssnll_fpi_tolerance')); parameter.polish_dssnll_fpi_tolerance = tolerance_master; end; %<-- parameter_bookmark. ;
polish_dssnll_fpi_tolerance = parameter.polish_dssnll_fpi_tolerance;
if (~isfield(parameter,'polish_dssnll_fpi_stepsize')); parameter.polish_dssnll_fpi_stepsize = 1.0; end; %<-- parameter_bookmark. ;
polish_dssnll_fpi_stepsize = parameter.polish_dssnll_fpi_stepsize;
if (~isfield(parameter,'polish_dssnll_fpi_n_iteration')); parameter.polish_dssnll_fpi_n_iteration = 8; end; %<-- parameter_bookmark. ;
polish_dssnll_fpi_n_iteration = parameter.polish_dssnll_fpi_n_iteration;
if (~isfield(parameter,'viewing_k_eq_d')); parameter.viewing_k_eq_d = []; end; %<-- parameter_bookmark. ;
viewing_k_eq_d = parameter.viewing_k_eq_d;
if (~isfield(parameter,'template_k_eq_d')); parameter.template_k_eq_d = -1; end; %<-- parameter_bookmark. ;
template_k_eq_d = parameter.template_k_eq_d;
if (~isfield(parameter,'n_order')); parameter.n_order = 3; end; %<-- parameter_bookmark. ;
n_order = parameter.n_order;
if (~isfield(parameter,'flag_kernel_qpro_d0')); parameter.flag_kernel_qpro_d0 = 1; end; %<-- parameter_bookmark. ;
flag_kernel_qpro_d0 = parameter.flag_kernel_qpro_d0;
if (~isfield(parameter,'flag_kernel_qpro_d1')); parameter.flag_kernel_qpro_d1 = 1; end; %<-- parameter_bookmark. ;
flag_kernel_qpro_d1 = parameter.flag_kernel_qpro_d1;
if (~isfield(parameter,'kernel_qpro_polar_a_pole_north')); parameter.kernel_qpro_polar_a_pole_north = 4.5*pi/24; end; %<-- parameter_bookmark. ;
kernel_qpro_polar_a_pole_north = min(pi/2,parameter.kernel_qpro_polar_a_pole_north);
parameter.kernel_qpro_polar_a_pole_north = kernel_qpro_polar_a_pole_north;
if (~isfield(parameter,'kernel_qpro_polar_a_pole_south')); parameter.kernel_qpro_polar_a_pole_south = 3.5*pi/24; end; %<-- parameter_bookmark. ;
kernel_qpro_polar_a_pole_south = min(pi/2,parameter.kernel_qpro_polar_a_pole_south);
parameter.kernel_qpro_polar_a_pole_south = kernel_qpro_polar_a_pole_south;
if ~isfield(parameter,'kernel_qpro_qref_k_eq_d_double'); parameter.kernel_qpro_qref_k_eq_d_double=0.5; end;
kernel_qpro_qref_k_eq_d_double=parameter.kernel_qpro_qref_k_eq_d_double;
if (~isfield(parameter,'kernel_qpro_l_max_use')); parameter.kernel_qpro_l_max_use = max(l_max_); end; %<-- parameter_bookmark. ;
kernel_qpro_l_max_use = parameter.kernel_qpro_l_max_use;
%%%%;
if ~isfield(parameter,'flag_kernel_full'); parameter.flag_kernel_full=0; end;
flag_kernel_full=parameter.flag_kernel_full;
if (kernel_qpro_polar_a_pole_north + kernel_qpro_polar_a_pole_south > pi-1e-12);
flag_kernel_full = 1;
parameter.flag_kernel_full = flag_kernel_full;
end;%if (kernel_qpro_polar_a_pole_north + kernel_qpro_polar_a_pole_south > pi-1e-12);
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
n_w_max = max(n_w_);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_);
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
%%%%%%%%;

%%%%%%%%;
% We construct the riesz integration-weights on the sphere. ;
% These are associated with the riesz-potential 1/k^2.5, ;
% or a weighting-function (for the squared-L2-norm) of 1/k. ;
%%%%%%%%;
weight_3d_riesz_k_p_r_ = weight_3d_k_p_r_;
weight_3d_riesz_k_all_ = weight_3d_k_all_;
for nk_p_r=0:n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
weight_3d_k_p_r = weight_3d_k_p_r_(1+nk_p_r);
weight_2d_k_p_r = weight_2d_k_p_r_(1+nk_p_r);
weight_3d_riesz_k_p_r_(1+nk_p_r) = weight_3d_k_p_r_(1+nk_p_r) * weight_2d_k_p_r / max(1e-16,weight_3d_k_p_r);
tmp_index_ = n_k_all_csum_(1+nk_p_r):n_k_all_csum_(1+nk_p_r+1)-1;
if (flag_verbose> 1); disp(sprintf(' %% k_p_r %0.6f: sum(weight_3d_k_all_(1+tmp_index_))/(weight_3d_k_p_r * 4*pi): %0.16f',k_p_r,sum(weight_3d_k_all_(1+tmp_index_))/(4*pi*weight_3d_k_p_r))); end;
weight_3d_riesz_k_all_(1+tmp_index_) = weight_3d_k_all_(1+tmp_index_) * weight_2d_k_p_r / max(1e-16,weight_3d_k_p_r);
if (flag_verbose> 1); disp(sprintf(' %% k_p_r %0.6f: sum(weight_3d_riesz_k_all_(1+tmp_index_))/(weight_2d_k_p_r * 4*pi): %0.16f',k_p_r,sum(weight_3d_riesz_k_all_(1+tmp_index_))/(4*pi*weight_2d_k_p_r))); end;
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;

%%%%%%%%;
% Calibrate scaling factor. ;
%%%%%%%%;
term_deltafunc = sqrt(2*pi);
term_2 = (pi*k_p_r_max^2)/(4*pi^2);
if (flag_verbose>1); disp(sprintf(' %% sum(weight_2d_wk_) vs (pi*k_p_r_max^2)/(4*pi^2): %0.16f',fnorm(sum(weight_2d_wk_) - term_2))); end;
term_3 = (4/3)*pi*k_p_r_max^3;
if (flag_verbose>1); disp(sprintf(' %% sum(weight_3d_k_all_) vs (4/3)*pi*k_p_r_max^3: %0.16f',fnorm(sum(weight_3d_k_all_) - term_3))); end;
term_3r = (4*pi^2*k_p_r_max^2);
if (flag_verbose>1); disp(sprintf(' %% sum(weight_3d_riesz__all_) vs 4*pi^2*k_p_r_max^2: %0.16f',fnorm(sum(weight_3d_riesz_k_all_) - term_3r))); end;
scaling_volumetric = term_3r / term_2 / term_deltafunc ;
if (flag_verbose>1); disp(sprintf(' %% scaling_volumetric: %+0.6f',scaling_volumetric)); end;
if (flag_verbose>1); disp(sprintf(' %% (4*pi)^2 * sqrt(pi/2): %+0.6f',(4*pi)^2 * sqrt(pi/2))); end;
%%%%%%%%;

%%%%%%%%;
if isempty(a_k_Y_quad_yk_) & isempty(a_k_Y_quad_yk__);
%%%%%%%%;
% Calculate volumetric terms. ;
%%%%%%%%;
tmp_t = tic();
parameter_KAPPA = struct('type','KAPPA');
parameter_KAPPA.flag_verbose = 0*flag_verbose;
parameter_KAPPA.flag_kernel_full = flag_kernel_full;
parameter_KAPPA.flag_kernel_qpro_d0 = flag_kernel_qpro_d0;
parameter_KAPPA.flag_kernel_qpro_d1 = flag_kernel_qpro_d1;
parameter_KAPPA.kernel_qpro_polar_a_pole_north = kernel_qpro_polar_a_pole_north;
parameter_KAPPA.kernel_qpro_polar_a_pole_south = kernel_qpro_polar_a_pole_south;
parameter_KAPPA.kernel_qpro_qref_k_eq_d_double = kernel_qpro_qref_k_eq_d_double;
parameter_KAPPA.kernel_qpro_l_max_use = kernel_qpro_l_max_use;
[ ...
 parameter_KAPPA ...
,KAPPA ...
,a_restore_C2M0_k_Y_yk__ ...
,a_restore_C1M1_k_Y_yk__ ...
,a_restore_C0M2_k_Y_yk__ ...
] = ...
kappa_qpro_apply_2( ...
 parameter_KAPPA ...
,KAPPA ...
,n_w_max ...
,n_M ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,[] ...
,[] ...
,[] ...
,n_k_p_r ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% kappa_qpro_apply_2 (not derivatives) time %0.2fs',tmp_t)); end;
%%%%%%%%;
a_restore_C2M0_k_Y_yk_ = local_yk_from_yk__(n_k_p_r,l_max_,a_restore_C2M0_k_Y_yk__);
a_restore_C1M1_k_Y_yk_ = local_yk_from_yk__(n_k_p_r,l_max_,a_restore_C1M1_k_Y_yk__);
a_restore_C0M2_k_Y_yk_ = local_yk_from_yk__(n_k_p_r,l_max_,a_restore_C0M2_k_Y_yk__);
%%%%%%%%;
% Convert volumetric terms. ;
%%%%%%%%;
n_type_ = [0,1];
if flag_check;n_type_ = 0:3*1-1; end;
for n_type = n_type_;
ntype = 0;
if n_type==ntype; tmp_yk__ = a_restore_C2M0_k_Y_yk__; tmp_str = 'a_restore_C2M0_k_Y_yk__'; end; ntype = ntype + 1; %<-- Needed for Hvv_q3d. ;
if n_type==ntype; tmp_yk__ = a_restore_C1M1_k_Y_yk__; tmp_str = 'a_restore_C1M1_k_Y_yk__'; end; ntype = ntype + 1;
if n_type==ntype; tmp_yk__ = a_restore_C0M2_k_Y_yk__; tmp_str = 'a_restore_C0M2_k_Y_yk__'; end; ntype = ntype + 1;
%%%%;
tmp_t = tic();
tmp_yk_ = local_yk_from_yk__(n_k_p_r,l_max_,tmp_yk__);
%%%%;
[ ...
 tmp_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_yk_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% %s: convert_spharm_to_k_p_4: time %0.2fs',tmp_str,tmp_t)); end;
ntype = 0;
if n_type==ntype; a_restore_C2M0_k_p_quad_ = tmp_quad_; end; ntype = ntype + 1;
if n_type==ntype; a_restore_C1M1_k_p_quad_ = tmp_quad_; end; ntype = ntype + 1;
if n_type==ntype; a_restore_C0M2_k_p_quad_ = tmp_quad_; end; ntype = ntype + 1;
end;%for n_type = n_type_;
%%%%%%%%;
a_k_p_quad_ = a_restore_C1M1_k_p_quad_./max(1e-12,abs(a_restore_C2M0_k_p_quad_));
tmp_t = tic();
[ ...
 a_k_Y_quad_yk_ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% a_k_Y_quad_yk_: convert_spharm_to_k_p_4: time %0.2fs',tmp_t)); end;
a_k_Y_quad_yk__ = local_yk__from_yk_(n_k_p_r,l_max_,a_k_Y_quad_yk_);
%%%%%%%%;
end;%if isempty(a_k_Y_quad_yk_) & isempty(a_k_Y_quad_yk__);
%%%%%%%%;

%%%%%%%%;
if isempty(a_k_Y_quad_yk_) & ~isempty(a_k_Y_quad_yk__);
a_k_Y_quad_yk_ = local_yk_from_yk__(n_k_p_r,l_max_,a_k_Y_quad_yk__);
end;%if isempty(a_k_Y_quad_yk_) & ~isempty(a_k_Y_quad_yk__);
%%%%%%%%;
if isempty(a_k_Y_quad_yk__) & ~isempty(a_k_Y_quad_yk_);
a_k_Y_quad_yk__ = local_yk__from_yk_(n_k_p_r,l_max_,a_k_Y_quad_yk_);
end;%if isempty(a_k_Y_quad_yk__) & ~isempty(a_k_Y_quad_yk_);
%%%%%%%%;
if isempty(a_k_p_quad_);
tmp_t = tic;
[ ...
 a_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_yk_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% a_k_p_quad_ time %0.2fs',tmp_t)); end;
end;%if isempty(a_k_p_quad_);
%%%%%%%%;

a_k_Y_iter_yk_ = a_k_Y_quad_yk_;
euler_polar_a_iter_M_ = euler_polar_a_M_;
euler_azimu_b_iter_M_ = euler_azimu_b_M_;
euler_gamma_z_iter_M_ = euler_gamma_z_M_;
n_iteration = polish_dssnll_fpi_n_iteration;
G_fnorm_iter = +Inf;
niteration=0;
flag_continue = 1;
%%%%%%%%%%%%%%%%;
while flag_continue;
%%%%%%%%%%%%%%%%;
%%%%%%%%;
if flag_polish_update_volume==1;
%%%%%%%%;
parameter_dssnll = parameter;
parameter_dssnll.flag_verbose = 0;
parameter_dssnll.flag_disp = 0;
parameter_dssnll.flag_check = 0;
tmp_t = tic();
[ ...
 parameter_dssnll ...
,G_bar_ykabc_ ...
,dvol_ssnll_q3d_k_Y_quad_yk_ ...
,dtau_ssnll_q2d_M3__ ...
,ssnll_q2d ...
] = ...
dssnll_1( ...
 parameter_dssnll ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_iter_yk_ ...
,[] ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,weight_3d_k_p_r_ ...
,[] ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_r_ke__ ...
,eta_k_p_wke__ ...
,euler_polar_a_iter_M_ ...
,euler_azimu_b_iter_M_ ...
,euler_gamma_z_iter_M_ ...
,KAPPA ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dssnll_1: time %0.2fs',tmp_t)); end;
a_k_Y_iter_yk_ = a_k_Y_iter_yk_ - polish_dssnll_fpi_stepsize * conj(dvol_ssnll_q3d_k_Y_quad_yk_) ;
euler_polar_a_iter_M_ = euler_polar_a_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+0));
euler_azimu_b_iter_M_ = euler_azimu_b_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+1));
euler_gamma_z_iter_M_ = euler_gamma_z_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+2));
%%%%%%%%;
end;%if flag_polish_update_volume==1;
%%%%%%%%;
if flag_polish_update_volume==0;
%%%%%%%%;
tmp_t = tic();
if ~exist('S_k_p_q2d_wkS__','var'); S_k_p_q2d_wkS__ = []; end;
if ~exist('dtau_S_k_p_q2d_wkS3___','var'); dtau_S_k_p_q2d_wkS3___ = []; end;
parameter_ssnll = struct('type','parameter');
parameter_ssnll.flag_verbose = 0*flag_verbose;
parameter_ssnll.viewing_k_eq_d = viewing_k_eq_d;
parameter_ssnll.template_k_eq_d = template_k_eq_d;
parameter_ssnll.n_order = n_order;
a_k_Y_iter_yk__ = local_yk__from_yk_(n_k_p_r,l_max_,a_k_Y_iter_yk_);
[ ...
 parameter_ssnll ...
,ssnll_q2d_M_ ...
,ssnll_q2d ...
,S_k_p_q2d_wkS__ ...
,~ ...
,~ ...
,~ ...
,~ ...
,dtau_ssnll_q2d_M3__ ...
,dtau_ssnll_q2d ...
,dtau_S_k_p_q2d_wkS3___ ...
] = ...
ssnll_from_a_k_Y_12( ...
 parameter_ssnll ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_iter_yk__ ...
,[] ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,S_k_p_q2d_wkS__ ...
,[] ...
,dtau_S_k_p_q2d_wkS3___ ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_iter_M_ ...
,euler_azimu_b_iter_M_ ...
,euler_gamma_z_iter_M_ ...
,[] ...
,[] ...
,[] ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ssnll_from_a_k_Y_12: time %0.2fs',tmp_t)); end;
euler_polar_a_iter_M_ = euler_polar_a_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+0));
euler_azimu_b_iter_M_ = euler_azimu_b_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+1));
euler_gamma_z_iter_M_ = euler_gamma_z_iter_M_ - polish_dssnll_fpi_stepsize * real(dtau_ssnll_q2d_M3__(:,1+2));
dvol_ssnll_q3d_k_Y_quad_yk_ = zeros(n_lm_sum,1);
G_bar_ykabc_ = conj(cat(1,dvol_ssnll_q3d_k_Y_quad_yk_,dtau_ssnll_q2d_M3__(:,1+0),dtau_ssnll_q2d_M3__(:,1+1),dtau_ssnll_q2d_M3__(:,1+2)));
%%%%%%%%;
end;%if flag_polish_update_volume==0;
%%%%%%%%;
[tmp_GG,tmp_GG_dvol,tmp_GG_a,tmp_GG_b,tmp_GG_c] = local_f_bar_dot_g_(n_k_p_r,weight_3d_riesz_k_p_r_,l_max_,n_M,conj(G_bar_ykabc_),conj(G_bar_ykabc_));
G_fnorm_iter = sqrt(tmp_GG);
tmp_G_fnorm_dvol = sqrt(tmp_GG_dvol);
tmp_G_fnorm_a = sqrt(tmp_GG_a);
tmp_G_fnorm_b = sqrt(tmp_GG_b);
tmp_G_fnorm_c = sqrt(tmp_GG_c);
flag_continue = (niteration< n_iteration) & (G_fnorm_iter> polish_dssnll_fpi_tolerance);
if (flag_verbose>0); disp(sprintf( '%% niteration %d/%d: ssnll_q2d %0.6f G_fnorm_iter %0.6f [%0.6f,%0.6f,%0.6f,%0.6f] flag_continue %d',niteration,n_iteration,ssnll_q2d,G_fnorm_iter,tmp_G_fnorm_dvol,tmp_G_fnorm_a,tmp_G_fnorm_b,tmp_G_fnorm_c,flag_continue)); end;
niteration=niteration+1;
%%%%%%%%%%%%%%%%;
end;%while flag_continue;
%%%%%%%%%%%%%%%%;

G_fnorm_crit = G_fnorm_iter;
a_k_Y_crit_yk_ = a_k_Y_iter_yk_;
euler_polar_a_crit_M_ = euler_polar_a_iter_M_;
euler_azimu_b_crit_M_ = euler_azimu_b_iter_M_;
euler_gamma_z_crit_M_ = euler_gamma_z_iter_M_;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
