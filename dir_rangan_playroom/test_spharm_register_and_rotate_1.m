% test_pm_LetB1_5;
verbose=1;

%%%%%%%%;
% The original 'ground truth' will be a_k_Y_quad_. ;
%%%%%%%%;
if (verbose); disp(sprintf(' %% a_k_Y_quad_: %d <-- n_lm_sum %d',numel(a_k_Y_quad_),n_lm_sum)); end;
tmp_t = tic;
[a_k_p_reco_] = ...
convert_spharm_to_k_p_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% a_k_Y_quad_ --> a_k_p_reco_ time %0.2fs',tmp_t)); end;
eta = pi/k_p_r_max; tmp_t = tic;
a_x_u_reco_ = ...
nufft3d3( ...
 n_k_all ...
,2*pi*k_c_0_all_*eta ...
,2*pi*k_c_1_all_*eta ...
,2*pi*k_c_2_all_*eta ...
,a_k_p_reco_.*(2*pi)^3.*weight_3d_k_all_ ...
,+1 ...
,1e-12 ...
,n_X_u ...
,X_u_0_(:)/eta ...
,X_u_1_(:)/eta ...
,X_u_2_(:)/eta ...
)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% nufft3d3: a_x_u_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
flag_plot=0;
if flag_plot;
figure(1);clf;figmed;
subplot(1,2,1); isosurface_f_x_c_0(a_x_u_pack_,98.5); title('a_pack','Interpreter','none');
subplot(1,2,2); isosurface_f_x_c_0(reshape(real(a_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('a_reco','Interpreter','none');
end;%if flag_plot;

%%%%%%%%;
% Compare with function call. ;
%%%%%%%%;
function ...
[ ... 
  a_x_u_rec1_ ...
] = ...
convert_spharm_to_x_c_3( ...
 k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
%%%%%%%%;
if (verbose); disp(sprintf(' %% a_x_u_reco_ vs a_x_u_rec1_: %0.16f',fnorm(a_x_u_reco_ - a_x_u_rec1_)/fnorm(a_x_u_reco_))); end;

%%%%%%%%;
% now load one of the reconstructions. ;
%%%%%%%%;
fname_pre = 'X_2d_xcor_d0_a1t0049n20r1';
fname_mat = sprintf('%s_mat/%s.mat',dir_pm,fname_pre);
tmp_mat_ = load(fname_mat);
fname_a_k_Y_mat = sprintf('%s_mat/%s_a_k_Y_.mat',dir_pm,fname_pre);
tmp_a_k_Y_mat_ = load(fname_a_k_Y_mat);
fname_align_a_k_Y_mat = sprintf('%s_mat/%s_align_a_k_Y_.mat',dir_pm,fname_pre);
tmp_align_a_k_Y_mat_ = load(fname_align_a_k_Y_mat);
fname_align_a_CTF_avg_UX_Y_mat = sprintf('%s_mat/%s_align_a_CTF_avg_UX_Y_.mat',dir_pm,fname_pre);
tmp_align_a_CTF_avg_UX_Y_mat_ = load(fname_align_a_CTF_avg_UX_Y_mat);
%%%%%%%%;
% call the reconstruction b_k_Y_quad_. ;
%%%%%%%%;
b_k_Y_quad_ = tmp_a_k_Y_mat_.a_k_Y_reco_;
tmp_t = tic;
[b_k_p_reco_] = ...
convert_spharm_to_k_p_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_Y_quad_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% b_k_Y_quad_ --> b_k_p_reco_ time %0.2fs',tmp_t)); end;
eta = pi/k_p_r_max; tmp_t = tic;
b_x_u_reco_ = ...
nufft3d3( ...
 n_k_all ...
,2*pi*k_c_0_all_*eta ...
,2*pi*k_c_1_all_*eta ...
,2*pi*k_c_2_all_*eta ...
,b_k_p_reco_.*(2*pi)^3.*weight_3d_k_all_ ...
,+1 ...
,1e-12 ...
,n_X_u ...
,X_u_0_(:)/eta ...
,X_u_1_(:)/eta ...
,X_u_2_(:)/eta ...
)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% nufft3d3: b_x_u_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
flag_plot=0;
if flag_plot;
figure(1);clf;figmed;
subplot(1,2,1); isosurface_f_x_c_0(reshape(real(a_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('a_reco','Interpreter','none');
subplot(1,2,2); isosurface_f_x_c_0(reshape(real(b_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('b_reco','Interpreter','none');
end;%if flag_plot;

%%%%%%%%;
% Now align b_k_Y_quad_ to a_k_Y_quad_: ;
%%%%%%%%;
tmp_t = tic;
N_wavelength = 0.0;
[ ...
 tmp_X_best ...
,tmp_flag_flip ...
,tmp_polar_a_best ...
,tmp_azimu_b_best ...
,tmp_gamma_z_best ...
,tmp_delta_best_ ...
,~ ...
,~ ...
] = ...
register_spharm_to_spharm_wigner_wrap_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,a_k_Y_quad_ ...
,b_k_Y_quad_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% registration time %0.2fs',tmp_t)); end;
%%%%%%%%;
% same as stored alignment. ;
%%%%%%%%;
if (verbose); disp(sprintf(' %% tmp_align_a_k_Y_mat_.X_best_(end) - tmp_X_best: %0.16f',tmp_align_a_k_Y_mat_.X_best_(end) - tmp_X_best)); end;
if (verbose); disp(sprintf(' %% tmp_align_a_k_Y_mat_.polar_a_best_(end) - tmp_polar_a_best: %0.16f',tmp_align_a_k_Y_mat_.polar_a_best_(end) - tmp_polar_a_best)); end;
if (verbose); disp(sprintf(' %% tmp_align_a_k_Y_mat_.azimu_b_best_(end) - tmp_azimu_b_best: %0.16f',tmp_align_a_k_Y_mat_.azimu_b_best_(end) - tmp_azimu_b_best)); end;
if (verbose); disp(sprintf(' %% tmp_align_a_k_Y_mat_.gamma_z_best_(end) - tmp_gamma_z_best: %0.16f',tmp_align_a_k_Y_mat_.gamma_z_best_(end) - tmp_gamma_z_best)); end;

%%%%%%%%;
% Now, given X_flag_flip==1, form c_k_Y_quad_ = flipY(b_k_Y_quad_). ;
%%%%%%%%;
c_k_Y_quad_ = b_k_Y_quad_; if (tmp_flag_flip); c_k_Y_quad_ = flipY(n_k_p_r,l_max_,b_k_Y_quad_); end;
%%%%%%%%;
tmp_t = tic;
[c_k_p_reco_] = ...
convert_spharm_to_k_p_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,c_k_Y_quad_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% c_k_Y_quad_ --> c_k_p_reco_ time %0.2fs',tmp_t)); end;
eta = pi/k_p_r_max; tmp_t = tic;
c_x_u_reco_ = ...
nufft3d3( ...
 n_k_all ...
,2*pi*k_c_0_all_*eta ...
,2*pi*k_c_1_all_*eta ...
,2*pi*k_c_2_all_*eta ...
,c_k_p_reco_.*(2*pi)^3.*weight_3d_k_all_ ...
,+1 ...
,1e-12 ...
,n_X_u ...
,X_u_0_(:)/eta ...
,X_u_1_(:)/eta ...
,X_u_2_(:)/eta ...
)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% nufft3d3: c_x_u_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
flag_plot=0;
if flag_plot;
figure(1);clf;figmed;
subplot(1,2,1); isosurface_f_x_c_0(reshape(real(b_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('b_reco','Interpreter','none');
subplot(1,2,2); isosurface_f_x_c_0(reshape(real(c_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('c_reco','Interpreter','none');
end;%if flag_plot;

%%%%%%%%;
% To align the two, we translate c_k_Y_quad_ by tmp_delta_best_, and rotate a_k_Y_quad_ by tmp_euler_best_. ;
% Because tmp_delta_best_==0 (see register_spharm_to_spharm_wigner_1.m), we only rotate a_k_Y_quad_ by tmp_euler_best_. ;
% This is equivalent to rotating c_k_Y_quad_ by tmp_euler_inv_ (below). ;
%%%%%%%%;
tmp_euler_inv_ = [-tmp_gamma_z_best,-tmp_polar_a_best,-tmp_azimu_b_best];
tmp_W_beta_best__ = wignerd_b(l_max_max,tmp_euler_inv_(1+1));
d_k_Y_quad_ = rotate_spharm_to_spharm_2(0,tmp_W_beta_best__,n_k_p_r,k_p_r_,l_max_,c_k_Y_quad_,tmp_euler_inv_);
%%%%%%%%;
tmp_t = tic;
[d_k_p_reco_] = ...
convert_spharm_to_k_p_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,d_k_Y_quad_ ...
);
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% d_k_Y_quad_ --> d_k_p_reco_ time %0.2fs',tmp_t)); end;
eta = pi/k_p_r_max; tmp_t = tic;
d_x_u_reco_ = ...
nufft3d3( ...
 n_k_all ...
,2*pi*k_c_0_all_*eta ...
,2*pi*k_c_1_all_*eta ...
,2*pi*k_c_2_all_*eta ...
,d_k_p_reco_.*(2*pi)^3.*weight_3d_k_all_ ...
,+1 ...
,1e-12 ...
,n_X_u ...
,X_u_0_(:)/eta ...
,X_u_1_(:)/eta ...
,X_u_2_(:)/eta ...
)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% nufft3d3: d_x_u_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
flag_plot=0;
if flag_plot;
figure(1);clf;figmed;
subplot(1,2,1); isosurface_f_x_c_0(reshape(real(a_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('a_reco','Interpreter','none');
subplot(1,2,2); isosurface_f_x_c_0(reshape(real(d_x_u_reco_),[n_x_u_pack,n_x_u_pack,n_x_u_pack]),98.5); title('d_reco','Interpreter','none');
end;%if flag_plot;
%%%%%%%%;
[ ...
 ~ ...
,tmp_X_reco ...
] = ...
register_spharm_to_spharm_3( ...
 verbose ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,d_k_Y_quad_ ...
);
%%%%%%%%;
if (verbose); disp(sprintf(' %% tmp_X_best - tmp_X_reco: %0.16f',tmp_X_best - tmp_X_reco)); end;
%%%%%%%%;

%%%%%%%%;
% Now test against function call. ;
%%%%%%%%;
[ ... 
 e_k_Y_reco_ ...
,tm2_X_best ...
,tm2_flag_flip ...
,tm2_polar_a_best ...
,tm2_azimu_b_best ...
,tm2_gamma_z_best ...
,tm2_delta_x_best ...
,tm2_delta_y_best ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,b_k_Y_quad_ ...
);
%%%%%%%%;
if (verbose); disp(sprintf(' %% tmp_X_best - tm2_X_best: %0.16f',tmp_X_best - tm2_X_best)); end;
if (verbose); disp(sprintf(' %% tmp_flag_flip - tm2_flag_flip: %0.16f',tmp_flag_flip - tm2_flag_flip)); end;
if (verbose); disp(sprintf(' %% tmp_polar_a_best - tm2_polar_a_best: %0.16f',tmp_polar_a_best - tm2_polar_a_best)); end;
if (verbose); disp(sprintf(' %% tmp_azimu_b_best - tm2_azimu_b_best: %0.16f',tmp_azimu_b_best - tm2_azimu_b_best)); end;
if (verbose); disp(sprintf(' %% tmp_gamma_z_best - tm2_gamma_z_best: %0.16f',tmp_gamma_z_best - tm2_gamma_z_best)); end;
if (verbose); disp(sprintf(' %% d_k_Y_quad_ vs e_k_Y_reco_: %0.16f',fnorm(d_k_Y_quad_ - e_k_Y_reco_)/fnorm(d_k_Y_quad_))); end;

%%%%%%%%;
% Now try with nonzero displacement. ;
% Verdict: too slow! ;
%%%%%%%%;
tmp_N_wavelength = 0.5;
[ ... 
 f_k_Y_reco_ ...
,tm3_X_best ...
,tm3_flag_flip ...
,tm3_polar_a_best ...
,tm3_azimu_b_best ...
,tm3_gamma_z_best ...
,tm3_delta_x_best ...
,tm3_delta_y_best ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,b_k_Y_quad_ ...
,tmp_N_wavelength ...
);
%%%%%%%%;
if (verbose); disp(sprintf(' %% tmp_X_best - tm3_X_best: %0.16f',tmp_X_best - tm3_X_best)); end;
if (verbose); disp(sprintf(' %% tmp_flag_flip - tm3_flag_flip: %0.16f',tmp_flag_flip - tm3_flag_flip)); end;
if (verbose); disp(sprintf(' %% tmp_polar_a_best - tm3_polar_a_best: %0.16f',tmp_polar_a_best - tm3_polar_a_best)); end;
if (verbose); disp(sprintf(' %% tmp_azimu_b_best - tm3_azimu_b_best: %0.16f',tmp_azimu_b_best - tm3_azimu_b_best)); end;
if (verbose); disp(sprintf(' %% tmp_gamma_z_best - tm3_gamma_z_best: %0.16f',tmp_gamma_z_best - tm3_gamma_z_best)); end;
if (verbose); disp(sprintf(' %% d_k_Y_quad_ vs f_k_Y_reco_: %0.16f',fnorm(d_k_Y_quad_ - f_k_Y_reco_)/fnorm(d_k_Y_quad_))); end;


