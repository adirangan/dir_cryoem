%%%%%%%%;
% setting up simple multi-slice-alignment. ;
% assume a 2d-volume x, comprising a single ring. ;
% Assume that x is restricted to just 2 bessel-coefficients, implying a circle in C. ;
% Trying to plot free-energy as a function of KL-divergence. ;
% Approximating KL-divergence with KL-divergence of discrete-distribution (sampled on J bins). ;
% Verdict: P is not integrable, the far-field solutions take up 100% of the partition-function, and have infinite KL-divergence. ;
% Now trying to model nonuniform viewing-angle. ;
% Now simulating (hard) AM. ;
%%%%%%%%;

clear;
%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

dw0_ellipse_dist_ = @(w,x,y,a,b) (+a.*cos(w) - x).^2 + (+b.*sin(w) - y).^2 ;
dw1_ellipse_dist_ = @(w,x,y,a,b) 2*(+a.*cos(w) - x).*(-a.*sin(w)) + 2*(+b.*sin(w) - y).*(+b.*cos(w)) ;
dw2_ellipse_dist_ = @(w,x,y,a,b) 2*(+a.*cos(w) - x).*(-a.*cos(w)) + 2*(-a.*sin(w)).*(-a.*sin(w)) + 2*(+b.*sin(w) - y).*(-b.*sin(w)) + 2*(+b.*cos(w)).*(+b.*cos(w)) ;

flag_check=0;
if flag_check;
%%%%%%%%;
% test projection onto ellipse. ;
%%%%%%%%
rng(0);
n_M = 16;
M_dM__ = 5*randn(2,n_M);
w_opt_ = zeros(n_M,1);
for nM=0:n_M-1;
x = M_dM__(1+0,1+nM); y = M_dM__(1+1,1+nM);
a = 3; b = 1;
w_opt = atan2(y,x);
n_iteration = 64; eta = 0.25;
for niteration=0:n_iteration-1;
tmp_dw1 = dw1_ellipse_dist_(w_opt,x,y,a,b);
tmp_dw2 = dw2_ellipse_dist_(w_opt,x,y,a,b); if abs(tmp_dw2<1e-12); tmp_dw2 = 1e-12; end;
tmp_dwr = tmp_dw1/tmp_dw2;
w_opt = mod(w_opt - eta*tmp_dwr,2*pi);
if (abs(tmp_dwr)<1e-6); niteration=n_iteration; end;
end;%for niteration=0:n_iteration-1;
w_opt_(1+nM) = w_opt;
end;%for nM=0:n_M-1;
w_ = transpose(linspace(0,2*pi,128+1)); n_w = numel(w_);
figure(1);clf;figsml;
hold on;
plot(a*cos(w_),b*sin(w_),'k-');
plot(M_dM__(1+0,:),M_dM__(1+1,:),'ro');
plot(a*cos(w_opt_),b*sin(w_opt_),'ro');
plot( [ transpose(a*cos(w_opt_)) ; M_dM__(1+0,:) ] , [ transpose(b*sin(w_opt_)) ; M_dM__(1+1,:) ] ,'r-');
xlabel('x');ylabel('y'); axis equal; grid on;
hold off;
end;%if flag_check;
  
dir_jpg = sprintf('/%s/rangan/dir_cryoem/dir_rangan_playroom/dir_jpg',string_root);

flag_replot = 1;

flag_nonuniform = 1;
if flag_nonuniform==0; str_nonuniform = ''; end;
if flag_nonuniform==1; str_nonuniform = sprintf('_nonuniform'); end;

fname_fig = sprintf('%s/MSA_MA%s_summary_FIGA',dir_jpg,str_nonuniform);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
%%%%%%%%%%%%%%%%;
figure(1);clf;figbig;
subplot_ = [];
fig80s();
markersize_use = 6;
n_contour = 64;
p_row = 4; np=0;
n_point = 16;
rseed=0;rng(rseed);
M_nois_p2__ = randn(n_point,2);
n_x = 512;
snr_ = [ +inf, 10.^[2.5:-0.25:0] ]; n_snr = numel(snr_);
p_col = ceil(3*n_snr/p_row);
for nsnr=0:n_snr-1;
%%%%%%%%;
snr = snr_(1+nsnr);
%%%%;
if flag_nonuniform==0;
gamma_z_ = linspace(0,2*pi,n_point+1); gamma_z_ = transpose(gamma_z_(1:end-1));
end;%if flag_nonuniform==0;
if flag_nonuniform==1;
gamma_z_ = 0*pi + pi*linspace(-1,+1,n_point+1).^5; gamma_z_ = transpose(gamma_z_(1:end-1));
end;%if flag_nonuniform==1;
M_p2__ = [cos(gamma_z_) , sin(gamma_z_)];
M_l2 = fnorm(M_p2__);
%M_l2 = 1;
sigma=0; if (snr> 0); sigma = M_l2/max(1e-12,snr); end;
M_p2__ = M_p2__ + sigma*M_nois_p2__;
%xlim_ = mean(M_p2__(:)) + 5.5*std(M_p2__(:),1)*[-1,+1];
xlim_ = 0*mean(M_p2__(:)) + 5.5*std(M_p2__(:),1)*[-1,+1];
x_0_ = linspace(min(xlim_),max(xlim_),n_x);
x_1_ = linspace(min(xlim_),max(xlim_),n_x);
[x_0__,x_1__] = meshgrid(x_0_,x_1_); n_xx = n_x^2;
N_0_p01___ = reshape(bsxfun(@minus,M_p2__(:,1+0),reshape(x_0__(:),[1,n_xx])),[n_point,n_x,n_x]);
N_1_p01___ = reshape(bsxfun(@minus,M_p2__(:,1+1),reshape(x_1__(:),[1,n_xx])),[n_point,n_x,n_x]);
r_p01___ = zeros(n_point,n_xx);
r_p01___ = sqrt( N_0_p01___.^2 + N_1_p01___.^2 );
r_p01___ = reshape(r_p01___,[n_point,n_x,n_x]);
r_x01___ = mean(r_p01___,1);
dr_p01___ = bsxfun(@minus,r_p01___,r_x01___);
Nhat_0_p01___ = bsxfun(@rdivide,N_0_p01___,r_p01___);
Nhat_1_p01___ = bsxfun(@rdivide,N_1_p01___,r_p01___);
dNhat_0_p01___ = bsxfun(@minus,Nhat_0_p01___,mean(Nhat_0_p01___,1));
dNhat_1_p01___ = bsxfun(@minus,Nhat_1_p01___,mean(Nhat_1_p01___,1));
L_x01___ = mean(dr_p01___.^2,1);
DL0_x01___ = mean(dNhat_0_p01___.*dr_p01___,1);
DL1_x01___ = mean(dNhat_1_p01___.*dr_p01___,1);
DL_x01___ = sqrt( DL0_x01___.^2 + DL1_x01___.^2);
%%%%;
n_x_sub = 1+32;
x_sub_0_ = linspace(min(xlim_),max(xlim_),n_x_sub);
x_sub_1_ = linspace(min(xlim_),max(xlim_),n_x_sub);
x_sub_out_301___ = zeros(3,n_x_sub,n_x_sub);
for nx_sub_0=0:n_x_sub-1;
if (mod(nx_sub_0,8)==0); disp(sprintf(' %% nx_sub_0 %d/%d',nx_sub_0,n_x_sub)); end;
for nx_sub_1=0:n_x_sub-1;
x_sub_init_ = [x_sub_0_(1+nx_sub_0),x_sub_1_(1+nx_sub_1)];
parameter = struct('type','parameter');
parameter.tolerance_master = 1e-2;
parameter.n_iteration = 128;
parameter.flag_plot = 0;
[parameter,x_sub_out_] = MSA_circle_AM_0(parameter,M_p2__,x_sub_init_);
x_sub_out_301___(:,1+nx_sub_0,1+nx_sub_1) = x_sub_out_;
end;%for nx_sub_1=0:n_x_sub-1;
end;%for nx_sub_0=0:n_x_sub-1;
%%%%;
dx_sub_0 = mean(diff(x_sub_0_)); dx_sub_1 = mean(diff(x_sub_1_));
[x_sub_0__,x_sub_1__] = ndgrid(x_sub_0_,x_sub_1_);
c_pre_ = colormap_gaussian_2d(x_sub_0__(:),x_sub_1__(:));
c_pre__ = reshape(c_pre_,[1,n_x_sub^2,3]);
p_sub_0__ = transpose(repmat(x_sub_0__(:),[1,4]) + dx_sub_0*repmat([-1,+1,+1,-1],[n_x_sub^2,1]));
p_sub_1__ = transpose(repmat(x_sub_1__(:),[1,4]) + dx_sub_1*repmat([-1,-1,+1,+1],[n_x_sub^2,1]));
x_sub_out_0_ = reshape(x_sub_out_301___(1+0,:,:),[n_x_sub^2,1]);
x_sub_out_1_ = reshape(x_sub_out_301___(1+1,:,:),[n_x_sub^2,1]);
x_sub_out_r_ = reshape(x_sub_out_301___(1+2,:,:),[n_x_sub^2,1]);
index_out_ = knnsearch( [x_sub_0__(:),x_sub_1__(:)] , [x_sub_out_0_,x_sub_out_1_] ) - 1;
c_pos__ = c_pre__(1,1+index_out_,:);
%%%%;
subplot_(1+np) = subplot(p_row,p_col,1+np);np=np+1;
hold on;
imagesc(squeeze(L_x01___),[min(L_x01___,[],'all'),max(L_x01___,[],'all')]);
plot(1 + (n_x-1)*(M_p2__(:,1+0) - min(xlim_))/diff(xlim_),1 + (n_x-1)*(M_p2__(:,1+1) - min(xlim_))/diff(xlim_),'o','MarkerSize',markersize_use,'MarkerEdgeColor','k','MarkerFaceColor','w');
hold off;
axis image; axisnotick;
title(sprintf('snr %0.3f $L$',snr),'Interpreter','latex');
set(gca,'FontSize',18);
%%%%;
subplot_(1+np) = subplot(p_row,p_col,1+np);np=np+1;
hold on;
imagesc(squeeze(DL_x01___),[0,max(DL_x01___,[],'all')]);
hold off;
axis image; axisnotick;
title(sprintf('snr %0.3f $|\\nabla L|$',snr),'Interpreter','latex');
set(gca,'FontSize',18);
%%%%;
subplot_(1+np) = subplot(p_row,p_col,1+np);np=np+1;
hold on;
patch(p_sub_0__,p_sub_1__,c_pos__,'EdgeColor','none');
plot(M_p2__(:,1+0),M_p2__(:,1+1),'o','MarkerSize',markersize_use,'MarkerEdgeColor','k','MarkerFaceColor','w');
hold off;
xlim(xlim_); ylim(xlim_); axis image; axisnotick; title('AM');
set(gca,'FontSize',18);
%%%%;
drawnow();
%%%%%%%%;
end;%for nsnr=0:n_snr-1;
np=0;
for nsnr=0:n_snr-1;
colormap(subplot_(1+np),colormap_beach()); np=np+1;
colormap(subplot_(1+np),colormap_80s()); np=np+1;
np=np+1;
end;%for nsnr=0:n_snr-1;
%%%%%%%%;
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
%close(gcf);
%%%%%%%%%%%%%%%%;
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));

fname_fig = sprintf('%s/MSA_MA_pre_FIG0',dir_jpg);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
figure(2);clf;figsml;
patch(p_sub_0__,p_sub_1__,c_pre__,'EdgeColor','none');
xlim(xlim_); ylim(xlim_); axis image; axisnotick; title('pre');
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
%close(gcf);
%%%%%%%%%%%%%%%%;
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));


