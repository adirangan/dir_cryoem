function ...
[ ...
 parameter ...
,M_k_q__ ...
,UX_M_l2_dM__ ...
,VSCTF_Mc__ ...
,a_CTF_avg_UX_Y_ ...
] = ...
loading_0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,n_w_max ...
,pm_n_UX_rank ...
,UX__ ...
,X_weight_r_ ...
,n_M ...
,M_k_p__ ...
,M_k_q__ ...
,UX_M_l2_dM__ ...
,n_CTF_rank ...
,CTF_index_ ...
,CTF_k_p_r__ ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_delta_x_ ...
,image_delta_y_ ...
,image_I_value_ ...
);
%%%%%%%%;
% calculates residuals and loadings. ;
%%%%%%%%;

verbose=2;
if (verbose); disp(sprintf(' %% [entering loading_0]')); end;

if isempty(parameter);
parameter = struct('type','parameter');
end;%if isempty(parameter);
%%%%%%%%;
if (~isfield(parameter,'tolerance_master')); parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'rseed')); parameter.rseed = 0; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'n_loading')); parameter.n_loading = 3; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'n_loading_iteration')); parameter.n_loading_iteration = 16; end; %<-- parameter_bookmark. ;
if (~isfield(parameter,'cg_lsq_n_order')); parameter.cg_lsq_n_order = 5; end; %<-- parameter_bookmark. ;
%%%%%%%%;
tolerance_master = parameter.tolerance_master;
rseed = parameter.rseed;
n_loading = parameter.n_loading;
n_loading_iteration = parameter.n_loading_iteration;
cg_lsq_n_order = parameter.cg_lsq_n_order;

%{
%%%%%%%%;
% Typical definitions. ;
%%%%%%%%;
l_max_max = max(l_max_);
n_lm_ = (1+l_max_).^2;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
%}

n_w_max = n_w_max + mod(n_w_max,2); %<-- round up to nearest even number. ;
l_max_max = n_w_max/2 - 1;
n_w_ = n_w_max*ones(n_k_p_r,1);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);

pm_n_k_p_r = pm_n_UX_rank;
pm_k_p_r_ = ones(pm_n_k_p_r,1);
pm_k_p_r_max = 1;
pm_n_w_ = n_w_max*ones(pm_n_k_p_r,1);
pm_n_w_max = n_w_max;
pm_n_w_sum = sum(pm_n_w_);
pm_n_w_csum_ = cumsum([0;pm_n_w_]);
pm_l_max_ = l_max_max*ones(pm_n_k_p_r,1);
pm_n_lm_ = (1+pm_l_max_).^2;
pm_n_lm_max = max(pm_n_lm_);
pm_n_lm_sum = sum(pm_n_lm_);
pm_n_lm_csum_ = cumsum([0;pm_n_lm_]);
pm_weight_k_p_r_ = ones(pm_n_k_p_r,1);
pm_weight_2d_k_p_r_ = ones(pm_n_k_p_r,1);

tmp_t = tic();
FTK = ampmh_FTK_1(n_k_p_r,k_p_r_,k_p_r_max,0,1e-2,1);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% FTK: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_FTK_1',tmp_t);

if isempty(VSCTF_Mc__);
if (n_CTF_rank<=0 | isempty(CTF_index_));
n_CTF_rank = 1;
USCTF_kc__ = ones(n_k_p_r,1); SCTF_C__ = 1; VCTF_Mc__ = ones(n_M,1);
else;
[UCTF_kc__,SCTF_c__,VCTF_Mc__] = svds(CTF_k_p_r__(:,1+CTF_index_(1:n_M)),n_CTF_rank);
end;%if (n_CTF_rank<=0 | isempty(CTF_index_));
VSCTF_Mc__ = VCTF_Mc__*SCTF_c__;
end;%if isempty(VSCTF_Mc__);

a_CTF_avg_UX_Y_ = zeros(pm_n_lm_sum,1);
svd_VUXM_lwnM____ = [];
%%%%%%%%;
% initialize current euler-angles randomly. ;
%%%%%%%%;
if isempty(euler_polar_a_); euler_polar_a_ = 1*pi*rand(n_M,1); end;
if isempty(euler_azimu_b_); euler_azimu_b_ = 2*pi*rand(n_M,1); end;
if isempty(euler_gamma_z_); euler_gamma_z_ = 2*pi*rand(n_M,1); end;
if isempty(image_delta_x_); image_delta_x_ = zeros(n_M,1); end;
if isempty(image_delta_y_); image_delta_y_ = zeros(n_M,1); end;
if isempty(image_I_value_); image_I_value_ = ones(n_M,1); end;
if isempty(M_k_q__); M_k_q__ = zeros(n_w_sum,n_M); end;
if isempty(svd_VUXM_lwnM____); svd_VUXM_lwnM____ = zeros(FTK.n_svd_l,n_w_max,pm_n_UX_rank,n_M); end;
if isempty(UX_M_l2_dM__); UX_M_l2_dM__ = zeros(FTK.n_delta_v,n_M); end;
%%%%%%%%;
% Construct M_k_q__ while taking into account the translations. ;
%%%%%%%%;
tmp_t = tic();
M_k_q__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
M_k_p_ = ...
transf_p_to_p( ...
 n_k_p_r ...
,k_p_r_ ...
,n_w_ ...
,n_w_sum ...
,M_k_p__(:,1+nM) ...
,+image_delta_x_(1+nM) ...
,+image_delta_y_(1+nM) ...
);
M_k_q__(:,1+nM) = ...
interp_p_to_q( ...
 n_k_p_r ...
,n_w_ ...
,n_w_sum ...
,M_k_p_ ...
);
end;%for nM=0:n_M-1;
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% M_k_q__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'M_k_q__',tmp_t);
%%%%%%%%;
% Now form svd_VUXM_lwnM____ using these translated images. ;
%%%%%%%%;
tmp_t = tic();
svd_VUXM_lwnM____(:,:,:,:) = tpmh_VUXM_lwnM____3(FTK,n_k_p_r,n_w_,n_M,M_k_q__(:,:),pm_n_UX_rank,UX__,X_weight_r_);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% svd_VUXM_lwnM____: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'svd_VUXM_lwnM____',tmp_t);
%%%%%%%%;
% Now calculate norms of the translated images. ;
%%%%%%%%;
tmp_t = tic();
UX_M_l2_dM__(:,:) = ampmh_UX_M_l2_dM__1(FTK,n_w_,n_M,pm_n_UX_rank,svd_VUXM_lwnM____(:,:,:,:));
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_M_l2_dM__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_UX_M_l2_dM__1',tmp_t);
%%%%%%%%;
% Now, form principal-images (implicitly accounting for the displacements). ;
%%%%%%%%;
tmp_t = tic();
[UX_M_k_q_wnM___,UX_M_k_p_wnM___] = ampmh_UX_M_k_p_wnM___0(FTK,n_w_,pm_n_UX_rank,n_M,svd_VUXM_lwnM____,[],[]);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% UX_M_k_q_wnM___: %0.6fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'ampmh_UX_M_k_p_wnM___0',tmp_t);
%%%%%%%%;
UX_M_k_p_wnM__ = reshape(UX_M_k_p_wnM___,[n_w_max*pm_n_k_p_r,n_M]);
%%%%%%%%;

a_CTF_avg_UX_Y_0qbp_ = zeros(pm_n_lm_sum,1);
%%%%%%%%;
% use current euler-angles and displacements to solve for current model. ;
%%%%%%%%;
tmp_t = tic();
parameter.flag_qbp_vs_lsq = 1;
parameter.quad_k_eq_d = parameter.template_viewing_k_eq_d/2;
[ ...
 parameter ...
,a_UCTF_UX_Y_0qbp_ync__ ... 
] = ...
a_UCTF_UX_Y_wrap_ync__0( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,UX_M_k_p_wnM__ ...
,n_CTF_rank ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_I_value_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% a_UCTF_UX_Y_0qbp_ync__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'a_UCTF_UX_Y_wrap_ync__0',tmp_t);
%%%%%%%%;
% Note that here we do not normalize a_UCTF_avg_UX_Y_ync__. ;
% We need the unnormalized version to produce the Residual_wMn__ below. ;
%%%%%%%%;
a_UCTF_UX_Y_0qbp_ync__ = spharm__normalize_1(pm_n_k_p_r,pm_k_p_r_,pm_weight_k_p_r_,pm_l_max_,a_UCTF_UX_Y_0qbp_ync__);
%%%%%%%%;
% Use a_UCTF_UX_Y_0qbp_ync__ as well VSCTF_Mc__ to approximate the image-averaged a_CTF_avg_UX_Y_. ;
% This is not actually used in the calculation, but can be useful for postprocessing. ;
%%%%%%%%;
a_CTF_avg_UX_Y_0qbp_ = spharm_normalize_1(pm_n_k_p_r,pm_k_p_r_,pm_weight_k_p_r_,pm_l_max_,mean(a_UCTF_UX_Y_0qbp_ync__*transpose(VSCTF_Mc__),2));

flag_check=0;
if flag_check;
%%%%%%%%;
% test a_UCTF_UX_Y_0qbp_ync__ against templates. ;
%%%%%%%%;
tmp_viewing_k_eq_d = 1.0/k_p_r_max;
tmp_template_k_eq_d = -1;
tmp_n_M = ...
sample_shell_5( ...
 pm_k_p_r_max ...
,tmp_viewing_k_eq_d ...
,'L' ...
) ;
tmp_UX_M_k_p_0qbp_wnMc___ = zeros(pm_n_w_sum,tmp_n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 tmp_UX_M_k_p_0qbp_wnMc___(:,:,1+nCTF_rank) ...
,~ ...
,~ ...
,~ ...
,tmp_n_M ...
,tmp_viewing_azimu_b_all_ ...
,tmp_viewing_polar_a_all_ ...
,~ ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_0qbp_ync__(:,1+nCTF_rank) ...
,tmp_viewing_k_eq_d ...
,tmp_template_k_eq_d ...
,n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
tmp_UX_M_k_p_0qbp_wnM__ = zeros(pm_n_w_sum,tmp_n_M);
rng(0); tmp_VSCTF_Mc__ = randn(tmp_n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
for tmp_nM=0:tmp_n_M-1;
tmp_UX_M_k_p_0qbp_wnM__(:,1+tmp_nM) = tmp_UX_M_k_p_0qbp_wnM__(:,1+tmp_nM) + tmp_UX_M_k_p_0qbp_wnMc___(:,1+tmp_nM,1+nCTF_rank)*tmp_VSCTF_Mc__(1+tmp_nM,1+nCTF_rank);
end;%for tmp_nM=0:tmp_n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% tmp_n_M %d',tmp_n_M));
%%%%%%%%;
tmp_t = tic();
parameter.flag_qbp_vs_lsq = 1;
parameter.quad_k_eq_d = parameter.template_viewing_k_eq_d/2;
[ ...
 parameter ...
,a_UCTF_UX_Y_reco_ync__ ... 
] = ...
a_UCTF_UX_Y_wrap_ync__0( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,tmp_n_M ...
,tmp_UX_M_k_p_0qbp_wnM__ ...
,n_CTF_rank ...
,tmp_VSCTF_Mc__ ...
,tmp_viewing_polar_a_all_ ...
,tmp_viewing_azimu_b_all_ ...
,zeros(tmp_n_M,1) ...
,image_I_value_ ...
);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% a_UCTF_UX_Y_reco_ync__: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'a_UCTF_UX_Y_wrap_ync__0',tmp_t);
a_UCTF_UX_Y_reco_ync__ = spharm__normalize_1(pm_n_k_p_r,pm_k_p_r_,pm_weight_k_p_r_,pm_l_max_,a_UCTF_UX_Y_reco_ync__);
disp(sprintf(' %% a_UCTF_UX_Y_0qbp_ync__ vs a_UCTF_UX_Y_reco_ync__: %0.16f',fnorm(a_UCTF_UX_Y_0qbp_ync__ - a_UCTF_UX_Y_reco_ync__)/fnorm(a_UCTF_UX_Y_0qbp_ync__)));
disp(sprintf(' %% corr(a_UCTF_UX_Y_0qbp_ync__(:),a_UCTF_UX_Y_reco_ync__(:)) %0.16f',corr(a_UCTF_UX_Y_0qbp_ync__(:),a_UCTF_UX_Y_reco_ync__(:))));
%%%%%%%%;
tmp_UX_M_k_p_reco_wnMc___ = zeros(pm_n_w_sum,tmp_n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 tmp_UX_M_k_p_reco_wnMc___(:,:,1+nCTF_rank) ...
,~ ...
,~ ...
,~ ...
,tmp_n_M ...
,tmp_viewing_azimu_b_all_ ...
,tmp_viewing_polar_a_all_ ...
,~ ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_reco_ync__(:,1+nCTF_rank) ...
,tmp_viewing_k_eq_d ...
,tmp_template_k_eq_d ...
,n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
tmp_UX_M_k_p_reco_wnM__ = zeros(pm_n_w_sum,tmp_n_M);
for nCTF_rank=0:n_CTF_rank-1;
for tmp_nM=0:tmp_n_M-1;
tmp_UX_M_k_p_reco_wnM__(:,1+tmp_nM) = tmp_UX_M_k_p_reco_wnM__(:,1+tmp_nM) + tmp_UX_M_k_p_reco_wnMc___(:,1+tmp_nM,1+nCTF_rank)*tmp_VSCTF_Mc__(1+tmp_nM,1+nCTF_rank);
end;%for tmp_nM=0:tmp_n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% tmp_UX_M_k_p_0qbp_wnM__ vs tmp_UX_M_k_p_reco_wnM__: %0.16f',fnorm(tmp_UX_M_k_p_0qbp_wnM__ - tmp_UX_M_k_p_reco_wnM__)/fnorm(tmp_UX_M_k_p_0qbp_wnM__)));
disp(sprintf(' %% real(corr(tmp_UX_M_k_p_0qbp_wnM__(:),tmp_UX_M_k_p_reco_wnM__(:))): %0.16f',real(corr(tmp_UX_M_k_p_0qbp_wnM__(:),tmp_UX_M_k_p_reco_wnM__(:)))));
%%%%%%%%;
error('finished check');
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% set up frwd operator An_wrap__, which maps a principal-volume to a set of principal-images. ;
% set up back operator At_wrap__, which maps a set of principal-images to a principal-volume. ;
%%%%%%%%;
flag_unique_pm_n = 0;
if (numel(unique(pm_l_max_))==1 & numel(unique(pm_n_lm_))==1 & numel(unique(pm_n_w_))==1);
flag_unique_pm_n = 1;
pm_l_max = pm_l_max_(1+0);
pm_n_lm = pm_n_lm_(1+0);
pm_n_w = pm_n_w_(1+0);
VSCTF_wMc__ = reshape(repmat(reshape(VSCTF_Mc__,[1,n_M,n_CTF_rank]),[pm_n_w,1,1]),[pm_n_w*n_M,n_CTF_rank]);
[k_p_polar_a__,k_p_azimu_b__] = cg_rhs_1(n_M,pm_n_w,euler_polar_a_,euler_azimu_b_,+euler_gamma_z_);
n_polar_a = ceil(pm_n_w/2);
n_azimu_b = max(1+2*pm_l_max,2*n_polar_a);
[legendre_evaluate_ljm___,legendre_evaluate_mlj___,expil__,expi__] = legendre_evaluate_ljm___0(pm_l_max,cos(linspace(0,pi,n_polar_a)),n_azimu_b);
scatter_from_tensor__ = cg_interpolate_n_2(cg_lsq_n_order,n_polar_a,n_azimu_b,pm_n_w*n_M,k_p_polar_a__(:),k_p_azimu_b__(:));
tensor_from_scatter__ = ctranspose(scatter_from_tensor__); %<-- this conjugation is not necessary, since the matrix should be real. ;
An_wrap__ = @(a_UX_Y_ycn__) cg_lsq_pm_An_wrap_0(n_CTF_rank,n_M,VSCTF_wMc__,pm_n_k_p_r,pm_n_w_,pm_l_max_,a_UX_Y_ycn__,scatter_from_tensor__,n_polar_a,n_azimu_b,legendre_evaluate_ljm___);
At_wrap__ = @(UX_wMn__) cg_lsq_pm_At_wrap_0(n_CTF_rank,n_M,VSCTF_wMc__,pm_n_k_p_r,pm_n_w_,pm_l_max_,UX_wMn__,tensor_from_scatter__,n_polar_a,n_azimu_b,legendre_evaluate_mlj___,expil__,expi__);
AtAn_wrap__ = @(a_UX_Y_ycn__) At_wrap__(An_wrap__(a_UX_Y_ycn__));
end;%if (numel(unique(pm_l_max_))==1 & numel(unique(pm_n_lm_))==1 & numel(unique(pm_n_w_))==1);
if (~flag_unique_pm_n);
error(sprintf(' %% Error, consider setting all values of pm_l_max, pm_n_lm and pm_n_w to be the same in loading_0.'));
end;%if (~flag_unique_pm_n);

flag_check=0;
if flag_check;
%%%%%%%%;
% Now test forward operator on single principal shell/ring. ;
%%%%%%%%;
tmp_n_w_max = n_w_max*1;
tmp_pm_n_w_max = tmp_n_w_max;
tmp_n_CTF_rank = 1;
tmp_pm_n_UX_rank = 1;  
tmp_pm_nk_p_r = 3; %<-- one of the principal shells. ;
tmp_y_index_ = pm_n_lm_csum_(1+tmp_pm_nk_p_r) + (0:pm_n_lm_max-1);
a_UCTF_UX_Y_0qbp_y0c__ = a_UCTF_UX_Y_0qbp_ync__(1+tmp_y_index_,1:tmp_n_CTF_rank);
tmp_viewing_k_eq_d = 1.0/k_p_r_max;
tmp_template_k_eq_d = -1;
tmp_n_M = ...
sample_shell_5( ...
 pm_k_p_r_max ...
,tmp_viewing_k_eq_d ...
,'L' ...
) ;
tmp_UX_M_k_p_0qbp_w0Mc___ = zeros(tmp_pm_n_w_max,tmp_n_M,tmp_n_CTF_rank);
for nCTF_rank=0:tmp_n_CTF_rank-1;
[ ...
 tmp_UX_M_k_p_0qbp_w0Mc___(:,:,1+nCTF_rank) ...
,~ ...
,~ ...
,~ ...
,tmp_n_M ...
,tmp_viewing_azimu_b_all_ ...
,tmp_viewing_polar_a_all_ ...
,~ ...
,~ ...
,~ ...
,~ ...
,tmp_template_k_c_0__ ...
,tmp_template_k_c_1__ ...
,tmp_template_k_c_2__ ...
] = ...
get_template_1( ...
 0*verbose ...
,1 ...
,ones(tmp_pm_n_UX_rank,1) ...
,1 ...
,ones(tmp_pm_n_UX_rank,1) ...
,l_max_max*ones(tmp_pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_0qbp_y0c__(:,1+nCTF_rank) ...
,tmp_viewing_k_eq_d ...
,tmp_template_k_eq_d ...
,tmp_n_w_max*ones(tmp_pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:tmp_n_CTF_rank-1;
tmp_template_k_p_r01__ = sqrt(tmp_template_k_c_0__.^2 + tmp_template_k_c_1__.^2);
tmp_template_k_p_polar_a__ = atan2(tmp_template_k_p_r01__,tmp_template_k_c_2__);
tmp_template_k_p_azimu_b__ = atan2(tmp_template_k_c_1__,tmp_template_k_c_0__);
tmp_UX_M_k_p_0qbp_w0M__ = zeros(tmp_pm_n_w_max,tmp_n_M);
rng(0); tmp_VSCTF_Mc__ = randn(tmp_n_M,tmp_n_CTF_rank);
for nCTF_rank=0:tmp_n_CTF_rank-1;
for tmp_nM=0:tmp_n_M-1;
tmp_UX_M_k_p_0qbp_w0M__(:,1+tmp_nM) = tmp_UX_M_k_p_0qbp_w0M__(:,1+tmp_nM) + tmp_UX_M_k_p_0qbp_w0Mc___(:,1+tmp_nM,1+nCTF_rank)*tmp_VSCTF_Mc__(1+tmp_nM,1+nCTF_rank);
end;%for tmp_nM=0:tmp_n_M-1;
end;%for nCTF_rank=0:tmp_n_CTF_rank-1;
disp(sprintf(' %% tmp_n_M %d',tmp_n_M));
tmp_UX_M_k_p_0qbp_wM0_ = reshape(permute(reshape(tmp_UX_M_k_p_0qbp_w0M__,[tmp_pm_n_w_max,tmp_pm_n_UX_rank,tmp_n_M]),[1,3,2]),[tmp_pm_n_w_max*tmp_n_M,tmp_pm_n_UX_rank]);
%%%%;
tmp_VSCTF_wMc__ = reshape(repmat(reshape(tmp_VSCTF_Mc__,[tmp_pm_n_UX_rank,tmp_n_M,tmp_n_CTF_rank]),[tmp_pm_n_w_max,1,1]),[tmp_pm_n_w_max*tmp_n_M,tmp_n_CTF_rank]);
[tmp_k_p_polar_a__,tmp_k_p_azimu_b__] = cg_rhs_1(tmp_n_M,tmp_pm_n_w_max,tmp_viewing_polar_a_all_,tmp_viewing_azimu_b_all_,zeros(tmp_n_M,1));
disp(sprintf(' %% tmp_template_k_p_polar_a__ vs tmp_k_p_polar_a__: %0.16f',fnorm(tmp_template_k_p_polar_a__ - tmp_k_p_polar_a__)/fnorm(tmp_template_k_p_polar_a__)));
disp(sprintf(' %% tmp_template_k_p_azimu_b__ vs tmp_k_p_azimu_b__: %0.16f',fnorm(tmp_template_k_p_azimu_b__ - tmp_k_p_azimu_b__)/fnorm(tmp_template_k_p_azimu_b__)));
tmp_res_factor = 1;
tmp_n_polar_a = ceil(tmp_pm_n_w_max/2)*tmp_res_factor;
tmp_n_azimu_b = max(1+2*pm_l_max,2*tmp_res_factor*tmp_n_polar_a);
[tmp_legendre_evaluate_ljm___,tmp_legendre_evaluate_mlj___,tmp_expil__,tmp_expi__] = legendre_evaluate_ljm___0(pm_l_max,cos(linspace(0,pi,tmp_n_polar_a)),tmp_n_azimu_b);
tmp_scatter_from_tensor__ = cg_interpolate_n_2(cg_lsq_n_order,tmp_n_polar_a,tmp_n_azimu_b,tmp_pm_n_w_max*tmp_n_M,tmp_k_p_polar_a__(:),tmp_k_p_azimu_b__(:));
tmp_tensor_from_scatter__ = ctranspose(tmp_scatter_from_tensor__); %<-- this conjugation is not necessary, since the matrix should be real. ;
tmp_An__ = @(a_UX_Y_yc_) cg_lsq_pm_An_0(tmp_n_CTF_rank,tmp_n_M,tmp_VSCTF_wMc__,tmp_pm_n_w_max,pm_l_max,a_UX_Y_yc_,tmp_scatter_from_tensor__,tmp_n_polar_a,tmp_n_azimu_b,tmp_legendre_evaluate_ljm___);
%%%%;
a_UCTF_UX_Y_0qbp_yc0_ = reshape(permute(reshape(a_UCTF_UX_Y_0qbp_y0c__,[pm_n_lm_max,tmp_pm_n_UX_rank,tmp_n_CTF_rank]),[1,3,2]),[pm_n_lm_max*tmp_n_CTF_rank,tmp_pm_n_UX_rank]);
tmp_An_a_UCTF_UX_Y_0qbp_yc0_ = tmp_An__(a_UCTF_UX_Y_0qbp_yc0_);
flag_plot=0;
if flag_plot;
figure();clf;
subplot(2,1,1); imagesc(real(reshape(tmp_An_a_UCTF_UX_Y_0qbp_yc0_,[tmp_pm_n_w_max,tmp_n_M])));
subplot(2,1,2); imagesc(real(reshape(tmp_UX_M_k_p_0qbp_wM0_,[tmp_pm_n_w_max,tmp_n_M])));
end;%if flag_plot;
disp(sprintf(' %% tmp_An_a_UCTF_UX_Y_0qbp_yc0_ vs tmp_UX_M_k_p_0qbp_wM0_: %0.16f',fnorm(tmp_An_a_UCTF_UX_Y_0qbp_yc0_ - tmp_UX_M_k_p_0qbp_wM0_)/fnorm(tmp_An_a_UCTF_UX_Y_0qbp_yc0_)));
disp(sprintf(' %% real(corr(tmp_An_a_UCTF_UX_Y_0qbp_yc0_,tmp_UX_M_k_p_0qbp_wM0_)): %0.16f',real(corr(tmp_An_a_UCTF_UX_Y_0qbp_yc0_,tmp_UX_M_k_p_0qbp_wM0_))));
%%%%%%%%;
error('finished check');
end;%if flag_check;
%%%%%%%%;

flag_check=1;
if flag_check;
%%%%%%%%;
% Now test forward operator. ;
%%%%%%%%;
tmp_n_w_max = n_w_max*1;
tmp_pm_n_w_max = tmp_n_w_max;
tmp_pm_n_w_ = tmp_pm_n_w_max*ones(pm_n_UX_rank,1);
tmp_pm_n_w_sum = sum(tmp_pm_n_w_);
tmp_viewing_k_eq_d = 1.0/k_p_r_max;
tmp_template_k_eq_d = -1;
tmp_n_M = ...
sample_shell_5( ...
 pm_k_p_r_max ...
,tmp_viewing_k_eq_d ...
,'L' ...
) ;
tmp_UX_M_k_p_0qbp_wnMc___ = zeros(tmp_pm_n_w_sum,tmp_n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
[ ...
 tmp_UX_M_k_p_0qbp_wnMc___(:,:,1+nCTF_rank) ...
,~ ...
,~ ...
,~ ...
,tmp_n_M ...
,tmp_viewing_azimu_b_all_ ...
,tmp_viewing_polar_a_all_ ...
] = ...
get_template_1( ...
 0*verbose ...
,pm_n_UX_rank ...
,ones(pm_n_UX_rank,1) ...
,1 ...
,ones(pm_n_UX_rank,1) ...
,l_max_max*ones(pm_n_UX_rank,1) ...
,a_UCTF_UX_Y_0qbp_ync__(:,1+nCTF_rank) ...
,tmp_viewing_k_eq_d ...
,tmp_template_k_eq_d ...
,tmp_n_w_max*ones(pm_n_UX_rank,1) ...
);
end;%for nCTF_rank=0:n_CTF_rank-1;
tmp_UX_M_k_p_0qbp_wnM__ = zeros(tmp_pm_n_w_sum,tmp_n_M);
rng(0); tmp_VSCTF_Mc__ = randn(tmp_n_M,n_CTF_rank);
for nCTF_rank=0:n_CTF_rank-1;
for tmp_nM=0:tmp_n_M-1;
tmp_UX_M_k_p_0qbp_wnM__(:,1+tmp_nM) = tmp_UX_M_k_p_0qbp_wnM__(:,1+tmp_nM) + tmp_UX_M_k_p_0qbp_wnMc___(:,1+tmp_nM,1+nCTF_rank)*tmp_VSCTF_Mc__(1+tmp_nM,1+nCTF_rank);
end;%for tmp_nM=0:tmp_n_M-1;
end;%for nCTF_rank=0:n_CTF_rank-1;
disp(sprintf(' %% tmp_n_M %d',tmp_n_M));
tmp_UX_M_k_p_0qbp_wMn__ = reshape(permute(reshape(tmp_UX_M_k_p_0qbp_wnM__,[tmp_pm_n_w_max,pm_n_UX_rank,tmp_n_M]),[1,3,2]),[tmp_pm_n_w_max*tmp_n_M,pm_n_UX_rank]);
%%%%;
tmp_VSCTF_wMc__ = reshape(repmat(reshape(tmp_VSCTF_Mc__,[1,tmp_n_M,n_CTF_rank]),[tmp_pm_n_w_max,1,1]),[tmp_pm_n_w_max*tmp_n_M,n_CTF_rank]);
[tmp_k_p_polar_a__,tmp_k_p_azimu_b__] = cg_rhs_1(tmp_n_M,tmp_pm_n_w_max,tmp_viewing_polar_a_all_,tmp_viewing_azimu_b_all_,zeros(tmp_n_M,1));
tmp_n_polar_a = ceil(tmp_pm_n_w_max/2);
tmp_n_azimu_b = max(1+2*pm_l_max,2*tmp_n_polar_a);
[tmp_legendre_evaluate_ljm___,tmp_legendre_evaluate_mlj___,tmp_expil__,tmp_expi__] = legendre_evaluate_ljm___0(pm_l_max,cos(linspace(0,pi,tmp_n_polar_a)),tmp_n_azimu_b);
tmp_scatter_from_tensor__ = cg_interpolate_n_2(cg_lsq_n_order,tmp_n_polar_a,tmp_n_azimu_b,tmp_pm_n_w_max*tmp_n_M,tmp_k_p_polar_a__(:),tmp_k_p_azimu_b__(:));
tmp_tensor_from_scatter__ = ctranspose(tmp_scatter_from_tensor__); %<-- this conjugation is not necessary, since the matrix should be real. ;
tmp_An_wrap__ = @(a_UX_Y_ycn__) cg_lsq_pm_An_wrap_0(n_CTF_rank,tmp_n_M,tmp_VSCTF_wMc__,pm_n_k_p_r,tmp_pm_n_w_,pm_l_max_,a_UX_Y_ycn__,tmp_scatter_from_tensor__,tmp_n_polar_a,tmp_n_azimu_b,tmp_legendre_evaluate_ljm___);
%%%%;
a_UCTF_UX_Y_0qbp_ycn__ = reshape(permute(reshape(a_UCTF_UX_Y_0qbp_ync__,[pm_n_lm_max,pm_n_k_p_r,n_CTF_rank]),[1,3,2]),[pm_n_lm_max*n_CTF_rank,pm_n_k_p_r]);
tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__ = tmp_An_wrap__(a_UCTF_UX_Y_0qbp_ycn__);
disp(sprintf(' %% tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__ vs tmp_UX_M_k_p_0qbp_wMn__: %0.16f',fnorm(tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__ - tmp_UX_M_k_p_0qbp_wMn__)/fnorm(tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__)));
disp(sprintf(' %% real(corr(tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__(:),tmp_UX_M_k_p_0qbp_wMn__(:))): %0.16f',real(corr(tmp_An_wrap_a_UCTF_UX_Y_0qbp_ycn__(:),tmp_UX_M_k_p_0qbp_wMn__(:)))));
%%%%%%%%;
end;%if flag_check;
%%%%%%%%;

%%%%%%%%;
% Now calculate residual. ;
%%%%%%%%;
a_UCTF_UX_Y_0qbp_ycn__ = reshape(permute(reshape(a_UCTF_UX_Y_0qbp_ync__,[pm_n_lm_max,pm_n_k_p_r,n_CTF_rank]),[1,3,2]),[pm_n_lm_max*n_CTF_rank,pm_n_k_p_r]);
UX_M_k_p_wMn__ = reshape(permute(reshape(UX_M_k_p_wnM__,[pm_n_w_max,pm_n_k_p_r,n_M]),[1,3,2]),[pm_n_w_max*n_M,pm_n_k_p_r]);
An_wrap_a_UCTF_UX_Y_0qbp_ycn__ = An_wrap__(a_UCTF_UX_Y_0qbp_ycn__);
Residual_wMn__ = An_wrap_a_UCTF_UX_Y_0qbp_ycn__ - UX_M_k_p_wMn__;
disp(sprintf(' %% fnorm(UX_M_k_p_wMn__)/fnorm(Residual_wMn__): %0.16f',fnorm(UX_M_k_p_wMn__)/fnorm(Residual_wMn__)));
error(0);

flag_0bp=0;
if flag_0bp;
%%%%%%%%;
% Now estimate loading using back-projection. ; 
%%%%%%%%;
V_loading_Ml__ = zeros(n_M,n_loading);
S_loading_l_ = zeros(n_loading,1);
U_loading_ycnl___ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank,n_loading);
Residual_wnM___ = permute(reshape(Residual_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
Residual_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; Residual_l2_M_(1+nM) = fnorm(Residual_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_At_Residual_SV_ycn__ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank);
tmp_An_U_wMn__ = zeros(pm_n_w_max*n_M,pm_n_UX_rank);
tmp_An_U_wnM___ = zeros(pm_n_w_max,pm_n_UX_rank,n_M);
rng(parameter.rseed);
V_loading_Ml__ = randn(n_M,n_loading);
S_loading_l_ = ones(n_loading,1);
n_iteration = n_loading_iteration;
flag_orth_U = 1;
flag_orth_V = 0;
for niteration=0:n_iteration-1;
for nloading0=0:n_loading-1;
tmp_Residual_SV_wMn__ = reshape(permute(bsxfun(@times,Residual_wnM___,reshape(S_loading_l_(1+nloading0)*V_loading_Ml__(:,1+nloading0),[1,1,n_M])),[1,3,2]),[pm_n_w_max*n_M,pm_n_UX_rank]);
tmp_At_Residual_SV_ycn__ = At_wrap__(tmp_Residual_SV_wMn__);
if flag_orth_U;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(U_loading_ycnl___(:,:,1+nloading1)).*tmp_At_Residual_SV_ycn__,'all');
tmp_At_Residual_SV_ycn__ = tmp_At_Residual_SV_ycn__ - tmp_R*U_loading_ycnl___(:,:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_U;
tmp_At_Residual_SV_ycn__ = tmp_At_Residual_SV_ycn__/fnorm(tmp_At_Residual_SV_ycn__);
U_loading_ycnl___(:,:,1+nloading0) = tmp_At_Residual_SV_ycn__;
tmp_An_U_wMn__ = An_wrap__(U_loading_ycnl___(:,:,1+nloading0));
tmp_An_U_wnM___ = permute(reshape(tmp_An_U_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
tmp_An_U_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; tmp_An_U_l2_M_(1+nM) = fnorm(tmp_An_U_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_SV_ = zeros(n_M,1);
for nM=0:n_M-1;
tmp_SV_(1+nM) = real(sum(conj(Residual_wnM___(:,:,1+nM)).*tmp_An_U_wnM___(:,:,1+nM),'all'))/(Residual_l2_M_(1+nM)*tmp_An_U_l2_M_(1+nM));
end;%for nM=0:n_M-1;
if flag_orth_V;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(V_loading_Ml__(:,1+nloading1)).*tmp_SV_);
tmp_SV_ = tmp_SV_ - tmp_R*V_loading_Ml__(:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_V;
S_loading_l_(1+nloading0) = fnorm(tmp_SV_);
V_loading_Ml__(:,1+nloading0) = tmp_SV_/S_loading_l_(1+nloading0);
end;%for nloading0=0:n_loading-1;
SV_loading_Ml__ = bsxfun(@times,V_loading_Ml__,reshape(S_loading_l_,[1,n_loading]));
flag_plot=1;
if flag_plot;
figure(1);clf;figsml;fig80s;markersize_use = 12;
%scatter3(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),SV_loading_Ml__(:,3),markersize_use,mod(0:n_M-1,3),'filled'); axis vis3d;
scatter(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),markersize_use,mod(0:n_M-1,3),'filled'); axis vis3d;
title(sprintf('ni %d/%d',niteration,n_iteration));
drawnow();
end;%if flag_plot;
end;%for niteration=0:n_iteration-1;
%%%%%%%%;
end;%if flag_0bp;
%%%%%%%%;

flag_qbp=0;
if flag_qbp;
%%%%%%%%;
% estimate loading using qbp. ;
%%%%%%%%;
tmp_quad_n_all = [];
tmp_quad_azimu_b_all_ = [];
tmp_quad_polar_a_all_ = [];
tmp_quad_weight_all_ = [];
tmp_quad_k_c_0_all_ = [];
tmp_quad_k_c_1_all_ = [];
tmp_quad_k_c_2_all_ = [];
tmp_quad_k_c_qd__ = [];
tmp_Ylm__ = [];
tmp_Ylm_yq__ = [];
tmp_Ylm_w_yq__ = [];
tmp_data_k_p_polar_a__ = [];
tmp_data_k_p_azimu_b__ = [];
tmp_data_k_c_0__ = [];
tmp_data_k_c_1__ = [];
tmp_data_k_c_2__ = [];
tmp_data_k_c_wMd__ = [];
tmp_index_quad_from_data_ = [];
tmp_quad_from_data_qwM__ = [];
tmp_n_quad_from_data_q_ = [];
tmp_data_from_quad_wMq__ = [];
tmp_VSCTF_wMc__ = [];
tmp_VSCTF2_qc__ = [];
tmp_VSCTF2_qcc___ = [];
tmp_VSCTF2_pinv_ccq___ = [];
%%%%%%%%;
V_loading_Ml__ = zeros(n_M,n_loading);
S_loading_l_ = zeros(n_loading,1);
U_loading_ycnl___ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank,n_loading);
Residual_wnM___ = permute(reshape(Residual_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
Residual_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; Residual_l2_M_(1+nM) = fnorm(Residual_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_Ainv_Residual_SV_ync__ = zeros(pm_n_lm_max*pm_n_UX_rank,n_CTF_rank);
tmp_Ainv_Residual_SV_ycn__ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank);
tmp_An_U_wMn__ = zeros(pm_n_w_max*n_M,pm_n_UX_rank);
tmp_An_U_wnM___ = zeros(pm_n_w_max,pm_n_UX_rank,n_M);
rng(parameter.rseed);
V_loading_Ml__ = randn(n_M,n_loading);
S_loading_l_ = ones(n_loading,1);
flag_orth_U = 1;
flag_orth_V = 0;
n_iteration = n_loading_iteration;
for niteration=0:n_iteration-1;
for nloading0=0:n_loading-1;
tmp_Residual_SV_wnM__ = reshape(bsxfun(@times,Residual_wnM___,reshape(S_loading_l_(1+nloading0)*V_loading_Ml__(:,1+nloading0),[1,1,n_M])),[pm_n_w_max*pm_n_UX_rank,n_M]);
%%%%;
tmp_t = tic();
[ ...
 parameter ...
,tmp_Ainv_Residual_SV_ync__ ...
,tmp_quad_n_all ...
,tmp_quad_azimu_b_all_ ...
,tmp_quad_polar_a_all_ ...
,tmp_quad_weight_all_ ...
,tmp_quad_k_c_0_all_ ...
,tmp_quad_k_c_1_all_ ...
,tmp_quad_k_c_2_all_ ...
,tmp_quad_k_c_qd__ ...
,tmp_Ylm__ ...
,tmp_Ylm_yq__ ...
,tmp_Ylm_w_yq__ ...
,tmp_data_k_p_polar_a__ ...
,tmp_data_k_p_azimu_b__ ...
,tmp_data_k_c_0__ ...
,tmp_data_k_c_1__ ...
,tmp_data_k_c_2__ ...
,tmp_data_k_c_wMd__ ...
,tmp_index_quad_from_data_ ...
,tmp_quad_from_data_qwM__ ...
,tmp_n_quad_from_data_q_ ...
,tmp_data_from_quad_wMq__ ...
,tmp_VSCTF_wMc__ ...
,tmp_VSCTF2_qc__ ...
,tmp_VSCTF2_qcc___ ...
,tmp_VSCTF2_pinv_ccq___ ...
] = ...
qbp_pm_2( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,tmp_Residual_SV_wnM__ ...
,n_CTF_rank ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_I_value_...
,tmp_quad_n_all ...
,tmp_quad_azimu_b_all_ ...
,tmp_quad_polar_a_all_ ...
,tmp_quad_weight_all_ ...
,tmp_quad_k_c_0_all_ ...
,tmp_quad_k_c_1_all_ ...
,tmp_quad_k_c_2_all_ ...
,tmp_quad_k_c_qd__ ...
,tmp_Ylm__ ...
,tmp_Ylm_yq__ ...
,tmp_Ylm_w_yq__ ...
,tmp_data_k_p_polar_a__ ...
,tmp_data_k_p_azimu_b__ ...
,tmp_data_k_c_0__ ...
,tmp_data_k_c_1__ ...
,tmp_data_k_c_2__ ...
,tmp_data_k_c_wMd__ ...
,tmp_index_quad_from_data_ ...
,tmp_quad_from_data_qwM__ ...
,tmp_n_quad_from_data_q_ ...
,tmp_data_from_quad_wMq__ ...
,tmp_VSCTF_wMc__ ...
,tmp_VSCTF2_qc__ ...
,tmp_VSCTF2_qcc___ ...
,tmp_VSCTF2_pinv_ccq___ ...
);
tmp_Ainv_Residual_SV_ycn__ = reshape(permute(reshape(tmp_Ainv_Residual_SV_ync__,[pm_n_lm_max,pm_n_UX_rank,n_CTF_rank]),[1,3,2]),[pm_n_lm_max*n_CTF_rank,pm_n_UX_rank]);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% qbp_pm_2: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'qbp_pm_2',tmp_t);
%%%%;
if flag_orth_U;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(U_loading_ycnl___(:,:,1+nloading1)).*tmp_Ainv_Residual_SV_ycn__,'all');
tmp_Ainv_Residual_SV_ycn__ = tmp_Ainv_Residual_SV_ycn__ - tmp_R*U_loading_ycnl___(:,:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_U;
tmp_Ainv_Residual_SV_ycn__ = tmp_Ainv_Residual_SV_ycn__/fnorm(tmp_Ainv_Residual_SV_ycn__);
U_loading_ycnl___(:,:,1+nloading0) = tmp_Ainv_Residual_SV_ycn__;
tmp_An_U_wMn__ = An_wrap__(U_loading_ycnl___(:,:,1+nloading0));
tmp_An_U_wnM___ = permute(reshape(tmp_An_U_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
tmp_An_U_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; tmp_An_U_l2_M_(1+nM) = fnorm(tmp_An_U_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_SV_ = zeros(n_M,1);
for nM=0:n_M-1;
%tmp_SV_(1+nM) = V_loading_Ml__(1+nM,1+nloading0)*real(sum(conj(Residual_wnM___(:,:,1+nM)).*tmp_An_U_wnM___(:,:,1+nM),'all'))/(Residual_l2_M_(1+nM)*tmp_An_U_l2_M_(1+nM));
tmp_SV_(1+nM) = real(sum(conj(Residual_wnM___(:,:,1+nM)).*tmp_An_U_wnM___(:,:,1+nM),'all'))/(Residual_l2_M_(1+nM)*tmp_An_U_l2_M_(1+nM));
end;%for nM=0:n_M-1;
if flag_orth_V;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(V_loading_Ml__(:,1+nloading1)).*tmp_SV_);
tmp_SV_ = tmp_SV_ - tmp_R*V_loading_Ml__(:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_V;
S_loading_l_(1+nloading0) = fnorm(tmp_SV_);
V_loading_Ml__(:,1+nloading0) = tmp_SV_/S_loading_l_(1+nloading0);
end;%for nloading0=0:n_loading-1;
SV_loading_Ml__ = bsxfun(@times,V_loading_Ml__,reshape(S_loading_l_,[1,n_loading]));
flag_plot=1;
if flag_plot;
figure(1);clf;figsml;fig80s;markersize_use = 12;
%scatter3(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),SV_loading_Ml__(:,3),markersize_use,mod(0:n_M-1,3),'filled'); axis vis3d;
scatter(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),markersize_use,mod(0:n_M-1,3),'filled');
title(sprintf('ni %d/%d',niteration,n_iteration));
drawnow();
end;%if flag_plot;
end;%for niteration=0:n_iteration-1;
%%%%%%%%;
end;%if flag_qbp;
%%%%%%%%;


flag_qbp=1;
if flag_qbp;
%%%%%%%%;
% estimate loading one at a time using qbp. ;
%%%%%%%%;
tmp_quad_n_all = [];
tmp_quad_azimu_b_all_ = [];
tmp_quad_polar_a_all_ = [];
tmp_quad_weight_all_ = [];
tmp_quad_k_c_0_all_ = [];
tmp_quad_k_c_1_all_ = [];
tmp_quad_k_c_2_all_ = [];
tmp_quad_k_c_qd__ = [];
tmp_Ylm__ = [];
tmp_Ylm_yq__ = [];
tmp_Ylm_w_yq__ = [];
tmp_data_k_p_polar_a__ = [];
tmp_data_k_p_azimu_b__ = [];
tmp_data_k_c_0__ = [];
tmp_data_k_c_1__ = [];
tmp_data_k_c_2__ = [];
tmp_data_k_c_wMd__ = [];
tmp_index_quad_from_data_ = [];
tmp_quad_from_data_qwM__ = [];
tmp_n_quad_from_data_q_ = [];
tmp_data_from_quad_wMq__ = [];
tmp_VSCTF_wMc__ = [];
tmp_VSCTF2_qc__ = [];
tmp_VSCTF2_qcc___ = [];
tmp_VSCTF2_pinv_ccq___ = [];
%%%%%%%%;
V_loading_Ml__ = zeros(n_M,n_loading);
S_loading_l_ = zeros(n_loading,1);
U_loading_ycnl___ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank,n_loading);
Residual_wnM___ = permute(reshape(Residual_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
Residual_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; Residual_l2_M_(1+nM) = fnorm(Residual_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_Ainv_Residual_SV_ync__ = zeros(pm_n_lm_max*pm_n_UX_rank,n_CTF_rank);
tmp_Ainv_Residual_SV_ycn__ = zeros(pm_n_lm_max*n_CTF_rank,pm_n_UX_rank);
tmp_An_U_wMn__ = zeros(pm_n_w_max*n_M,pm_n_UX_rank);
tmp_An_U_wnM___ = zeros(pm_n_w_max,pm_n_UX_rank,n_M);
rng(parameter.rseed);
SV_loading_Ml__ = zeros(n_M,n_loading);
V_loading_Ml__ = zeros(n_M,n_loading);
S_loading_l_ = ones(n_loading,1);
flag_orth_U = 1;
flag_orth_V = 0;
n_iteration = n_loading_iteration;
for nloading0=0:n_loading-1;
S_loading_l_(1+nloading0) = 1;
V_loading_Ml_(:,1+nloading0) = ones(n_M,1);
SV_loading_Ml_(:,1+nloading0) = ones(n_M,1);
for niteration=0:n_iteration-1;
for nloading0=0:n_loading-1;
tmp_Residual_SV_wnM__ = reshape(bsxfun(@times,Residual_wnM___,reshape(S_loading_l_(1+nloading0)*V_loading_Ml__(:,1+nloading0),[1,1,n_M])),[pm_n_w_max*pm_n_UX_rank,n_M]);
%%%%;
tmp_t = tic();
[ ...
 parameter ...
,tmp_Ainv_Residual_SV_ync__ ...
,tmp_quad_n_all ...
,tmp_quad_azimu_b_all_ ...
,tmp_quad_polar_a_all_ ...
,tmp_quad_weight_all_ ...
,tmp_quad_k_c_0_all_ ...
,tmp_quad_k_c_1_all_ ...
,tmp_quad_k_c_2_all_ ...
,tmp_quad_k_c_qd__ ...
,tmp_Ylm__ ...
,tmp_Ylm_yq__ ...
,tmp_Ylm_w_yq__ ...
,tmp_data_k_p_polar_a__ ...
,tmp_data_k_p_azimu_b__ ...
,tmp_data_k_c_0__ ...
,tmp_data_k_c_1__ ...
,tmp_data_k_c_2__ ...
,tmp_data_k_c_wMd__ ...
,tmp_index_quad_from_data_ ...
,tmp_quad_from_data_qwM__ ...
,tmp_n_quad_from_data_q_ ...
,tmp_data_from_quad_wMq__ ...
,tmp_VSCTF_wMc__ ...
,tmp_VSCTF2_qc__ ...
,tmp_VSCTF2_qcc___ ...
,tmp_VSCTF2_pinv_ccq___ ...
] = ...
qbp_pm_2( ...
 parameter ...
,pm_n_k_p_r ...
,pm_l_max_ ...
,pm_n_w_ ...
,n_M ...
,tmp_Residual_SV_wnM__ ...
,n_CTF_rank ...
,VSCTF_Mc__ ...
,euler_polar_a_ ...
,euler_azimu_b_ ...
,euler_gamma_z_ ...
,image_I_value_...
,tmp_quad_n_all ...
,tmp_quad_azimu_b_all_ ...
,tmp_quad_polar_a_all_ ...
,tmp_quad_weight_all_ ...
,tmp_quad_k_c_0_all_ ...
,tmp_quad_k_c_1_all_ ...
,tmp_quad_k_c_2_all_ ...
,tmp_quad_k_c_qd__ ...
,tmp_Ylm__ ...
,tmp_Ylm_yq__ ...
,tmp_Ylm_w_yq__ ...
,tmp_data_k_p_polar_a__ ...
,tmp_data_k_p_azimu_b__ ...
,tmp_data_k_c_0__ ...
,tmp_data_k_c_1__ ...
,tmp_data_k_c_2__ ...
,tmp_data_k_c_wMd__ ...
,tmp_index_quad_from_data_ ...
,tmp_quad_from_data_qwM__ ...
,tmp_n_quad_from_data_q_ ...
,tmp_data_from_quad_wMq__ ...
,tmp_VSCTF_wMc__ ...
,tmp_VSCTF2_qc__ ...
,tmp_VSCTF2_qcc___ ...
,tmp_VSCTF2_pinv_ccq___ ...
);
tmp_Ainv_Residual_SV_ycn__ = reshape(permute(reshape(tmp_Ainv_Residual_SV_ync__,[pm_n_lm_max,pm_n_UX_rank,n_CTF_rank]),[1,3,2]),[pm_n_lm_max*n_CTF_rank,pm_n_UX_rank]);
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% qbp_pm_2: %0.3fs',tmp_t)); end;
parameter = parameter_timing_update(parameter,'qbp_pm_2',tmp_t);
%%%%;
if flag_orth_U;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(U_loading_ycnl___(:,:,1+nloading1)).*tmp_Ainv_Residual_SV_ycn__,'all');
tmp_Ainv_Residual_SV_ycn__ = tmp_Ainv_Residual_SV_ycn__ - tmp_R*U_loading_ycnl___(:,:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_U;
tmp_Ainv_Residual_SV_ycn__ = tmp_Ainv_Residual_SV_ycn__/fnorm(tmp_Ainv_Residual_SV_ycn__);
U_loading_ycnl___(:,:,1+nloading0) = tmp_Ainv_Residual_SV_ycn__;
tmp_An_U_wMn__ = An_wrap__(U_loading_ycnl___(:,:,1+nloading0));
tmp_An_U_wnM___ = permute(reshape(tmp_An_U_wMn__,[pm_n_w_max,n_M,pm_n_UX_rank]),[1,3,2]);
tmp_An_U_l2_M_ = zeros(n_M,1); for nM=0:n_M-1; tmp_An_U_l2_M_(1+nM) = fnorm(tmp_An_U_wnM___(:,:,1+nM)); end;%for nM=0:n_M-1;
tmp_SV_ = zeros(n_M,1);
for nM=0:n_M-1;
%tmp_SV_(1+nM) = V_loading_Ml__(1+nM,1+nloading0)*real(sum(conj(Residual_wnM___(:,:,1+nM)).*tmp_An_U_wnM___(:,:,1+nM),'all'))/(Residual_l2_M_(1+nM)*tmp_An_U_l2_M_(1+nM));
tmp_SV_(1+nM) = real(sum(conj(Residual_wnM___(:,:,1+nM)).*tmp_An_U_wnM___(:,:,1+nM),'all'))/(Residual_l2_M_(1+nM)*tmp_An_U_l2_M_(1+nM));
end;%for nM=0:n_M-1;
if flag_orth_V;
for nloading1=0:nloading0-1;
tmp_R = sum(conj(V_loading_Ml__(:,1+nloading1)).*tmp_SV_);
tmp_SV_ = tmp_SV_ - tmp_R*V_loading_Ml__(:,1+nloading1);
end;%for nloading1=0:nloading0-1;
end;%if flag_orth_V;
S_loading_l_(1+nloading0) = fnorm(tmp_SV_);
V_loading_Ml__(:,1+nloading0) = tmp_SV_/S_loading_l_(1+nloading0);
end;%for nloading0=0:n_loading-1;
SV_loading_Ml__ = bsxfun(@times,V_loading_Ml__,reshape(S_loading_l_,[1,n_loading]));
flag_plot=1;
if flag_plot;
figure(1);clf;figsml;fig80s;markersize_use = 12;
%scatter3(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),SV_loading_Ml__(:,3),markersize_use,mod(0:n_M-1,3),'filled'); axis vis3d;
scatter(SV_loading_Ml__(:,1),SV_loading_Ml__(:,2),markersize_use,mod(0:n_M-1,3),'filled');
title(sprintf('ni %d/%d',niteration,n_iteration));
drawnow();
end;%if flag_plot;
end;%for niteration=0:n_iteration-1;

end;%for nloading0=0:n_loading-1;
%%%%%%%%;
end;%if flag_qbp;
%%%%%%%%;


if (verbose); disp(sprintf(' %% [finished loading_0]')); end;
