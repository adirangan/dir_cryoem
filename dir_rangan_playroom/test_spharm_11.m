function [X0_,X1_] = test_spharm_11(n_k,k_,n_l_,a_,b_);
% tests registration between molecule_A and molecule_B using an array of delta_ ;
% This compares two functions: ;
% [X0_] = register_spharm_to_spharm_delta_0(verbose,n_k,k_,n_l_,a_,b_,n_delta,delta__);
% [X1_] = register_spharm_to_spharm_delta_slow_0(verbose,n_k,k_,n_l_,a_,b_,n_delta,delta__);
% The former uses the nufft3d3, whereas the latter calculates inner products by brute-force. ;
%
% when no inputs are passed we import two spherical harmonic representations (generated by kspacegrid_to_model): ;
% molecule_A: modsph_A_ori = spiral ;
% molecule_B: modsph_B_ori = spiral with twisted tail ;
% ;
% Inputs: ;
% n_k = integer maximum k ;
% k_ = real array of length n_k; k_(nk) = k_value for shell nk ;
% n_l_ = integer array of length n_k; n_l_(nk) = spherical harmonic order on shell nk; n_l_(nk) corresponds to n_lm_(nk) = (n_l_(nk)+1)^2 coefficients ;
% a_ = complex array of length \sum_{nk} (n_lm_(nk)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% b_ = complex array of length \sum_{nk} (n_lm_(nk)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% a_ corresponds to molecule_a, b_ to molecule_b ;
% ;
% Outputs: ;
% X0_ = complex array of size (n_delta,1) calculated by register_spharm_to_spharm_delta_0. ;
% X0_ = complex array of dimension (n_delta_x,n_delta_y,n_delta_z). ;
% X0_(ndelta_x,ndelta_y,ndelta_z) corresponds to the innerproduct between molecule_A and molecule_B, ; 
% where the latter has been translated (in real-space) by displacement ;
% delta_ = [delta__(ndelta,:)] = [delta_x,delta_y,delta_z] ;
% ;
% X1_ is similar, calculated by register_spharm_to_spharm_delta_slow. ;
% ;
% test with: ;
%{
  [X0_,X1_] = test_spharm_11();
  %}

path(path,'/data/rangan/dir_cryoem/nufftall-1.33/');

verbose=0;

if nargin<5;
xnodesr_ = MDA_read_r8('./dir_mdaT/xnodesr_.mda');
isph_start_ = MDA_read_i4('./dir_mdaT/isph_start_.mda');
nterms_sph_ = MDA_read_i4('./dir_mdaT/nterms_sph_.mda');
modsph_A_ori_ = MDA_read_c16('./dir_mdaT/modsph_A_ori_.mda');
modsph_B_ori_ = MDA_read_c16('./dir_mdaT/modsph_B_ori_.mda');
n_k = length(isph_start_);
k_ = xnodesr_;
n_l_ = nterms_sph_;
n_lm_ = (n_l_+1).^2;
a_ = modsph_A_ori_;
b_ = modsph_B_ori_;
end;%if nargin<4;

% generating innerproduct array over delta__;

n_delta_x = 7; n_delta_y = 8; n_delta_z = 9; delta_max = 0.0625;
delta_x_ = delta_max*linspace(-1,1,n_delta_x); 
delta_y_ = delta_max*linspace(-1,1,n_delta_y); 
delta_z_ = delta_max*linspace(-1,1,n_delta_z);
[Delta_x_,Delta_y_,Delta_z_] = meshgrid(delta_x_,delta_y_,delta_z_);
n_delta = numel(Delta_x_);
delta__ = [Delta_x_(:) , Delta_y_(:) , Delta_z_(:)];

n_lm_ = (n_l_+1).^2;
k_max = k_(end);
n_l_max = n_l_(end);
m_max_ = -n_l_max : +n_l_max;
n_m_max = length(m_max_);

tmp_x_aa = register_spharm_to_spharm_0(verbose,n_k,k_,n_l_,a_,a_);
tmp_x_ab = register_spharm_to_spharm_0(verbose,n_k,k_,n_l_,a_,b_);
tmp_x_bb = register_spharm_to_spharm_0(verbose,n_k,k_,n_l_,b_,b_);
disp(sprintf(' %% tmp_x_aa %0.16f, tmp_x_ab %0.16f, tmp_x_bb %0.16f, correlation %0.16f',tmp_x_aa,tmp_x_ab,tmp_x_bb,tmp_x_ab./sqrt(tmp_x_aa)./sqrt(tmp_x_bb)));

X0_ = [];
tic;
[X0_] = register_spharm_to_spharm_delta_0(verbose,n_k,k_,n_l_,a_,b_,n_delta,delta__);
t_0 = toc; 

X1_ = [];
tic;
[X1_] = register_spharm_to_spharm_delta_slow_0(verbose,n_k,k_,n_l_,a_,b_,n_delta,delta__);
t_1 = toc; 

X0_ = real(X0_./sqrt(tmp_x_aa)./sqrt(tmp_x_bb));
X1_ = real(X1_./sqrt(tmp_x_aa)./sqrt(tmp_x_bb));

figure;
subplot(1,3,1);plot(X0_,'.-');xlabel('ndelta');ylabel('X_0');title('X_0');
subplot(1,3,2);plot(X1_,'.-');xlabel('ndelta');ylabel('X_1');title('X_0');
subplot(1,3,3);plot(X0_-X1_,'.-');xlabel('ndelta');ylabel('difference');title('X_0-X_1');
set(gcf,'Position',1+[0,0,1024*2,512]);

disp(sprintf(' %% X0_ time %0.2f X1_ time %0.2f',t_0,t_1));

figure;
X0_ = reshape(X0_,n_delta_y,n_delta_x,n_delta_z);
for ndelta_z = 1:n_delta_z;
subplot(3,3,ndelta_z); imagesc(squeeze(X0_(:,:,ndelta_z)),[0.5,1]); title(sprintf('X_0 nz %d',ndelta_z));
end;%for ndelta_z = 1:n_delta_z;
set(gcf,'Position',1+[0,0,1024,1024]);

figure;
X1_ = reshape(X1_,n_delta_y,n_delta_x,n_delta_z);
for ndelta_z = 1:n_delta_z;
subplot(3,3,ndelta_z); imagesc(squeeze(X1_(:,:,ndelta_z)),[0.5,1]); title(sprintf('X_1 nz %d',ndelta_z));
end;%for ndelta_z = 1:n_delta_z;
set(gcf,'Position',1+[0,0,1024,1024]);
