function ...
[ ...
 global_parameter ...
] = ...
test_pm_medres_0( ...
 global_parameter ...
,fname_prefix ...
,dir_nopath_data_star ...
,Pixel_Spacing ...
,fname_nopath_volume ...
,fname_nopath_star ...
);

if (nargin<1);
table_data__ = { ...
%'p28hRPT1_x0' , 'p28hRP' , 0.98 , 'emd_8674.map' , 'T1.star' ; ...
'ISWINCP_x0' , 'ISWINCP' , 1.07 , 'emd_9718.map' , 'ADPBeF.star' ; ...
'trpv1_x0' , 'trpv1' , 1.2156 , 'emd_5778.mrc' , 'tv1_relion_data.star' ; ...
'rib80s_x0' , 'rib80s' , 1.34 , 'emd_2660.mrc' , 'shiny_2sets.star' ; ...
'MlaFEDB_x0' , 'MlaFEDB' , 0.832 , 'emd_22116.map' , 'Empiar_10536_00_to_23.star' ; ...
'LetB1_x0' , 'LetB1' , 1.31 , 'emd_20993.map' , 'job_569_model_1.star' ; ...
'TMEM16F_x0' , 'TMEM16F' , 1.059 , 'emd_20244.map' , 'All_8192.star' ; ...
'LSUbl17dep_x0' , 'LSUbl17dep' , 1.31 , 'emd_8434.map' , 'Parameters_negated.star' ; ...
'ps1_x0' , 'precatalytic_spliceosome' , 1.699 , 'consensus_half1_class001.mrc' , 'consensus_data.star' ; ...
%'LetB1_x0' , 'LetB1' , 1.31 , 'emd_20993.map' , 'job_569_model_1_350MB.star' ; ...
};
n_experiment = size(table_data__,1);
%%%%%%%%;
tmp_ = clock;rng(tmp_(end));
for nexperiment=1;%for nexperiment=(randperm(n_experiment)-1);
na=0;
fname_prefix = table_data__{1+nexperiment,1+na}; na=na+1;
dir_nopath_data_star = table_data__{1+nexperiment,1+na}; na=na+1;
Pixel_Spacing = table_data__{1+nexperiment,1+na}; na=na+1;
fname_nopath_volume = table_data__{1+nexperiment,1+na}; na=na+1;
fname_nopath_star = table_data__{1+nexperiment,1+na}; na=na+1;
disp(sprintf(' %% nexperiment %d/%d: %16s %16s %0.3f %16s %32s' ...
	     ,nexperiment,n_experiment ...
	     ,fname_prefix,dir_nopath_data_star,Pixel_Spacing,fname_nopath_volume,fname_nopath_star ...
	     ));
for n_M=1024*2.^[0:4];
global_parameter = struct('type','parameter');
if (strcmp(dir_nopath_data_star,'LSUbl17dep')); global_parameter.flag_invert = 0; end;
if (strcmp(dir_nopath_data_star,'LSUbl17dep')); global_parameter.flag_center_image = 1; end;
if (strcmp(dir_nopath_data_star,'precatalytic_spliceosome')); global_parameter.flag_center_image = 1; end;
global_parameter.n_M = n_M;
global_parameter = ...
test_pm_medres_0( ...
 global_parameter ...
,fname_prefix ...
,dir_nopath_data_star ...
,Pixel_Spacing ...
,fname_nopath_volume ...
,fname_nopath_star ...
);
end;%for n_M=1024*2.^[0:4];
end;%for nexperiment=0:n_experiment-1;
%%%%%%%%;
disp('returning');return;
end;%if (nargin<1);

% try: ;
% global_parameter=[];fname_prefix='trpv1_x0';dir_nopath_data_star='trpv1';Pixel_Spacing=1.2156;fname_nopath_volume='emd_5778.mrc';fname_nopath_star='tv1_relion_data.star'; %global_parameter=struct('type','parameter'); global_parameter.n_M = 16384;
% global_parameter=[];fname_prefix='ps1_x0';dir_nopath_data_star='precatalytic_spliceosome';Pixel_Spacing=1.699;fname_nopath_volume='consensus_half1_class001.mrc';fname_nopath_star='consensus_data.star'; %global_parameter=struct('type','parameter'); global_parameter.n_M = 16384;
%global_parameter=[];fname_prefix='rib80s_x0';dir_nopath_data_star='rib80s';Pixel_Spacing=1.34;fname_nopath_volume='emd_2660.mrc';fname_nopath_star='shiny_2sets.star'; %global_parameter=struct('type','parameter'); global_parameter.n_M = 16384;

verbose=1;
if (verbose); disp(sprintf(' %% [entering test_pm_medres_0]')); end;

%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

if isempty(global_parameter); global_parameter = struct('type','parameter'); end;
if (~isfield(global_parameter,'flag_recalc')); global_parameter.flag_recalc = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_replot')); global_parameter.flag_replot = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_volume')); global_parameter.flag_center_volume = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_image')); global_parameter.flag_center_image = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_invert')); global_parameter.flag_invert = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'tolerance_master')); global_parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'n_M')); global_parameter.n_M = 1024; end; %<-- parameter_bookmark. ;
flag_recalc = global_parameter.flag_recalc;
flag_replot = global_parameter.flag_replot;
flag_center_volume = global_parameter.flag_center_volume;
flag_center_image = global_parameter.flag_center_image;
flag_invert = global_parameter.flag_invert;
tolerance_master = global_parameter.tolerance_master;
n_M = global_parameter.n_M;
nf=0;

%%%%%%%%;
fname_prefix_xfix = sprintf('%s',fname_prefix);
dir_pm = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_pm',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_pm)); mkdir(sprintf('%s_mat',dir_pm)); end;
if (~exist(sprintf('%s_jpg',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_pm)); mkdir(sprintf('%s_jpg',dir_pm)); end;
dir_relion = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_relion',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_relion)); mkdir(sprintf('%s_mat',dir_relion)); end;
if (~exist(sprintf('%s_jpg',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_relion)); mkdir(sprintf('%s_jpg',dir_relion)); end;
string_rusty_root = 'mnt/home';
dir_relion_bin = sprintf('/%s/rangan/relion/build/bin',string_rusty_root);
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
%%%%%%%%;
% all classes and subclasses. ;
%%%%%%%%;
fname_nopath_volume_ = ...
{ ...
 fname_nopath_volume ... %<-- class 0. ;
};
n_volume = numel(fname_nopath_volume_);
flag_het = 0; if (n_volume> 1); flag_het = 1; end;

%%%%%%%%;
% First load consensus volume. ;
%%%%%%%%;
fname_emd = sprintf('%s/%s',dir_data_star,fname_nopath_volume);
a_x_u_load_ = cast(ReadMRC(fname_emd),'double');
n_x_u = size(a_x_u_load_,1);
n_x_M_u = n_x_u; %<-- true for trpv1, not necessarily true for other molecules. ;
%%%%%%%%;
half_diameter_x_c = 1.0d0;
diameter_x_c = 2.0d0*half_diameter_x_c;
x_p_r_max = 1.0;
n_x_u_pack = 64;
n_pack = n_x_u/n_x_u_pack;
pack_row_ij_ = zeros(n_x_u_pack,1);
pack_col_ij_ = zeros(n_x_u_pack,1);
pack_val_ij_ = zeros(n_x_u_pack,1);
na=0;
for nx_u=0:n_x_u-1;
pack_row_ij_(1+na) = 1+nx_u;
pack_col_ij_(1+na) = 1+floor(nx_u/n_pack);
pack_val_ij_(1+na) = 1/n_pack;
na=na+1;
end;%for nx_u=0:n_x_u-1;
x_u_pack_ = sparse(pack_row_ij_,pack_col_ij_,pack_val_ij_,n_x_u,n_x_u_pack);
a_x_u_pack_ = reshape(a_x_u_load_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
clear a_x_u_load_;
%%%%%%%%;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
[x_u_0___,x_u_1___,x_u_2___] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_xxx_u = n_x_u_pack^3;
xxx_u_weight_ = (2*x_p_r_max/n_x_u_pack)^3;
%%%%%%%%;
% Calculate moments. ;
%%%%%%%%;
a_rho_x_u_pack_ = a_x_u_pack_ + min(a_x_u_pack_,[],'all');
a_rho_x_c_0_avg = sum(x_u_0___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_1_avg = sum(x_u_1___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_2_avg = sum(x_u_2___.^1.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_0_std = sum((x_u_0___ - a_rho_x_c_0_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_1_std = sum((x_u_1___ - a_rho_x_c_1_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_2_std = sum((x_u_2___ - a_rho_x_c_2_avg).^2.*a_rho_x_u_pack_/sum(a_rho_x_u_pack_,'all'),'all');
a_rho_x_c_avg_ = [a_rho_x_c_0_avg ; a_rho_x_c_1_avg ; a_rho_x_c_2_avg];
a_rho_x_c_std_ = [a_rho_x_c_0_std ; a_rho_x_c_1_std ; a_rho_x_c_2_std];
disp(sprintf(' %% a_rho_x_c_std_ vs a_rho_x_c_avg_: %0.2f',fnorm(a_rho_x_c_std_)/fnorm(a_rho_x_c_avg_)));
if (max(abs(a_rho_x_c_avg_))> diameter_x_c/n_x_u_pack);
disp(sprintf(' %% Warning, molecule may not be well centered. Consider recentering.'));
end;%if (max(abs(a_rho_x_c_avg_))> diameter_x_c/n_x_u_pack);
%%%%%%%%;
% Possible to re-center. ;
%%%%%%%%;
k_u_0_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
k_u_1_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
k_u_2_ = periodize(0:n_x_u_pack-1,-n_x_u_pack/2,+n_x_u_pack/2)/2; %<-- box has diameter 2. ;
[K_u_0_,K_u_1_,K_u_2_] = ndgrid(k_u_0_,k_u_1_,k_u_2_); n_K_u = n_x_u_pack^3;
b_rho_x_u_pack_ = real(ifftn(fftn(a_rho_x_u_pack_).*exp(+i*2*pi*(K_u_0_*a_rho_x_c_0_avg + K_u_1_*a_rho_x_c_1_avg + K_u_2_*a_rho_x_c_2_avg))));
b_rho_x_c_0_avg = sum(x_u_0___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_1_avg = sum(x_u_1___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_2_avg = sum(x_u_2___.^1.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_0_std = sum((x_u_0___ - b_rho_x_c_0_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_1_std = sum((x_u_1___ - b_rho_x_c_1_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_2_std = sum((x_u_2___ - b_rho_x_c_2_avg).^2.*b_rho_x_u_pack_/sum(b_rho_x_u_pack_,'all'),'all');
b_rho_x_c_avg_ = [b_rho_x_c_0_avg ; b_rho_x_c_1_avg ; b_rho_x_c_2_avg];
b_rho_x_c_std_ = [b_rho_x_c_0_std ; b_rho_x_c_1_std ; b_rho_x_c_2_std];
disp(sprintf(' %% b_rho_x_c_std_ vs b_rho_x_c_avg_: %0.2f',fnorm(b_rho_x_c_std_)/fnorm(b_rho_x_c_avg_)));
%%%%%%%%;
a_x_u_base_ = a_x_u_pack_;
if flag_center_volume;
disp(sprintf(' %% centering volume'));
a_x_u_base_ = b_rho_x_u_pack_;
end;%if flag_center_volume;
%%%%%%%%;

%%%%%%%%;
% Now convert to a_k_p_ ;
%%%%%%%%;
verbose=0;
tmp_t = tic;
k_p_r_max = 48/(2*pi); k_eq_d = 1.0/(2*pi);
flag_unif_vs_adap = 1;
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,J_node_ ...
,J_weight_ ...
,J_chebfun_ ...
,J_polyval_ ...
] = ...
sample_sphere_7( ...
 verbose ...
,k_p_r_max ...
,k_eq_d ...
,'L' ...
,flag_unif_vs_adap ...
) ; %<-- sum(weight_3d_k_p_r_)*(4*pi) = (4/3)*pi*k_p_r_max^3 --> sum(weight_3d_k_p_r_) = (1/3)*k_p_r_max^3 ;
n_k_per_shell = [];
k_p_r_all_bak__ = [];
k_p_azimu_b_all_bak__ = [];
k_p_polar_a_all_bak__ = [];
weight_3d_k_all_bak__ = [];
k_c_0_all_bak__ = [];
k_c_1_all_bak__ = [];
k_c_2_all_bak__ = [];
if flag_unif_vs_adap==1; 
n_k_per_shell = n_k_all_csum_(1+1);
k_p_r_all_bak__ = reshape(k_p_r_all_,[n_k_per_shell,n_k_p_r]);
k_p_azimu_b_all_bak__ = reshape(k_p_azimu_b_all_,[n_k_per_shell,n_k_p_r]);
k_p_polar_a_all_bak__ = reshape(k_p_polar_a_all_,[n_k_per_shell,n_k_p_r]);
weight_3d_k_all_bak__ = reshape(weight_3d_k_all_,[n_k_per_shell,n_k_p_r]);
k_c_0_all_bak__ = reshape(k_c_0_all_,[n_k_per_shell,n_k_p_r]);
k_c_1_all_bak__ = reshape(k_c_1_all_,[n_k_per_shell,n_k_p_r]);
k_c_2_all_bak__ = reshape(k_c_2_all_,[n_k_per_shell,n_k_p_r]);
end;%if flag_unif_vs_adap==1; 
tmp_t = toc(tmp_t); disp(sprintf(' %% sample_sphere_7: time %0.2fs',tmp_t));
eta = pi/x_p_r_max; tmp_t = tic;
a_k_p_quad_ = xxnufft3d3(n_xxx_u,x_u_0___(:)*eta,x_u_1___(:)*eta,x_u_2___(:)*eta,a_x_u_base_(:).*xxx_u_weight_(:),-1,1e-12,n_k_all,2*pi*k_c_0_all_/eta,2*pi*k_c_1_all_/eta,2*pi*k_c_2_all_/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_k_p_quad_ time %0.2fs',tmp_t));
%%%%%%%%;
eta = pi/k_p_r_max; tmp_t = tic;
a_x_u_reco_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,a_k_p_quad_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_x_u_reco_ time %0.2fs',tmp_t));
disp(sprintf(' %% xxnufft3d3: a_x_u_reco error: %0.16f',fnorm(a_x_u_base_(:)-a_x_u_reco_)/fnorm(a_x_u_base_(:))));
disp(sprintf(' %% at this point one should ensure that a_k_p_quad_ on the outer shells (i.e., near k_p_r_max) has decayed to the desired precision.'));
%%%%%%%%;

%%%%%%%%;
% simple visualization of a_base. ;
%%%%%%%%
flag_disp=0;
if flag_disp;
prctile_ = [94.0:0.5:99.5]; n_prctile = numel(prctile_);
%%%%;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 3; p_col = 4; ns=0;
for nprctile=0:n_prctile-1;
subplot(p_row,p_col,1+ns); ns=ns+1;
tmp_p = prctile_(1+nprctile);
isosurface_f_x_u_0(a_x_u_base_,tmp_p);
title(sprintf('a base %.1f',tmp_p));
end;%for nprctile=0:n_prctile-1;
%%%%;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 3; p_col = 4; ns=0;
for nprctile=0:n_prctile-1;
subplot(p_row,p_col,1+ns); ns=ns+1;
tmp_p = prctile_(1+nprctile);
isosurface_f_x_u_0(a_x_u_reco_,tmp_p);
title(sprintf('a reco %.1f',tmp_p));
end;%for nprctile=0:n_prctile-1;
%%%%;
end;%if flag_disp;

%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
plot(k_p_r_all_,log10(abs(a_k_p_quad_)),'.'); xlabel('k'); ylabel('log10(|a(k)|)');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now convert to a_k_Y_ ; 
%%%%%%%%;
verbose=0;
l_max_upb = round(2*pi*k_p_r_max); %<-- typically sufficient for 2-3 digits of precision. ;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
weight_Y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
weight_Y_(1+tmp_index_) = weight_3d_k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;
[ ...
 Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
get_Ylm_condense_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_p_reco_ ...
] = ...
convert_spharm_to_k_p_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ --> a_k_p_reco_ time %0.2fs',tmp_t));
disp(sprintf(' %% a_k_p_quad_ vs a_k_p_reco_: %0.16f',fnorm(a_k_p_quad_-a_k_p_reco_)/fnorm(a_k_p_quad_))); %<-- this should be 2-3 digits. ;
%%%%%%%%;
tmp_t = tic;
[ ...
 a_k_Y_reco_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_reco_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
a_k_Y_quad_lmk__ = zeros(n_lm_max,n_k_p_r);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
a_k_Y_quad_lmk__(1:n_lm_(1+nk_p_r),1+nk_p_r) = a_k_Y_quad_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%%%%%;

%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figbig;
subplot(1,3,1); plot(Y_l_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_l_val_','Interpreter','none'); ylabel('log10(abs(a))');
subplot(1,3,2); plot(Y_m_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_m_val_','Interpreter','none'); ylabel('log10(abs(a))');
subplot(1,3,3); plot(Y_k_val_,log10(abs(a_k_Y_quad_)),'.'); xlabel('Y_k_val_','Interpreter','none'); ylabel('log10(abs(a))');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% measure fsc for quad vs reco (should be nearly 1). ;
%%%%%%%%;
[ ...
 ~ ...
,fsc_a_k_p_k_ ...
] = ...
fsc_from_a_k_p_0( ...
 [] ...
,n_k_all ...
,n_k_p_r ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,a_k_p_quad_ ...
,a_k_p_reco_ ...
);
%%%%;
[ ...
 ~ ...
,fsc_a_k_Y_k_ ...
] = ...
fsc_from_a_k_Y_0( ...
 [] ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_reco_ ...
);
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,2,1);
k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
hold on;
plot(k_Ainv_p_r_,real(fsc_a_k_p_k_),'r-',k_Ainv_p_r_,real(fsc_a_k_Y_k_),'b-',k_Ainv_p_r_,0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
xlim([0,k_Ainv_p_r_max]);
ylim([0,1]);
xlabel('k'); ylabel('fsc_a_k_p_k_ (red), fsc_a_k_Y_k_ (blue)','Interpreter','none');
hold off;
subplot(1,2,2);
kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
hold on;
plot(log10(kinv_A_p_r_),real(fsc_a_k_p_k_),'r-',log10(kinv_A_p_r_),real(fsc_a_k_Y_k_),'b-',log10(kinv_A_p_r_),0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
xlim([0,+2]);
ylim([0,1]);
xlabel('log10(l = 1/k)'); ylabel('fsc_a_k_p_k_ (red), fsc_a_k_Y_k_ (blue)','Interpreter','none');
hold off;
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% define n_w_. ;
%%%%%%%%
n_w_max = 2*(l_max_max+1);
template_k_eq_d = -1;
n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_k_all_ ...
] = ...
get_weight_2d_1( ...
 verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,template_k_eq_d ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);

%%%%%%%%;
% Now load images and CTF parameters from the star-file. ;
%%%%%%%%;
if isempty(n_M); n_M = 1024; end;
[ ...
 M_x_c___ ...
,index_nCTF_from_nM_ ...
,index_nM_from_nCTF_ ...
,Voltage_CTF_ ...
,DefocusU_CTF_ ...
,DefocusV_CTF_ ...
,DefocusAngle_CTF_ ...
,SphericalAberration_CTF_ ...
,AmplitudeContrast_CTF_ ...
] = ...
rlnImageName_from_star_1( ...
 dir_data_star ...
,fname_nopath_star ...
,n_M ...
);
if (fnorm(Voltage_CTF_)< 1e-3); disp(sprintf(' %% Warning, Voltage not set, setting Voltage to 300kV')); Voltage_CTF_ = 300*ones(n_M,1); end;
if flag_invert; M_x_c___ = -M_x_c___; end;
%%%%%%%%;
% Remove any edge artefacts, mean center and normalize each image. ;
%%%%%%%%;
disp(sprintf(' %% Removing edge-artefacts'));
n_M_ext_ = zeros(n_M,1);
for nM=0:n_M-1;
if (mod(nM,128)==0); disp(sprintf(' %% nM %d/%d',nM,n_M)); end;
n_pixel = 4; edge_tolerance = 0.5; n_edge_overshoot = 8; rseed = 0;
[M_x_c___(:,:,1+nM),n_M_ext_(1+nM)] = image_replace_edge_artefact_0(M_x_c___(:,:,1+nM),4,0.5,2,0);
end;%for nM=0:n_M-1;
disp(sprintf(' %% edge-artefacts detected in %d/%d images.',numel(find(n_M_ext_>0)),n_M));
%%%%%%%%;
% Now examine image-centroids. ;
%%%%%%%%;
n_x_M_u = size(M_x_c___,1);
assert(n_x_M_u==size(M_x_c___,2));
disp(sprintf(' %% typical edge-artefact covers %0.6f = (%0.6f)^2 of image.',median(n_M_ext_/n_x_M_u^2),median(sqrt(n_M_ext_/n_x_M_u^2))));
x_c_0_ = -half_diameter_x_c + transpose([0:n_x_M_u-1]/n_x_M_u)*diameter_x_c;
x_c_1_ = -half_diameter_x_c + transpose([0:n_x_M_u-1]/n_x_M_u)*diameter_x_c;
[x_c_0__,x_c_1__] = ndgrid(x_c_0_,x_c_1_);
x_p_r__ = sqrt(x_c_0__.^2 + x_c_1__.^2);
x_c_mask__ = x_p_r__<=half_diameter_x_c;
M_abs_x_c_0_avg_ = zeros(n_M,1);
M_abs_x_c_1_avg_ = zeros(n_M,1);
M_mask_abs_x_c_0_avg_ = zeros(n_M,1);
M_mask_abs_x_c_1_avg_ = zeros(n_M,1);
for nM=0:n_M-1;
M_abs_x_c_ = abs(squeeze(M_x_c___(:,:,1+nM))); %<-- no mask. ;
M_abs_avg = mean(M_abs_x_c_,'all');
M_abs_x_c_0_avg = mean(M_abs_x_c_/M_abs_avg.*x_c_0__,'all');
M_abs_x_c_1_avg = mean(M_abs_x_c_/M_abs_avg.*x_c_1__,'all');
M_abs_x_c_0_avg_(1+nM) = M_abs_x_c_0_avg;
M_abs_x_c_1_avg_(1+nM) = M_abs_x_c_1_avg;
clear M_abs_x_c_;
M_mask_abs_x_c_ = abs(squeeze(M_x_c___(:,:,1+nM)).*x_c_mask__); %<-- radial mask. ;
M_mask_abs_avg = mean(M_mask_abs_x_c_,'all');
M_mask_abs_x_c_0_avg = mean(M_mask_abs_x_c_/M_mask_abs_avg.*x_c_0__,'all');
M_mask_abs_x_c_1_avg = mean(M_mask_abs_x_c_/M_mask_abs_avg.*x_c_1__,'all');
M_mask_abs_x_c_0_avg_(1+nM) = M_mask_abs_x_c_0_avg;
M_mask_abs_x_c_1_avg_(1+nM) = M_mask_abs_x_c_1_avg;
clear M_mask_abs_x_c_;
end;%for nM=0:n_M-1;
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
%%%%;
subplot(1,2,1);
plot(M_abs_x_c_0_avg_,M_abs_x_c_1_avg_,'.');
xlabel('M_abs_x_c_0_avg_','Interpreter','none');
ylabel('M_abs_x_c_1_avg_','Interpreter','none');
axis equal; grid on;
title('M_abs_x_c_ (no radial mask)','Interpreter','none');
%%%%;
subplot(1,2,2);
plot(M_mask_abs_x_c_0_avg_,M_mask_abs_x_c_1_avg_,'.');
xlabel('M_mask_abs_x_c_0_avg_','Interpreter','none');
ylabel('M_mask_abs_x_c_1_avg_','Interpreter','none');
axis equal; grid on;
title('M_mask_abs_x_c_ (max radial mask)','Interpreter','none');
%%%%;
tmp_corr_ = corr([M_abs_x_c_0_avg_,M_abs_x_c_1_avg_],[M_mask_abs_x_c_0_avg_,M_mask_abs_x_c_1_avg_]);
sgtitle(sprintf('correlation x,y = ( %0.4f , %0.4f )',tmp_corr_(1,1),tmp_corr_(2,2)));
end;%if flag_disp;
%%%%%%%%;
% Now convert images to M_k_p__. ;
%%%%%%%%;
dx = diameter_x_c/n_x_M_u;
M_k_p__ = zeros(n_w_sum,n_M);
image_center_delta_x_c_0_ = zeros(n_M,1);
image_center_delta_x_c_1_ = zeros(n_M,1);
n_x_M_center = max(n_w_max,n_x_M_u/4);
if (verbose); disp(sprintf(' %% n_x_M_center %d',n_x_M_center)); end;
M_x_c_avg__ = zeros(n_x_M_center,n_x_M_center);
M_x_c_std__ = zeros(n_x_M_center,n_x_M_center);
for nM=0:n_M-1;
if (mod(nM,128)==0); if (verbose); disp(sprintf(' %% nM %d/%d',nM,n_M)); end; end;
M_x_c_ = squeeze(M_x_c___(:,:,1+nM));
M_k_p_ = interp_x_c_to_k_p_xxnufft(n_x_M_u,diameter_x_c,n_x_M_u,diameter_x_c,M_x_c_,n_k_p_r,k_p_r_,n_w_)*sqrt(n_x_M_u^2)*dx^2 ;
% Now *DO* translate according to M_abs_x_c_0_avg_ and M_abs_x_c_1_avg_. ;
M_k_p_ = transf_p_to_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,M_k_p_,-1*M_abs_x_c_0_avg_(1+nM),-1*M_abs_x_c_1_avg_(1+nM));
M_k_p__(:,1+nM) = M_k_p_;
end;%for nM=0:n_M-1;
%%%%%%%%;
% Now convert images to M_k_q__. ;
%%%%%%%%;
tmp_t = tic();
M_k_q__ = zeros(n_w_sum,n_M);
for nM=0:n_M-1;
M_k_q__(:,1+nM) = interp_p_to_q(n_k_p_r,n_w_,n_w_sum,M_k_p__(:,1+nM));
end;%for nM=0:n_M-1;
tmp_t = toc(tmp_t); if (verbose); disp(sprintf(' %% M_k_q__ time %0.2fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%;
% Now calculate CTF functions. ;
%%%%%%%%;
n_CTF = numel(index_nM_from_nCTF_);
CTF_k_p_wkC__ = zeros(n_w_sum,n_CTF);
for nCTF=0:n_CTF-1;
if (mod(nCTF,100)==0); disp(sprintf(' %% nCTF %d/%d',nCTF,n_CTF)); end;
CTF_Spherical_Aberration = SphericalAberration_CTF_(1+nCTF);% spherical aberration of the lens in mm ;
CTF_Spherical_Aberration=CTF_Spherical_Aberration*(10.0d0^7.0d0);% convert into Angstroms ;
CTF_Voltage_kV = Voltage_CTF_(1+nCTF);% voltage in kVolts ;
CTF_Voltage_1V=CTF_Voltage_kV*1000.0 ;% convert into Volts ;
CTF_lambda = 12.2643247/sqrt(CTF_Voltage_1V+CTF_Voltage_1V^2*0.978466d-6);% electron wavelength in Angstroms ;
CTF_Defocus_U = DefocusU_CTF_(1+nCTF);% defocus values (in Angstroms) ;
CTF_Defocus_V = DefocusV_CTF_(1+nCTF);% defocus values (in Angstroms) ;
CTF_Defocus_Angle = DefocusAngle_CTF_(1+nCTF);% angle of astigmatism ;
%CTF_Defocus_Angle = CTF_Defocus_Angle*pi/180.0d0;% convert into radians ; %<-- already in radians! make sure not to convert twice!;
CTF_Amplitude_Contrast = AmplitudeContrast_CTF_(1+nCTF);% CTF_Amplitude Contrast ;
tmp_w1=sqrt(1.0d0-CTF_Amplitude_Contrast^2);% weights for the amplitude and phase contrasts in CTF ;
tmp_w2=CTF_Amplitude_Contrast;% weights for the amplitude and phase contrasts in CTF ;
%  CTF_Object_Pixel_Size = CTF_Detector_Pixel_Size/CTF_Magnification;
CTF_Object_Pixel_Size = Pixel_Spacing;% pixel size of the scanner in physical space in Angstroms ;
CTF_lambda_per_box = CTF_lambda/(n_x_M_u*CTF_Object_Pixel_Size);% n_x_M_u*CTF_Object_Pixel_Size is the box size in Angstroms ;
%%%%;
na=0;
for nk = 0:n_k_p_r-1;
for nw=0:n_w_(1+nk)-1;
tmp_theta = (2.0d0*pi*nw)/n_w_(1+nk);
tmp_k_c_1 = (2.0d0*pi)*k_p_r_(1+nk)*cos(tmp_theta);
tmp_k_c_2 = (2.0d0*pi)*k_p_r_(1+nk)*sin(tmp_theta);
tmp_ctf_value = niko_ctf(CTF_Spherical_Aberration,CTF_lambda,tmp_w1,tmp_w2,CTF_Defocus_U,CTF_Defocus_V,CTF_Defocus_Angle,CTF_lambda_per_box/pi,tmp_k_c_1,tmp_k_c_2);
CTF_k_p_wkC__(1+na,1+nCTF) = -tmp_ctf_value;
na = na+1;
end;%for nw=0:n_w_(1+nk)-1;
end;%for nk = 0:n_k_p_r-1;
%%%%;
end;%for nCTF=0:n_CTF-1;
%%%%%%%%;
CTF_k_p_r_kC__ = zeros(n_k_p_r,n_CTF);
for nCTF=0:n_CTF-1;
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w_(1+nk_p_r)-1);
CTF_k_p_r_kC__(1+nk_p_r,1+nCTF) = mean(CTF_k_p_wkC__(1+tmp_index_,1+nCTF));
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nCTF=0:n_CTF-1;
CTF_avg_k_p_wk_ = mean(CTF_k_p_wkC__,2);
%imagesc_p(n_k_p_r,k_p_r_,n_w_,sum(n_w_),real(CTF_avg_k_p_wk_(:)),[-1,+1],colormap_beach());
CTF_avg_k_p_r_k_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w_(1+nk_p_r)-1);
CTF_avg_k_p_r_k_(1+nk_p_r) = mean(CTF_avg_k_p_wk_(1+tmp_index_));
end;%for nk_p_r=0:n_k_p_r-1;
CTF_k_p_r_kM__ = CTF_k_p_r_kC__(:,1+index_nCTF_from_nM_(1:n_M));
SCTF_ = svd(CTF_k_p_r_kM__);
n_CTF_rank = max(find(SCTF_/max(SCTF_)>tolerance_master));
[UCTF_kc__,SCTF_c__,VCTF_Mc__] = svds(CTF_k_p_r_kM__,n_CTF_rank);
VSCTF_Mc__ = VCTF_Mc__*SCTF_c__;
%%%%%%%%;
% Now determine the CTF cross correlation. ;
% This depends  on index_nCTF_from_nM_. ;
%%%%%%%%;
tmp_CTF_avg_k_p_wk_ = mean(CTF_k_p_wkC__(:,1+index_nCTF_from_nM_(1+(0:n_M-1))),2);
tmp_CTF_avg_k_p_r_k_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_w_csum_(1+nk_p_r) + (0:n_w_(1+nk_p_r)-1);
tmp_CTF_avg_k_p_r_k_(1+nk_p_r) = mean(tmp_CTF_avg_k_p_wk_(1+tmp_index_));
end;%for nk_p_r=0:n_k_p_r-1;
CTF_k_p_r_xavg__ = tmp_CTF_avg_k_p_r_k_ * transpose(tmp_CTF_avg_k_p_r_k_);
CTF_k_p_r_xcor__ = CTF_k_p_r_kC__(:,1+index_nCTF_from_nM_(1+(0:n_M-1))) * transpose(CTF_k_p_r_kC__(:,1+index_nCTF_from_nM_(1+(0:n_M-1)))) / n_M;
%%%%%%%%;

%%%%%%%%;
% First cluster the CTF based on tolerance_cluster. ;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.tolerance_master = tolerance_master;
[ ...
 parameter ...
,index_ncluster_from_nCTF_ ...
] = ...
knn_cluster_CTF_k_p_r_kC__0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_CTF ...
,CTF_k_p_r_kC__ ...
);
%%%%%%%%;
n_cluster = 1+max(index_ncluster_from_nCTF_);
index_ncluster_from_nM_ = index_ncluster_from_nCTF_(1+index_nCTF_from_nM_);
index_nM_from_ncluster__ = cell(n_cluster,1);
n_index_nM_from_ncluster_ = zeros(n_cluster,1);
for ncluster=0:n_cluster-1;
index_nM_from_ncluster__{1+ncluster} = efind(index_ncluster_from_nM_==ncluster);
n_index_nM_from_ncluster_(1+ncluster) = numel(index_nM_from_ncluster__{1+ncluster});
end;%for ncluster=0:n_cluster-1;
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1+nf);nf=nf+1;
clf;figsml;figbeach();
markersize_use = 32;
scatter(VSCTF_Mc__(:,1+0),VSCTF_Mc__(:,1+min(1,n_CTF_rank-1)),markersize_use,index_ncluster_from_nM_,'filled');
end;%if flag_disp;
%%%%%%%%;

%%%%%%%%;
% Now use ideal principal-modes to align images to volume. ;
%%%%%%%%;
tmp_delta_r_max = 0.030;
tmp_delta_r_upb = 0.100;
tmp_str = 'M';
fname_mat = sprintf('%s_mat/a_k_Y_reco_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if (flag_recalc | ~exist(fname_mat,'file'));
disp(sprintf(' %% %s not found, creating',fname_mat));
%%%%%%%%;
parameter = struct('type','parameter');
parameter.tolerance_master = tolerance_master;
parameter.n_iteration = 12;
parameter.delta_r_max = tmp_delta_r_max;
parameter.n_delta_v_requested = 24;
parameter.delta_r_upb = tmp_delta_r_upb;
parameter.fname_align_a_k_Y_pre = sprintf('%s_mat/a_k_Y_reco_from_%s_nM%.5d__',dir_pm,tmp_str,n_M);
[ ...
 parameter ...
,a_k_Y_reco_yki__ ...
,corr_a_k_Y_i_ ...
,euler_polar_a_Mi__ ...
,euler_azimu_b_Mi__ ...
,euler_gamma_z_Mi__ ...
,image_delta_x_acc_Mi__ ...
,image_delta_y_acc_Mi__ ...
,image_delta_x_upd_Mi__ ...
,image_delta_y_upd_Mi__ ...
,flag_image_delta_upd_Mi__ ...
,image_I_value_Mi__ ...
,image_X_value_Mi__ ...
,image_S_index_Mi__ ...
] = ...
pm_align_M_k_p_to_a_k_Y_2( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_ ...
,n_M ...
,M_k_p__ ...
,n_cluster ...
,index_ncluster_from_nCTF_ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,l_max_ ...
,a_k_Y_quad_ ...
);
if (~exist(fname_mat,'file'));
save(fname_mat ...
     ,'parameter' ...
     ,'a_k_Y_reco_yki__' ...
     ,'corr_a_k_Y_i_' ...
     ,'euler_polar_a_Mi__' ...
     ,'euler_azimu_b_Mi__' ...
     ,'euler_gamma_z_Mi__' ...
     ,'image_delta_x_acc_Mi__' ...
     ,'image_delta_y_acc_Mi__' ...
     ,'image_delta_x_upd_Mi__' ...
     ,'image_delta_y_upd_Mi__' ...
     ,'flag_image_delta_upd_Mi__' ...
     ,'image_I_value_Mi__' ...
     ,'image_X_value_Mi__' ...
     ,'image_S_index_Mi__' ...
     );
end;%if (~exist(fname_mat,'file'));
end;%if (~exist(fname_mat,'file'));
%%%%%%%%;

%%%%%%%%;
tmp_str = 'M';
fname_mat = sprintf('%s_mat/a_k_Y_reco_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if ( exist(fname_mat,'file'));
disp(sprintf(' %% %s found, not creating',fname_mat));
tmp_ = load(fname_mat);
euler_polar_a_true_ = tmp_.euler_polar_a_Mi__(:,end);
euler_azimu_b_true_ = tmp_.euler_azimu_b_Mi__(:,end);
euler_gamma_z_true_ = tmp_.euler_gamma_z_Mi__(:,end);
image_delta_x_true_ = tmp_.image_delta_x_acc_Mi__(:,end) + tmp_.image_delta_x_upd_Mi__(:,end);
image_delta_y_true_ = tmp_.image_delta_y_acc_Mi__(:,end) + tmp_.image_delta_y_upd_Mi__(:,end);
corr_a_k_Y_true = tmp_.corr_a_k_Y_i_(end);
image_X_value_true_ = tmp_.image_X_value_Mi__(:,end-1);
clear tmp_;
end;%if ( exist(fname_mat,'file'));

%%%%%%%%;
% Now use ideal principal-modes to test stability of ideal alignment. ;
%%%%%%%%;
tmp_delta_r_max = 0.030;
tmp_delta_r_upb = 0.100;
tmp_str = 'M';
%%%%%%%%;
tmp_fname_mat = sprintf('%s_mat/a_k_Y_reco_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if ( exist(tmp_fname_mat,'file'));
fname_pre = sprintf('%s_mat/a_k_Y_reco_stab_from_%s_nM%.5d__',dir_pm,tmp_str,n_M);
[flag_skip,fname_mat] = open_fname_tmp(fname_pre);
if (flag_recalc | ~flag_skip);
%%%%%%%%;
tmp_ = load(tmp_fname_mat);
tmp_euler_polar_a_true_ = tmp_.euler_polar_a_Mi__(:,end);
tmp_euler_azimu_b_true_ = tmp_.euler_azimu_b_Mi__(:,end);
tmp_euler_gamma_z_true_ = tmp_.euler_gamma_z_Mi__(:,end);
tmp_image_delta_x_true_ = tmp_.image_delta_x_acc_Mi__(:,end) + tmp_.image_delta_x_upd_Mi__(:,end);
tmp_image_delta_y_true_ = tmp_.image_delta_y_acc_Mi__(:,end) + tmp_.image_delta_y_upd_Mi__(:,end);
clear tmp_;
%%%%%%%%;
parameter = struct('type','parameter');
parameter.tolerance_master = tolerance_master;
parameter.n_iteration = 32;
parameter.delta_r_max = tmp_delta_r_max;
parameter.n_delta_v_requested = 24;
parameter.delta_r_upb = tmp_delta_r_upb;
parameter.fname_pre = fname_pre;
parameter.rank_vs_tolerance = 0;
parameter.flag_alternate_MS_vs_SM = -1; %<-- stick with flag_MS_vs_SM. ;
parameter.flag_MS_vs_SM = 0;
parameter.f_rand = 0.05;
ampmut_wrap_5( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,index_nCTF_from_nM_ ...
,n_CTF ...
,CTF_k_p_r_kC__ ...
,n_M ...
,M_k_p__ ...
,tmp_euler_polar_a_true_ ...
,tmp_euler_azimu_b_true_ ...
,tmp_euler_gamma_z_true_ ...
,tmp_image_delta_x_true_ ...
,tmp_image_delta_y_true_ ...
,a_k_Y_quad_ ...
);
close_fname_tmp(fname_pre);
end;%if (flag_recalc | ~flag_skip);
end;%if ( exist(tmp_fname_mat,'file'));
%%%%%%%%;
tmp_fname_mat = sprintf('%s_mat/a_k_Y_reco_stab_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if ( exist(tmp_fname_mat,'file'));
fname_pre = sprintf('%s_mat/a_k_Y_reco_stab_alig_from_%s_nM%.5d__',dir_pm,tmp_str,n_M);
[flag_skip,fname_mat] = open_fname_tmp(fname_pre);
if (flag_recalc | ~flag_skip);
tmp_ = load(tmp_fname_mat);
euler_polar_a_reco_stab_ = tmp_.euler_polar_a_Mi__(:,end);
euler_azimu_b_reco_stab_ = tmp_.euler_azimu_b_Mi__(:,end);
euler_gamma_z_reco_stab_ = tmp_.euler_gamma_z_Mi__(:,end);
image_delta_x_reco_stab_ = tmp_.image_delta_x_acc_Mi__(:,end) + tmp_.image_delta_x_upd_Mi__(:,end);
image_delta_y_reco_stab_ = tmp_.image_delta_y_acc_Mi__(:,end) + tmp_.image_delta_y_upd_Mi__(:,end);
clear tmp_;
tmp_n_order = 5;
a_k_Y_reco_stab_ = ...
cg_lsq_6( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,M_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_r_kC__ ...
,euler_polar_a_reco_stab_ ...
,euler_azimu_b_reco_stab_ ...
,euler_gamma_z_reco_stab_ ...
,image_delta_x_reco_stab_ ...
,image_delta_y_reco_stab_ ...
);
%%%%;
[ ... 
 a_k_Y_reco_stab_alig_ ...
,X_best_reco_stab_alig ...
,flag_flip_reco_stab_alig ...
,euler_polar_a_reco_stab_alig ...
,euler_azimu_b_reco_stab_alig ...
,euler_gamma_z_reco_stab_alig ...
,image_delta_x_reco_stab_alig ...
,image_delta_y_reco_stab_alig ...
,image_delta_z_reco_stab_alig ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_reco_stab_ ...
);
%%%%;
save(fname_mat ...
     ,'a_k_Y_reco_stab_' ...
     ,'euler_polar_a_reco_stab_' ...
     ,'euler_azimu_b_reco_stab_' ...
     ,'euler_gamma_z_reco_stab_' ...
     ,'image_delta_x_reco_stab_' ...
     ,'image_delta_y_reco_stab_' ...
     ,'a_k_Y_reco_stab_alig_' ...
     ,'X_best_reco_stab_alig' ...
     ,'flag_flip_reco_stab_alig' ...
     ,'euler_polar_a_reco_stab_alig' ...
     ,'euler_azimu_b_reco_stab_alig' ...
     ,'euler_gamma_z_reco_stab_alig' ...
     ,'image_delta_x_reco_stab_alig' ...
     ,'image_delta_y_reco_stab_alig' ...
     );
close_fname_tmp(fname_pre);
end;%if (flag_recalc | ~flag_skip);
end;%if ( exist(tmp_fname_mat,'file'));
%%%%%%%%;
tmp_fname_mat = sprintf('%s_mat/a_k_Y_reco_stab_alig_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if ( exist(tmp_fname_mat,'file'));
fname_fig = sprintf('%s_jpg/a_k_Y_reco_stab_alig_from_%s_nM%.5d_snapshot',dir_pm,tmp_str,n_M);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
tmp_ = load(tmp_fname_mat);
tmp_a_k_Y_reco_stab_alig_ = tmp_.a_k_Y_reco_stab_alig_;
tmp_X_best_reco_stab_alig = tmp_.X_best_reco_stab_alig;
clear tmp_;
sample_sphere_k_eq_d = 1/(2*pi);
[ ... 
  tmp_a_x_u_reco_stab_alig_ ...
] = ...
convert_spharm_to_x_c_4( ...
 sample_sphere_k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_a_k_Y_reco_stab_alig_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
figure(1+nf);nf=nf+1;clf;figbig;
isosurface_f_x_u_0(reshape(real(tmp_a_x_u_reco_stab_alig_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[90,95,99]);
title(sprintf('%s: a_x_u_reco_stab_alig_: corr %0.4f',fname_fig,tmp_X_best_reco_stab_alig),'Interpreter','none');
%sgtitle(fname_fig,'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
close(gcf);
end;%if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
end;%if ( exist(tmp_fname_mat,'file'));
%%%%%%%%;

%%%%%%%%;
% Now mask the stabilized ideal alignment. ;
%%%%%%%%;
tmp_delta_r_max = 0.030;
tmp_delta_r_upb = 0.100;
tmp_str = 'M';
%%%%%%%%;
tmp_fname_mat = sprintf('%s_mat/a_k_Y_reco_stab_alig_from_%s_nM%.5d__.mat',dir_pm,tmp_str,n_M);
if ( exist(tmp_fname_mat,'file'));
fname_pre = sprintf('%s_mat/fsc_crop_reco_stab_alig_from_%s_nM%.5d__',dir_pm,tmp_str,n_M);
[flag_skip,fname_mat] = open_fname_tmp(fname_pre);
if (flag_recalc | ~flag_skip);
%%%%;
tmp_ = load(tmp_fname_mat);
tmp_a_k_Y_reco_stab_ = tmp_.a_k_Y_reco_stab_;
tmp_euler_polar_a_reco_stab_ = tmp_.euler_polar_a_reco_stab_;
tmp_euler_azimu_b_reco_stab_ = tmp_.euler_azimu_b_reco_stab_;
tmp_euler_gamma_z_reco_stab_ = tmp_.euler_gamma_z_reco_stab_;
tmp_image_delta_x_reco_stab_ = tmp_.image_delta_x_reco_stab_;
tmp_image_delta_y_reco_stab_ = tmp_.image_delta_y_reco_stab_;
tmp_a_k_Y_reco_stab_alig_ = tmp_.a_k_Y_reco_stab_alig_;
tmp_X_best_reco_stab_alig = tmp_.X_best_reco_stab_alig;
tmp_flag_flip_reco_stab_alig = tmp_.flag_flip_reco_stab_alig;
tmp_euler_polar_a_reco_stab_alig = tmp_.euler_polar_a_reco_stab_alig;
tmp_euler_azimu_b_reco_stab_alig = tmp_.euler_azimu_b_reco_stab_alig;
tmp_euler_gamma_z_reco_stab_alig = tmp_.euler_gamma_z_reco_stab_alig;
tmp_image_delta_x_reco_stab_alig = tmp_.image_delta_x_reco_stab_alig;
tmp_image_delta_y_reco_stab_alig = tmp_.image_delta_y_reco_stab_alig;
clear tmp_;
%%%%;
sample_sphere_k_eq_d = 1/(2*pi);
[ ... 
  tmp_a_x_u_reco_stab_alig_ ...
] = ...
convert_spharm_to_x_c_4( ...
 sample_sphere_k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,tmp_a_k_Y_reco_stab_alig_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
%%%%;
parameter_fsc = struct('type','parameter'); parameter_fsc.Pixel_Spacing = Pixel_Spacing;
[ ...
 parameter_fsc ...
,fsc_reco_stab_k_ ...
,corr_base_vs_reco_stab ...
,corr_reco_vs_reco_stab ...
,fsc_crop_reco_stab_kx__ ...
,corr_crop_base_vs_crop_reco_stab_x_ ...
,corr_full_base_vs_crop_reco_stab_x_ ...
,corr_crop_reco_vs_crop_reco_stab_x_ ...
,corr_full_reco_vs_crop_reco_stab_x_ ...
,k_Ainv_p_r_ ...
,k_Ainv_p_r_max ...
,kinv_A_p_r_ ...
] = ...
crop_from_x_c_1( ...
 parameter_fsc ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,tmp_a_k_Y_reco_stab_ ...
,tmp_a_k_Y_reco_stab_alig_ ...
,half_diameter_x_c ...
,n_x_M_u ...
,n_x_u_pack ...
,a_x_u_base_ ...
,a_x_u_reco_ ...
,tmp_a_x_u_reco_stab_alig_ ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
%%%%;
save(fname_mat ...
,'fsc_reco_stab_k_' ...
,'corr_base_vs_reco_stab' ...
,'corr_reco_vs_reco_stab' ...
,'fsc_crop_reco_stab_kx__' ...
,'corr_crop_base_vs_crop_reco_stab_x_' ...
,'corr_full_base_vs_crop_reco_stab_x_' ...
,'corr_crop_reco_vs_crop_reco_stab_x_' ...
,'corr_full_reco_vs_crop_reco_stab_x_' ...
,'k_Ainv_p_r_' ...
,'k_Ainv_p_r_max' ...
,'kinv_A_p_r_' ...
);
%%%%;
close_fname_tmp(fname_pre);
end;%if (flag_recalc | ~flag_skip);
end;%if ( exist(tmp_fname_mat,'file'));
%%%%%%%%;

if flag_center_image==1; 
disp(sprintf(' %% Warning flag_center_image==1'));
end;%if flag_center_image==1; 
if flag_center_image==0;
N_k_p__ = M_k_p__;
N_k_q__ = M_k_q__;
end;%if flag_center_image==0;

%%%%%%%%;
% Now test out principled marching. ;
% First define delta_sigma (for translations). ;
%%%%%%%%;
delta_sigma = 1.0 * std([image_delta_x_true_;image_delta_y_true_]); %<-- no reduction. ;

%%%%%%%%;
% Now determine best possible correlation with ground truth, ;
% using the image-subset given. ;
% Note that this uses all the k-shells (i.e., all principal-modes). ;
%%%%%%%%;
fname_mat = sprintf('%s_mat/a_k_Y_0lsq_reco_nM%.5d_.mat',dir_pm,n_M);
if (flag_recalc | ~exist(fname_mat,'file'));
disp(sprintf(' %% %s not found, creating',fname_mat));
tmp_n_order = 5; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_(1+(0:n_M-1));
tmp_euler_azimu_b_ = +euler_azimu_b_true_(1+(0:n_M-1));
tmp_euler_gamma_z_ = +euler_gamma_z_true_(1+(0:n_M-1));
tmp_image_delta_x_ = +image_delta_x_true_(1+(0:n_M-1));
tmp_image_delta_y_ = +image_delta_y_true_(1+(0:n_M-1));
%%%%%%%%;
tmp_t = tic;
a_k_Y_0lsq_reco_ = ...
cg_lsq_4( ...
 tmp_n_order ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% N_k_p__ --> a_k_Y_0lsq_reco_ time %0.2fs',tmp_t));
[ ...
 X_0lsq_reco ...
,X_0lsq_flag_flip ...
] = ...
register_spharm_to_spharm_wigner_wrap_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_0lsq_reco_ ...
);
disp(sprintf(' %% X_0lsq_reco %0.3f flag_flip %d',X_0lsq_reco,X_0lsq_flag_flip));
%%%%%%%%;
tmp_t = tic;
[a_k_p_0lsq_reco_] = convert_spharm_to_k_p_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_3d_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_0lsq_reco_);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_0lsq_reco_ --> a_k_p_0lsq_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
eta = pi/k_p_r_max; 
a_x_u_0lsq_reco_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,a_k_p_0lsq_reco_.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_x_u_0lsq_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
save(fname_mat ...
     ,'a_k_Y_0lsq_reco_' ...
     ,'a_k_p_0lsq_reco_' ...
     ,'a_x_u_0lsq_reco_' ...
     ,'X_0lsq_reco' ...
     ,'X_0lsq_flag_flip' ...
     );
end;%if (~exist(fname_mat,'file'));
if ( exist(fname_mat,'file'));
disp(sprintf(' %% %s found, not creating',fname_mat));
load(fname_mat);
end;%if ( exist(fname_mat,'file'));
%%%%%%%%;
fname_fig = sprintf('%s_jpg/a_x_u_0lsq_reco_nM%.5d_',dir_pm,n_M);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
figure(1+nf);nf=nf+1;clf;figbig;
isosurface_f_x_u_0(reshape(real(a_x_u_0lsq_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[90,95,99]);
title(sprintf('a_x_u_0lsq_reco_: corr %0.4f',X_0lsq_reco),'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s found, not creating',fname_fig));
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));
%%%%%%%%;

%%%%%%%%;
% Now determine best possible correlation with ground truth, ;
% using the image-subset given. ;
% Note that this uses all the k-shells (i.e., all principal-modes). ;
%%%%%%%%;
fname_mat = sprintf('%s_mat/a_k_Y_0qbp_reco_nM%.5d_.mat',dir_pm,n_M);
if (flag_recalc | ~exist(fname_mat,'file'));
disp(sprintf(' %% %s not found, creating',fname_mat));
qbp_eps = tolerance_master; tmp_n_M = n_M;
tmp_euler_polar_a_ = +euler_polar_a_true_(1+(0:n_M-1));
tmp_euler_azimu_b_ = +euler_azimu_b_true_(1+(0:n_M-1));
tmp_euler_gamma_z_ = +euler_gamma_z_true_(1+(0:n_M-1));
tmp_image_delta_x_ = +image_delta_x_true_(1+(0:n_M-1));
tmp_image_delta_y_ = +image_delta_y_true_(1+(0:n_M-1));
%%%%%%%%;
tmp_t = tic;
a_k_Y_0qbp_reco_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,tmp_n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,tmp_euler_polar_a_ ...
,tmp_euler_azimu_b_ ...
,tmp_euler_gamma_z_ ...
,tmp_image_delta_x_ ...
,tmp_image_delta_y_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% N_k_p__ --> a_k_Y_0qbp_reco_ time %0.2fs',tmp_t));
[ ...
 X_0qbp_reco ...
,X_0qbp_flag_flip ...
] = ...
register_spharm_to_spharm_wigner_wrap_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_0qbp_reco_ ...
);
disp(sprintf(' %% X_0qbp_reco %0.3f flag_flip %d',X_0qbp_reco,X_0qbp_flag_flip));
%%%%%%%%;
tmp_t = tic;
[a_k_p_0qbp_reco] = convert_spharm_to_k_p_1(verbose,n_k_all,n_k_all_csum_,k_p_r_all_,k_p_azimu_b_all_,k_p_polar_a_all_,weight_3d_k_all_,weight_shell_k_,n_k_p_r,k_p_r_,weight_3d_k_p_r_,l_max_,a_k_Y_0qbp_reco_);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_0qbp_reco_ --> a_k_p_0qbp_reco time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
eta = pi/k_p_r_max; 
a_x_u_0qbp_reco_ = xxnufft3d3(n_k_all,2*pi*k_c_0_all_*eta,2*pi*k_c_1_all_*eta,2*pi*k_c_2_all_*eta,a_k_p_0qbp_reco.*(2*pi)^3.*weight_3d_k_all_,+1,1e-12,n_xxx_u,x_u_0___(:)/eta,x_u_1___(:)/eta,x_u_2___(:)/eta)/sqrt(2*pi)/sqrt(2*pi)/sqrt(2*pi);
tmp_t = toc(tmp_t); disp(sprintf(' %% xxnufft3d3: a_x_u_0qbp_reco_ time %0.2fs',tmp_t));
%%%%%%%%;
save(fname_mat ...
     ,'a_k_Y_0qbp_reco_' ...
     ,'a_k_p_0qbp_reco' ...
     ,'a_x_u_0qbp_reco_' ...
     ,'X_0qbp_reco' ...
     ,'X_0qbp_flag_flip' ...
     );
end;%if (~exist(fname_mat,'file'));
if ( exist(fname_mat,'file'));
disp(sprintf(' %% %s found, not creating',fname_mat));
load(fname_mat);
end;%if ( exist(fname_mat,'file'));
%%%%%%%%;
fname_fig = sprintf('%s_jpg/a_x_u_0qbp_reco_nM%.5d_',dir_pm,n_M);
if (flag_replot | ~exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s not found, creating',fname_fig));
figure(1+nf);nf=nf+1;clf;figbig;
isosurface_f_x_u_0(reshape(real(a_x_u_0qbp_reco_),n_x_u_pack,n_x_u_pack,n_x_u_pack),[90,95,99]);
title(sprintf('a_x_u_0qbp_reco_: corr %0.4f',X_0qbp_reco),'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig));
print('-djpeg',sprintf('%s.jpg',fname_fig));
print('-depsc',sprintf('%s.eps',fname_fig));
close(gcf);
end;%if (~exist(sprintf('%s.jpg',fname_fig),'file'));
if ( exist(sprintf('%s.jpg',fname_fig),'file'));
disp(sprintf(' %% %s found, not creating',fname_fig));
end;%if ( exist(sprintf('%s.jpg',fname_fig),'file'));
%%%%%%%%;

%%%%%%%%;
date_diff_threshold = 0.25;
flag_force_create_mat=0;flag_force_create_tmp=0;
delta_sigma_use = delta_sigma;
dat_rseed_ = [0:2]; n_dat_rseed = numel(dat_rseed_);
tolerance_pm_ = 0.1.^[1:0.5:3];
n_tolerance_pm = numel(tolerance_pm_);
delta_r_max_factor_ = [0.00,0.125,0.25,0.50];
n_delta_r_max_factor = numel(delta_r_max_factor_);
%%%%%%%%;
flag_compute = 0 & ( 1*strcmp(platform,'access1') | 0*strcmp(platform,'rusty') | 1*strcmp(platform,'eval1') );
if flag_compute;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_compute;

verbose=1;
if (verbose); disp(sprintf(' %% [finished test_pm_medres_0]')); end;

disp('returning'); return;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%{
  %%%%%%%%;
  % plot fsc_crop_reco_stab_alig_M_nMxxxxx. ;
  %%%%%%%%;
  verbose=0;
  dir_tmp = sprintf('/data/rangan/dir_cryoem/dir_trpv1_x0/dir_pm_mat');
  Pixel_Spacing = 1.2156;
  n_x_M_u = 256;
  k_p_r_max = 48/(2*pi); k_eq_d = 1.0/(2*pi);
  flag_unif_vs_adap = 1;
  [ ...
   n_k_all ...
  ,n_k_all_csum_ ...
  ,k_p_r_all_ ...
  ,k_p_azimu_b_all_ ...
  ,k_p_polar_a_all_ ...
  ,weight_3d_k_all_ ...
  ,weight_shell_k_ ...
  ,n_k_p_r ...
  ,k_p_r_ ...
  ,weight_3d_k_p_r_ ...
  ,k_c_0_all_ ...
  ,k_c_1_all_ ...
  ,k_c_2_all_ ...
  ,J_node_ ...
  ,J_weight_ ...
  ,J_chebfun_ ...
  ,J_polyval_ ...
  ] = ...
  sample_sphere_7( ...
   verbose ...
  ,k_p_r_max ...
  ,k_eq_d ...
  ,'L' ...
  ,flag_unif_vs_adap ...
  ) ; %<-- sum(weight_3d_k_p_r_)*(4*pi) = (4/3)*pi*k_p_r_max^3 --> sum(weight_3d_k_p_r_) = (1/3)*k_p_r_max^3 ;
  k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
  k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
  kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
  %%%%%%%%;
  figure(1);clf;figbig;
  linewidth_use = 2;
  c_80s__ = colormap_80s; n_c_80s = size(c_80s__,1);
  n_M_ = 1024*2.^[0:4]; n_n_M = numel(n_M_);
  p_row = 2; p_col = ceil(2*n_n_M/p_row); np=0;
  for nn_M=0:n_n_M-1;
  n_M = n_M_(1+nn_M);
  tmp_fname_mat = sprintf('%s/fsc_crop_reco_stab_alig_from_M_nM%.5d__.mat',dir_tmp,n_M);
  if ~exist(tmp_fname_mat,'file');
  disp(sprintf(' %% %s not found',tmp_fname_mat));
  end;%if ~exist(tmp_fname_mat,'file');
  if  exist(tmp_fname_mat,'file');
  tmp_ = load(tmp_fname_mat);
  tmp_fsc_crop_kx__ = tmp_.fsc_crop_reco_stab_kx__;
  n_x = size(tmp_fsc_crop_kx__,2);
  %%%%;
  subplot(p_row,p_col,1+np); np=np+1;
  hold on;
  for nx=0:n_x-1;
  nc_80s = max(0,min(n_c_80s-1,floor(n_c_80s*nx/n_x)));
  plot(k_Ainv_p_r_,real(tmp_fsc_crop_kx__(:,1+nx)),'-','Color',c_80s__(1+nc_80s,:),'LineWidth',linewidth_use);
  end;%for nx=0:n_x-1;
  hold off;
  xlim([0,k_Ainv_p_r_max]);
  ylim([0,1]);
  xlabel('k'); ylabel('fsc','Interpreter','none');
  title(sprintf('n_M %.5d',n_M),'Interpreter','none');
  %%%%;
  subplot(p_row,p_col,1+np); np=np+1;
  hold on;
  for nx=0:n_x-1;
  nc_80s = max(0,min(n_c_80s-1,floor(n_c_80s*nx/n_x)));
  plot(log10(kinv_A_p_r_),real(tmp_fsc_crop_kx__(:,1+nx)),'-','Color',c_80s__(1+nc_80s,:),'LineWidth',linewidth_use);
  end;%for nx=0:n_x-1;
  hold off;
  xlim([0,+2]);
  ylim([0,1]);
  xlabel('log10(l = 1/k)'); ylabel('fsc','Interpreter','none');
  title(sprintf('n_M %.5d',n_M),'Interpreter','none');
  %%%%;
  clear tmp_;
  end;%if  exist(tmp_fname_mat,'file');
  end;%for nn_M=0:n_n_M-1;
  %}

%{
%%%%%%%%;
% convert relion de-novo output into mrc file. ;
%%%%%%%%;
half_diameter_x_c = 1.0d0;
diameter_x_c = 2.0d0*half_diameter_x_c;
x_p_r_max = 1.0;
n_x_u_pack = 64;
%%%%%%%%;
fname_emd = sprintf('%s/%s',dir_data_star,fname_nopath_volume);
a_x_u_load_ = cast(ReadMRC(fname_emd),'double');
n_x_u = size(a_x_u_load_,1);
n_x_M_u = n_x_u; %<-- true for trpv1 and ps1, not necessarily true for other molecules. ;
n_x_c = n_x_u;
x_c_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
x_c_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
x_c_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
[x_c_0___,x_c_1___,x_c_2___] = meshgrid(x_c_0_,x_c_1_,x_c_2_); n_xxx_c = n_x_c^3;
xxx_c_weight_ = (2*x_p_r_max/n_x_c)^3;
n_pack = n_x_u/n_x_u_pack;
pack_row_ij_ = zeros(n_x_u_pack,1);
pack_col_ij_ = zeros(n_x_u_pack,1);
pack_val_ij_ = zeros(n_x_u_pack,1);
na=0;
for nx_u=0:n_x_u-1;
pack_row_ij_(1+na) = 1+nx_u;
pack_col_ij_(1+na) = 1+floor(nx_u/n_pack);
pack_val_ij_(1+na) = 1/n_pack;
na=na+1;
end;%for nx_u=0:n_x_u-1;
x_u_pack_ = sparse(pack_row_ij_,pack_col_ij_,pack_val_ij_,n_x_u,n_x_u_pack);
a_x_u_pack_ = reshape(a_x_u_load_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%;
fname_emd_0in = sprintf('/%s/rangan/dir_cryoem/dir_precatalytic_spliceosome/dir_relion_mat/job_1024/run_it300_class001.mrc',string_root);
a_x_u_reli_load_ = cast(ReadMRC(fname_emd_0in),'double');
n_x_u_reli = size(a_x_u_reli_load_,1);
%%%%%%%%;
n_x_c_reli = n_x_u_reli;
x_c_reli_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c_reli);
x_c_reli_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c_reli);
x_c_reli_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c_reli);
[x_c_reli_0___,x_c_reli_1___,x_c_reli_2___] = meshgrid(x_c_reli_0_,x_c_reli_1_,x_c_reli_2_); n_xxx_c_reli = n_x_c_reli^3;
a_x_u_reli_interp_ = interp3(x_c_reli_0___,x_c_reli_1___,x_c_reli_2___,reshape(a_x_u_reli_load_,[n_x_u_reli,n_x_u_reli,n_x_u_reli]),x_c_0___,x_c_1___,x_c_2___);
a_x_u_reli_interp_pack_ = reshape(a_x_u_reli_interp_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_u_reli_interp_pack_ = reshape(permute(reshape(a_x_u_reli_interp_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_reli_interp_pack_ = reshape(permute(reshape(a_x_u_reli_interp_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_reli_interp_pack_ = permute(reshape(a_x_u_reli_interp_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%%%%%;
n_x_u_reli_pack = n_x_u_pack;
n_pack_reli = n_x_u_reli/n_x_u_reli_pack;
pack_row_ij_ = zeros(n_x_u_reli_pack,1);
pack_col_ij_ = zeros(n_x_u_reli_pack,1);
pack_val_ij_ = zeros(n_x_u_reli_pack,1);
na=0;
for nx_u_reli=0:n_x_u_reli-1;
pack_row_ij_(1+na) = 1+nx_u_reli;
pack_col_ij_(1+na) = 1+floor(nx_u_reli/n_pack_reli);
pack_val_ij_(1+na) = 1/n_pack_reli;
na=na+1;
end;%for nx_u_reli=0:n_x_u_reli-1;
x_u_reli_pack_ = sparse(pack_row_ij_,pack_col_ij_,pack_val_ij_,n_x_u_reli,n_x_u_reli_pack);
a_x_u_reli_pack_ = reshape(a_x_u_reli_load_,[n_x_u_reli*n_x_u_reli,n_x_u_reli])*x_u_reli_pack_;
a_x_u_reli_pack_ = reshape(permute(reshape(a_x_u_reli_pack_,[n_x_u_reli,n_x_u_reli,n_x_u_reli_pack]),[3,1,2]),[n_x_u_reli*n_x_u_reli_pack,n_x_u_reli])*x_u_reli_pack_;
a_x_u_reli_pack_ = reshape(permute(reshape(a_x_u_reli_pack_,[n_x_u_reli_pack,n_x_u_reli,n_x_u_reli_pack]),[3,1,2]),[n_x_u_reli_pack*n_x_u_reli_pack,n_x_u_reli])*x_u_reli_pack_;
a_x_u_reli_pack_ = permute(reshape(a_x_u_reli_pack_,[n_x_u_reli_pack,n_x_u_reli_pack,n_x_u_reli_pack]),[3,1,2]);
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figmed;
if strcmp(fname_prefix,'trpv1_x0'); tmp_p = 91.25; tmp_nx = 14; end;
if strcmp(fname_prefix,'ps1_x0');   tmp_p = 91.25; tmp_nx =  8; end;
if strcmp(fname_prefix,'ps1_x0to7_combine');   tmp_p = 91.25; tmp_nx =  8; end;
tmp_window_ = zeros(n_x_u_pack,n_x_u_pack,n_x_u_pack);
tmp_index_ = tmp_nx:n_x_u_pack-1-tmp_nx;
tmp_window_(1+tmp_index_,1+tmp_index_,1+tmp_index_)=1;
tmp_index_ = efind(tmp_window_);
subplot(1,3,1); isosurface_f_x_u_0(a_x_u_pack_(1+tmp_index_),tmp_p);
subplot(1,3,2); isosurface_f_x_u_0(a_x_u_reli_interp_pack_(1+tmp_index_),tmp_p);
subplot(1,3,3); isosurface_f_x_u_0(a_x_u_reli_pack_(1+tmp_index_),tmp_p);
end;%if flag_disp;
%%%%%%%%;
fname_emd_out = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/precatalytic_spliceosome_job_1024_run_it300_class001_320px.mrc',string_root);
ReplaceMRC_0(fname_emd,1,Inf,0,cast(a_x_u_reli_interp_,'single'),fname_emd_out);
%%%%%%%%;
clear a_x_u_load_ a_x_u_reli_load_ a_x_u_reli_interp_ ;
%%%%%%%%;
 %}

%{
%clear;
%%%%%%%%;
% convert some of the volumes into mrc files. ;
%%%%%%%%;
verbose=1;
string_root = 'data';
%%%%;
if strcmp(fname_prefix,'trpv1_x0');
%%%%;
fname_prefix='trpv1_x0';
dir_nopath_data_star='trpv1';
Pixel_Spacing=1.2156;
fname_nopath_volume='emd_5778.mrc';
fname_nopath_star='tv1_relion_data.star';
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
dir_pm_mat_pre = sprintf('/%s/rangan/dir_cryoem/dir_trpv1_x0/dir_pm_mat',string_root);
dir_pm_mat = sprintf('/%s/rangan/dir_cryoem/dir_trpv1_x0/dir_pm_mat',string_root);
str_xfix = 'X_2d_xcor_d0_a1t0152n20r2';
%%%%;
end;%if strcmp(fname_prefix,'trpv1_x0');
%%%%;
if strcmp(fname_prefix,'ps1_x0');
%%%%;
fname_prefix='ps1_x0';
dir_nopath_data_star='precatalytic_spliceosome';
Pixel_Spacing=1.699;
fname_nopath_volume='consensus_half1_class001.mrc';
fname_nopath_star='consensus_data.star';
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
dir_pm_mat_pre = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0/dir_pm_mat',string_root);
dir_pm_mat = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0/dir_pm_mat',string_root);
str_xfix = 'X_2d_xcor_d0_a1t0122n16r0';
%%%%;
end;%if strcmp(fname_prefix,'ps1_x0');
%%%%;
if strcmp(fname_prefix,'ps1_x0to7_combine');
%%%%;
fname_prefix='ps1_x0to7_combine';
dir_nopath_data_star='precatalytic_spliceosome';
Pixel_Spacing=1.699;
fname_nopath_volume='consensus_half1_class001.mrc';
fname_nopath_star='consensus_data.star';
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
dir_pm_mat_pre = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0/dir_pm_mat',string_root);
dir_pm_mat = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0to7_combine/dir_pmox1_mat',string_root);
str_xfix = 'X_2d_xcor_d0_a1t0122p20r0';
%%%%;
end;%if strcmp(fname_prefix,'ps1_x0to7_combine');
%%%%;
if strcmp(fname_prefix,'rib80s_x0');
%%%%;
fname_prefix='rib80s_x0';
dir_nopath_data_star='rib80s';
Pixel_Spacing=1.340;
fname_nopath_volume='emd_2660.mrc';
fname_nopath_star='shiny_2sets.star';
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
dir_pm_mat_pre = sprintf('/%s/rangan/dir_cryoem/dir_rib80s_x0/dir_pm_mat',string_root);
dir_pm_mat = sprintf('/%s/rangan/dir_cryoem/dir_rib80s_x0/dir_pm_mat',string_root);
str_xfix = 'X_2d_xcor_d0_a1t0055n14r0';
%%%%;
end;%if strcmp(fname_prefix,'rib80s_x0'); 
%%%%;
ls(sprintf('%s/%s*',dir_pm_mat,str_xfix));
load(sprintf('%s/a_x_u_base_.mat',dir_pm_mat_pre));
load(sprintf('%s/a_k_p_quad_.mat',dir_pm_mat_pre));
load(sprintf('%s/a_k_Y_quad_.mat',dir_pm_mat_pre));
%%%%%%%%;
fname_a_k_Y = sprintf('%s/%s_a_k_Y_.mat',dir_pm_mat,str_xfix);
fname_align_a_k_Y = sprintf('%s/%s_align_a_k_Y_.mat',dir_pm_mat,str_xfix);
tmp_a_k_Y_ = load(fname_a_k_Y);
tmp_align_a_k_Y_ = load(fname_align_a_k_Y);
a_k_Y_ampm_ = tmp_a_k_Y_.a_k_Y_reco_;
X_best = tmp_align_a_k_Y_.X_best_(end);
flag_flip = tmp_align_a_k_Y_.X_best_flag_flip_(end);
euler_polar_a_best = tmp_align_a_k_Y_.polar_a_best_(end);
euler_azimu_b_best = tmp_align_a_k_Y_.azimu_b_best_(end);
euler_gamma_z_best = tmp_align_a_k_Y_.gamma_z_best_(end);
image_delta_x_best = tmp_align_a_k_Y_.delta_best__(1+0,end);
image_delta_y_best = tmp_align_a_k_Y_.delta_best__(1+1,end);
image_delta_z_best = tmp_align_a_k_Y_.delta_best__(1+2,end);
N_wavelength = 0;
[ ... 
 a_k_Y_ampm_alig_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_ampm_ ...
,N_wavelength ...
,X_best ...
,flag_flip ...
,euler_polar_a_best ...
,euler_azimu_b_best ...
,euler_gamma_z_best ...
,image_delta_x_best ...
,image_delta_y_best ...
,image_delta_z_best ...
);
%%%%%%%%;
if ~exist('Ylm_klma___','var');
[ ...
 Ylm_klma___ ...
] = ...
get_Ylm_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
end;%if ~exist('Ylm_klma___','var');ylm_
%%%%%%%%;
[ ...
 b_k_p_reco_ ...
] = ...
convert_spharm_to_k_p_3( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,Ylm_klma___ ...
);
disp(sprintf(' %% fnorm(b_k_p_reco_-a_k_p_reco_)/fnorm(a_k_p_reco_): %0.16f',fnorm(b_k_p_reco_-a_k_p_reco_)/fnorm(a_k_p_reco_)));
%%%%%%%%;
[ ...
 a_k_p_ampm_alig_ ...
] = ...
convert_spharm_to_k_p_3( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ampm_alig_ ...
,Ylm_klma___ ...
);
%%%%%%%%;
[ ...
 b_x_u_reco_ ...
] = ...
convert_k_p_to_x_c_1( ...
 verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,a_k_p_reco_ ...
);
disp(sprintf(' %% corr(b_x_u_reco_,a_x_u_reco_): %0.16f',corr(b_x_u_reco_,a_x_u_reco_)));
%%%%%%%%;
[ ...
 a_x_u_ampm_alig_ ...
] = ...
convert_k_p_to_x_c_1( ...
 verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,a_k_p_ampm_alig_ ...
);
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1);clf;figmed;
if strcmp(fname_prefix,'trpv1_x0'); tmp_p = 91.25; tmp_nx = 14; end;
if strcmp(fname_prefix,'ps1_x0');   tmp_p = 91.25; tmp_nx =  8; end;
if strcmp(fname_prefix,'ps1_x0to7_combine');   tmp_p = 91.25; tmp_nx =  8; end;
if strcmp(fname_prefix,'rib80s_x0'); tmp_p = 90.50; tmp_nx = 11; end;
tmp_window_ = zeros(n_x_u_pack,n_x_u_pack,n_x_u_pack);
tmp_index_ = tmp_nx:n_x_u_pack-1-tmp_nx;
tmp_window_(1+tmp_index_,1+tmp_index_,1+tmp_index_)=1;
tmp_index_ = efind(tmp_window_);
subplot(1,3,1); isosurface_f_x_u_0(a_x_u_reco_(1+tmp_index_),tmp_p);
subplot(1,3,2); isosurface_f_x_u_0(b_x_u_reco_(1+tmp_index_),tmp_p);
subplot(1,3,3); isosurface_f_x_u_0(a_x_u_ampm_alig_(1+tmp_index_),tmp_p);
end;%if flag_disp;
%%%%%%%%;
fname_emd = sprintf('%s/%s',dir_data_star,fname_nopath_volume);
a_x_u_load_ = cast(ReadMRC(fname_emd),'double');
n_x_u = size(a_x_u_load_,1);
n_x_M_u = n_x_u; %<-- true for trpv1 and ps1, not necessarily true for other molecules. ;
n_x_c = n_x_u;
x_c_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
x_c_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
x_c_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_c);
[x_c_0___,x_c_1___,x_c_2___] = ndgrid(x_c_0_,x_c_1_,x_c_2_); n_xxx_c = n_x_c^3;
xxx_c_weight_ = (2*x_p_r_max/n_x_c)^3;
pack_row_ij_ = zeros(n_x_u_pack,1);
pack_col_ij_ = zeros(n_x_u_pack,1);
pack_val_ij_ = zeros(n_x_u_pack,1);
na=0;
for nx_u=0:n_x_u-1;
pack_row_ij_(1+na) = 1+nx_u;
pack_col_ij_(1+na) = 1+floor(nx_u/n_pack);
pack_val_ij_(1+na) = 1/n_pack;
na=na+1;
end;%for nx_u=0:n_x_u-1;
x_u_pack_ = sparse(pack_row_ij_,pack_col_ij_,pack_val_ij_,n_x_u,n_x_u_pack);
a_x_u_pack_ = reshape(a_x_u_load_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = reshape(permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_u_pack_ = permute(reshape(a_x_u_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%%%%%;
[ ...
 a_x_c_ampm_alig_ ...
] = ...
convert_k_p_to_x_c_1( ...
 verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_c ...
,xxx_c_weight_ ...
,x_c_0___ ...
,x_c_1___ ...
,x_c_2___ ...
,x_p_r_max ...
,a_k_p_ampm_alig_ ...
);
a_x_c_ampm_alig_ = real(a_x_c_ampm_alig_);
a_x_c_ampm_alig_pack_ = reshape(a_x_c_ampm_alig_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
a_x_c_ampm_alig_pack_ = reshape(permute(reshape(a_x_c_ampm_alig_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_c_ampm_alig_pack_ = reshape(permute(reshape(a_x_c_ampm_alig_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
a_x_c_ampm_alig_pack_ = permute(reshape(a_x_c_ampm_alig_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%%%%%;
fname_emd_out = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/%s_%s.mrc',string_root,fname_prefix,str_xfix);
ReplaceMRC_0(fname_emd,1,Inf,0,cast(a_x_c_ampm_alig_,'single'),fname_emd_out);
%%%%%%%%;
b_x_c_ampm_alig_ = cast(ReadMRC(fname_emd_out),'double');
b_x_c_ampm_alig_pack_ = reshape(b_x_c_ampm_alig_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
b_x_c_ampm_alig_pack_ = reshape(permute(reshape(b_x_c_ampm_alig_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
b_x_c_ampm_alig_pack_ = reshape(permute(reshape(b_x_c_ampm_alig_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
b_x_c_ampm_alig_pack_ = permute(reshape(b_x_c_ampm_alig_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
%%%%%%%%;
disp(sprintf(' %% b_x_c_ampm_alig_ vs a_x_c_ampm_alig_: %0.16f',fnorm(b_x_c_ampm_alig_(:) - a_x_c_ampm_alig_)/fnorm(a_x_c_ampm_alig_)));
flag_disp=0;
if flag_disp;
figure(1);clf;
subplot(1,2,1); isosurface_f_x_u_0(a_x_c_ampm_alig_pack_,97.5); title('a_x_c_ampm_alig_pack_','Interpreter','none');
subplot(1,2,2); isosurface_f_x_u_0(b_x_c_ampm_alig_pack_,97.5); title('b_x_c_ampm_alig_pack_','Interpreter','none');
end;%if flag_disp;
 %}

%{
  % on rusty: ;
  % ssh ccmlin035;
  % module load gcc openmpi cuda ;
  % run something like: ;
  % mpirun -n 5 `which relion_refine_mpi` --i tv1_relion.star --o job_A/run --auto_refine --split_random_halves --ref trpv1_x0_X_2d_xcor_d0_a1t0152n20r2.mrc --firstiter_cc --ini_high 50 --dont_combine_weights_via_disc --preread_images  --pool 3 --pad 1  --ctf --particle_diameter 400 --flatten_solvent --zero_mask --oversampling 1 --healpix_order 2 --auto_local_healpix_order 4 --offset_range 8 --offset_step 2 --sym C4 --low_resol_join_halves 40 --norm --scale --j 7 --pipeline_control job_A/ ;
  %}

%{
%%%%%%%%;
% Now load outputs from relion. ;
%%%%%%%%;
fname_reli_mrc = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_job_A2_gpu_run_class001.mrc',string_root);
c_x_u_reli_ = cast(ReadMRC(fname_reli_mrc),'double');
c_x_u_reli_pack_ = reshape(c_x_u_reli_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = reshape(permute(reshape(c_x_u_reli_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = reshape(permute(reshape(c_x_u_reli_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
c_x_u_reli_pack_ = permute(reshape(c_x_u_reli_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
c_x_u_reli_ = c_x_u_reli_pack_;
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1);clf;np=0;
subplot(1,2,1+np); np=np+1; isosurface_f_x_u_0(a_x_u_pack_,97.5); title('a_x_u_pack_','Interpreter','none');
subplot(1,2,1+np); np=np+1; isosurface_f_x_u_0(c_x_u_reli_,97.5); title('c_x_u_reli_pack_','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;
[ ...
 Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
get_Ylm_condense_wrap_0( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,n_k_p_r ...
,l_max_ ...
);
%%%%%%%%;
tmp_t = tic;
[ ...
 c_k_p_reli_ ...
] = ...
convert_x_c_to_k_p_1( ...
 verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,c_x_u_reli_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_x_u_reli_ --> c_k_p_reli_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ...
 c_k_Y_reli_ ...
] = ...
convert_k_p_to_spharm_4( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,c_k_p_reli_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_p_reli_ --> c_k_Y_reli_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic;
[ ... 
 c_k_Y_reli_alig_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,c_k_Y_reli_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% c_k_Y_reli_ --> c_k_Y_reli_alig_ time %0.2fs',tmp_t));
%%%%%%%%;
tmp_t = tic();
parameter_fsc = struct('type','parameter'); parameter_fsc.Pixel_Spacing = Pixel_Spacing;
[ ...
 parameter_fsc ...
,fsc_reli_alig_k_ ...
,corr_base_vs_reli_alig ...
,corr_reco_vs_reli_alig ...
,fsc_crop_reli_alig_kx__ ...
,corr_crop_base_vs_crop_reli_alig_x_ ...
,corr_full_base_vs_crop_reli_alig_x_ ...
,corr_crop_reco_vs_crop_reli_alig_x_ ...
,corr_full_reco_vs_crop_reli_alig_x_ ...
,k_Ainv_p_r_ ...
,k_Ainv_p_r_max ...
,kinv_A_p_r_ ...
] = ...
crop_from_x_c_0( ...
 parameter_fsc ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,c_k_Y_reli_ ...
,c_k_Y_reli_alig_ ...
,half_diameter_x_c ...
,n_x_M_u ...
,n_x_u_pack ...
,a_x_u_base_ ...
,a_x_u_reco_ ...
,[] ...
,n_k_all ...
,n_k_all_csum_ ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% crop_from_x_c_0 time %0.2fs',tmp_t));
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1);clf;figbig;
linewidth_use = 2;
c_80s__ = colormap_80s; n_c_80s = size(c_80s__,1);
p_row = 1; p_col = 2; np=0;
%%%%;
tmp_fsc_crop_kx__ = fsc_crop_reli_alig_kx__;
n_x = size(tmp_fsc_crop_kx__,2);
%%%%;
subplot(p_row,p_col,1+np); np=np+1;
hold on;
for nx=0:n_x-1;
nc_80s = max(0,min(n_c_80s-1,floor(n_c_80s*nx/n_x)));
plot(k_Ainv_p_r_,real(tmp_fsc_crop_kx__(:,1+nx)),'-','Color',c_80s__(1+nc_80s,:),'LineWidth',linewidth_use);
end;%for nx=0:n_x-1;
hold off;
xlim([0,k_Ainv_p_r_max]);
ylim([0,1]);
xlabel('k'); ylabel('fsc','Interpreter','none');
title(sprintf('reli_alig'),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np); np=np+1;
hold on;
for nx=0:n_x-1;
nc_80s = max(0,min(n_c_80s-1,floor(n_c_80s*nx/n_x)));
plot(log10(kinv_A_p_r_),real(tmp_fsc_crop_kx__(:,1+nx)),'-','Color',c_80s__(1+nc_80s,:),'LineWidth',linewidth_use);
end;%for nx=0:n_x-1;
hold off;
xlim([0,+2]);
ylim([0,1]);
xlabel('log10(l = 1/k)'); ylabel('fsc','Interpreter','none');
title(sprintf('reli_alig'),'Interpreter','none');
end;%if flag_disp;
%%%%;
 %}

%%%%%%%%;
% Now load mask. ;
%%%%%%%%;
fname_mask_mrc = sprintf('/%s/rangan/dir_cryoem/dir_relion_tutorial_3.1/tv1_run002_mask.mrc',string_root);
m_x_u_mask_ = cast(ReadMRC(fname_mask_mrc),'double');
m_x_u_mask_pack_ = reshape(m_x_u_mask_,[n_x_u*n_x_u,n_x_u])*x_u_pack_;
m_x_u_mask_pack_ = reshape(permute(reshape(m_x_u_mask_pack_,[n_x_u,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u*n_x_u_pack,n_x_u])*x_u_pack_;
m_x_u_mask_pack_ = reshape(permute(reshape(m_x_u_mask_pack_,[n_x_u_pack,n_x_u,n_x_u_pack]),[3,1,2]),[n_x_u_pack*n_x_u_pack,n_x_u])*x_u_pack_;
m_x_u_mask_pack_ = permute(reshape(m_x_u_mask_pack_,[n_x_u_pack,n_x_u_pack,n_x_u_pack]),[3,1,2]);
m_x_u_mask_ = m_x_u_mask_pack_;
%%%%%%%%;
flag_disp=1;
if flag_disp;
figure(1);clf;np=0;
subplot(2,2,1+np); np=np+1; isosurface_f_x_u_0(a_x_u_pack_,97.5); title('a_x_u_pack_','Interpreter','none');
subplot(2,2,1+np); np=np+1; isosurface_f_x_u_0(a_x_c_ampm_alig_pack_,97.5); title('a_x_c_ampm_alig_pack_','Interpreter','none');
subplot(2,2,1+np); np=np+1; isosurface_f_x_u_0(c_x_u_reli_,97.5); title('c_x_u_reli_','Interpreter','none');
subplot(2,2,1+np); np=np+1; isosurface_f_x_u_0(m_x_u_mask_,97.5); title('m_x_u_mask_','Interpreter','none');
end;%if flag_disp;
