function [b_k_Y_] = transf_spharm_to_spharm_3(verbose,n_k_p_r,k_p_r_,l_max_,a_k_Y_,delta_);
% Applies real-space translation by delta_ ;
% to spherical harmonic expansion a_k_Y_, producing b_k_Y_. ;
% Note that a_ is assumed to represent the molecule in fourier-space. ;
% ;
% inputs: ;
% ;
% verbose = integer verbosity_level ;
% n_k_p_r = number of shells. ;
% k_p_r_ = real array of length n_k_p_r; k_p_r_(nk_p_r) = k_value for shell nk_p_r ;
% l_max_ = integer array of length n_k_p_r; l_max_(nk_p_r) = spherical harmonic order on shell nk_p_r; l_max_(nk_p_r) corresponds to n_lm_(nk_p_r) = (l_max_(nk_p_r)+1)^2 coefficients ;
% a_k_Y_ = complex array of length \sum_{nk_p_r} (n_lm_(nk_p_r)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% delta_ = real array of displacements; [delta_x, delta_y, delta_z] ;
% ;
% outputs: ;
% ;
% b_k_Y_ = complex array of length \sum_{nk_p_r} (n_lm_(nk_p_r)+1)^2 ; coefficients are ordered in a row, with m varying quickly and l varying slowly ;
% b_k_Y_ corresponds to translated molecule ;

if (nargin<1);
verbose=1;
sub_verbose=0;
%%%%%%%%;
% First sample sphere. ;
%%%%%%%%;
k_p_r_max = 48/(2*pi); k_eq_d = 1.0/(2*pi);
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,~ ...
,~ ...
,~ ...
,~ ...
] = ...
sample_sphere_7( ...
 sub_verbose ...
,k_p_r_max ...
,k_eq_d ...
,'L' ...
) ;
%%%%%%%%;
% Now restrict to only 2 shells for testing. ;
%%%%%%%%;
n_k_p_r = 2;
n_k_all_0 = numel(efind((k_p_r_all_>0.5*(k_p_r_(end-2)+k_p_r_(end-1))) & (k_p_r_all_<0.5*(k_p_r_(end-1)+k_p_r_(end-0)))));
n_k_all_1 = numel(efind((k_p_r_all_>0.5*(k_p_r_(end-1)+k_p_r_(end-0))) & (k_p_r_all_<0.5*(k_p_r_(end-0)+k_p_r_max))));
tmp_index_ = efind(k_p_r_all_>0.5*(k_p_r_(end-2)+k_p_r_(end-1)));
n_k_all = numel(tmp_index_);
n_k_all_csum_ = [0;n_k_all_0;n_k_all_0+n_k_all_1];
k_p_r_all_ = k_p_r_all_(1+tmp_index_);
k_p_azimu_b_all_ = k_p_azimu_b_all_(1+tmp_index_);
k_p_polar_a_all_ = k_p_polar_a_all_(1+tmp_index_);
weight_3d_k_all_ = weight_3d_k_all_(1+tmp_index_); %<-- the weight will be inaccurate, but is unused. ;
weight_shell_k_ = weight_shell_k_(1+tmp_index_); %<-- this weight will still be accurate, and is used in convert_k_p_to_spharm_1. ;
k_c_0_all_ = k_c_0_all_(1+tmp_index_);
k_c_1_all_ = k_c_1_all_(1+tmp_index_);
k_c_2_all_ = k_c_2_all_(1+tmp_index_);
k_p_r_ = k_p_r_(end-1:end);
weight_3d_k_p_r_ = weight_3d_k_p_r_(end-1:end);
%%%%%%%%;
% define l_max_. ;
%%%%%%%%;
l_max_upb = 8; %<-- low values here will give rise to large errors in the translation operator. ;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_);
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
%%%%%%%%;
% Now define translation, as well as f_k_Y_ and g_k_Y_. ;
% Note: k_p_azimu_b_ in [0,2*pi], k_p_polar_a_ in [0,1*pi];
% Note that: ;
% \int (sphere of radius K) exp(+i*k*delta) = I1 = I2 = I3 = I4, where: ;
% I1 = dblquad(@(k,k_p_polar_a) 2*pi*cos(delta.*k.*cos(k_p_polar_a)).*k.^2.*sin(k_p_polar_a),0,Kmax,0,pi);
% I2 = 4*pi*(1/delta^1)*quad(@(k) k.^2.*sin(delta*k)./k,0,Kmax);
% I3 = 4*pi*(1/delta^3)*quad(@(k) k.*sin(k),0,Kmax*delta);
% I4 = 4*pi*(1/delta^3)*(sin(Kd) - Kd*cos(Kd)); 
%%%%%%%%;
f_delta_ = 0.05*[0.51;0.75;1.9]; %<-- this is the true delta associated with f. ;
f_delta_012 = fnorm(f_delta_); f_delta_01 = fnorm(f_delta_(1:2)); 
f_delta_k_p_azimu_b = atan2(f_delta_(1+1),f_delta_(1+0)); f_delta_k_p_polar_a = atan2(f_delta_01,f_delta_(1+2));
f_k_all_ = exp(+2*pi*i* ( k_c_0_all_*f_delta_(1+0) + k_c_1_all_*f_delta_(1+1) + k_c_2_all_*f_delta_(1+2) ));
[f_k_Y_] = ...
convert_k_p_to_spharm_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,f_k_all_ ...
);
%%%%%%%%;
delta_bake_ = 0.01*[-0.03;+0.12;-0.62];
g_delta_ = f_delta_ + delta_bake_; %<-- this is the true delta associated with g. ;
g_delta_012 = fnorm(g_delta_); g_delta_01 = fnorm(g_delta_(1:2)); 
g_delta_k_p_azimu_b = atan2(g_delta_(1+1),g_delta_(1+0)); g_delta_k_p_polar_a = atan2(g_delta_01,g_delta_(1+2));
g_k_all_ = exp(+2*pi*i* ( k_c_0_all_*g_delta_(1+0) + k_c_1_all_*g_delta_(1+1) + k_c_2_all_*g_delta_(1+2) ));
[g_k_Y_] = ...
convert_k_p_to_spharm_1( ...
 verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,g_k_all_ ...
);
%%%%%%%%;
% now apply transf_spharm_to_spharm_3 to f_k_Y_. ;
%%%%%%%%;
tmp_t = tic();
[h_k_Y_] = transf_spharm_to_spharm_3(verbose,n_k_p_r,k_p_r_,l_max_,f_k_Y_,-delta_bake_); %<-- note sign of translation. ;
tmp_t = toc(tmp_t); if (verbose>1); disp(sprintf(' %% l_max_upb %0.2d: transf_spharm_to_spharm_3: %0.2fs',l_max_upb,tmp_t)); end;
%%%%%%%%;
% now compare h_k_Y_ to g_k_Y_ ;
%%%%%%%%;
disp(sprintf(' %% g_k_Y_ vs h_k_Y_: %0.16f',fnorm(g_k_Y_-h_k_Y_)/fnorm(g_k_Y_)));
disp(sprintf(' %% g_k_Y_ vs f_k_Y_: %0.16f',fnorm(g_k_Y_-f_k_Y_)/fnorm(g_k_Y_)));
%%%%%%%%;
% Now plot h_k_Y_ and g_k_Y_. ;
% Note that there might be quite a bit of error, since we limited the order l_max_upb above. ;
%%%%%%%%;
flag_plot=1;
if flag_plot;
figure(1);clf;
nk_p_r = 1;
tmp_f_k_Y_ = g_k_Y_(1+(n_lm_csum_(1+nk_p_r):n_lm_csum_(1+nk_p_r+1)-1));
  [ ...
 tmp_n_all ...
,tmp_n_sub_ ...
,tmp_k_p_r_all_ ...
,tmp_azimu_b_all_ ...
,tmp_polar_a_all_ ...
,tmp_weight_all_ ...
,tmp_f_k_all_ ...
,tmp_k_c_0_all_ ...
,tmp_k_c_1_all_ ...
,tmp_k_c_2_all_ ...
] = ...
convert_spharm_to_k_p_0( ...
 verbose ...
,1 ...
,k_p_r_(1+nk_p_r) ...
,l_max_(1+nk_p_r) ...
,tmp_f_k_Y_ ...
,k_eq_d/1 ...
);
tmp_flim_ = 0*mean(real(tmp_f_k_all_)) + 2.5*std(real(tmp_f_k_all_),1)*[-1,+1];
subplot(3,3,1);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,real(tmp_f_k_all_),tmp_flim_);
xlim([0,2*pi]);ylim([0,1*pi]); axisnotick; title(sprintf('real g shell %d',nk_p_r));
subplot(3,3,2);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,imag(tmp_f_k_all_),tmp_flim_);
xlim([0,2*pi]);ylim([0,1*pi]); axisnotick; title(sprintf('imag g shell %d',nk_p_r));
subplot(3,3,3);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,real(tmp_f_k_all_),tmp_flim_,[],0);
xlim([-1,+1]);ylim([-1,+1]);zlim([-1,+1]); axisnotick; title(sprintf('real g shell %d',nk_p_r));
%%%%%%%%;
nk_p_r = 1;
tmp_f_k_Y_ = h_k_Y_(1+(n_lm_csum_(1+nk_p_r):n_lm_csum_(1+nk_p_r+1)-1));
  [ ...
 tmp_n_all ...
,tmp_n_sub_ ...
,tmp_k_p_r_all_ ...
,tmp_azimu_b_all_ ...
,tmp_polar_a_all_ ...
,tmp_weight_all_ ...
,tmp_f_k_all_ ...
,tmp_k_c_0_all_ ...
,tmp_k_c_1_all_ ...
,tmp_k_c_2_all_ ...
] = ...
convert_spharm_to_k_p_0( ...
 verbose ...
,1 ...
,k_p_r_(1+nk_p_r) ...
,l_max_(1+nk_p_r) ...
,tmp_f_k_Y_ ...
,k_eq_d/1 ...
);
tmp_flim_ = 0*mean(real(tmp_f_k_all_)) + 2.5*std(real(tmp_f_k_all_),1)*[-1,+1];
subplot(3,3,4);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,real(tmp_f_k_all_),tmp_flim_);
xlim([0,2*pi]);ylim([0,1*pi]); axisnotick; title(sprintf('real h shell %d',nk_p_r));
subplot(3,3,5);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,imag(tmp_f_k_all_),tmp_flim_);
xlim([0,2*pi]);ylim([0,1*pi]); axisnotick; title(sprintf('imag h shell %d',nk_p_r));
subplot(3,3,6);
imagesc_polar_a_azimu_b_0(tmp_polar_a_all_,tmp_azimu_b_all_,real(tmp_f_k_all_),tmp_flim_,[],0);
xlim([-1,+1]);ylim([-1,+1]);zlim([-1,+1]); axisnotick; title(sprintf('real h shell %d',nk_p_r));
%%%%%%%%;
subplot(3,3,7);
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,abs(f_k_Y_)); title('abs(f_k_Y_)','Interpreter','none');
xlabel('l');ylabel('m');
subplot(3,3,8);
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,abs(g_k_Y_)); title('abs(g_k_Y_)','Interpreter','none');
xlabel('l');ylabel('m');
subplot(3,3,9);
imagesc_Y(k_p_r_max,n_k_p_r,k_p_r_,l_max_,abs(h_k_Y_)); title('abs(h_k_Y_)','Interpreter','none');
xlabel('l');ylabel('m');
figbig;
end;%if flag_plot;
%%%%%%%%;
disp('returning'); return;
end;%if (nargin<1);

n_lm_ = (l_max_+1).^2;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);

dWtdkd__ = dwignertdkd__(dWtdkd__l_max_max);
delta_p_r = fnorm(+delta_);
Wt___ = expm_dwignertdkd__(dWtdkd__,n_k_p_r,k_p_r_,l_max_,delta_p_r);
Wt_ = wignert_ODE_0(dWtdkd__,Wt___,n_k_p_r,k_p_r_,l_max_,delta_p_r);
delta_z_c_ = transpose(+delta_);
delta_z_p_r = sqrt(delta_z_c_(1+0).^2 + delta_z_c_(1+1).^2 + delta_z_c_(1+2).^2);
delta_z_p_01 = sqrt(delta_z_c_(1+0).^2 + delta_z_c_(1+1).^2);
delta_z_p_azimu_b = atan2(delta_z_c_(1+1),delta_z_c_(1+0));
delta_z_p_polar_a = atan2(delta_z_p_01,delta_z_c_(1+2));
delta_z_p_euler_pos_ = [0,+delta_z_p_polar_a,+delta_z_p_azimu_b];
delta_z_p_euler_neg_ = [-delta_z_p_azimu_b,-delta_z_p_polar_a,0];
delta_z_c_ = [cos(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);...
              sin(delta_z_p_azimu_b)*sin(delta_z_p_polar_a);...
              cos(delta_z_p_polar_a)]...
             *delta_z_p_r;
W_beta_neg__ = wignerd_b(l_max_max,delta_z_p_euler_neg_(1+1));
W_beta_pos__ = wignerd_b(l_max_max,delta_z_p_euler_pos_(1+1));
tmp_Y_form_ = a_k_Y_;
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_neg__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_neg_);
tmp_Y_form_ = Wt_*tmp_Y_form_; 
tmp_Y_form_ = rotate_spharm_to_spharm_2(0,W_beta_pos__,n_k_p_r,k_p_r_,l_max_,tmp_Y_form_,delta_z_p_euler_pos_);
b_k_Y_ = tmp_Y_form_;



