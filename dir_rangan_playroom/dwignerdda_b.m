function [d0W_,d1W_,d2W_] = dwignerdda_b(n_l,beta) ;
% Generates wigner-d matrices up to n_l;
% Also generates derivatives with respect to beta:=polar_a. ;
% Note: uses 3-term recurrences, which are unstable after n_l==88 or so. ;
% Fiddles with condon-shortley phase (c.f. wignerd). ;
% Test with: ;
%{

  beta=pi/3; 
  %%%%%%%%;
  % Note that the discrepancy is larger than 1e-6 at nl==88. ;
  %%%%%%%%;
  n_l=88;
  tic; W0_ = wignerd_lsq_b(n_l,beta);disp(sprintf(' %% wignerd_lsq_b : %0.2f seconds',toc));
  tic; W1_ = wignerd_b(n_l,beta);    disp(sprintf(' %% wignerd_b     : %0.2f seconds',toc));
  tic; W2_ = dwignerdda_b(n_l,beta); disp(sprintf(' %% dwignerdda_b  : %0.2f seconds',toc));  
  for nl=0:n_l;
  disp(sprintf(' %% nl %d/%d: W0_ vs W1: %0.16f',nl,n_l,fnorm(W0_{1+nl}-W1_{1+nl})));
  disp(sprintf(' %% nl %d/%d: W0_ vs W2: %0.16f',nl,n_l,fnorm(W0_{1+nl}-W2_{1+nl})));
  disp(sprintf(' %% nl %d/%d: W1_ vs W2: %0.16f',nl,n_l,fnorm(W1_{1+nl}-W2_{1+nl})));
  end;%for nl=0:n_l;
  %%%%%%%%;
  dbeta = pi*(1e-4);
  [d0W_pos_,d1W_pos_,d2W_pos_] = dwignerdda_b(n_l,beta+(+1)*dbeta);
  [d0W_mid_,d1W_mid_,d2W_mid_] = dwignerdda_b(n_l,beta+(+0)*dbeta);
  [d0W_neg_,d1W_neg_,d2W_neg_] = dwignerdda_b(n_l,beta+(-1)*dbeta);
  for nl=0:n_l;
  d1W_dif_{1+nl} = (d0W_pos_{1+nl} - d0W_neg_{1+nl})/max(1e-12,2*dbeta);
  d2W_lap_{1+nl} = (d0W_pos_{1+nl} - 2*d0W_mid_{1+nl} + d0W_neg_{1+nl})/max(1e-12,dbeta.^2);
  disp(sprintf(' %% nl %d/%d: d1W_dif_ vs d1W_mid_: %0.16f',nl,n_l,fnorm(d1W_dif_{1+nl}-d1W_mid_{1+nl})/max(1e-12,fnorm(d1W_dif_{1+nl}))));
  disp(sprintf(' %% nl %d/%d: d2W_lap_ vs d2W_mid_: %0.16f',nl,n_l,fnorm(d2W_lap_{1+nl}-d2W_mid_{1+nl})/max(1e-12,fnorm(d2W_lap_{1+nl}))));
  end;%for nl=0:n_l;
  %%%%%%%%;  

  %}

if (n_l>=88); disp(sprintf(' %% Warning, n_l=%d>=88 in dwignerdda_b',n_l)); end;

verbose=0;

d0cb = +cos(beta/2)/1 ; d0sb = +sin(beta/2)/1 ; 
d1cb = -sin(beta/2)/2 ; d1sb = +cos(beta/2)/2 ;
d2cb = -cos(beta/2)/4 ; d2sb = -sin(beta/2)/4 ;
d0W_ = cell(1+n_l,1);
d1W_ = cell(1+n_l,1);
d2W_ = cell(1+n_l,1);
d0W_{1} = [1];
d1W_{1} = [0];
d2W_{1} = [0];
for nl=1:n_l;
if (verbose); disp(sprintf(' \n %% nl %d \n',nl)); end;
nlp = nl-1;
d0V = d0W_{nl};
d1V = d1W_{nl};
d2V = d2W_{nl};
d0W = zeros(2*nl+1,2*nl+1);
d1W = zeros(2*nl+1,2*nl+1);
d2W = zeros(2*nl+1,2*nl+1);
for nmn = -nl:+nl; for nmp = -nl:+nl;
%%%%%%%%%%%%%%%%;
if (nl~=-nmp & nl~=1-nmp); % use recurrence A ;
str_tmp = 'A';
d0W1 = 0; if (abs(nmp-1)<=nlp & abs(nmn-1)<=nlp); d0W1 = d0V(1+nlp+(nmp-1),1+nlp+(nmn-1)); end;
d0W2 = 0; if (abs(nmp-1)<=nlp & abs(nmn-0)<=nlp); d0W2 = d0V(1+nlp+(nmp-1),1+nlp+(nmn-0)); end;
d0W3 = 0; if (abs(nmp-1)<=nlp & abs(nmn+1)<=nlp); d0W3 = d0V(1+nlp+(nmp-1),1+nlp+(nmn+1)); end;
d1W1 = 0; if (abs(nmp-1)<=nlp & abs(nmn-1)<=nlp); d1W1 = d1V(1+nlp+(nmp-1),1+nlp+(nmn-1)); end;
d1W2 = 0; if (abs(nmp-1)<=nlp & abs(nmn-0)<=nlp); d1W2 = d1V(1+nlp+(nmp-1),1+nlp+(nmn-0)); end;
d1W3 = 0; if (abs(nmp-1)<=nlp & abs(nmn+1)<=nlp); d1W3 = d1V(1+nlp+(nmp-1),1+nlp+(nmn+1)); end;
d2W1 = 0; if (abs(nmp-1)<=nlp & abs(nmn-1)<=nlp); d2W1 = d2V(1+nlp+(nmp-1),1+nlp+(nmn-1)); end;
d2W2 = 0; if (abs(nmp-1)<=nlp & abs(nmn-0)<=nlp); d2W2 = d2V(1+nlp+(nmp-1),1+nlp+(nmn-0)); end;
d2W3 = 0; if (abs(nmp-1)<=nlp & abs(nmn+1)<=nlp); d2W3 = d2V(1+nlp+(nmp-1),1+nlp+(nmn+1)); end;
tmp_A1 = A1(nl,nmn,nmp);
tmp_A2 = A2(nl,nmn,nmp);
tmp_A3 = A3(nl,nmn,nmp);
d0_tmp = ...
 + d0cb*d0cb*d0W1*tmp_A1 ...
 - 2*d0cb*d0sb*d0W2*tmp_A2 ...
 + d0sb*d0sb*d0W3*tmp_A3 ...
;
d1_tmp = ...
 + d1cb*d0cb*d0W1*tmp_A1 ...
 + d0cb*d1cb*d0W1*tmp_A1 ...
 + d0cb*d0cb*d1W1*tmp_A1 ...
 - 2*d1cb*d0sb*d0W2*tmp_A2 ...
 - 2*d0cb*d1sb*d0W2*tmp_A2 ...
 - 2*d0cb*d0sb*d1W2*tmp_A2 ...
 + d1sb*d0sb*d0W3*tmp_A3 ...
 + d0sb*d1sb*d0W3*tmp_A3 ...
 + d0sb*d0sb*d1W3*tmp_A3 ...
;
d2_tmp = ...
 + d2cb*d0cb*d0W1*tmp_A1 ...
 + d1cb*d1cb*d0W1*tmp_A1 ...
 + d1cb*d0cb*d1W1*tmp_A1 ...
 + d1cb*d1cb*d0W1*tmp_A1 ...
 + d0cb*d2cb*d0W1*tmp_A1 ...
 + d0cb*d1cb*d1W1*tmp_A1 ...
 + d1cb*d0cb*d1W1*tmp_A1 ...
 + d0cb*d1cb*d1W1*tmp_A1 ...
 + d0cb*d0cb*d2W1*tmp_A1 ...
 - 2*d2cb*d0sb*d0W2*tmp_A2 ...
 - 2*d1cb*d1sb*d0W2*tmp_A2 ...
 - 2*d1cb*d0sb*d1W2*tmp_A2 ...
 - 2*d1cb*d1sb*d0W2*tmp_A2 ...
 - 2*d0cb*d2sb*d0W2*tmp_A2 ...
 - 2*d0cb*d1sb*d1W2*tmp_A2 ...
 - 2*d1cb*d0sb*d1W2*tmp_A2 ...
 - 2*d0cb*d1sb*d1W2*tmp_A2 ...
 - 2*d0cb*d0sb*d2W2*tmp_A2 ...
 + d2sb*d0sb*d0W3*tmp_A3 ...
 + d1sb*d1sb*d0W3*tmp_A3 ...
 + d1sb*d0sb*d1W3*tmp_A3 ...
 + d1sb*d1sb*d0W3*tmp_A3 ...
 + d0sb*d2sb*d0W3*tmp_A3 ...
 + d0sb*d1sb*d1W3*tmp_A3 ...
 + d1sb*d0sb*d1W3*tmp_A3 ...
 + d0sb*d1sb*d1W3*tmp_A3 ...
 + d0sb*d0sb*d2W3*tmp_A3 ...
;
end;%if (nl~=-nmp & nl~=1-nmp); % use recurrence A ;
%%%%%%%%%%%%%%%%;
if (nl~=+nmp & nl~=1+nmp); % use recurrence B ;
str_tmp = 'B';
d0W1 = 0; if (abs(nmp+1)<=nlp & abs(nmn-1)<=nlp); d0W1 = d0V(1+nlp+(nmp+1),1+nlp+(nmn-1)); end;
d0W2 = 0; if (abs(nmp+1)<=nlp & abs(nmn-0)<=nlp); d0W2 = d0V(1+nlp+(nmp+1),1+nlp+(nmn-0)); end;
d0W3 = 0; if (abs(nmp+1)<=nlp & abs(nmn+1)<=nlp); d0W3 = d0V(1+nlp+(nmp+1),1+nlp+(nmn+1)); end;
d1W1 = 0; if (abs(nmp+1)<=nlp & abs(nmn-1)<=nlp); d1W1 = d1V(1+nlp+(nmp+1),1+nlp+(nmn-1)); end;
d1W2 = 0; if (abs(nmp+1)<=nlp & abs(nmn-0)<=nlp); d1W2 = d1V(1+nlp+(nmp+1),1+nlp+(nmn-0)); end;
d1W3 = 0; if (abs(nmp+1)<=nlp & abs(nmn+1)<=nlp); d1W3 = d1V(1+nlp+(nmp+1),1+nlp+(nmn+1)); end;
d2W1 = 0; if (abs(nmp+1)<=nlp & abs(nmn-1)<=nlp); d2W1 = d2V(1+nlp+(nmp+1),1+nlp+(nmn-1)); end;
d2W2 = 0; if (abs(nmp+1)<=nlp & abs(nmn-0)<=nlp); d2W2 = d2V(1+nlp+(nmp+1),1+nlp+(nmn-0)); end;
d2W3 = 0; if (abs(nmp+1)<=nlp & abs(nmn+1)<=nlp); d2W3 = d2V(1+nlp+(nmp+1),1+nlp+(nmn+1)); end;
tmp_B1 = B1(nl,nmn,nmp);
tmp_B2 = B2(nl,nmn,nmp);
tmp_B3 = B3(nl,nmn,nmp);
d0_tmp = ...
 + d0sb*d0sb*d0W1*tmp_B1 ...
 + 2*d0sb*d0cb*d0W2*tmp_B2 ...
 + d0cb*d0cb*d0W3*tmp_B3 ...
;
d1_tmp = ...
 + d1sb*d0sb*d0W1*tmp_B1 ...
 + d0sb*d1sb*d0W1*tmp_B1 ...
 + d0sb*d0sb*d1W1*tmp_B1 ...
 + 2*d1sb*d0cb*d0W2*tmp_B2 ...
 + 2*d0sb*d1cb*d0W2*tmp_B2 ...
 + 2*d0sb*d0cb*d1W2*tmp_B2 ...
 + d1cb*d0cb*d0W3*tmp_B3 ...
 + d0cb*d1cb*d0W3*tmp_B3 ...
 + d0cb*d0cb*d1W3*tmp_B3 ...
;
d2_tmp = ...
 + d2sb*d0sb*d0W1*tmp_B1 ...
 + d1sb*d1sb*d0W1*tmp_B1 ...
 + d1sb*d0sb*d1W1*tmp_B1 ...
 + d1sb*d1sb*d0W1*tmp_B1 ...
 + d0sb*d2sb*d0W1*tmp_B1 ...
 + d0sb*d1sb*d1W1*tmp_B1 ...
 + d1sb*d0sb*d1W1*tmp_B1 ...
 + d0sb*d1sb*d1W1*tmp_B1 ...
 + d0sb*d0sb*d2W1*tmp_B1 ...
 + 2*d2sb*d0cb*d0W2*tmp_B2 ...
 + 2*d1sb*d1cb*d0W2*tmp_B2 ...
 + 2*d1sb*d0cb*d1W2*tmp_B2 ...
 + 2*d1sb*d1cb*d0W2*tmp_B2 ...
 + 2*d0sb*d2cb*d0W2*tmp_B2 ...
 + 2*d0sb*d1cb*d1W2*tmp_B2 ...
 + 2*d1sb*d0cb*d1W2*tmp_B2 ...
 + 2*d0sb*d1cb*d1W2*tmp_B2 ...
 + 2*d0sb*d0cb*d2W2*tmp_B2 ...
 + d2cb*d0cb*d0W3*tmp_B3 ...
 + d1cb*d1cb*d0W3*tmp_B3 ...
 + d1cb*d0cb*d1W3*tmp_B3 ...
 + d1cb*d1cb*d0W3*tmp_B3 ...
 + d0cb*d2cb*d0W3*tmp_B3 ...
 + d0cb*d1cb*d1W3*tmp_B3 ...
 + d1cb*d0cb*d1W3*tmp_B3 ...
 + d0cb*d1cb*d1W3*tmp_B3 ...
 + d0cb*d0cb*d2W3*tmp_B3 ...
;
end;%if (nl~=+nmp & nl~=1+nmp); % use recurrence B ;
%%%%%%%%%%%%%%%%;
if (nl~=-nmp & nl~=+nmp); % use recurrence C ;
str_tmp = 'C';
d0W1 = 0; if (abs(nmp-0)<=nlp & abs(nmn-1)<=nlp); d0W1 = d0V(1+nlp+(nmp-0),1+nlp+(nmn-1)); end;
d0W2 = 0; if (abs(nmp-0)<=nlp & abs(nmn-0)<=nlp); d0W2 = d0V(1+nlp+(nmp-0),1+nlp+(nmn-0)); end;
d0W3 = 0; if (abs(nmp-0)<=nlp & abs(nmn+1)<=nlp); d0W3 = d0V(1+nlp+(nmp-0),1+nlp+(nmn+1)); end;
d1W1 = 0; if (abs(nmp-0)<=nlp & abs(nmn-1)<=nlp); d1W1 = d1V(1+nlp+(nmp-0),1+nlp+(nmn-1)); end;
d1W2 = 0; if (abs(nmp-0)<=nlp & abs(nmn-0)<=nlp); d1W2 = d1V(1+nlp+(nmp-0),1+nlp+(nmn-0)); end;
d1W3 = 0; if (abs(nmp-0)<=nlp & abs(nmn+1)<=nlp); d1W3 = d1V(1+nlp+(nmp-0),1+nlp+(nmn+1)); end;
d2W1 = 0; if (abs(nmp-0)<=nlp & abs(nmn-1)<=nlp); d2W1 = d2V(1+nlp+(nmp-0),1+nlp+(nmn-1)); end;
d2W2 = 0; if (abs(nmp-0)<=nlp & abs(nmn-0)<=nlp); d2W2 = d2V(1+nlp+(nmp-0),1+nlp+(nmn-0)); end;
d2W3 = 0; if (abs(nmp-0)<=nlp & abs(nmn+1)<=nlp); d2W3 = d2V(1+nlp+(nmp-0),1+nlp+(nmn+1)); end;
tmp_C1 = C1(nl,nmn,nmp);
tmp_C2 = C2(nl,nmn,nmp);
tmp_C3 = C3(nl,nmn,nmp);
d0_tmp = ...
 + d0sb*d0cb*d0W1*tmp_C1 ...
 + d0cb*d0cb*d0W2*tmp_C2 ...
 - d0sb*d0sb*d0W2*tmp_C2 ...
 - d0sb*d0cb*d0W3*tmp_C3 ...
;
d1_tmp = ...
 + d1sb*d0cb*d0W1*tmp_C1 ...
 + d0sb*d1cb*d0W1*tmp_C1 ...
 + d0sb*d0cb*d1W1*tmp_C1 ...
 + d1cb*d0cb*d0W2*tmp_C2 ...
 + d0cb*d1cb*d0W2*tmp_C2 ...
 + d0cb*d0cb*d1W2*tmp_C2 ...
 - d1sb*d0sb*d0W2*tmp_C2 ...
 - d0sb*d1sb*d0W2*tmp_C2 ...
 - d0sb*d0sb*d1W2*tmp_C2 ...
 - d1sb*d0cb*d0W3*tmp_C3 ...
 - d0sb*d1cb*d0W3*tmp_C3 ...
 - d0sb*d0cb*d1W3*tmp_C3 ...
;
d2_tmp = ...
 + d2sb*d0cb*d0W1*tmp_C1 ...
 + d1sb*d1cb*d0W1*tmp_C1 ...
 + d1sb*d0cb*d1W1*tmp_C1 ...
 + d1sb*d1cb*d0W1*tmp_C1 ...
 + d0sb*d2cb*d0W1*tmp_C1 ...
 + d0sb*d1cb*d1W1*tmp_C1 ...
 + d1sb*d0cb*d1W1*tmp_C1 ...
 + d0sb*d1cb*d1W1*tmp_C1 ...
 + d0sb*d0cb*d2W1*tmp_C1 ...
 + d2cb*d0cb*d0W2*tmp_C2 ...
 + d1cb*d1cb*d0W2*tmp_C2 ...
 + d1cb*d0cb*d1W2*tmp_C2 ...
 + d1cb*d1cb*d0W2*tmp_C2 ...
 + d0cb*d2cb*d0W2*tmp_C2 ...
 + d0cb*d1cb*d1W2*tmp_C2 ...
 + d1cb*d0cb*d1W2*tmp_C2 ...
 + d0cb*d1cb*d1W2*tmp_C2 ...
 + d0cb*d0cb*d2W2*tmp_C2 ...
 - d2sb*d0sb*d0W2*tmp_C2 ...
 - d1sb*d1sb*d0W2*tmp_C2 ...
 - d1sb*d0sb*d1W2*tmp_C2 ...
 - d1sb*d1sb*d0W2*tmp_C2 ...
 - d0sb*d2sb*d0W2*tmp_C2 ...
 - d0sb*d1sb*d1W2*tmp_C2 ...
 - d1sb*d0sb*d1W2*tmp_C2 ...
 - d0sb*d1sb*d1W2*tmp_C2 ...
 - d0sb*d0sb*d2W2*tmp_C2 ...
 - d2sb*d0cb*d0W3*tmp_C3 ...
 - d1sb*d1cb*d0W3*tmp_C3 ...
 - d1sb*d0cb*d1W3*tmp_C3 ...
 - d1sb*d1cb*d0W3*tmp_C3 ...
 - d0sb*d2cb*d0W3*tmp_C3 ...
 - d0sb*d1cb*d1W3*tmp_C3 ...
 - d1sb*d0cb*d1W3*tmp_C3 ...
 - d0sb*d1cb*d1W3*tmp_C3 ...
 - d0sb*d0cb*d2W3*tmp_C3 ...
;
end;%if (nl~=-nmp & nl~=+nmp); % use recurrence C ;
%%%%%%%%%%%%%%%%;
if (verbose); disp(sprintf(' %% setting W(%d,%d) <-- %f (using %s %f %f %f)',nl+nmp,nl+nmn,d0_tmp,str_tmp,W1,W2,W3)); end;
d0W(1+nl+nmp,1+nl+nmn) = d0_tmp;
d1W(1+nl+nmp,1+nl+nmn) = d1_tmp;
d2W(1+nl+nmp,1+nl+nmn) = d2_tmp;
end;end;%for nmn = -nl:+nl; for nmp = -nl:+nl;
d0W_{1+nl} = d0W;
d1W_{1+nl} = d1W;
d2W_{1+nl} = d2W;
end;%for nl=1:n_l;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Fix condon-shortley-phase ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
for nl=1:n_l;
m_ = -nl:+nl;
s=(-1).^((m_<0).*m_); % needed to preserve condon-shortley phase. ;
S = transpose(s)*s;
d0W_{1+nl} = d0W_{1+nl}.*S;
d1W_{1+nl} = d1W_{1+nl}.*S;
d2W_{1+nl} = d2W_{1+nl}.*S;
end;%for nl=1:n_l;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function output = A1(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl+nmn-1);
denominator = (nl+nmp)*(nl+nmp-1);
output = sqrt(numerator/denominator);

function output = A2(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl-nmn);
denominator = (nl+nmp)*(nl+nmp-1);
output = sqrt(numerator/denominator);

function output = A3(nl,nmn,nmp);
numerator   = (nl-nmn)*(nl-nmn-1);
denominator = (nl+nmp)*(nl+nmp-1);
output = sqrt(numerator/denominator);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function output = B1(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl+nmn-1);
denominator = (nl-nmp)*(nl-nmp-1);
output = sqrt(numerator/denominator);

function output = B2(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl-nmn);
denominator = (nl-nmp)*(nl-nmp-1);
output = sqrt(numerator/denominator);

function output = B3(nl,nmn,nmp);
numerator   = (nl-nmn)*(nl-nmn-1);
denominator = (nl-nmp)*(nl-nmp-1);
output = sqrt(numerator/denominator);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function output = C1(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl+nmn-1);
denominator = (nl-nmp)*(nl+nmp);
output = sqrt(numerator/denominator);

function output = C2(nl,nmn,nmp);
numerator   = (nl+nmn)*(nl-nmn);
denominator = (nl-nmp)*(nl+nmp);
output = sqrt(numerator/denominator);

function output = C3(nl,nmn,nmp);
%numerator   = (nl-nmn)*(nl-nmn+1);
numerator   = (nl-nmn)*(nl-nmn-1);
denominator = (nl-nmp)*(nl+nmp);
output = sqrt(numerator/denominator);
