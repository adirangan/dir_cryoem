% tests out principled marching. ;
%%%%%%%%;
verbose=1;
xnodesr_ = MDA_read_r8('./dir_mdaT/xnodesr_.mda');
isph_start_ = MDA_read_i4('./dir_mdaT/isph_start_.mda');
nterms_sph_ = MDA_read_i4('./dir_mdaT/nterms_sph_.mda');
fname_a = './dir_mdaT/modsph_A_ori_.mda';
fname_b = './dir_mdaT/modsph_A_ori_.mda';
if (verbose) disp(sprintf(' %% loading a_k_Y_ <-- %s',fname_a)); end;
modsph_A_ori_ = MDA_read_c16(fname_a);
if (verbose) disp(sprintf(' %% loading b_k_Y_ <-- %s',fname_b)); end;
modsph_B_ori_ = MDA_read_c16(fname_b);
n_k_p_r = length(isph_start_);
k_p_r_ = xnodesr_;
k_p_r_max = max(k_p_r_);
dk_p_r_ = diff([0;k_p_r_]);
weight_k_p_r_ = 4*pi * k_p_r_.^2 .* dk_p_r_;
N_wavelength = 1.0;
l_max_ = nterms_sph_;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_); dWtdkd__l_max_max = 2*l_max_max;
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
f_k_Y_ = modsph_A_ori_;
g_k_Y_ = modsph_B_ori_;
%%%%%%%%;
n_polar_a = n_m_max; polar_a_ = linspace(-pi,pi,n_polar_a+1); polar_a_ = polar_a_(1:end-1);
n_azimu_b = n_m_max; azimu_b_ = linspace(0,2*pi,n_azimu_b+1); azimu_b_ = azimu_b_(1:end-1);
n_gamma_z = n_m_max; gamma_z_ = linspace(0,2*pi,n_gamma_z+1); gamma_z_ = gamma_z_(1:end-1);
%%%%%%%%;
A_ = zeros(n_k_p_r,n_k_p_r);
for nk_p_r_1=1:n_k_p_r;
for nk_p_r_2=nk_p_r_1:n_k_p_r;
tmp_l_max = min(l_max_(nk_p_r_1),l_max_(nk_p_r_2));
tmp_n_lm = (tmp_l_max+1).^2;
tmp_ij_1_ = n_lm_csum_(nk_p_r_1) + (1:tmp_n_lm);
tmp_ij_2_ = n_lm_csum_(nk_p_r_2) + (1:tmp_n_lm);
tmp_sum = 0;
for npolar_a=1:n_polar_a;
polar_a = polar_a_(npolar_a);
[X_base__] = register_spharm_to_spharm_single_beta_2(verbose,1,1,1,tmp_l_max,f_k_Y_(tmp_ij_1_),f_k_Y_(tmp_ij_2_),polar_a,0,[],0,[],[],[],[],[]);
tmp_sum = tmp_sum + sum(X_base__,'all')*abs(sin(polar_a)); %<-- need quadrature weight to ensure uniform measure over SO3.; 
end;%for npolar_a=1:n_polar_a;
if (verbose>1); disp(sprintf(' %% nk_p_r_1 %d nk_p_r_2 %d l_max %d,%d-->%d n_lm %d,%d-->%d --> sum %0.16f',nk_p_r_1,nk_p_r_2,l_max_(nk_p_r_1),l_max_(nk_p_r_2),tmp_l_max,n_lm_(nk_p_r_1),n_lm_(nk_p_r_2),tmp_n_lm,real(tmp_sum))); end;
A_(nk_p_r_1,nk_p_r_2) = tmp_sum;
A_(nk_p_r_2,nk_p_r_1) = conj(tmp_sum);
end;%for nk_p_r_2=nk_p_r_1:n_k_p_r;
end;%for nk_p_r_1=1:n_k_p_r;
%%%%%%%%;
[tmp_U_,tmp_S_,tmp_V_] = svds(A_,n_k_p_r);
f_U_Y_ = zeros(n_lm_max,n_k_p_r);
for nrank=1:n_k_p_r;
for nk_p_r=1:n_k_p_r;
tmp_l_max = l_max_(nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_ij_ = n_lm_csum_(nk_p_r) + (1:tmp_n_lm);
f_U_Y_(1:tmp_n_lm,nrank) = f_U_Y_(1:tmp_n_lm,nrank) + tmp_U_(nk_p_r,nrank)*f_k_Y_(tmp_ij_);
end;%for nk_p_r=1:n_k_p_r;
end;%for nrank=1:n_k_p_r;
%%%%%%%%;
B_ = zeros(n_k_p_r,n_k_p_r);
for nk_p_r_1=1:n_k_p_r;
for nk_p_r_2=nk_p_r_1:n_k_p_r;
tmp_l_max = l_max_max;
tmp_n_lm = (tmp_l_max+1).^2;
tmp_sum = 0;
for npolar_a=1:n_polar_a;
polar_a = polar_a_(npolar_a);
[X_base__] = register_spharm_to_spharm_single_beta_2(verbose,1,1,1,tmp_l_max,f_U_Y_(:,nk_p_r_1),f_U_Y_(:,nk_p_r_2),polar_a,0,[],0,[],[],[],[],[]);
tmp_sum = tmp_sum + sum(X_base__,'all')*abs(sin(polar_a)); %<-- need quadrature weight to ensure uniform measure over SO3.; 
end;%for npolar_a=1:n_polar_a;
if (verbose>1); disp(sprintf(' %% nk_p_r_1 %d nk_p_r_2 %d l_max %d,%d-->%d n_lm %d,%d-->%d --> sum %0.16f',nk_p_r_1,nk_p_r_2,l_max_(nk_p_r_1),l_max_(nk_p_r_2),tmp_l_max,n_lm_(nk_p_r_1),n_lm_(nk_p_r_2),tmp_n_lm,real(tmp_sum))); end;
B_(nk_p_r_1,nk_p_r_2) = tmp_sum;
B_(nk_p_r_2,nk_p_r_1) = conj(tmp_sum);
end;%for nk_p_r_2=nk_p_r_1:n_k_p_r;
end;%for nk_p_r_1=1:n_k_p_r;

