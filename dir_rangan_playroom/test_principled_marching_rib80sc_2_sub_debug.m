%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%;
% check to see if translations can be estimated (and appropriately updated) using only a few principal-modes. ;
% adding extra step where the initial MS phase limits the order of the test-function. ;
% adding extra step where initial data is determined by mp_init_0;
%%%%%%%%;
delta_sigma_use = delta_sigma;
svd_eps = 1e-3;
dat_n_order = 5;
dat_n_M = n_image_sub;
dat_n_UX_rank = 8;
dat_n_iteration = 16;
dat_rseed_ = [0]; n_dat_rseed = numel(dat_rseed_);
delta_r_max_factor_ = [0.75]; n_delta_r_max_factor = numel(delta_r_max_factor_);
order_limit_MS_ = -1; n_order_limit_MS = numel(order_limit_MS_);
%%%%%%%%;
for norder_limit_MS=0:n_order_limit_MS-1;
dat_order_limit_MS = order_limit_MS_(1+norder_limit_MS);
for ndelta_r_max_factor=0:n_delta_r_max_factor-1;
delta_r_max_factor = delta_r_max_factor_(1+ndelta_r_max_factor);
delta_r_max_use = delta_r_max_factor * delta_sigma_use*sqrt(log(20^2));
delta_r_max_upb = 2.0 * delta_sigma_use*sqrt(log(20^2));
if (delta_r_max_factor<=0); n_delta_v_requested=1; end;
if (delta_r_max_factor> 0) & (delta_r_max_factor<=1); n_delta_v_requested=64; end;
if (delta_r_max_factor> 1) & (delta_r_max_factor<=2); n_delta_v_requested=128; end;
if (dat_order_limit_MS>=0);
str_delta = sprintf('olut%.4dle%dv%.3dol%d',floor(1000*delta_r_max_use),round(-log(svd_eps)),n_delta_v_requested,dat_order_limit_MS);
end;%if (dat_order_limit_MS>=0);
if (dat_order_limit_MS< 0);
str_delta = sprintf('ut%.4dle%dv%.3d',floor(1000*delta_r_max_use),round(-log(svd_eps)),n_delta_v_requested);
end;%if (dat_order_limit_MS< 0);
dat_infix = sprintf('%s_%s',str_cost,str_delta);
for ndat_rseed=0:n_dat_rseed-1;
dat_rseed = dat_rseed_(1+ndat_rseed);
tmp_UX_ = sum(UX__(:,1:dat_n_UX_rank).^2,2);
tmp_UX_csum_ = cumsum(tmp_UX_,'reverse')/sum(tmp_UX_);
index_k_p_r_use = min(efind(tmp_UX_csum_<1e-2));
tmp_n_k_p_r = 1+index_k_p_r_use;
tmp_n_w_uni_ = n_w_max*ones(tmp_n_k_p_r,1);
dat_M_k_p__ = M_uni_k_p__(1:sum(tmp_n_w_uni_),:);
tmp_l_max_ = l_max_(1:tmp_n_k_p_r);
tmp_n_lm_ = (tmp_l_max_+1).^2;
tmp_n_lm_max = max(tmp_n_lm_);
tmp_n_lm_sum = sum(tmp_n_lm_);
tmp_n_lm_csum_ = cumsum([0;tmp_n_lm_]);
tmp_a_CTF_UX_Y_quad__ = zeros(tmp_n_lm_max,dat_n_UX_rank);
for dat_nUX_rank=0:dat_n_UX_rank-1;
for tmp_nk_p_r=0:tmp_n_k_p_r-1;
tmp_l_max = tmp_l_max_(1+tmp_nk_p_r);
tmp_n_lm = (tmp_l_max+1).^2;
tmp_index_ = tmp_n_lm_csum_(1+tmp_nk_p_r) + (0:tmp_n_lm-1);
tmp_a_CTF_UX_Y_quad__(1:tmp_n_lm,1+dat_nUX_rank) = ...
tmp_a_CTF_UX_Y_quad__(1:tmp_n_lm,1+dat_nUX_rank) ...
+ UX__(1+tmp_nk_p_r,1+dat_nUX_rank)*X_weight_r_(1+tmp_nk_p_r)*a_k_Y_quad_(1+tmp_index_)*CTF_avg_k_p_r_(1+tmp_nk_p_r);
%<-- use average CTF here, under the assumption that a_CTF_UX_Y_quad_ will be used alone. ;
end;%for tmp_nk_p_r=0:tmp_n_k_p_r-1;
end;%for dat_nUX_rank=0:dat_n_UX_rank-1;
dat_f_rand = 0.05; dat_flag_plot=0; dat_flag_mp_init=0;
if ~flag_skip_to_plot;
tpmutam_experimental_0_debug( ...
 dat_infix ...
,dat_rseed ...
,dat_n_M ...
,dat_M_k_p__ ...
,dat_n_UX_rank ...
,dat_n_iteration ...
,dat_n_order ...
,dir_trunk ...
,tmp_n_k_p_r ...
,k_p_r_(1:tmp_n_k_p_r) ...
,k_p_r_(tmp_n_k_p_r) ...
,tmp_n_w_uni_ ...
,weight_3d_k_p_r_(1:tmp_n_k_p_r) ...
,weight_2d_k_p_r_(1:tmp_n_k_p_r) ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,delta_r_max_use ...
,delta_r_max_upb ...
,svd_eps ...
,n_delta_v_requested ...
,n_CTF_rank ...
,CTF_idx_ ...
,CTF_k_p_r__(1:tmp_n_k_p_r,:) ...
,l_max_(1:tmp_n_k_p_r) ...
,UX__(1:tmp_n_k_p_r,1:dat_n_UX_rank) ...
,X_weight_r_(1:tmp_n_k_p_r) ...
,tmp_a_CTF_UX_Y_quad__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,dat_f_rand ...
,dat_flag_plot ...
,dat_order_limit_MS ...
,dat_flag_mp_init ...
);
end;%if ~flag_skip_to_plot;
end;%for ndat_rseed=0:n_dat_rseed-1;
end;%for ndelta_r_max_factor=0:n_delta_r_max_factor-1;
end;%for norder_limit_MS=0:n_order_limit_MS-1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
