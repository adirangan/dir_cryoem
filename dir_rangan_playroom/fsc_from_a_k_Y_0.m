function ...
[ ...
 parameter ...
,fsc_k_ ...
,X_best ...
,flag_flip ...
,polar_a_best ...
,azimu_b_best ...
,gamma_z_best ...
,delta_best_ ...
,a_k_Y_best_ ...
,b_k_Y_best_ ...
] = ...
fsc_from_a_k_Y_0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,a_k_Y_ ...
,b_k_Y_ ...
);
%{

%%%%%%%%;
% Fourier-shell-correlation. ;
% Test with trpv1. ;
%%%%%%%%;
if ~exist('dir_pm','var'); test_pm_trpv1c_9b; end;
parameter_fsc = struct('type','parameter');
parameter_fsc.flag_register = 0;
[ ...
 parameter_fsc ...
,fsc_r0_k_ ...
,X_best_r0 ...
] = ...
fsc_from_a_k_Y_0( ...
 parameter_fsc ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,c_k_Y_reco_ ...
);
parameter_fsc = struct('type','parameter');
parameter_fsc.flag_register = 1;
[ ...
 parameter_fsc ...
,fsc_r1_k_ ...
,X_best_r1 ...
,flag_flip_r1 ...
,polar_a_best_r1 ...
,azimu_b_best_r1 ...
,gamma_z_best_r1 ...
,delta_best_r1_ ...
,a_k_Y_best_r1_ ...
,c_k_Y_best_r1_ ...
] = ...
fsc_from_a_k_Y_0( ...
 parameter_fsc ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,0 ...
,l_max_ ...
,a_k_Y_quad_ ...
,c_k_Y_reco_ ...
);
 figure(1+nf);nf=nf+1;
 clf; figmed;
 subplot(1,2,1);
 k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
 k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
 hold on;
 plot(k_Ainv_p_r_,real(fsc_r0_k_),'b-',k_Ainv_p_r_,real(fsc_r1_k_),'r-',k_Ainv_p_r_,0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
 xlim([0,k_Ainv_p_r_max]);
 ylim([0,1]);
 xlabel('k'); ylabel('fsc');
 hold off;
 subplot(1,2,2);
 kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
 hold on;
 plot(log10(kinv_A_p_r_),real(fsc_r0_k_),'b-',log10(kinv_A_p_r_),real(fsc_r1_k_),'r-',log10(kinv_A_p_r_),0.5*ones(size(k_p_r_)),'k:','LineWidth',3);
 xlim([0,+2]);
 ylim([0,1]);
 xlabel('log10(l = 1/k)'); ylabel('fsc');
 hold off;
  
  %}

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;

if isempty(parameter); parameter = struct('type','parameter'); end;
if ~isfield(parameter,'verbose'); parameter.verbose=0; end;
if ~isfield(parameter,'flag_register'); parameter.flag_register=0; end;
verbose = parameter.verbose;
flag_register = parameter.flag_register;

[ ...
 X0 ...
,C0 ...
] = ...
register_spharm_to_spharm_3( ...
 verbose ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ ...
,b_k_Y_ ...
);
X_best = C0; %<-- correlation. ;
flag_flip = 0;
polar_a_best = 0;
azimu_b_best = 0;
gamma_z_best = 0;
delta_best_ = [0;0;0];
a_k_Y_best_ = a_k_Y_;
b_k_Y_best_ = b_k_Y_;
%%%%%%%%;
% register volumes. ;
%%%%%%%%;
if flag_register;
[ ...
 X_best ...
,flag_flip ...
,polar_a_best ...
,azimu_b_best ...
,gamma_z_best ...
,delta_best_ ...
,a_k_Y_best_ ...
,b_k_Y_best_ ...
] = ...
register_spharm_to_spharm_wigner_wrap_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,a_k_Y_ ...
,b_k_Y_ ...
);
end;%if flag_register;

%%%%%%%%;
n_lm_ = (l_max_+1).^2;
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_);
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
%%%%%%%%;
fsc_k_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + [0:n_lm-1];
a_Y_ = a_k_Y_best_(1+tmp_index_);
b_Y_ = b_k_Y_best_(1+tmp_index_);
a_Y_ = a_Y_ - mean(a_Y_); a_Y_ = a_Y_/max(1e-12,fnorm(a_Y_)); %<-- uses the fact that spherical-harmonic basis is orthonormal on a fixed shell. ;
b_Y_ = b_Y_ - mean(b_Y_); b_Y_ = b_Y_/max(1e-12,fnorm(b_Y_)); %<-- uses the fact that spherical-harmonic basis is orthonormal on a fixed shell. ;
fsc = ctranspose(a_Y_)*b_Y_;
fsc_k_(1+nk_p_r) = fsc;
end;%for nk_p_r=0:n_k_p_r-1;

