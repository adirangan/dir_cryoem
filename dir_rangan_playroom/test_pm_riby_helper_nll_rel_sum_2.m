function ...
[ ...
 tmp_nll_raw_sum ...
] = ...
test_pm_riby_helper_nll_rel_sum_2( ...
 k_p_r_max ...
,n_gamma_z ...
,n_S ...
,viewing_weight_all_ ...
,tmp_Q1S1_zS__ ...
,tmp_Q1M1_zS__ ...
,tmp_Q2M1_zS__ ...
,Q0S2_S_ ...
,Q0M1_S_ ...
,Q0S1_S_ ...
,tmp_log_inten ...
,tmp_raw_backg ...
,tmp_log_sigma ...
);

str_thisfunction = 'test_pm_riby_helper_nll_rel_sum_2';

na=0;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); n_gamma_z=[]; end; na=na+1;
if (nargin<1+na); n_S=[]; end; na=na+1;
if (nargin<1+na); viewing_weight_all_=[]; end; na=na+1;
if (nargin<1+na); tmp_Q1S1_zS__=[]; end; na=na+1;
if (nargin<1+na); tmp_Q1M1_zS__=[]; end; na=na+1;
if (nargin<1+na); tmp_Q2M1_zS__=[]; end; na=na+1;
if (nargin<1+na); Q0S2_S_=[]; end; na=na+1;
if (nargin<1+na); Q0M1_S_=[]; end; na=na+1;
if (nargin<1+na); Q0S1_S_=[]; end; na=na+1;
if (nargin<1+na); tmp_log_inten=[]; end; na=na+1;
if (nargin<1+na); tmp_raw_backg=[]; end; na=na+1;
if (nargin<1+na); tmp_log_sigma=[]; end; na=na+1;

tmp_inten = exp(tmp_log_inten);
tmp_backg =    (tmp_raw_backg);
tmp_sigma = exp(tmp_log_sigma);

%%%%%%%%;
% raw likelihood integrated. ;
%%%%%%%%;
tmp_err_raw_zS__ = bsxfun(@plus,tmp_Q2M1_zS__,bsxfun(@plus,tmp_inten.^2*Q0S2_S_,bsxfun(@plus,tmp_backg.^2*Q0M1_S_,bsxfun(@plus,-2*tmp_inten.*tmp_Q1S1_zS__,bsxfun(@plus,-2*tmp_backg.*tmp_Q1M1_zS__,+2*tmp_inten.*tmp_backg.*Q0S1_S_)))));
tmp_nll_raw_zS__ = bsxfun(@plus,+Q0M1_S_*(0.5*log(2*pi)+log(tmp_sigma)),+0.5./max(1e-12,tmp_sigma.^2)*tmp_err_raw_zS__);
tmp_nll_raw_min = min(tmp_nll_raw_zS__,[],'all');
tmp_nll_raw_diff_zS__ = tmp_nll_raw_zS__-tmp_nll_raw_min;
tmp_exp_raw_diff_sum = sum( exp(-squeeze(tmp_nll_raw_diff_zS__))*viewing_weight_all_(:) / (4*pi*k_p_r_max^2) ) / max(1,n_gamma_z);
tmp_nll_raw_sum = -log(tmp_exp_raw_diff_sum) + tmp_nll_raw_min;

