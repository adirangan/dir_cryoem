%%%%%%%%;
% indices. ;
%%%%%%%%;
n_k_all = ampm_.n_k_all;
n_k_all_csum_ = ampm_.n_k_all_csum_;
k_p_r_all_ = ampm_.k_p_r_all_;
k_p_azimu_b_all_ = ampm_.k_p_azimu_b_all_;
k_p_polar_a_all_ = ampm_.k_p_polar_a_all_;
weight_3d_k_all_ = ampm_.weight_3d_k_all_;
weight_shell_k_ = ampm_.weight_shell_k_;
n_k_p_r = ampm_.n_k_p_r;
k_p_r_ = ampm_.k_p_r_;
weight_3d_k_p_r_ = ampm_.weight_3d_k_p_r_;
l_max_ = ampm_.l_max_;
%%%%%%%%;
n_k_all = ampm_.n_k_all;
weight_3d_k_all_ = ampm_.weight_3d_k_all_;
k_c_0_all_ = ampm_.k_c_0_all_;
k_c_1_all_ = ampm_.k_c_1_all_;
k_c_2_all_ = ampm_.k_c_2_all_;
k_p_r_max = ampm_.k_p_r_max;
n_x_M_u = ampm_.n_x_u;
n_xxx_u = ampm_.n_xxx_u;
xxx_u_weight_ = ampm_.xxx_u_weight_;
x_u_0___ = ampm_.x_u_0___;
x_u_1___ = ampm_.x_u_1___;
x_u_2___ = ampm_.x_u_2___;
x_p_r_max = ampm_.x_p_r_max;
%%%%%%%%;
n_lm_ = ampm_.n_lm_;
n_lm_max = ampm_.n_lm_max;
n_lm_sum = ampm_.n_lm_sum;
n_lm_csum_ = ampm_.n_lm_csum_;
l_max_max = ampm_.l_max_max;
m_max_ = ampm_.m_max_;
n_m_max = ampm_.n_m_max;
%%%%%%%%;
x_p_r_max = half_diameter_x_c;
x_u_0_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_1_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
x_u_2_ = linspace(-x_p_r_max,+x_p_r_max,n_x_u_pack);
[x_u_0___,x_u_1___,x_u_2___] = ndgrid(x_u_0_,x_u_1_,x_u_2_); n_xxx_u = n_x_u_pack^3;
x_u_r___ = sqrt(x_u_0___.^2 + x_u_1___.^2 + x_u_2___.^2);
k_Ainv_p_r_ = (2*k_p_r_)/(n_x_M_u * Pixel_Spacing);
k_Ainv_p_r_max = (2*k_p_r_max)/(n_x_M_u * Pixel_Spacing);
kinv_A_p_r_ = 1./max(1e-12,k_Ainv_p_r_);
sample_sphere_k_eq_d = 1/(2*pi);
%%%%%%%%;
a_x_u_base_ = ampm_.a_x_u_base_;
a_x_u_reco_ = ampm_.a_x_u_reco_;

%%%%%%%%;
% reconstruct a_k_Y_ampm_alig_ by rotating a_k_Y_ampm_. ;
%%%%%%%%;
a_k_Y_ampm_ = ampm_.a_k_Y_ampm_yka__(:,1+na);
[ ... 
 a_k_Y_ampm_alig_ ...
,corr_a_k_Y_quad_vs_a_k_Y_ampm_alig ...
] = ...
spharm_register_and_rotate_2( ...
 ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_quad_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+na) ...
,0 ...
,ampm_.X_best_ampm_ia__(end,1+na) ...
,ampm_.X_best_flag_flip_ampm_ia__(end,1+na) ...
,ampm_.polar_a_best_ampm_ia__(end,1+na) ...
,ampm_.azimu_b_best_ampm_ia__(end,1+na) ...
,ampm_.gamma_z_best_ampm_ia__(end,1+na) ...
,ampm_.delta_best_ampm_dia__(1+0,end,1+na) ...
,ampm_.delta_best_ampm_dia__(1+1,end,1+na) ...
,ampm_.delta_best_ampm_dia__(1+2,end,1+na) ...
);
%%%%%%%%;
% convert a_k_Y_ampm_alig_ to a_k_p_ampm_alig_. ;
%%%%%%%%;
if ~exist('Ylm_klma___','var'); Ylm_klma___ = []; end;
tmp_t = tic();
[ ...
 a_k_p_ampm_alig_  ...
,Ylm_klma___ ...
] =  ...
convert_spharm_to_k_p_3( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ampm_alig_ ...
,Ylm_klma___ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% convert_spharm_to_k_p_3: %0.6fs',tmp_t));
%%%%%%%%;
% Then to a_x_u_ampm_alig_. ;
%%%%%%%%;
tmp_t = tic(); 
[ ...
 a_x_u_ampm_alig_ ...
] = ...
convert_k_p_to_x_c_1( ...
 0*flag_verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,a_k_p_ampm_alig_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% convert_k_p_to_x_c_1: %0.6fs',tmp_t));
%%%%%%%%;
% Now calculate crop for ampm. ;
%%%%%%%%;
n_crop = n_x_u_pack;
corr_base_vs_ampm = real(corr( a_x_u_base_(:) , a_x_u_ampm_alig_(:) ));
corr_reco_vs_ampm = real(corr( a_x_u_reco_(:) , a_x_u_ampm_alig_(:) ));
corr_full_base_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_crop_base_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_full_reco_vs_crop_ampm_x_ = zeros(n_crop,1);
corr_crop_reco_vs_crop_ampm_x_ = zeros(n_crop,1);
for ncrop=0:n_crop-1;
r_crop = 1.0*ncrop/(n_crop-1);
tmp_m_x_u_ = reshape(x_u_r___<=r_crop,[n_xxx_u,1]);
corr_crop_base_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_base_(:).*tmp_m_x_u_ , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_full_base_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_base_(:)             , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_crop_reco_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_reco_(:).*tmp_m_x_u_ , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
corr_full_reco_vs_crop_ampm_x_(1+ncrop) = real(corr( a_x_u_reco_(:)             , a_x_u_ampm_alig_(:).*tmp_m_x_u_ ));
end;%for ncrop=0:n_crop-1;
%%%%%%%%;

load_XC_fname_mat_ = load(XC_fname_mat);
load_XC_fname_align_a_k_Y_mat_ = load(sprintf('%s.mat',XC_fname_align_a_k_Y_pre));

%%%%%%%%;
% reconstruct a_k_Y_ampm_ring_alig_ by rotating a_k_Y_ampm_ring_. ;
%%%%%%%%;
a_k_Y_ampm_ring_ = load_XC_fname_mat_.a_k_Y_reco_yki__(:,end);
[ ... 
 a_k_Y_ampm_ring_alig_ ...
,corr_a_k_Y_quad_vs_a_k_Y_ampm_ring_alig ...
] = ...
spharm_register_and_rotate_2( ...
 ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_quad_ ...
,a_k_Y_ampm_ring_ ...
,0 ...
,load_XC_fname_align_a_k_Y_mat_.X_best_(end) ...
,load_XC_fname_align_a_k_Y_mat_.X_best_flag_flip_(end) ...
,load_XC_fname_align_a_k_Y_mat_.polar_a_best_(end) ...
,load_XC_fname_align_a_k_Y_mat_.azimu_b_best_(end) ...
,load_XC_fname_align_a_k_Y_mat_.gamma_z_best_(end) ...
,load_XC_fname_align_a_k_Y_mat_.delta_best__(1+0,end) ...
,load_XC_fname_align_a_k_Y_mat_.delta_best__(1+1,end) ...
,load_XC_fname_align_a_k_Y_mat_.delta_best__(1+2,end) ...
);
%%%%%%%%;
% convert a_k_Y_ampm_ring_alig_ to a_k_p_ampm_ring_alig_. ;
%%%%%%%%;
if ~exist('Ylm_klma___','var'); Ylm_klma___ = []; end;
tmp_t = tic();
[ ...
 a_k_p_ampm_ring_alig_  ...
,Ylm_klma___ ...
] =  ...
convert_spharm_to_k_p_3( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_ampm_ring_alig_ ...
,Ylm_klma___ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% convert_spharm_to_k_p_3: %0.6fs',tmp_t));
%%%%%%%%;
% Then to a_x_u_ampm_ring_alig_. ;
%%%%%%%%;
tmp_t = tic(); 
[ ...
 a_x_u_ampm_ring_alig_ ...
] = ...
convert_k_p_to_x_c_1( ...
 0*flag_verbose ...
,n_k_all ...
,weight_3d_k_all_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
,k_p_r_max ...
,n_xxx_u ...
,xxx_u_weight_ ...
,x_u_0___ ...
,x_u_1___ ...
,x_u_2___ ...
,x_p_r_max ...
,a_k_p_ampm_ring_alig_ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% convert_k_p_to_x_c_1: %0.6fs',tmp_t));
%%%%%%%%;
% Now calculate crop for ampm_ring. ;
%%%%%%%%;
n_crop = n_x_u_pack;
corr_base_vs_ampm_ring = real(corr( a_x_u_base_(:) , a_x_u_ampm_ring_alig_(:) ));
corr_reco_vs_ampm_ring = real(corr( a_x_u_reco_(:) , a_x_u_ampm_ring_alig_(:) ));
corr_full_base_vs_crop_ampm_ring_x_ = zeros(n_crop,1);
corr_crop_base_vs_crop_ampm_ring_x_ = zeros(n_crop,1);
corr_full_reco_vs_crop_ampm_ring_x_ = zeros(n_crop,1);
corr_crop_reco_vs_crop_ampm_ring_x_ = zeros(n_crop,1);
for ncrop=0:n_crop-1;
r_crop = 1.0*ncrop/(n_crop-1);
tmp_m_x_u_ = reshape(x_u_r___<=r_crop,[n_xxx_u,1]);
corr_crop_base_vs_crop_ampm_ring_x_(1+ncrop) = real(corr( a_x_u_base_(:).*tmp_m_x_u_ , a_x_u_ampm_ring_alig_(:).*tmp_m_x_u_ ));
corr_full_base_vs_crop_ampm_ring_x_(1+ncrop) = real(corr( a_x_u_base_(:)             , a_x_u_ampm_ring_alig_(:).*tmp_m_x_u_ ));
corr_crop_reco_vs_crop_ampm_ring_x_(1+ncrop) = real(corr( a_x_u_reco_(:).*tmp_m_x_u_ , a_x_u_ampm_ring_alig_(:).*tmp_m_x_u_ ));
corr_full_reco_vs_crop_ampm_ring_x_(1+ncrop) = real(corr( a_x_u_reco_(:)             , a_x_u_ampm_ring_alig_(:).*tmp_m_x_u_ ));
end;%for ncrop=0:n_crop-1;
%%%%%%%%;


