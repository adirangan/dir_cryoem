function ...
[ ...
 global_parameter ...
] = ...
test_pm_24_combine_0( ...
 global_parameter ...
,fname_prefix ...
,dir_nopath_data_star ...
,Pixel_Spacing ...
,fname_nopath_volume ...
,fname_nopath_star ...
);

%{
if (nargin<1);
table_data__ = { ...
%'p28hRPT1_x0' , 'p28hRP' , 0.98 , 'emd_8674.map' , 'T1.star' ; ...
%'trpv1_x0' , 'trpv1' , 1.2156 , 'emd_5778.mrc' , 'tv1_relion_data.star' ; ...
%'rib80s_x0' , 'rib80s' , 1.34 , 'emd_2660.mrc' , 'shiny_2sets.star' ; ...
%'MlaFEDB_x0' , 'MlaFEDB' , 0.832 , 'emd_22116.map' , 'Empiar_10536_00_to_23.star' ; ...
%'LetB1_x0' , 'LetB1' , 1.31 , 'emd_20993.map' , 'job_569_model_1.star' ; ...
%'TMEM16F_x0' , 'TMEM16F' , 1.059 , 'emd_20244.map' , 'All_8192.star' ; ...
%'LSUbl17dep_x0' , 'LSUbl17dep' , 1.31 , 'emd_8434.map' , 'Parameters.star' ; ...
'ps1_x0' , 'precatalytic_spliceosome' , 1.699 , 'consensus_half1_class001.mrc' , 'consensus_data.star' ; ...
%'LetB1_x0' , 'LetB1' , 1.31 , 'emd_20993.map' , 'job_569_model_1_350MB.star' ; ...
};
n_experiment = size(table_data__,1);
%%%%%%%%;
tmp_ = clock;rng(tmp_(end));
for nexperiment=(randperm(n_experiment)-1);
na=0;
fname_prefix = table_data__{1+nexperiment,1+na}; na=na+1;
dir_nopath_data_star = table_data__{1+nexperiment,1+na}; na=na+1;
Pixel_Spacing = table_data__{1+nexperiment,1+na}; na=na+1;
fname_nopath_volume = table_data__{1+nexperiment,1+na}; na=na+1;
fname_nopath_star = table_data__{1+nexperiment,1+na}; na=na+1;
disp(sprintf(' %% nexperiment %d/%d: %16s %16s %0.3f %16s %32s' ...
	     ,nexperiment,n_experiment ...
	     ,fname_prefix,dir_nopath_data_star,Pixel_Spacing,fname_nopath_volume,fname_nopath_star ...
	     ));
global_parameter = struct('type','parameter');
if (strcmp(dir_nopath_data_star,'LSUbl17dep')); global_parameter.flag_invert = 1; end;
if (strcmp(dir_nopath_data_star,'LSUbl17dep')); global_parameter.flag_center_image = 1; end;
if (strcmp(dir_nopath_data_star,'precatalytic_spliceosome')); global_parameter.flag_center_image = 1; end;
global_parameter = ...
test_pm_24_combine_0( ...
 global_parameter ...
,fname_prefix ...
,dir_nopath_data_star ...
,Pixel_Spacing ...
,fname_nopath_volume ...
,fname_nopath_star ...
);
end;%for nexperiment=0:n_experiment-1;
%%%%%%%%;
disp('returning');return;
end;%if (nargin<1);
 %}

% try: ;
if (nargin<1);
nf=0;
nx=0;
global_parameter=struct('type','parameter');
global_parameter.flag_center_image = 1;
global_parameter.nM_start = 1024*nx;
global_parameter.nM_final = global_parameter.nM_start + 1024*8 - 1;
global_parameter.n_x_u_pack_0in = 64;
global_parameter.k_p_r_max_0in = 48/(2*pi);
global_parameter.delta_sigma_use_0in = 0.05;
global_parameter.dat_rseed_0in_ = [0:2];
global_parameter.rank_pm_0in_ = [16,18];
global_parameter.tolerance_pm_0in_ = 0.1.^[2:0.5:3];
fname_prefix=sprintf('ps1_x%dto%d_combine',floor(global_parameter.nM_start/1024),floor(global_parameter.nM_final/1024));
dir_nopath_data_star='precatalytic_spliceosome';
Pixel_Spacing=1.699;
fname_nopath_volume='consensus_half1_class001.mrc';
fname_nopath_star='consensus_data.star';
test_pm_24_combine_0( ...
	    global_parameter ...
	    ,fname_prefix ...
	    ,dir_nopath_data_star ...
	    ,Pixel_Spacing ...
	    ,fname_nopath_volume ...
	    ,fname_nopath_star ...
	    );
disp('returning');return;
end;%if (nargin<1);

%%%%%%%%;
platform = 'rusty';
if (exist('platform.type','file')); fp=fopen('platform.type'); platform = fscanf(fp,'%s'); fclose(fp); end;
if (strcmp(platform,'access1')); setup_access1; string_root = 'data'; end;
if (strcmp(platform,'OptiPlex')); setup_OptiPlex; string_root = 'home'; end;
if (strcmp(platform,'eval1')); setup_eval1; string_root = 'home'; end;
if (strcmp(platform,'rusty')); setup_rusty; string_root = 'mnt/home'; end;
%%%%%%%%;

if isempty(global_parameter); global_parameter = struct('type','parameter'); end;
if (~isfield(global_parameter,'flag_verbose')); global_parameter.flag_verbose = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_recalc')); global_parameter.flag_recalc = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_replot')); global_parameter.flag_replot = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_volume')); global_parameter.flag_center_volume = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_center_image')); global_parameter.flag_center_image = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_invert')); global_parameter.flag_invert = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'tolerance_master')); global_parameter.tolerance_master = 1e-2; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'nM_start')); global_parameter.nM_start = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'nM_final')); global_parameter.nM_final = 1024; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'n_x_u_pack_0in')); global_parameter.n_x_u_pack_0in = 64; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'k_p_r_max_0in')); global_parameter.k_p_r_max_0in = 48/(2*pi); end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'date_diff_threshold_0in')); global_parameter.date_diff_threshold_0in = 0.25; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_force_create_mat_0in')); global_parameter.flag_force_create_mat_0in = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_force_create_tmp_0in')); global_parameter.flag_force_create_tmp_0in = 0; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'flag_alternate_MS_vs_SM_0in_')); global_parameter.flag_alternate_MS_vs_SM_0in_ = [1]; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'delta_sigma_use_0in')); global_parameter.delta_sigma_use_0in = []; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'dat_rseed_0in_')); global_parameter.dat_rseed_0in_ = [0]; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'tolerance_pm_0in_')); global_parameter.tolerance_pm_0in_ = []; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'rank_pm_0in_')); global_parameter.rank_pm_0in_ = [16]; end; %<-- parameter_bookmark. ;
if (~isfield(global_parameter,'delta_r_max_factor_0in_')); global_parameter.delta_r_max_factor_0in_ = [1.00]; end; %<-- parameter_bookmark. ;
flag_verbose = global_parameter.flag_verbose;
flag_recalc = global_parameter.flag_recalc;
flag_replot = global_parameter.flag_replot;
flag_center_volume = global_parameter.flag_center_volume;
flag_center_image = global_parameter.flag_center_image;
flag_invert = global_parameter.flag_invert;
tolerance_master = global_parameter.tolerance_master;
nM_start = global_parameter.nM_start;
nM_final = global_parameter.nM_final;
n_x_u_pack_0in = global_parameter.n_x_u_pack_0in;
k_p_r_max_0in = global_parameter.k_p_r_max_0in;
date_diff_threshold_0in = global_parameter.date_diff_threshold_0in;
flag_force_create_mat_0in = global_parameter.flag_force_create_mat_0in;
flag_force_create_tmp_0in = global_parameter.flag_force_create_tmp_0in;
flag_alternate_MS_vs_SM_0in_ = global_parameter.flag_alternate_MS_vs_SM_0in_;
delta_sigma_use_0in = global_parameter.delta_sigma_use_0in;
dat_rseed_0in_ = global_parameter.dat_rseed_0in_;
tolerance_pm_0in_ = global_parameter.tolerance_pm_0in_;
rank_pm_0in_ = global_parameter.rank_pm_0in_;
delta_r_max_factor_0in_ = global_parameter.delta_r_max_factor_0in_;

nf=0;
if (flag_verbose); disp(sprintf(' %% [entering test_pm_24_combine_0]')); end;

%%%%%%%%;
fname_prefix_xfix = sprintf('%s',fname_prefix);
dir_pm = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_pm',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_pm)); mkdir(sprintf('%s_mat',dir_pm)); end;
if (~exist(sprintf('%s_jpg',dir_pm),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_pm)); mkdir(sprintf('%s_jpg',dir_pm)); end;
dir_relion = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_relion',string_root,fname_prefix_xfix);
if (~exist(sprintf('%s_mat',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_mat',dir_relion)); mkdir(sprintf('%s_mat',dir_relion)); end;
if (~exist(sprintf('%s_jpg',dir_relion),'dir')); disp(sprintf(' %% mkdir %s_jpg',dir_relion)); mkdir(sprintf('%s_jpg',dir_relion)); end;
string_rusty_root = 'mnt/home';
dir_relion_bin = sprintf('/%s/rangan/relion/build/bin',string_rusty_root);
dir_data_star = sprintf('/%s/rangan/dir_cryoem/dir_%s',string_root,dir_nopath_data_star);
%%%%%%%%;
% all classes and subclasses. ;
%%%%%%%%;
fname_nopath_volume_ = ...
{ ...
 fname_nopath_volume ... %<-- class 0. ;
};
n_volume = numel(fname_nopath_volume_);
flag_het = 0; if (n_volume> 1); flag_het = 1; end;

%%%%%%%%;
% loading the individual runs. ;
%%%%%%%%;
narm_min = floor(nM_start/1024); %<-- assumes that narm_min==0;
if (narm_min~=0); disp(sprintf(' %% Warning, narm_min %d ~= 0 in test_pm_24_combine_0',narm_min)); end;
narm_max = floor(nM_final/1024);
narm_ = narm_min:narm_max; n_arm = numel(narm_);
fname_prefix_narm_ = cell(n_arm,1);
fname_prefix_sub = fname_prefix(1:strfind(fname_prefix,'_x0to')-1);
dir_pm_narm_ = cell(n_arm,1);
dir_pm_mat_narm_ = cell(n_arm,1);
for narm=0:n_arm-1;
fname_prefix_narm_{1+narm} = sprintf('%s_x%d',fname_prefix_sub,narm);
dir_pm_narm_{1+narm} = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_pm',string_root,fname_prefix_narm_{1+narm});
dir_pm_mat_narm_{1+narm} = sprintf('/%s/rangan/dir_cryoem/dir_%s/dir_pm_mat',string_root,fname_prefix_narm_{1+narm});
if (~exist(dir_pm_mat_narm_{1+narm},'dir')); disp(sprintf(' %% Warning, %s not found in test_pm_24_combine_0',dir_pm_mat_narm_{1+narm})); end;
end;%for narm=0:n_arm-1;

str_filter = 'X_2d_xcor_d0_a1t0122p*';
ampm__ = cell(n_arm,1);
for narm=0:n_arm-1;
if (flag_verbose); disp(sprintf(' %% narm %d/%d',narm,n_arm)); end;
global_parameter.flag_store_S_k_p__ = 1;
global_parameter.flag_store_M_k_p__ = 1;
[~,ampm__{1+narm}] ...
= ...
ampm_fromdisk_0( ...
 global_parameter ...
,dir_pm_narm_{1+narm} ...
,str_filter ...
);
end;%for narm=0:n_arm-1;

flag_check=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Test volume registration. ;
% Uses spharm_register_and_rotate_2, ;
% which in turn uses register_spharm_to_spharm_wigner_wrap_1. ;
%%%%%%%%;
narm=4;
ampm_ = ampm__{1+narm};
%%%%%%%%;
tmp_t = tic;
[ ... 
  tmp_a_x_u_0_ ...
] = ...
convert_spharm_to_x_c_3( ...
 ampm_.k_eq_d ...
,ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+0) ...
,ampm_.half_diameter_x_c ...
,ampm_.n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% tmp_a_x_u_0_ from a_k_Y_reco_: %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic;
[ ... 
  tmp_a_x_u_1_ ...
] = ...
convert_spharm_to_x_c_3( ...
 ampm_.k_eq_d ...
,ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+1) ...
,ampm_.half_diameter_x_c ...
,ampm_.n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% tmp_a_x_u_1_ from a_k_Y_reco_: %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic;
N_wavelength = 0.0;
[ ...
 tmp_X_best ...
,tmp_flag_flip ...
,tmp_euler_polar_a_best ...
,tmp_euler_azimu_b_best ...
,tmp_euler_gamma_z_best ...
,tmp_delta_best_ ...
,~ ...
,~ ...
] = ...
register_spharm_to_spharm_wigner_wrap_1( ...
 ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,N_wavelength ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+0) ...
,ampm_.a_k_Y_ampm_yka__(:,1+1) ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% volume registration: %0.6fs',tmp_t)); end;
tmp_delta_x_best = tmp_delta_best_(1+0);
tmp_delta_y_best = tmp_delta_best_(1+1);
tmp_delta_z_best = tmp_delta_best_(1+2);
%%%%%%%%;
[ ... 
 tmp_a_k_Y_reco_1_ ...
,tmp_X_best ...
,tmp_flag_flip ...
,tmp_euler_polar_a_best ...
,tmp_euler_azimu_b_best ...
,tmp_euler_gamma_z_best ...
,tmp_delta_x_best ...
,tmp_delta_y_best ...
,tmp_delta_z_best ...
] = ...
spharm_register_and_rotate_2( ...
 ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+0) ...
,ampm_.a_k_Y_ampm_yka__(:,1+1) ...
,N_wavelength ...
,tmp_X_best ...
,tmp_flag_flip ...
,tmp_euler_polar_a_best ...
,tmp_euler_azimu_b_best ...
,tmp_euler_gamma_z_best ...
,tmp_delta_x_best ...
,tmp_delta_y_best ...
,tmp_delta_z_best ...
);
%%%%%%%%;
tmp_t = tic;
[ ... 
  tmp_b_x_u_1_ ...
] = ...
convert_spharm_to_x_c_3( ...
 ampm_.k_eq_d ...
,ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,tmp_a_k_Y_reco_1_ ...
,ampm_.half_diameter_x_c ...
,ampm_.n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% tmp_a_x_u_1_ from a_k_Y_reco_: %0.6fs',tmp_t)); end;
%%%%%%%%;
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,3,1); isosurface_f_x_u_0(tmp_a_x_u_0_,98.5);
subplot(1,3,2); isosurface_f_x_u_0(tmp_a_x_u_1_,98.5);
subplot(1,3,3); isosurface_f_x_u_0(tmp_b_x_u_1_,98.5);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

flag_check=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Test volume registration. ;
% Compare register_spharm_to_spharm_wigner_wrap_1 ;
% with register_spharm_to_spharm_single_beta_3_stripped_0. ;
%%%%%%%%%%%%%%%%;
narm=4;
ampm_ = ampm__{1+narm};
%%%%%%%%;
N_wavelength = 0.0;
%%%%%%%%;
tmp_t = tic;
[ ...
 tmp_X_best ...
,tmp_euler_polar_a_best ...
,tmp_euler_azimu_b_best ...
,tmp_euler_gamma_z_best ...
,tmp_delta_best_ ...
,~ ...
,~ ...
,tmp_X_base_mmb___ ...
] = ...
register_spharm_to_spharm_wigner_1( ...
 ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.k_p_r_max ...
,ampm_.weight_3d_k_p_r_ ...
,N_wavelength ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+0) ...
,ampm_.a_k_Y_ampm_yka__(:,1+1) ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% register_spharm_to_spharm_wigner_1: %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now perform stripped down calculation of innerproducts. ;
%%%%%%%%;
tmp_t = tic;
%%%%%%%%;
% calculate d_. ;
%%%%%%%%;
n_m_max = ampm_.n_m_max;
n_polar_a = n_m_max; polar_a_ = transpose(linspace(-1*pi,+1*pi,n_polar_a+1)); polar_a_ = polar_a_(1:end-1);
n_azimu_b = n_m_max; azimu_b_ = transpose(linspace( 0*pi,+2*pi,n_azimu_b+1)); azimu_b_ = azimu_b_(1:end-1);
n_gamma_z = n_m_max; gamma_z_ = transpose(linspace( 0*pi,+2*pi,n_gamma_z+1)); gamma_z_ = gamma_z_(1:end-1);
n_l_max = 1+ampm_.l_max_max;
t_0in = tic;
d_mmlb____ = zeros(ampm_.n_m_max,ampm_.n_m_max,n_l_max,n_polar_a);
for npolar_a=0:n_polar_a-1;
if (flag_verbose); if (mod(npolar_a,16)==0); disp(sprintf(' %% npolar_a %d/%d',npolar_a,n_polar_a)); end; end;
polar_a = polar_a_(1+npolar_a);
W_ = wignerd_b(ampm_.l_max_max,-polar_a);
n_W_ = zeros(1,1+ampm_.l_max_max); for (l_val=0:ampm_.l_max_max); n_W_(1+l_val) = numel(W_{1+l_val}); end;
d_mml___ = zeros(ampm_.n_m_max,ampm_.n_m_max,1+ampm_.l_max_max);
for l_val=0:ampm_.l_max_max;
d_mml___(1+ampm_.l_max_max + [-l_val:+l_val],1+ampm_.l_max_max + [-l_val:+l_val],1+l_val) = W_{1+l_val};
end;%for l_val=0:ampm_.l_max_max;
d_mmlb____(:,:,:,1+npolar_a) = d_mml___;
end;%for npolar_a=0:n_polar_a-1;
t_out = toc(t_0in); if (flag_verbose); disp(sprintf(' %% calculate d_: t %0.6f',t_out)); end;
%%%%%%%%;
t_0in = tic;
tmp_a_k_Y_0_mlk___ = convert_spharm_to_spharm___0(ampm_.n_k_p_r,ampm_.l_max_,ampm_.a_k_Y_ampm_yka__(:,1+0));
tmp_a_k_Y_1_mlk___ = convert_spharm_to_spharm___0(ampm_.n_k_p_r,ampm_.l_max_,ampm_.a_k_Y_ampm_yka__(:,1+1));
tmp_a_k_Y_0_mkl___ = permute(tmp_a_k_Y_0_mlk___,[1,3,2]);
tmp_a_k_Y_1_mkl___ = permute(tmp_a_k_Y_1_mlk___,[1,3,2]);
[ ...
 tmp_X_pack_mmb___ ...
] = ...
register_spharm_to_spharm_single_beta_3_stripped_0( ...
 flag_verbose ...
,ampm_.n_m_max ...
,ampm_.n_k_p_r ...
,n_l_max ...
,ampm_.weight_3d_k_p_r_ ...
,tmp_a_k_Y_0_mkl___ ...
,tmp_a_k_Y_1_mkl___ ...
,[] ...
,[] ...
,n_polar_a ...
,d_mmlb____ ...
);
t_out = toc(t_0in); if (flag_verbose); disp(sprintf(' %% calculate X_: t %0.6f',t_out)); end;
%%%%%%%%;
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% register_spharm_to_spharm_single_beta_3_stripped_0: %0.6fs',tmp_t)); end;
%%%%%%%%;
[ ...
 tmp_X_pack_mm0__ ...
] = ...
register_spharm_to_spharm_single_beta_3( ...
 flag_verbose ...
,ampm_.n_k_p_r ...
,ampm_.k_p_r_ ...
,ampm_.weight_3d_k_p_r_ ...
,ampm_.l_max_ ...
,ampm_.a_k_Y_ampm_yka__(:,1+0) ...
,ampm_.a_k_Y_ampm_yka__(:,1+1) ...
,polar_a_(1+0) ...
);
%%%%%%%%;
tmp_XX_c_b_ = zeros(n_polar_a,1);
tmp_XX_f_b_ = zeros(n_polar_a,1);
for npolar_a=0:n_polar_a-1;
tmp_X_base__ = tmp_X_base_mmb___(:,:,1+npolar_a);
tmp_X_pack__ = tmp_X_pack_mmb___(:,:,1+npolar_a);
tmp_XX_c_b_(1+npolar_a) = corr(real(tmp_X_base__(:)),real(tmp_X_pack__(:)));
tmp_XX_f_b_(1+npolar_a) = fnorm(real(tmp_X_base__(:)) - real(tmp_X_pack__(:)))/fnorm(real(tmp_X_base__(:)));
clear tmp_X_base__ tmp_X_pack__;
end;%for npolar_a=0:n_polar_a-1;
figure(1+nf);nf=nf+1;clf;figsml;
plot(polar_a_,tmp_XX_c_b_,'o');
xlabel('polar_a','Interpreter','none');ylabel('correlation');title('X_base vs X_pack','Interpreter','none');
xlim([-pi,+pi]); ylim([0,1.125]); grid on;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

flag_check=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Test rotation of viewing-angles along with rotation of volume. ;
%%%%%%%%;
narm=4;
ampm_ = ampm__{1+narm};
%%%%%%%%;
tolerance_master = 1e-2;
n_k_p_r = ampm_.n_k_p_r;
k_p_r_ = ampm_.k_p_r_;
k_p_r_max = ampm_.k_p_r_max;
weight_3d_k_p_r_ = ampm_.weight_3d_k_p_r_;
n_w_ = ampm_.n_w_;
l_max_ = ampm_.l_max_;
n_M = ampm_.n_M;
N_k_p__ = ampm_.N_k_p__; if (flag_center_image==0); N_k_p__ = ampm_.M_k_p__; end;
index_nCTF_from_nM_ = ampm_.index_nCTF_from_nM_;
CTF_k_p_wkC__ = ampm_.CTF_k_p_wkC__;
%%%%%%%%;
na_0 = 0;
a_k_Y_reco_0_yk_ = ampm_.a_k_Y_ampm_yka__(:,1+na_0);
euler_polar_a_0_M_ = ampm_.euler_polar_a_ampm_Ma__(:,1+na_0);
euler_azimu_b_0_M_ = ampm_.euler_azimu_b_ampm_Ma__(:,1+na_0);
euler_gamma_z_0_M_ = ampm_.euler_gamma_z_ampm_Ma__(:,1+na_0);
image_delta_x_0_M_ = ampm_.image_delta_x_ampm_Ma__(:,1+na_0);
image_delta_y_0_M_ = ampm_.image_delta_y_ampm_Ma__(:,1+na_0);
qbp_eps = tolerance_master;
tmp_t = tic;
tmp_a_k_Y_0qbp_0_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_0_M_ ...
,euler_azimu_b_0_M_ ...
,euler_gamma_z_0_M_ ...
,image_delta_x_0_M_ ...
,image_delta_y_0_M_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% qbp_6: %0.6fs',tmp_t)); end;
[ ...
 tmp_X_a_0_a_0 ...
,tmp_C_a_0_a_0 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,tmp_a_k_Y_0qbp_0_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,tmp_a_k_Y_0qbp_0_yk_): %0.16f',tmp_C_a_0_a_0));
%%%%%%%%;
na_1 = 1;
a_k_Y_reco_1_yk_ = ampm_.a_k_Y_ampm_yka__(:,1+na_1);
euler_polar_a_1_M_ = ampm_.euler_polar_a_ampm_Ma__(:,1+na_1);
euler_azimu_b_1_M_ = ampm_.euler_azimu_b_ampm_Ma__(:,1+na_1);
euler_gamma_z_1_M_ = ampm_.euler_gamma_z_ampm_Ma__(:,1+na_1);
image_delta_x_1_M_ = ampm_.image_delta_x_ampm_Ma__(:,1+na_1);
image_delta_y_1_M_ = ampm_.image_delta_y_ampm_Ma__(:,1+na_1);
qbp_eps = tolerance_master;
tmp_t = tic;
tmp_a_k_Y_0qbp_1_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_1_M_ ...
,euler_azimu_b_1_M_ ...
,euler_gamma_z_1_M_ ...
,image_delta_x_1_M_ ...
,image_delta_y_1_M_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% qbp_6: %0.6fs',tmp_t)); end;
[ ...
 tmp_X_a_1_a_1 ...
,tmp_C_a_1_a_1 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_1_yk_ ...
,tmp_a_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_1_yk_,tmp_a_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_1_a_1));
%%%%%%%%;
[ ...
 tmp_X_a_0_a_1 ...
,tmp_C_a_0_a_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,a_k_Y_reco_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,a_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_a_1));
%%%%%%%%;
N_wavelength = 0.0;
%%%%%%%%;
tmp_t = tic;
[ ...
 tmp_X_a0_from_a1 ...
,tmp_euler_polar_a_a0_from_a1 ...
,tmp_euler_azimu_b_a0_from_a1 ...
,tmp_euler_gamma_z_a0_from_a1 ...
,tmp_delta_a0_from_a1_ ...
,~ ...
,~ ...
,tmp_X_base_mmb___ ...
] = ...
register_spharm_to_spharm_wigner_1( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,a_k_Y_reco_1_yk_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% register_spharm_to_spharm_wigner_1: %0.6fs',tmp_t)); end;
disp(sprintf(' %% tmp_X_a0_from_a1 relating: (a_k_Y_reco_0_yk_,a_k_Y_reco_1_yk_): %0.16f',tmp_X_a0_from_a1));
%%%%%%%%;
[ ... 
 b_k_Y_reco_1_yk_ ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,[] ...
,a_k_Y_reco_1_yk_ ...
,0 ...
,tmp_X_a0_from_a1 ...
,0 ...
,tmp_euler_polar_a_a0_from_a1 ...
,tmp_euler_azimu_b_a0_from_a1 ...
,tmp_euler_gamma_z_a0_from_a1 ...
,tmp_delta_a0_from_a1_(1+0) ...
,tmp_delta_a0_from_a1_(1+1) ...
,tmp_delta_a0_from_a1_(1+2) ...
);
%%%%%%%%;
[ ...
 tmp_X_a_0_b_1 ...
,tmp_C_a_0_b_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,b_k_Y_reco_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_b_1));
%%%%%%%%;
[ ...
 R_ ...
,euler_polar_a_1_pos_M_ ...
,euler_azimu_b_1_pos_M_ ...
,euler_gamma_z_1_pos_M_ ...
] = ...
rotate_viewing_angles_from_rotate_spharm_to_spharm_0( ...
 max(0,flag_verbose-1) ...
,tmp_euler_polar_a_a0_from_a1 ...
,tmp_euler_azimu_b_a0_from_a1 ...
,tmp_euler_gamma_z_a0_from_a1 ...
,euler_polar_a_1_M_ ...
,euler_azimu_b_1_M_ ...
,euler_gamma_z_1_M_ ...
);
tmp_t = tic;
tmp_c_k_Y_0qbp_1_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_1_pos_M_ ...
,euler_azimu_b_1_pos_M_ ...
,euler_gamma_z_1_pos_M_ ...
,image_delta_x_1_M_ ...
,image_delta_y_1_M_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% qbp_6: %0.6fs',tmp_t)); end;
[ ...
 tmp_X_b_1_c_1 ...
,tmp_C_b_1_c_1 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_Y_reco_1_yk_ ...
,tmp_c_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(b_k_Y_reco_1_yk_,tmp_c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_b_1_c_1));
[ ...
 tmp_X_a_0_c_1 ...
,tmp_C_a_0_c_1 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,tmp_c_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,tmp_c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_0_c_1));
%%%%%%%%;
disp(sprintf(' %% tmp_X_a0_from_a1 relating: (a_k_Y_reco_0_yk_,a_k_Y_reco_1_yk_): %0.16f',tmp_X_a0_from_a1));
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_0_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_b_1));
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_0_yk_,c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_0_c_1));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

flag_check=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Test rotation of viewing-angles along with inversion of volume. ;
%%%%%%%%;
narm=4;
ampm_ = ampm__{1+narm};
%%%%%%%%;
tolerance_master = 1e-2;
n_k_p_r = ampm_.n_k_p_r;
k_p_r_ = ampm_.k_p_r_;
k_p_r_max = ampm_.k_p_r_max;
weight_3d_k_p_r_ = ampm_.weight_3d_k_p_r_;
n_w_ = ampm_.n_w_;
l_max_ = ampm_.l_max_;
n_M = ampm_.n_M;
N_k_p__ = ampm_.N_k_p__; if (flag_center_image==0); N_k_p__ = ampm_.M_k_p__; end;
index_nCTF_from_nM_ = ampm_.index_nCTF_from_nM_;
CTF_k_p_wkC__ = ampm_.CTF_k_p_wkC__;
%%%%%%%%;
na_0 = 0;
a_k_Y_reco_0_yk_ = ampm_.a_k_Y_ampm_yka__(:,1+na_0);
euler_polar_a_0_M_ = ampm_.euler_polar_a_ampm_Ma__(:,1+na_0);
euler_azimu_b_0_M_ = ampm_.euler_azimu_b_ampm_Ma__(:,1+na_0);
euler_gamma_z_0_M_ = ampm_.euler_gamma_z_ampm_Ma__(:,1+na_0);
image_delta_x_0_M_ = ampm_.image_delta_x_ampm_Ma__(:,1+na_0);
image_delta_y_0_M_ = ampm_.image_delta_y_ampm_Ma__(:,1+na_0);
qbp_eps = tolerance_master;
tmp_t = tic;
tmp_a_k_Y_0qbp_0_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_0_M_ ...
,euler_azimu_b_0_M_ ...
,euler_gamma_z_0_M_ ...
,image_delta_x_0_M_ ...
,image_delta_y_0_M_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% qbp_6: %0.6fs',tmp_t)); end;
[ ...
 tmp_X_a_0_a_0 ...
,tmp_C_a_0_a_0 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,tmp_a_k_Y_0qbp_0_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,tmp_a_k_Y_0qbp_0_yk_): %0.16f',tmp_C_a_0_a_0));
%%%%%%%%;
na_1 = 1;
a_k_Y_reco_1_yk_ = ampm_.a_k_Y_ampm_yka__(:,1+na_1);
euler_polar_a_1_M_ = ampm_.euler_polar_a_ampm_Ma__(:,1+na_1);
euler_azimu_b_1_M_ = ampm_.euler_azimu_b_ampm_Ma__(:,1+na_1);
euler_gamma_z_1_M_ = ampm_.euler_gamma_z_ampm_Ma__(:,1+na_1);
image_delta_x_1_M_ = ampm_.image_delta_x_ampm_Ma__(:,1+na_1);
image_delta_y_1_M_ = ampm_.image_delta_y_ampm_Ma__(:,1+na_1);
qbp_eps = tolerance_master;
tmp_t = tic;
tmp_a_k_Y_0qbp_1_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_1_M_ ...
,euler_azimu_b_1_M_ ...
,euler_gamma_z_1_M_ ...
,image_delta_x_1_M_ ...
,image_delta_y_1_M_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% qbp_6: %0.6fs',tmp_t)); end;
[ ...
 tmp_X_a_1_a_1 ...
,tmp_C_a_1_a_1 ...
] = ...
register_spharm_to_spharm_3( ...
 flag_verbose-1 ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_1_yk_ ...
,tmp_a_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_1_yk_,tmp_a_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_1_a_1));
%%%%%%%%;
[ ...
 tmp_X_a_0_a_1 ...
,tmp_C_a_0_a_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,a_k_Y_reco_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,a_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_a_1));
%%%%%%%%;
b_k_Y_reco_1_yk_ = flipY(n_k_p_r,l_max_,a_k_Y_reco_1_yk_);
%%%%%%%%;
[ ...
 tmp_X_a_0_b_1 ...
,tmp_C_a_0_b_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,b_k_Y_reco_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_b_1));
[ ...
 tmp_X_a_1_b_1 ...
,tmp_C_a_1_b_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_1_yk_ ...
,b_k_Y_reco_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_1_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_1_b_1));
%%%%%%%%;
euler_polar_a_1_pos_M_ = euler_polar_a_1_M_;
euler_azimu_b_1_pos_M_ = euler_azimu_b_1_M_;
[ ...
 euler_gamma_z_1_pos_M_ ...
] = ...
rotate_viewing_angles_from_invert_spharm_0( ...
 max(0,flag_verbose-1) ...
,euler_gamma_z_1_M_ ...
);
tmp_t = tic;
tmp_c_k_Y_0qbp_1_yk_ = ...
qbp_6( ...
 qbp_eps ...
,n_k_p_r ...
,k_p_r_ ...
,l_max_ ...
,n_w_ ...
,n_M ...
,N_k_p__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,euler_polar_a_1_pos_M_ ...
,euler_azimu_b_1_pos_M_ ...
,euler_gamma_z_1_pos_M_ ...
,image_delta_x_1_M_ ...
,image_delta_y_1_M_ ...
);
%%%%%%%%;
[ ...
 tmp_X_b_1_c_1 ...
,tmp_C_b_1_c_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_Y_reco_1_yk_ ...
,tmp_c_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(b_k_Y_reco_1_yk_,tmp_c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_b_1_c_1));
[ ...
 tmp_X_a_0_c_1 ...
,tmp_C_a_0_c_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_0_yk_ ...
,tmp_c_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_0_yk_,tmp_c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_0_c_1));
[ ...
 tmp_X_a_1_c_1 ...
,tmp_C_a_1_c_1 ...
] = ...
register_spharm_to_spharm_3( ...
 max(0,flag_verbose-1) ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_reco_1_yk_ ...
,tmp_c_k_Y_0qbp_1_yk_ ...
);
disp(sprintf(' %% weighted corr(a_k_Y_reco_1_yk_,tmp_c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_1_c_1));
%%%%%%%%;
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_0_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_0_b_1));
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_0_yk_,c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_0_c_1));
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_1_yk_,b_k_Y_reco_1_yk_): %0.16f',tmp_C_a_1_b_1));
disp(sprintf(' %% weighted correlation;  corr(a_k_Y_reco_1_yk_,c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_a_1_c_1));
disp(sprintf(' %% weighted correlation;  corr(b_k_Y_reco_1_yk_,c_k_Y_0qbp_1_yk_): %0.16f',tmp_C_b_1_c_1));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

flag_check=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
% Now register the volumes against one another. ;
% Using register_spharm_to_spharm_single_beta_3_stripped_0. ;
%%%%%%%%;
flag_verbose=1;
%%%%%%%%;
tmp_t = tic;
%%%%%%%%;
% calculate d_. ;
%%%%%%%%;
ampm_ = ampm__{1+0};
k_eq_d = ampm_.k_eq_d;
half_diameter_x_c = ampm_.half_diameter_x_c;
n_x_u_pack = ampm_.n_x_u_pack;
a_x_u_reco_ = ampm_.a_x_u_reco_;
a_k_Y_quad_ = ampm_.a_k_Y_quad_;
n_M = ampm_.n_M;
n_k_p_r = ampm_.n_k_p_r;
k_p_r_ = ampm_.k_p_r_;
k_p_r_max = ampm_.k_p_r_max;
weight_3d_k_p_r_ = ampm_.weight_3d_k_p_r_;
n_w_ = ampm_.n_w_;
n_m_max = ampm_.n_m_max;
l_max_ = ampm_.l_max_;
l_max_max = max(l_max_);
n_lm_ = (1+l_max_).^2;
n_lm_sum = sum(n_lm_);
n_l_max = 1+l_max_max;
n_polar_a = n_m_max; polar_a_ = transpose(linspace(-1*pi,+1*pi,n_polar_a+1)); polar_a_ = polar_a_(1:end-1);
n_azimu_b = n_m_max; azimu_b_ = transpose(linspace( 0*pi,+2*pi,n_azimu_b+1)); azimu_b_ = azimu_b_(1:end-1);
n_gamma_z = n_m_max; gamma_z_ = transpose(linspace( 0*pi,+2*pi,n_gamma_z+1)); gamma_z_ = gamma_z_(1:end-1);
t_0in = tic;
d_mmlb____ = zeros(n_m_max,n_m_max,n_l_max,n_polar_a);
for npolar_a=0:n_polar_a-1;
if (flag_verbose); if (mod(npolar_a,16)==0); disp(sprintf(' %% npolar_a %d/%d',npolar_a,n_polar_a)); end; end;
polar_a = polar_a_(1+npolar_a);
W_ = wignerd_b(l_max_max,-polar_a);
n_W_ = zeros(1,1+l_max_max); for (l_val=0:l_max_max); n_W_(1+l_val) = numel(W_{1+l_val}); end;
d_mml___ = zeros(n_m_max,n_m_max,1+l_max_max);
for l_val=0:l_max_max;
d_mml___(1+l_max_max + [-l_val:+l_val],1+l_max_max + [-l_val:+l_val],1+l_val) = W_{1+l_val};
end;%for l_val=0:l_max_max;
d_mmlb____(:,:,:,1+npolar_a) = d_mml___;
end;%for npolar_a=0:n_polar_a-1;
t_out = toc(t_0in); if (flag_verbose); disp(sprintf(' %% calculate d_: t %0.6f',t_out)); end;
%%%%%%%%;
n_a_ = zeros(n_arm,1); for narm=0:n_arm-1; n_a = numel(ampm_.str_fname_mat_a_); n_a_(1+narm) = n_a; end;
n_a_csum_ = cumsum([0;n_a_]); n_a_sum = sum(n_a_);
a_k_Y_ampm_yka__ = zeros(n_lm_sum,n_a_sum);
euler_polar_a_true_Ma__ = zeros(n_M,n_a_sum);
euler_azimu_b_true_Ma__ = zeros(n_M,n_a_sum);
euler_gamma_z_true_Ma__ = zeros(n_M,n_a_sum);
euler_polar_a_ampm_Ma__ = zeros(n_M,n_a_sum);
euler_azimu_b_ampm_Ma__ = zeros(n_M,n_a_sum);
euler_gamma_z_ampm_Ma__ = zeros(n_M,n_a_sum);
for narm=0:n_arm-1;
ampm_ = ampm__{1+narm};
n_a = n_a_(1+narm);
n_a_csum = n_a_csum_(1+narm);
tmp_index_ = n_a_csum + [0:n_a-1];
a_k_Y_ampm_yka__(:,1+tmp_index_) = ampm_.a_k_Y_ampm_yka__;
for na=0:n_a-1;
euler_polar_a_true_Ma__(:,1+tmp_index_(1+na)) = ampm_.euler_polar_a_Mi__(:,end);
euler_azimu_b_true_Ma__(:,1+tmp_index_(1+na)) = ampm_.euler_azimu_b_Mi__(:,end);
euler_gamma_z_true_Ma__(:,1+tmp_index_(1+na)) = ampm_.euler_gamma_z_Mi__(:,end);
end;%for na=0:n_a-1;
euler_polar_a_ampm_Ma__(:,1+tmp_index_) = ampm_.euler_polar_a_ampm_Ma__;
euler_azimu_b_ampm_Ma__(:,1+tmp_index_) = ampm_.euler_azimu_b_ampm_Ma__;
euler_gamma_z_ampm_Ma__(:,1+tmp_index_) = ampm_.euler_gamma_z_ampm_Ma__;
end;%for narm=0:n_arm-1;
%%%%%%%%; 
t_0in = tic;
N_wavelength = 0;
parameter = struct('type','parameter');
parameter.flag_verbose = flag_verbose;
[ ...
 parameter ...
,d_mmlb____ ...
,d_mmzb____ ...
,X_best_a_ ...
,flag_flip_a_ ...
,niteration ...
,tmp_error ...
,a_k_Y_best_ ...
,b_k_Y_best_ya__ ...
,euler_polar_a_pos_ampm_Ma__ ...
,euler_azimu_b_pos_ampm_Ma__ ...
,euler_gamma_z_pos_ampm_Ma__ ...
] = ...
register_spharm_to_spharm_3_stripped_wrap_wrap_0( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,N_wavelength ...
,l_max_ ...
,[] ...
,[] ...
,d_mmlb____ ...
,[] ...
,a_k_Y_ampm_yka__ ...
,euler_polar_a_ampm_Ma__ ...
,euler_azimu_b_ampm_Ma__ ...
,euler_gamma_z_ampm_Ma__ ...
);
%%%%%%%%;
tmp_t = tic;
[ ... 
 a_k_Y_best_alig_ ...
,X_best_alig ...
,flag_flip_alig ...
,euler_polar_a_best_alig ...
,euler_azimu_b_best_alig ...
,euler_gamma_z_best_alig ...
] = ...
spharm_register_and_rotate_2( ...
 n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_quad_ ...
,a_k_Y_best_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% a_k_Y_best_alig_ from a_k_Y_best_: %0.6fs',tmp_t)); end;
%%%%%%%%;
for na=0:n_a_sum-1;
[ ...
 ~ ...
,euler_polar_a_pos_ampm_Ma__(:,1+na) ...
,euler_azimu_b_pos_ampm_Ma__(:,1+na) ...
,euler_gamma_z_pos_ampm_Ma__(:,1+na) ...
] = ...
rotate_viewing_angles_from_rotate_spharm_to_spharm_0( ...
 max(0,flag_verbose-1) ...
,euler_polar_a_best_alig ...
,euler_azimu_b_best_alig ...
,euler_gamma_z_best_alig ...
,euler_polar_a_pos_ampm_Ma__(:,1+na) ...
,euler_azimu_b_pos_ampm_Ma__(:,1+na) ...
,euler_gamma_z_pos_ampm_Ma__(:,1+na) ...
);
end;%for na=0:n_a_sum-1;
%%%%%%%%;
tmp_t = tic;
[ ... 
  a_x_u_best_alig_ ...
] = ...
convert_spharm_to_x_c_3( ...
 k_eq_d ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_best_alig_ ...
,half_diameter_x_c ...
,n_x_u_pack ...
);
tmp_t = toc(tmp_t); if (flag_verbose); disp(sprintf(' %% tmp_a_x_u_1_ from a_k_Y_reco_: %0.6fs',tmp_t)); end;
%%%%%%%%;

fname_fig_pre = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0to7_combine/dir_pm_jpg/a_x_u_reco_vs_a_x_u_best_alig_',string_root);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
if strfind(ampm_.dir_pm,'ISWINCP');    percent_threshold_ = 94.50; tmp_nx = 14; end;
if strfind(ampm_.dir_pm,'trpv1');      percent_threshold_ = 91.25; tmp_nx = 14; end;
if strfind(ampm_.dir_pm,'rib80s');     percent_threshold_ = 86.25; tmp_nx = 14; end;
if strfind(ampm_.dir_pm,'MlaFEDB');    percent_threshold_ = 95.00; tmp_nx = 8; end;
if strfind(ampm_.dir_pm,'LetB1');      percent_threshold_ = 91.75; tmp_nx = 14; end;
if strfind(ampm_.dir_pm,'TMEM16F');    percent_threshold_ = 94.50; tmp_nx = 16; end;
if strfind(ampm_.dir_pm,'LSUbl17dep'); percent_threshold_ = 86.25; tmp_nx = 15; end;
if strfind(ampm_.dir_pm,'ps1');        percent_threshold_ = 96.00; tmp_nx = 11; end;
tmp_window_ = zeros(n_x_u_pack,n_x_u_pack,n_x_u_pack);
tmp_index_ = tmp_nx:n_x_u_pack-1-tmp_nx;
tmp_window_(1+tmp_index_,1+tmp_index_,1+tmp_index_)=1;
tmp_index_ = efind(tmp_window_);
figure(1+nf);nf=nf+1;clf;figmed;
fontsize_use = 12;
%subplot(1,15,[1:7]); 
subplot(2,2,1); 
isosurface_f_x_u_0(a_x_u_reco_(1+tmp_index_),percent_threshold_(1+0)); axis off; title('True'); set(gca,'FontSize',fontsize_use);
%subplot(1,15,[8:14]);
subplot(2,2,3); 
isosurface_f_x_u_0(a_x_u_best_alig_(1+tmp_index_),percent_threshold_(1+0)); axis off; title('Avg'); set(gca,'FontSize',fontsize_use);
%subplot(1,15,15);
subplot(2,2,[2,4]);
plot(1:n_a_sum,X_best_a_,'mo',1:n_a_sum,X_best_alig*ones(n_a_sum,1),'k-','LineWidth',3);
xlim([0,n_a_sum+1]); ylim([0,1]); xlabel('trial number'); ylabel('correlation'); grid on; set(gca,'FontSize',fontsize_use); title('correlation');
set(gcf,'Position',1+[0,0,512+256,512]);
sgtitle(fname_fig_jpg,'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig_jpg));
print('-djpeg',fname_fig_jpg);
sgtitle('');
tmp_dir = sprintf('/%s/rangan/dir_cryoem/dir_ampm_manuscript/dir_ampm_fig_bootstrap',string_root);
fname_fig_jpg_strip = sprintf('%s/ps1_x0to7_combine_a_x_u_reco_vs_a_x_u_best_alig_strip.jpg',tmp_dir);
disp(sprintf(' %% writing %s',fname_fig_jpg_strip));
print('-djpeg',sprintf('%s',fname_fig_jpg_strip));
end;%if (flag_replot | ~exist(fname_fig_jpg,'file'));

%%%%%%%%;
[ ...
 tmp_n_all ...
,tmp_azimu_b_all_ ...
,tmp_polar_a_all_ ...
,tmp_weight_all_ ...
,tmp_k_c_0_all_ ...
,tmp_k_c_1_all_ ...
,tmp_k_c_2_all_ ...
,tmp_n_polar_a ...
,tmp_polar_a_ ...
,tmp_n_azimu_b_ ...
] = ...
sample_shell_5( ...
 1.0 ...
,1/(2*pi) ...
) ;
fname_fig_pre = sprintf('/%s/rangan/dir_cryoem/dir_ps1_x0to7_combine/dir_pm_jpg/hist2d_euler_xxxxx_x_true_',string_root);
fname_fig_jpg = sprintf('%s.jpg',fname_fig_pre);
fname_fig_eps = sprintf('%s.eps',fname_fig_pre);
if (flag_replot | ~exist(fname_fig_jpg,'file'));
figure(1+nf);nf=nf+1;clf;figmed;
subplot(1,2,1);
tmp_a_ = euler_polar_a_true_Ma__(:);
tmp_b_ = euler_azimu_b_true_Ma__(:);
hist2d_polar_a_azimu_b_0( ...
 tmp_polar_a_all_ ...
,tmp_azimu_b_all_ ...
,tmp_weight_all_ ...
,tmp_a_ ...
,tmp_b_ ...
,[] ...
,colormap_beach ...
,1 ...
,0 ...
);
subplot(1,2,2);
tmp_a_ = euler_polar_a_ampm_Ma__(:);
tmp_b_ = euler_azimu_b_ampm_Ma__(:);
hist2d_polar_a_azimu_b_0( ...
 tmp_polar_a_all_ ...
,tmp_azimu_b_all_ ...
,tmp_weight_all_ ...
,tmp_a_ ...
,tmp_b_ ...
,[] ...
,colormap_beach ...
,1 ...
,0 ...
);
sgtitle(fname_fig_jpg,'Interpreter','none');
disp(sprintf(' %% writing %s',fname_fig_jpg));
print('-djpeg',fname_fig_jpg);
end;%if (flag_replot | ~exist(fname_fig_jpg,'file'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_check;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Now just run a very simple version of ampmut_wrap_wrap_5 after segregating the images by octiles based on estimated quality. ;
%%%%%%%%;
n_w_max = ampm__{1+0}.n_w_max;
n_w_sum = ampm__{1+0}.n_w_sum;
n_k_p_r = ampm__{1+0}.n_k_p_r;
k_p_r_ = ampm__{1+0}.k_p_r_;
k_p_r_max = ampm__{1+0}.k_p_r_max;
weight_3d_k_p_r_ = ampm__{1+0}.weight_3d_k_p_r_;
weight_2d_k_p_r_ = ampm__{1+0}.weight_2d_k_p_r_;
n_w_max = ampm__{1+0}.n_w_max;
l_max_ = ampm__{1+0}.l_max_;
a_k_Y_true_ = ampm__{1+0}.a_k_Y_quad_;
%%%%%%%%;
n_M_narm_ = zeros(n_arm,1);
for narm=0:n_arm-1;
n_M_narm_(1+narm) = ampm__{1+narm}.n_M;
end;%for narm=0:n_arm-1;
n_M_csum_narm_ = cumsum([0;n_M_narm_]);
n_M_sum = sum(n_M_narm_);
N_k_p_wkMsum__ = zeros(n_w_sum,n_M_sum);
for narm=0:n_arm-1;
tmp_index_ = n_M_csum_narm_(1+narm) + [0:n_M_narm_(1+narm)-1];
N_k_p_wkMsum__(:,1+tmp_index_) = ampm__{1+narm}.N_k_p__;
end;%for narm=0:n_arm-1;
%%%%%%%%;
n_CTF_narm_ = zeros(n_arm,1);
for narm=0:n_arm-1;
n_CTF_narm_(1+narm) = ampm__{1+narm}.n_CTF;
end;%for narm=0:n_arm-1;
n_CTF_csum_narm_ = cumsum([0;n_CTF_narm_]);
n_CTF_sum = sum(n_CTF_narm_);
CTF_k_p_r_kCsum__ = zeros(n_k_p_r,n_CTF_sum);
index_nCTFsum_from_nMsum_ = zeros(n_M_sum,1);
for narm=0:n_arm-1;
tmp_index_ = n_CTF_csum_narm_(1+narm) + [0:n_CTF_narm_(1+narm)-1];
CTF_k_p_r_kCsum__(:,1+tmp_index_) = ampm__{1+narm}.CTF_k_p_r_kC__;
tmp_index_ = n_M_csum_narm_(1+narm) + [0:n_M_narm_(1+narm)-1];
index_nCTFsum_from_nMsum_(1+tmp_index_) = ampm__{1+narm}.index_nCTF_from_nM_ + n_CTF_csum_narm_(1+narm);
end;%for narm=0:n_arm-1;
%%%%%%%%;
image_X_value_est_Msum_ = zeros(n_M_sum,1);
image_R_value_est_Msum_ = zeros(n_M_sum,1);
image_X_value_tru_Msum_ = zeros(n_M_sum,1);
euler_polar_a_tru_Msum_ = zeros(n_M_sum,1);
euler_azimu_b_tru_Msum_ = zeros(n_M_sum,1);
euler_gamma_z_tru_Msum_ = zeros(n_M_sum,1);
image_delta_x_tru_Msum_ = zeros(n_M_sum,1);
image_delta_y_tru_Msum_ = zeros(n_M_sum,1);
for narm=0:n_arm-1;
%%%%%%%%;
ampm_ = ampm__{1+narm};
tmp_index_ = n_M_csum_narm_(1+narm) + [0:n_M_narm_(1+narm)-1];
image_X_value_tru_Msum_(1+tmp_index_) = ampm_.image_X_value_Mi__(:,end-1);
tmp_f = @(s) ~isempty(strfind(s,'X_2d_xcor_d0_a1t0122p25r0.mat'));
tmp_index = efind(cellfun(tmp_f,ampm_.str_fname_mat_a_));
if numel(tmp_index)==1;
if (flag_verbose); disp(ampm_.str_fname_mat_a_{1+tmp_index}); end;
image_X_value_est_Msum_(1+tmp_index_) = ampm_.image_X_value_ampm_Ma__(:,1+tmp_index);
image_R_value_est_Msum_(1+tmp_index_) = ampm_.image_R_value_ampm_Ma__(:,1+tmp_index);
euler_polar_a_tru_Msum_(1+tmp_index_) = ampm_.euler_polar_a_Mi__(:,end);
euler_azimu_b_tru_Msum_(1+tmp_index_) = ampm_.euler_azimu_b_Mi__(:,end);
euler_gamma_z_tru_Msum_(1+tmp_index_) = ampm_.euler_gamma_z_Mi__(:,end);
image_delta_x_tru_Msum_(1+tmp_index_) = ampm_.image_delta_x_acc_Mi__(:,end) + ampm_.image_delta_x_upd_Mi__(:,end);
image_delta_y_tru_Msum_(1+tmp_index_) = ampm_.image_delta_y_acc_Mi__(:,end) + ampm_.image_delta_y_upd_Mi__(:,end);
end;%if numel(tmp_index)==1;
%%%%%%%%;
end;%for narm=0:n_arm-1;
%%%%%%%%;

%%%%%%%%;
n_M = ampm__{1+0}.n_M;
n_octile = 8;
[~,ij_image_X_value_est_Msum_from_sort_] = sort(image_X_value_est_Msum_,'ascend');
[~,ij_image_X_value_est_sort_from_Msum_] = sort(ij_image_X_value_est_Msum_from_sort_,'ascend');
ij_from_noctile__ = cell(n_octile,1);
for noctile=0:n_octile-1;
ij_from_noctile__{1+noctile} = ij_image_X_value_est_Msum_from_sort_(1+[0:n_M-1] + floor((n_M_sum-n_M)*noctile/(n_octile-1)));
end;%for noctile=0:n_octile-1;
%%%%%%%%;
flag_disp=0;
if flag_disp;
figure(1+nf);nf=nf+1;clf;figsml;
c_80s__ = colormap_80s; n_c_80s = size(c_80s__,1);
hold on;
for noctile=0:n_octile-1;
ij_from_noctile_ = ij_from_noctile__{1+noctile};
nc_80s = max(0,min(n_c_80s-1,floor(n_c_80s*noctile/n_octile)));
plot(noctile*n_M+[0:n_M-1],image_X_value_est_Msum_(ij_from_noctile_),'.','Color',c_80s__(1+nc_80s,:));
end;%for noctile=0:n_octile-1;
hold off;
xlim([0,n_M_sum]);
xlabel('nMsum','Interpreter','none');
end;%if flag_disp;
%%%%%%%%;

n_CTF_noctile_ = zeros(n_octile,1);
index_nCTFsum_from_nM_per_noctile__ = cell(n_octile,1);
CTF_k_p_r_kCsum_per_noctile___ = cell(n_octile,1);
for noctile=0:n_octile-1;
ij_from_noctile_ = ij_from_noctile__{1+noctile};
index_nCTFsum_from_nMsum_this_noctile_ = index_nCTFsum_from_nMsum_(ij_from_noctile_);
[u_index_nCTFsum_from_nMsum_this_noctile_,ij_na_from_nu_,ij_nu_from_na_] = unique(index_nCTFsum_from_nMsum_this_noctile_);
CTF_k_p_r_kC_per_noctile___{1+noctile} = CTF_k_p_r_kCsum__(:,1+u_index_nCTFsum_from_nMsum_this_noctile_);
index_nCTF_from_nM_per_noctile__{1+noctile} = ij_nu_from_na_-1;
n_CTF_noctile_(1+noctile) = numel(u_index_nCTFsum_from_nMsum_this_noctile_);
end;%for noctile=0:n_octile-1;
tmp_error=0; n_val=0;
for noctile=0:n_octile-1;
ij_from_noctile_ = ij_from_noctile__{1+noctile};
assert(size(CTF_k_p_r_kC_per_noctile___{1+noctile},2)==n_CTF_noctile_(1+noctile));
for nl=0:numel(ij_from_noctile_)-1;
nMsum = ij_from_noctile_(1+nl)-1;
tmp_CTF_0_ = CTF_k_p_r_kCsum__(:,1+index_nCTFsum_from_nMsum_(1+nMsum));
tmp_CTF_1_ = CTF_k_p_r_kC_per_noctile___{1+noctile}(:,1+index_nCTF_from_nM_per_noctile__{1+noctile}(1+nl));
tmp_error = tmp_error + fnorm(tmp_CTF_0_ - tmp_CTF_1_);
n_val = n_val+1;
end;%for nl=0:numel(ij_from_noctile_)-1;
end;%for noctile=0:n_octile-1;
if (flag_verbose); disp(sprintf(' %% CTF error: %0.16f (n_val %d)',tmp_error,n_val)); end;

date_diff_threshold = date_diff_threshold_0in; %<-- default: 0.25;
flag_force_create_mat = flag_force_create_mat_0in; %<-- default: 0;
flag_force_create_tmp = flag_force_create_tmp_0in; %<-- default: 0;
if ~isempty(flag_alternate_MS_vs_SM_0in_); flag_alternate_MS_vs_SM_ = flag_alternate_MS_vs_SM_0in_; else; flag_alternate_MS_vs_SM_ = [1]; end; %<-- default: [1];
if ~isempty(delta_sigma_use_0in); delta_sigma_use = delta_sigma_use_0in; else; delta_sigma_use = delta_sigma; end; %<-- default: delta_sigma;
dat_rseed_ = dat_rseed_0in_; %<-- default: [0];
n_dat_rseed = numel(dat_rseed_);
if ~isempty(tolerance_pm_0in_); tolerance_pm_ = tolerance_pm_0in_; else; tolerance_pm_ = []; end; %<-- default: [];
n_tolerance_pm = numel(tolerance_pm_);
if ~isempty(rank_pm_0in_); rank_pm_ = rank_pm_0in_; else; rank_pm_ = [16]; end; %<-- default: [16];
n_rank_pm = numel(rank_pm_);
if ~isempty(delta_r_max_factor_0in_); delta_r_max_factor_ = delta_r_max_factor_0in_; else; delta_r_max_factor_ = [1.00]; end; %<-- default: 1;
n_delta_r_max_factor = numel(delta_r_max_factor_);
%%%%%%%%;
for ndat_rseed=0:n_dat_rseed-1;
dat_rseed = dat_rseed_(1+ndat_rseed);
for ndelta_r_max_factor=0:n_delta_r_max_factor-1;
delta_r_max_factor = delta_r_max_factor_(1+ndelta_r_max_factor);
delta_r_max_use = delta_r_max_factor * delta_sigma_use*sqrt(log(20^2));
delta_r_max_upb = 2.0 * delta_sigma_use*sqrt(log(20^2)); %<-- allow large accumulated translations. ;
if  isempty(delta_sigma_use_0in);
if ( exist(sprintf('%s_mat/delta_r_max_legacy.txt',dir_pm)));
delta_r_max_legacy = textread(sprintf('%s_mat/delta_r_max_legacy.txt',dir_pm));
disp(sprintf(' %% loading delta_r_max_legacy: %0.16f',delta_r_max_legacy));
delta_r_max_use = delta_r_max_factor * delta_r_max_legacy;
delta_r_max_upb = 2.0 * delta_r_max_legacy; %<-- allow large accumulated translations. ;
end;%if ( exist(sprintf('%s_mat/delta_r_max_legacy.txt',dir_pm)));
end;%if  isempty(delta_sigma_use_0in);
for flag_alternate_MS_vs_SM = flag_alternate_MS_vs_SM_;
%%%%;
for ntolerance_pm=0:n_tolerance_pm-1;
tolerance_pm = tolerance_pm_(1+ntolerance_pm);
for noctile=0:n_octile-1;
ij_from_noctile_ = ij_from_noctile__{1+noctile};
parameter = struct('type','parameter');
parameter.rseed = dat_rseed;
parameter.flag_rank_vs_tolerance = 0;
parameter.tolerance_pm = tolerance_pm;
parameter.delta_r_max = delta_r_max_use;
parameter.delta_r_upb = delta_r_max_upb;
parameter.dir_pm = sprintf('%so%d',dir_pm,noctile);
if ~exist(sprintf('%s_mat',parameter.dir_pm),'dir'); mkdir(sprintf('%s_mat',parameter.dir_pm)); end;
if ~exist(sprintf('%s_jpg',parameter.dir_pm),'dir'); mkdir(sprintf('%s_jpg',parameter.dir_pm)); end;
parameter.flag_alternate_MS_vs_SM = flag_alternate_MS_vs_SM;
parameter = ...
ampmut_wrap_wrap_5( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,numel(ij_from_noctile_) ...
,N_k_p_wkMsum__(:,ij_from_noctile_) ...
,n_CTF_noctile_(1+noctile) ...
,index_nCTF_from_nM_per_noctile__{1+noctile} ...
,CTF_k_p_r_kC_per_noctile___{1+noctile} ...
,a_k_Y_true_ ...
,euler_polar_a_tru_Msum_(ij_from_noctile_) ...
,euler_azimu_b_tru_Msum_(ij_from_noctile_) ...
,euler_gamma_z_tru_Msum_(ij_from_noctile_) ...
,image_delta_x_tru_Msum_(ij_from_noctile_) ...
,image_delta_y_tru_Msum_(ij_from_noctile_) ...
);
end;%for noctile=0:n_octile-1;
end;%for ntolerance_pm=0:n_tolerance_pm-1;
%%%%;
for nrank_pm=0:n_rank_pm-1;
rank_pm = rank_pm_(1+nrank_pm);
for noctile=0:n_octile-1;
ij_from_noctile_ = ij_from_noctile__{1+noctile};
parameter = struct('type','parameter');
parameter.rseed = dat_rseed;
parameter.flag_rank_vs_tolerance = 1;
parameter.rank_pm = rank_pm;
parameter.delta_r_max = delta_r_max_use;
parameter.delta_r_upb = delta_r_max_upb;
parameter.dir_pm = sprintf('%so%d',dir_pm,noctile);
if ~exist(sprintf('%s_mat',parameter.dir_pm),'dir'); mkdir(sprintf('%s_mat',parameter.dir_pm)); end;
if ~exist(sprintf('%s_jpg',parameter.dir_pm),'dir'); mkdir(sprintf('%s_jpg',parameter.dir_pm)); end;
parameter.flag_alternate_MS_vs_SM = flag_alternate_MS_vs_SM;
parameter = ...
ampmut_wrap_wrap_5( ...
 parameter ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,weight_2d_k_p_r_ ...
,n_w_max ...
,l_max_ ...
,numel(ij_from_noctile_) ...
,N_k_p_wkMsum__(:,ij_from_noctile_) ...
,n_CTF_noctile_(1+noctile) ...
,index_nCTF_from_nM_per_noctile__{1+noctile} ...
,CTF_k_p_r_kC_per_noctile___{1+noctile} ...
,a_k_Y_true_ ...
,euler_polar_a_tru_Msum_(ij_from_noctile_) ...
,euler_azimu_b_tru_Msum_(ij_from_noctile_) ...
,euler_gamma_z_tru_Msum_(ij_from_noctile_) ...
,image_delta_x_tru_Msum_(ij_from_noctile_) ...
,image_delta_y_tru_Msum_(ij_from_noctile_) ...
);
end;%for noctile=0:n_octile-1;
end;%for nrank_pm=0:n_rank_pm-1;
%%%%;
if (parameter.n_complete_calculation> 1);
if strcmp(platform,'rusty');
disp(sprintf(' %% parameter.n_complete_calculation %d, returning',parameter.n_complete_calculation));
return; %<-- halt after one calculation on rusty. ;
end;%if strcmp(platform,'rusty');
end;%if (parameter.n_complete_calculation> 1);
%%%%;
end;%for flag_alternate_MS_vs_SM = flag_alternate_MS_vs_SM_;
end;%for ndelta_r_max_factor=0:n_delta_r_max_factor-1;
end;%for ndat_rseed=0:n_dat_rseed-1;
%%%%%%%%;



verbose=1;
if (flag_verbose); disp(sprintf(' %% [finished test_pm_24_combine_0]')); end;

disp('returning'); return;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
