%{
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
if ~exist('R_use__','var'); R_use__ = []; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('a_R_k_p_qk_','var'); a_R_k_p_qk_=[]; end;
if ~exist('ba_from_single_shell_baba__','var'); ba_from_single_shell_baba__=[]; end;
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
%}
function ...
[ ...
 parameter ...
,template_ori_wkS__ ...
,n_w ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dtemplateda_ori_wkS__ ...
,dtemplatedb_ori_wkS__ ...
,dtemplatedc_ori_wkS__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,dtemplateda_rec_wkS__ ...
,dtemplatedb_rec_wkS__ ...
,dtemplatedc_rec_wkS__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_ori_wkS__ ...
,ddtemplatedab_ori_wkS__ ...
,ddtemplatedac_ori_wkS__ ...
,ddtemplatedbb_ori_wkS__ ...
,ddtemplatedbc_ori_wkS__ ...
,ddtemplatedcc_ori_wkS__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,ddtemplatedaa_rec_wkS__ ...
,ddtemplatedab_rec_wkS__ ...
,ddtemplatedac_rec_wkS__ ...
,ddtemplatedbb_rec_wkS__ ...
,ddtemplatedbc_rec_wkS__ ...
,ddtemplatedcc_rec_wkS__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_6( ...
 parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
,R_use__ ...
,a_R_k_p_qk_ ...
,ba_from_single_shell_baba__ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
%%%%;
% Uses a_k_p_qk_ to evaluate templates on a collection of points on spherical shells. ;
% Each spherical-shell has the same resolution, determined by viewing_k_eq_d and template_k_eq_d and/or n_w_max. ;
% We assume that each spherical-shell is discretized with a (potentially adaptive) discretization with: ;
% a collection of equispaced longitudes (i.e., azimuthal-points) for each latitude (i.e., polar-point), with: ;
% polar-points equispaced from [0,pi]. ;
% Furthermore, we assume that the number of longitudes on each pole is 1, ;
% and that the number of longitudes at each other latitude is even. ;
%%%%;
% This code is largely similar to interpolate_template_5.m ;
% As an additional feature we calculate each quantity twice, ;
% once for the original quadrature-grid, and once for a rotated version of the grid. ;
%%%%;
% ;
% inputs: ;
% ;
% flag_verbose = integer verbosity_level. ;
% n_qk = integer total number of points in spherical discretization. ;
% n_qk_csum_ = integer array of size (n_k_p_r). n_qk_csum_(1+nk_p_r) is the number of points prior to shell nk_p_r. ;
% k_p_r_qk_ = double array of size (n_qk). k_p_r_qk_(1+na) = radius of point na. ;
% k_p_azimu_b_qk_ = double array of size (n_qk). k_p_azimu_b_qk_(1+na) = azimu_b of point na. ;
% k_p_polar_a_qk_ = double array of size (n_qk). k_p_polar_a_qk_(1+na) = azimu_b of point na. ;
% weight_3d_k_p_qk_ = double array of size (n_qk). weight_3d_k_p_qk_(1+na) = quadrature-weight (3d) for point na. ;
% weight_shell_qk_ = double array of size (n_qk). weight_shell_qk_(1+na) = quadrature-weight (shell) for point na. ;
% n_k_p_r = integer number of shells. ;
% k_p_r_ = double array of size (n_k_p_r). k_p_r_(1+nk_p_r) = radius of shell nk_p_r.
% k_p_r_max = double maximum k_value intended for radial integration. ;
% weight_3d_k_p_r_ = double array of size (n_k_p_r). weight_3d_k_p_r_(1+nk_p_r) = quadrature-weight for shell nk_p_r. ;
% k_c_0_qk_ = double array of size (n_qk). k_c_0_qk_(1+na) = k_c_0 of point na. ;
% k_c_1_qk_ = double array of size (n_qk). k_c_1_qk_(1+na) = k_c_1 of point na. ;
% k_c_2_qk_ = double array of size (n_qk). k_c_2_qk_(1+na) = k_c_2 of point na. ;
% n_polar_a_k_ = integer array of size (n_k_p_r). n_polar_a_k_(1+nk_p_r) = number of latitudinal-lines for shell nk_p_r. ;
% polar_a_ka__ = cell-array of size (n_k_p_r). polar_a_ka__{1+nk_p_r} = double array of size n_polar_a_k_(1+nk_p_r) storing latitudes. ;
% n_azimu_b_ka__ = cell-array of size (n_k_p_r). n_azimu_b_ka__{1+nk_p_r} = integer array of size n_polar_a_k_(1+nk_p_r) storing n_azimu_b per latitude. ;
% a_k_p_qk_ = complex array of size (n_qk). a_k_p_qk_(1+na) = function-value a for point na. ;
% viewing_k_eq_d = real equatorial-distance used for sampling viewing angles and templates. ;
% template_k_eq_d = real equatorial-distance used for sampling inplane-shifts along each template. ;
% n_w_0in = integer. used if template_k_eq_d <=0; desired n_w for templates. ;
% n_viewing_S = integer. number of viewing angles (i.e., number of templates) .;
% viewing_azimu_b_S_ = real array of size (n_viewing_S,1). ;
%                        azimu_b values for each template. ;
% viewing_polar_a_S_ = real array of size (n_viewing_S,1). ;
%                        polar_a values for each template. ;
% viewing_weight_S_ = real array of size (n_viewing_S,1). ;
%                       integration weight (on shell of radius 1) for each template. ;
% n_viewing_polar_a = integer. number of distinct polar_a across the viewing angles. ;
% viewing_polar_a_ = real array of size (n_viewing_polar_a,1). ;
%                    polar_a values for each viewing_polar_a_. ;
% n_viewing_azimu_b_ = integer array of size (n_viewing_polar_a,1). ;
%                      number of azimu_b values for each polar_a. ;
%                      These azimu_b values are assumed to be equispaced on [0,2*pi). ;
% viewing_gamma_z_S_ = real gamma_z value for each template. (typically 0.0). ;
% ;
% outputs: ;
% ;
% template_wkS__ = complex array of templates. ;
%                  template_wkS__(1+nw+nk_p_r*n_w_max,1+nS) ;
%                  stores template value for angle-index nw, radial-index nk_p_r, ;
%                  and viewing_azimu_b = viewing_azimu_b_all_(1+nS). ;
%                  and viewing_polar_a = viewing_polar_a_all_(1+nS). ;
% dtemplatedx_wkS__ = complex array analogous to template_wkS__. ;
%                     stores first-derivative of template with respect to: ;
%                     x==a: polar_a ; %<-- note that the first-derivative with respect to polar_a has a different sign than wignerd_c produces. ;
%                     x==b: azimu_b ;
%                     x==c: gamma_z ;
% ddtemplatedxy_wkS__ = complex array analogous to template_wkS__. ;
%                       stores second-derivative of template with respect to x and y (see above). ;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

str_thisfunction = 'interpolate_template_6';

if nargin<1;
rng(0);
flag_verbose = 2; nf=1;
if (flag_verbose); disp(sprintf(' %% testing %s',str_thisfunction)); end;
test_interpolate_template_6;
disp(sprintf(' %% returning')); return;
end;% if nargin<7;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

na=0;
if (nargin<1+na); parameter=[]; end; na=na+1;
if (nargin<1+na); n_order=[]; end; na=na+1;
if (nargin<1+na); n_qk=[]; end; na=na+1;
if (nargin<1+na); n_qk_csum_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_qk_=[]; end; na=na+1;
if (nargin<1+na); k_p_azimu_b_qk_=[]; end; na=na+1;
if (nargin<1+na); k_p_polar_a_qk_=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); weight_shell_qk_=[]; end; na=na+1;
if (nargin<1+na); n_k_p_r=[]; end; na=na+1;
if (nargin<1+na); k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_p_r_max=[]; end; na=na+1;
if (nargin<1+na); weight_3d_k_p_r_=[]; end; na=na+1;
if (nargin<1+na); k_c_0_qk_=[]; end; na=na+1;
if (nargin<1+na); k_c_1_qk_=[]; end; na=na+1;
if (nargin<1+na); k_c_2_qk_=[]; end; na=na+1;
if (nargin<1+na); n_polar_a_k_=[]; end; na=na+1;
if (nargin<1+na); polar_a_ka__=[]; end; na=na+1;
if (nargin<1+na); n_azimu_b_ka__=[]; end; na=na+1;
if (nargin<1+na); a_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); viewing_k_eq_d=[]; end; na=na+1;
if (nargin<1+na); template_k_eq_d=[]; end; na=na+1;
if (nargin<1+na); n_w_0in=[]; end; na=na+1;
if (nargin<1+na); n_viewing_S=[]; end; na=na+1;
if (nargin<1+na); viewing_azimu_b_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_S_=[]; end; na=na+1;
if (nargin<1+na); viewing_weight_S_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_polar_a=[]; end; na=na+1;
if (nargin<1+na); viewing_polar_a_=[]; end; na=na+1;
if (nargin<1+na); n_viewing_azimu_b_=[]; end; na=na+1;
if (nargin<1+na); viewing_gamma_z_S_=[]; end; na=na+1;
if (nargin<1+na); wS_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSda_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSdb_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdaa_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdab_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdbb_from_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); R_use__=[]; end; na=na+1;
if (nargin<1+na); a_R_k_p_qk_=[]; end; na=na+1;
if (nargin<1+na); ba_from_single_shell_baba__=[]; end; na=na+1;
if (nargin<1+na); wS_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSda_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); dwSdb_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdaa_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdab_from_R_single_shell_sba__=[]; end; na=na+1;
if (nargin<1+na); ddwSdbb_from_R_single_shell_sba__=[]; end; na=na+1;

if isempty(parameter); parameter=struct('type','parameter'); end;
if ~isfield(parameter,'flag_verbose'); parameter.flag_verbose=0; end;
flag_verbose=parameter.flag_verbose;
if ~isfield(parameter,'flag_check'); parameter.flag_check=0; end;
flag_check=parameter.flag_check; nf=0;
if ~isfield(parameter,'tolerance_pinv'); parameter.tolerance_pinv=1e-6; end;
tolerance_pinv=parameter.tolerance_pinv;
if ~isfield(parameter,'flag_parsimonious'); parameter.flag_parsimonious=1; end;
flag_parsimonious=parameter.flag_parsimonious; nf=0;

if (flag_verbose>0); disp(sprintf(' %% [entering %s]',str_thisfunction)); end;

if isempty(n_order); n_order = 5; end;

flag_1 = 1;
index_nS_ = transpose([0:n_viewing_S-1]); n_S_sub = n_viewing_S;
if flag_parsimonious==0;
% do nothing. ;
end;%if flag_parsimonious==0;
if flag_parsimonious==1;
tolerance_w = 0.5*(2*pi)/max(1,n_w_0in);
index_nS_ = efind( abs(periodize(viewing_polar_a_S_,-pi/4,+pi/4)) < tolerance_w ); n_S_sub = numel(index_nS_);
end;%if flag_parsimonious==1;
flag_d = (nargout>=17);
flag_dd = (nargout>=27);
if (flag_verbose>0); disp(sprintf(' %% flag_1 %d flag_d %d flag_dd %d',flag_1,flag_d,flag_dd)); end;

%%%%%%%%;
% Construct templates under original frame. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% First establish baseline calculation under original frame.')); end;
%%%%%%%%;
tmp_t = tic();
if ~exist('wS_from_single_shell_sba__','var'); wS_from_single_shell_sba__=[]; end;
if ~exist('dwSda_from_single_shell_sba__','var'); dwSda_from_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_single_shell_sba__','var'); dwSdb_from_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_single_shell_sba__','var'); ddwSdaa_from_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_single_shell_sba__','var'); ddwSdab_from_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_single_shell_sba__','var'); ddwSdbb_from_single_shell_sba__=[]; end;
tmp_parameter = parameter;
tmp_parameter.flag_verbose = max(0,flag_verbose-1);
tmp_parameter.flag_attend = 0; %<-- Here we bypass any calls to cartesian_from_shell. ;
[ ...
 tmp_parameter ...
,template_ori_wkS__ ...
,n_w ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dtemplateda_ori_wkS__ ...
,dtemplatedb_ori_wkS__ ...
,dtemplatedc_ori_wkS__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddtemplatedaa_ori_wkS__ ...
,ddtemplatedab_ori_wkS__ ...
,ddtemplatedac_ori_wkS__ ...
,ddtemplatedbb_ori_wkS__ ...
,ddtemplatedbc_ori_wkS__ ...
,ddtemplatedcc_ori_wkS__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 tmp_parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_gamma_z_S_ ...
,wS_from_single_shell_sba__ ...
,dwSda_from_single_shell_sba__ ...
,dwSdb_from_single_shell_sba__ ...
,ddwSdaa_from_single_shell_sba__ ...
,ddwSdab_from_single_shell_sba__ ...
,ddwSdbb_from_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_5: %0.6fs',tmp_t)); end;
%%%%%%%%;
ddtemplatedba_ori_wkS__ = ddtemplatedab_ori_wkS__;
ddtemplatedca_ori_wkS__ = ddtemplatedac_ori_wkS__;
ddtemplatedcb_ori_wkS__ = ddtemplatedbc_ori_wkS__;
%%%%%%%%;
n_w_max = n_w;
n_w_ = n_w_max*ones(n_k_p_r,1);
n_w_sum = sum(n_w_);
n_w_csum_ = cumsum([0;n_w_]);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Check spherical-grid for consistency. ;
% For efficiency the spherical-grid should be generated using: ;
% flag_uniform_over_n_k_p_r = 1;
% flag_uniform_over_polar_a = 0;
% str_T_vs_L = 'C2';
% For accuracy one might consider increasing the angular-resolution (on each shell) ;
% without necessarily increasing the radial-resolution (i.e., the distance between shells). ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% checking spherical-grid for consistency.')); end;
tmp_t = tic();
if n_k_p_r> 1;
tmp_std = std(diff(n_qk_csum_));
if (flag_verbose>0); disp(sprintf(' %% std(diff(n_qk_csum_)) %0.6f',tmp_std)); end;
if tmp_std> 1e-12; disp(sprintf(' %% Warning, std(diff(n_qk_csum_)) %0.6f in %s',tmp_std,str_thisfunction)); end;
end;%if n_k_p_r> 1;
if n_k_p_r> 1;
tmp_std = std(diff(n_polar_a_k_));
if (flag_verbose>0); disp(sprintf(' %% std(diff(n_polar_a_k_)) %0.6f',tmp_std)); end;
if tmp_std> 1e-12; disp(sprintf(' %% Warning, std(diff(n_polar_a_k_)) %0.6f in %s',tmp_std,str_thisfunction)); end;
end;%if n_k_p_r> 1;
polar_a_single_shell_ = polar_a_ka__{1};
n_azimu_b_single_shell_ = n_azimu_b_ka__{1};
tmp_std = std(diff(polar_a_single_shell_));
if (flag_verbose>0); disp(sprintf(' %% std(diff(polar_a_single_shell_)) %0.6f',tmp_std)); end;
if tmp_std> 1e-12; disp(sprintf(' %% Warning, std(diff(polar_a_single_shell_)) %0.6f in %s',tmp_std,str_thisfunction)); end;
n_polar_a_single_shell = numel(polar_a_single_shell_);
polar_a_single_shell_lim_ = [polar_a_single_shell_(1),polar_a_single_shell_(end)];
tab_error=0; tab_check=0;
for npolar_a_single_shell=0:n_polar_a_single_shell-1;
n_azimu_b_single_shell = n_azimu_b_single_shell_(1+npolar_a_single_shell);
if npolar_a_single_shell==0; if n_azimu_b_single_shell~=1; disp(sprintf(' %% Warning, npolar_a_single_shell %d n_azimu_b_single_shell %d',npolar_a_single_shell,n_azimu_b_single_shell)); tab_error = tab_error+1; else; tab_check = tab_check+1; end; end;
if npolar_a_single_shell==n_polar_a_single_shell-1; if n_azimu_b_single_shell~=1; disp(sprintf(' %% Warning, npolar_a_single_shell %d n_azimu_b_single_shell %d',npolar_a_single_shell,n_azimu_b_single_shell)); tab_error = tab_error+1; else; tab_check = tab_check+1; end; end;
if npolar_a_single_shell> 0 & npolar_a_single_shell< n_polar_a_single_shell-1; if mod(n_azimu_b_single_shell,2)~=0; disp(sprintf(' %% Warning, npolar_a_single_shell %d n_azimu_b_single_shell %d',npolar_a_single_shell,n_azimu_b_single_shell)); tab_error = tab_error+1; else; tab_check = tab_check+1; end; end;
end;%for npolar_a_single_shell=0:n_polar_a_single_shell-1;
assert(tab_check==n_polar_a_single_shell);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% check grid: %0.6fs',tmp_t)); end;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% extracting quadrature-grid on shell.')); end;
tmp_t = tic();
n_q_single_shell = n_qk/n_k_p_r; n_3 = 3; n_9 = 9; n_1 = 1;
nk_p_r = n_k_p_r-1;
k_p_r = k_p_r_(1+nk_p_r);
weight_3d_k_p_r = weight_3d_k_p_r_(1+nk_p_r);
tmp_index_ = n_qk_csum_(1+nk_p_r)+[0:n_q_single_shell-1];
k_c_0_single_shell_ = k_c_0_qk_(1+tmp_index_)/max(1e-12,k_p_r);
k_c_1_single_shell_ = k_c_1_qk_(1+tmp_index_)/max(1e-12,k_p_r);
k_c_2_single_shell_ = k_c_2_qk_(1+tmp_index_)/max(1e-12,k_p_r);
k_p_azimu_b_single_shell_ = k_p_azimu_b_qk_(1+tmp_index_);
k_p_polar_a_single_shell_ = k_p_polar_a_qk_(1+tmp_index_);
weight_3d_k_single_shell_ = weight_3d_k_p_qk_(1+tmp_index_); %<-- sum(weight_3d_k_single_shell_) = 4*pi*weight_3d_k_p_r;
if (flag_verbose>0); disp(sprintf(' %% sum(weight_3d_k_single_shell_) %0.16f 4*pi*weight_3d_k_p_r %0.16f',sum(weight_3d_k_single_shell_),4*pi*weight_3d_k_p_r)); end;
weight_shell_qk_single_shell_ = weight_shell_qk_(1+tmp_index_); %<-- sum(weight_shell_qk_single_shell_) = 4*pi*k_p_r^2. ;
if (flag_verbose>0); disp(sprintf(' %% sum(weight_shell_qk_single_shell_) %0.16f 4*pi*k_p_r^2 %0.16f',sum(weight_shell_qk_single_shell_),4*pi*k_p_r^2)); end;
weight_shell_qk_unit_shell_ = weight_shell_qk_single_shell_/max(1e-12,k_p_r)^2; %<-- sum(weight_shell_qk_unit_shell_) = 4*pi. ;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% set weight_shell_qk_unit_shell_: %0.6fs',tmp_t)); end;
%%%%%%%%;
% define rotations. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% defining rotations.')); end;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;
if isempty(R_use__);
if (flag_verbose>0); disp(sprintf(' %% defining R_use__.')); end;
polar_a_use = +pi/5;
azimu_b_use = +pi/7;
gamma_z_use = +pi/3;
euler_use_ = [gamma_z_use,polar_a_use,azimu_b_use];
R_use__ = Rz(azimu_b_use)*Ry(polar_a_use)*Rz(gamma_z_use);
fnorm_disp(flag_verbose,'R_use__',R_use__,'euler_to_R_0(euler_use_)',euler_to_R_0(euler_use_));
fnorm_disp(flag_verbose,'euler_use_',euler_use_,'R_to_euler_0(R_use__)',R_to_euler_0(R_use__));
end;%if isempty(R_use__);

euler_use_ = R_to_euler_0(R_use__);
%%%%%%%%;
% Now rotate the quadrature-grid. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid.')); end;
tmp_t = tic();
tmp_q3__ = cat(2,k_c_0_single_shell_,k_c_1_single_shell_,k_c_2_single_shell_)*transpose(R_use__);
R_k_c_0_single_shell_ = tmp_q3__(:,1+0); R_k_c_1_single_shell_ = tmp_q3__(:,1+1); R_k_c_2_single_shell_ = tmp_q3__(:,1+2);
R_k_p_r01_single_shell_ = sqrt(R_k_c_0_single_shell_.^2 + R_k_c_1_single_shell_.^2);
R_k_p_polar_a_single_shell_ = atan2(R_k_p_r01_single_shell_,R_k_c_2_single_shell_);
R_k_p_azimu_b_single_shell_ = atan2(R_k_c_1_single_shell_,R_k_c_0_single_shell_);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% rotating quadrature-grid: %0.6fs',tmp_t)); end;
%%%%%%%%;

if flag_check | isempty(a_R_k_p_qk_);
%%%%%%%%;
% build interpolant. ;
%%%%%%%%;
if isempty(ba_from_single_shell_baba__);
if (flag_verbose>0); disp(sprintf(' %% calling shell_k_p_scatter_from_adaptive_interpolate_n_9.')); end;
tmp_t = tic();
[ ...
 ba_from_single_shell_baba__ ...
] = ...
shell_k_p_scatter_from_adaptive_interpolate_n_9( ...
 n_order ...
,n_polar_a_single_shell ...
,n_azimu_b_single_shell_ ...
,polar_a_single_shell_lim_ ...
,n_q_single_shell ...
,R_k_p_polar_a_single_shell_ ...
,R_k_p_azimu_b_single_shell_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% shell_k_p_scatter_from_adaptive_interpolate_n_9: %0.6fs',tmp_t)); end;
end;%if isempty(ba_from_single_shell_baba__);
%%%%%%%%;
% apply interpolant. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% applying interpolant.')); end;
tmp_t = tic();
tmp_a_R_k_p_qk_ = reshape(ba_from_single_shell_baba__*reshape(a_k_p_qk_,[n_q_single_shell,n_k_p_r]),[n_qk,1]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% apply interpolant: %0.6fs',tmp_t)); end;
%%%%%%%%;
if ~isempty(isempty(a_R_k_p_qk_));
if (flag_verbose>0); disp(sprintf(' %% display error.')); end;
fnorm_disp(flag_verbose,'a_R_k_p_qk_',a_R_k_p_qk_,'tmp_a_R_k_p_qk_',tmp_a_R_k_p_qk_);
end;%if ~isempty(isempty(a_R_k_p_qk_));
if  isempty(isempty(a_R_k_p_qk_));
if (flag_verbose>0); disp(sprintf(' %% define a_R_k_p_qk_.')); end;
a_R_k_p_qk_ = tmp_a_R_k_p_qk_;
end;%if  isempty(isempty(a_R_k_p_qk_));
%%%%%%%%;
end;%if flag_check | isempty(a_R_k_p_qk_);

%%%%%%%%;
% Construct templates under rotated frame. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% constructing rotated viewing-angles.')); end;
tmp_t = tic();
n_S = n_viewing_S;
[ ...
 ~ ...
,viewing_R_polar_a_S_ ...
,viewing_R_azimu_b_S_ ...
,viewing_R_gamma_z_S_ ...
] = ...
euler_to_euler_0( ...
 [] ...
,n_S ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
,R_use__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% construct rotated viewing-angles: %0.6fs',tmp_t)); end;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% constructing templates under rotated frame.')); end;
tmp_t = tic();
if ~exist('wS_from_R_single_shell_sba__','var'); wS_from_R_single_shell_sba__=[]; end;
if ~exist('dwSda_from_R_single_shell_sba__','var'); dwSda_from_R_single_shell_sba__=[]; end;
if ~exist('dwSdb_from_R_single_shell_sba__','var'); dwSdb_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdaa_from_R_single_shell_sba__','var'); ddwSdaa_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdab_from_R_single_shell_sba__','var'); ddwSdab_from_R_single_shell_sba__=[]; end;
if ~exist('ddwSdbb_from_R_single_shell_sba__','var'); ddwSdbb_from_R_single_shell_sba__=[]; end;
[ ...
 tmp_parameter ...
,template_rot_wkS__ ...
,n_w ...
,n_viewing_S ...
,viewing_R_azimu_b_S_ ...
,viewing_R_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_S_ ...
,wS_from_R_single_shell_sba__ ...
,dtemplateda_rot_wkS__ ...
,dtemplatedb_rot_wkS__ ...
,dtemplatedc_rot_wkS__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddtemplatedaa_rot_wkS__ ...
,ddtemplatedab_rot_wkS__ ...
,ddtemplatedac_rot_wkS__ ...
,ddtemplatedbb_rot_wkS__ ...
,ddtemplatedbc_rot_wkS__ ...
,ddtemplatedcc_rot_wkS__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
] = ...
interpolate_template_5( ...
 tmp_parameter ...
,n_order ...
,n_qk ...
,n_qk_csum_ ...
,k_p_r_qk_ ...
,k_p_azimu_b_qk_ ...
,k_p_polar_a_qk_ ...
,weight_3d_k_p_qk_ ...
,weight_shell_qk_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_qk_ ...
,k_c_1_qk_ ...
,k_c_2_qk_ ...
,n_polar_a_k_ ...
,polar_a_ka__ ...
,n_azimu_b_ka__ ...
,a_R_k_p_qk_ ...
,viewing_k_eq_d ...
,template_k_eq_d ...
,n_w_0in ...
,n_viewing_S ...
,viewing_R_azimu_b_S_ ...
,viewing_R_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,viewing_R_gamma_z_S_ ...
,wS_from_R_single_shell_sba__ ...
,dwSda_from_R_single_shell_sba__ ...
,dwSdb_from_R_single_shell_sba__ ...
,ddwSdaa_from_R_single_shell_sba__ ...
,ddwSdab_from_R_single_shell_sba__ ...
,ddwSdbb_from_R_single_shell_sba__ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% interpolate_template_5: %0.6fs',tmp_t)); end;
%%%%%%%%;
ddtemplatedba_rot_wkS__ = ddtemplatedab_rot_wkS__;
ddtemplatedca_rot_wkS__ = ddtemplatedac_rot_wkS__;
ddtemplatedcb_rot_wkS__ = ddtemplatedbc_rot_wkS__;

if flag_check;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% displaying template-error in original and rotated frame.')); end;
figure(1+nf);nf=nf+1;clf;figbig;
n_S_check = 4;
p_row = min(n_S_check,n_S); p_col = 6; np=0;
Slim_ = prctile(abs(template_ori_wkS__),95,'all')*[-1,+1];
for nS=0:min(n_S_check,n_S)-1;
template_ori_wk_ = template_ori_wkS__(:,1+nS);
template_rot_wk_ = template_rot_wkS__(:,1+nS);
template_dif_wk_ = template_ori_wk_ - template_rot_wk_;
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_ori_wk_),Slim_);
axis image; axisnotick;
title(sprintf('real(template_ori_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_rot_wk_),Slim_);
axis image; axisnotick;
title(sprintf('real(template_rot_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,real(template_dif_wk_),Slim_);
axis image; axisnotick;
title(sprintf('real(template_dif_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_ori_wk_),Slim_);
axis image; axisnotick;
title(sprintf('imag(template_ori_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_rot_wk_),Slim_);
axis image; axisnotick;
title(sprintf('imag(template_rot_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
subplot(p_row,p_col,1+np);np=np+1;cla;
imagesc_p(n_k_p_r,k_p_r_,n_w_,n_w_sum,imag(template_dif_wk_),Slim_);
axis image; axisnotick;
title(sprintf('imag(template_dif_wkS__(:,1+%d)',nS),'Interpreter','none');
%%%%;
drawnow();
end;%for nS=0:min(n_S_check,n_S)-1;
%%%%%%%%;
end;%if flag_check;

viewing_polar_a_S_sub_ = viewing_polar_a_S_(1+index_nS_);
viewing_azimu_b_S_sub_ = viewing_azimu_b_S_(1+index_nS_);
viewing_gamma_z_S_sub_ = viewing_gamma_z_S_(1+index_nS_);
dtemplateda_ori_wkS_sub__ = dtemplateda_ori_wkS__(:,1+index_nS_);
dtemplatedb_ori_wkS_sub__ = dtemplatedb_ori_wkS__(:,1+index_nS_);
dtemplatedc_ori_wkS_sub__ = dtemplatedc_ori_wkS__(:,1+index_nS_);
ddtemplatedaa_ori_wkS_sub__ = ddtemplatedaa_ori_wkS__(:,1+index_nS_);
ddtemplatedab_ori_wkS_sub__ = ddtemplatedab_ori_wkS__(:,1+index_nS_);
ddtemplatedac_ori_wkS_sub__ = ddtemplatedac_ori_wkS__(:,1+index_nS_);
ddtemplatedba_ori_wkS_sub__ = ddtemplatedba_ori_wkS__(:,1+index_nS_);
ddtemplatedbb_ori_wkS_sub__ = ddtemplatedbb_ori_wkS__(:,1+index_nS_);
ddtemplatedbc_ori_wkS_sub__ = ddtemplatedbc_ori_wkS__(:,1+index_nS_);
ddtemplatedca_ori_wkS_sub__ = ddtemplatedca_ori_wkS__(:,1+index_nS_);
ddtemplatedcb_ori_wkS_sub__ = ddtemplatedcb_ori_wkS__(:,1+index_nS_);
ddtemplatedcc_ori_wkS_sub__ = ddtemplatedcc_ori_wkS__(:,1+index_nS_);
viewing_R_polar_a_S_sub_ = viewing_R_polar_a_S_(1+index_nS_);
viewing_R_azimu_b_S_sub_ = viewing_R_azimu_b_S_(1+index_nS_);
viewing_R_gamma_z_S_sub_ = viewing_R_gamma_z_S_(1+index_nS_);
dtemplateda_rot_wkS_sub__ = dtemplateda_rot_wkS__(:,1+index_nS_);
dtemplatedb_rot_wkS_sub__ = dtemplatedb_rot_wkS__(:,1+index_nS_);
dtemplatedc_rot_wkS_sub__ = dtemplatedc_rot_wkS__(:,1+index_nS_);
ddtemplatedaa_rot_wkS_sub__ = ddtemplatedaa_rot_wkS__(:,1+index_nS_);
ddtemplatedab_rot_wkS_sub__ = ddtemplatedab_rot_wkS__(:,1+index_nS_);
ddtemplatedac_rot_wkS_sub__ = ddtemplatedac_rot_wkS__(:,1+index_nS_);
ddtemplatedba_rot_wkS_sub__ = ddtemplatedba_rot_wkS__(:,1+index_nS_);
ddtemplatedbb_rot_wkS_sub__ = ddtemplatedbb_rot_wkS__(:,1+index_nS_);
ddtemplatedbc_rot_wkS_sub__ = ddtemplatedbc_rot_wkS__(:,1+index_nS_);
ddtemplatedca_rot_wkS_sub__ = ddtemplatedca_rot_wkS__(:,1+index_nS_);
ddtemplatedcb_rot_wkS_sub__ = ddtemplatedcb_rot_wkS__(:,1+index_nS_);
ddtemplatedcc_rot_wkS_sub__ = ddtemplatedcc_rot_wkS__(:,1+index_nS_);

%%%%%%%%;
% [ template_k_c_0 ; template_k_c_1 ; template_k_c_2 ] = [ +cb*ca*cc - sb*sc ; +sb*ca*cc + cb*sc ; -sa*cc ];
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %% calculating gradients of data-locations under original frame.')); end;
tmp_t = tic();
[ ...
 k_p_polar_a_wS_sub__ ...
,k_p_azimu_b_wS_sub__ ...
,k_c_0_wS_sub__ ...
,k_c_1_wS_sub__ ...
,k_c_2_wS_sub__ ...
,k_p_r01_wS_sub__ ...
,dtau_k_p_polar_a_wS_subabc___ ...
,dtau_k_p_azimu_b_wS_subabc___ ...
,dtau_k_c_0_wS_subabc___ ...
,dtau_k_c_1_wS_subabc___ ...
,dtau_k_c_2_wS_subabc___ ...
,dtau_k_p_r01_wS_subabc___ ...
,dtau_dtau_k_p_polar_a_wS_subabcabc____ ...
,dtau_dtau_k_p_azimu_b_wS_subabcabc____ ...
,dtau_dtau_k_c_0_wS_subabcabc____ ...
,dtau_dtau_k_c_1_wS_subabcabc____ ...
,dtau_dtau_k_c_2_wS_subabcabc____ ...
,dtau_dtau_k_p_r01_wS_subabcabc____ ...
] = ...
cg_rhs_2( ...
 n_S_sub ...
,n_w_max ...
,viewing_polar_a_S_sub_ ...
,viewing_azimu_b_S_sub_ ...
,viewing_gamma_z_S_sub_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% cg_rhs_2: %0.6fs',tmp_t)); end;
k_c_wS_sub_3__ = cat(2,k_c_0_wS_sub__(:),k_c_1_wS_sub__(:),k_c_2_wS_sub__(:));
%%%%;
if (flag_verbose>0); disp(sprintf(' %% calculating gradients of data-locations under rotated frame.')); end;
tmp_t = tic();
[ ...
 R_k_p_polar_a_wS_sub__ ...
,R_k_p_azimu_b_wS_sub__ ...
,R_k_c_0_wS_sub__ ...
,R_k_c_1_wS_sub__ ...
,R_k_c_2_wS_sub__ ...
,R_k_p_r01_wS_sub__ ...
,dtau_R_k_p_polar_a_wS_subabc___ ...
,dtau_R_k_p_azimu_b_wS_subabc___ ...
,dtau_R_k_c_0_wS_subabc___ ...
,dtau_R_k_c_1_wS_subabc___ ...
,dtau_R_k_c_2_wS_subabc___ ...
,dtau_R_k_p_r01_wS_subabc___ ...
,dtau_dtau_R_k_p_polar_a_wS_subabcabc____ ...
,dtau_dtau_R_k_p_azimu_b_wS_subabcabc____ ...
,dtau_dtau_R_k_c_0_wS_subabcabc____ ...
,dtau_dtau_R_k_c_1_wS_subabcabc____ ...
,dtau_dtau_R_k_c_2_wS_subabcabc____ ...
,dtau_dtau_R_k_p_r01_wS_subabcabc____ ...
] = ...
cg_rhs_2( ...
 n_S_sub ...
,n_w_max ...
,viewing_R_polar_a_S_sub_ ...
,viewing_R_azimu_b_S_sub_ ...
,viewing_R_gamma_z_S_sub_ ...
);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% cg_rhs_2: %0.6fs',tmp_t)); end;
R_k_c_wS_sub_3__ = cat(2,R_k_c_0_wS_sub__(:),R_k_c_1_wS_sub__(:),R_k_c_2_wS_sub__(:));
%%%%;
fnorm_disp(flag_verbose,'k_c_wS_sub_3__',k_c_wS_sub_3__,'R_k_c_wS_sub_3__*transpose(R_use__)',R_k_c_wS_sub_3__*transpose(R_use__));

%%%%%%%%;
% Now recalculate the first-derivatives. ;
%%%%%%%%;
tmp_t = tic();
tab_a = 0; tab_b = 1; tab_c = 2;
J_ori_abc012wS_sub____ = zeros(n_3,n_3,n_w_max,n_S_sub);
pinv_J_ori_abc012wS_sub____ = zeros(n_3,n_3,n_w_max,n_S_sub);
for nw=0:n_w_max-1;
for nS_sub=0:n_S_sub-1;
J_ori_abc012__ = [ ...
; dtau_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_a) , dtau_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_a) , dtau_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_a) ...
; dtau_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_b) , dtau_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_b) , dtau_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_b) ...
; dtau_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_c) , dtau_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_c) , dtau_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_c) ...
];
pinv_J_ori_abc012__ = pinv(J_ori_abc012__,tolerance_pinv);
J_rot_abc012__ = [ ...
; dtau_R_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_a) , dtau_R_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_a) , dtau_R_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_a) ...
; dtau_R_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_b) , dtau_R_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_b) , dtau_R_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_b) ...
; dtau_R_k_c_0_wS_subabc___(1+nw,1+nS_sub,1+tab_c) , dtau_R_k_c_1_wS_subabc___(1+nw,1+nS_sub,1+tab_c) , dtau_R_k_c_2_wS_subabc___(1+nw,1+nS_sub,1+tab_c) ...
];
pinv_J_rot_abc012__ = pinv(J_rot_abc012__,tolerance_pinv);
J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub) = J_ori_abc012__;
pinv_J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub) = pinv_J_ori_abc012__;
J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub) = J_rot_abc012__;
pinv_J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub) = pinv_J_rot_abc012__;
end;%for nS_sub=0:n_S_sub-1;
end;%for nw=0:n_w_max-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% pinv_J_xxx_abc012__: %0.6fs',tmp_t)); end;
%%%%%%%%;
tmp_t = tic();
dtemplated0_ori_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated1_ori_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated2_ori_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated0_rot_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated1_rot_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated2_rot_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated0_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated1_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplated2_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplateda_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplatedb_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
dtemplatedc_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
for nw=0:n_w_max-1;
for nS_sub=0:n_S_sub-1;
J_ori_abc012__ = J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub);
pinv_J_ori_abc012__ = pinv_J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub);
J_rot_abc012__ = J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub);
pinv_J_rot_abc012__ = pinv_J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub);
for nk_p_r=0:n_k_p_r-1;
nwk = nw + nk_p_r*n_w_max;
dtemplatedabc_ori_ = [ ...
;dtemplateda_ori_wkS_sub__(1+nwk,1+nS_sub) ...
;dtemplatedb_ori_wkS_sub__(1+nwk,1+nS_sub) ...
;dtemplatedc_ori_wkS_sub__(1+nwk,1+nS_sub) ...
];
dtemplated012_ori_ = pinv_J_ori_abc012__ * dtemplatedabc_ori_ ;
dtemplatedabc_rot_ = [ ...
;dtemplateda_rot_wkS_sub__(1+nwk,1+nS_sub) ...
;dtemplatedb_rot_wkS_sub__(1+nwk,1+nS_sub) ...
;dtemplatedc_rot_wkS_sub__(1+nwk,1+nS_sub) ...
];
dtemplated012_rot_ = pinv_J_rot_abc012__ * dtemplatedabc_rot_ ;
if flag_verbose>2;
fnorm_disp(flag_verbose,'R_use__*dtemplated012_rot_',R_use__*dtemplated012_rot_,'dtemplated012_ori_',dtemplated012_ori_);
end;%if flag_verbose>2;
dtemplated012_rec_ = R_use__*dtemplated012_rot_;
dtemplatedabc_rec_ = J_ori_abc012__ * dtemplated012_rec_;
dtemplated0_ori_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_ori_(1+0);
dtemplated1_ori_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_ori_(1+1);
dtemplated2_ori_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_ori_(1+2);
dtemplated0_rot_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rot_(1+0);
dtemplated1_rot_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rot_(1+1);
dtemplated2_rot_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rot_(1+2);
dtemplated0_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rec_(1+0);
dtemplated1_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rec_(1+1);
dtemplated2_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplated012_rec_(1+2);
dtemplateda_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplatedabc_rec_(1+tab_a);
dtemplatedb_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplatedabc_rec_(1+tab_b);
dtemplatedc_rec_wkS_sub__(1+nwk,1+nS_sub) = dtemplatedabc_rec_(1+tab_c);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nS_sub=0:n_S_sub-1;
end;%for nw=0:n_w_max-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dtemplatedx_rec_wkS_sub__: %0.6fs',tmp_t)); end;
%%%%%%%%;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
if flag_dd;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

%%%%%%%%;
% Now recalculate second-derivatives. ;
%%%%%%%%;
tmp_t = tic();
ddtemplatedaa_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
ddtemplatedab_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
ddtemplatedac_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
ddtemplatedbb_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
ddtemplatedbc_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
ddtemplatedcc_rec_wkS_sub__ = zeros(n_w_sum,n_S_sub);
for nw=0:n_w_max-1;
for nS_sub=0:n_S_sub-1;
%%%%;
J_ori_abc012__ = J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub);
pinv_J_ori_abc012__ = pinv_J_ori_abc012wS_sub____(:,:,1+nw,1+nS_sub);
H_ori_abcabc012__ = [ ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) ...
; dtau_dtau_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) , dtau_dtau_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) , dtau_dtau_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) ...
];
H_ori_abcabc012012__ = reshape(bsxfun(@times,reshape(J_ori_abc012__,[n_3,n_1,n_3,n_1]),reshape(J_ori_abc012__,[n_1,n_3,n_1,n_3])),[n_9,n_9]);
pinv_H_ori_abcabc012012__ = pinv(H_ori_abcabc012012__,tolerance_pinv);
%%%%;
J_rot_abc012__ = J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub);
pinv_J_rot_abc012__ = pinv_J_rot_abc012wS_sub____(:,:,1+nw,1+nS_sub);
H_rot_abcabc012__ = [ ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_a) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_b) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_a,1+tab_c) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_a) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_b) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_b,1+tab_c) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_a) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_b) ...
; dtau_dtau_R_k_c_0_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) , dtau_dtau_R_k_c_1_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) , dtau_dtau_R_k_c_2_wS_subabcabc____(1+nw,1+nS_sub,1+tab_c,1+tab_c) ...
];
H_rot_abcabc012012__ = reshape(bsxfun(@times,reshape(J_rot_abc012__,[n_3,n_1,n_3,n_1]),reshape(J_rot_abc012__,[n_1,n_3,n_1,n_3])),[n_9,n_9]);
pinv_H_rot_abcabc012012__ = pinv(H_rot_abcabc012012__,tolerance_pinv);
%%%%;
for nk_p_r=0:n_k_p_r-1;
nwk = nw + nk_p_r*n_w_max;
%%;
dtemplated012_ori_ = [ ...
; dtemplated0_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated1_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated2_ori_wkS_sub__(1+nwk,1+nS_sub) ...
];
ddtemplatedabcabc_ori_ = [ ...
; ddtemplatedaa_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedab_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedac_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedba_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedbb_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedbc_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedca_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedcb_ori_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedcc_ori_wkS_sub__(1+nwk,1+nS_sub) ...
];
RHS_ori_abcabc_ = ddtemplatedabcabc_ori_ - H_ori_abcabc012__*dtemplated012_ori_ ;
LHS_ori_012012_ = pinv_H_ori_abcabc012012__ * RHS_ori_abcabc_ ;
LHS_ori_012012__ = reshape(LHS_ori_012012_,[n_3,n_3]);
%%;
dtemplated012_rot_ = [ ...
; dtemplated0_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated1_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated2_rot_wkS_sub__(1+nwk,1+nS_sub) ...
];
ddtemplatedabcabc_rot_ = [ ...
; ddtemplatedaa_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedab_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedac_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedba_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedbb_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedbc_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedca_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedcb_rot_wkS_sub__(1+nwk,1+nS_sub) ...
; ddtemplatedcc_rot_wkS_sub__(1+nwk,1+nS_sub) ...
];
RHS_rot_abcabc_ = ddtemplatedabcabc_rot_ - H_rot_abcabc012__*dtemplated012_rot_ ;
LHS_rot_012012_ = pinv_H_rot_abcabc012012__ * RHS_rot_abcabc_ ;
LHS_rot_012012__ = reshape(LHS_rot_012012_,[n_3,n_3]);
%%;
if flag_verbose>2;
fnorm_disp(flag_verbose,'R_use__*LHS_rot_012012__*transpose(R_use__)',R_use__*LHS_rot_012012__*transpose(R_use__),'LHS_ori_012012__',LHS_ori_012012__);
end;%if flag_verbose>2;
%%;
dtemplated012_rec_ = [ ...
; dtemplated0_rec_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated1_rec_wkS_sub__(1+nwk,1+nS_sub) ...
; dtemplated2_rec_wkS_sub__(1+nwk,1+nS_sub) ...
];
LHS_rec_012012__ = R_use__*LHS_rot_012012__*transpose(R_use__) ;
LHS_rec_012012_ = reshape(LHS_rec_012012__,[n_9,1]);
ddtemplatedabcabc_rec_ = H_ori_abcabc012__ * dtemplated012_rec_ + H_ori_abcabc012012__ * LHS_rec_012012_ ;
%%;
ddtemplatedabcabc_rec__ = reshape(ddtemplatedabcabc_rec_,[n_3,n_3]);
ddtemplatedabcabc_rec__ = 0.5*(ddtemplatedabcabc_rec__ + transpose(ddtemplatedabcabc_rec__));
%%;
ddtemplatedaa_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_a,1+tab_a);
ddtemplatedab_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_a,1+tab_b);
ddtemplatedac_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_a,1+tab_c);
ddtemplatedbb_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_b,1+tab_b);
ddtemplatedbc_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_b,1+tab_c);
ddtemplatedcc_rec_wkS_sub__(1+nwk,1+nS_sub) = ddtemplatedabcabc_rec__(1+tab_c,1+tab_c);
end;%for nk_p_r=0:n_k_p_r-1;
end;%for nS_sub=0:n_S_sub-1;
end;%for nw=0:n_w_max-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% ddtemplatedxx_rec_wkS_sub__: %0.6fs',tmp_t)); end;
%%%%%%%%;

ddtemplatedaa_rec_wkS__ = zeros(n_w_sum,n_S);
ddtemplatedab_rec_wkS__ = zeros(n_w_sum,n_S);
ddtemplatedac_rec_wkS__ = zeros(n_w_sum,n_S);
ddtemplatedbb_rec_wkS__ = zeros(n_w_sum,n_S);
ddtemplatedbc_rec_wkS__ = zeros(n_w_sum,n_S);
ddtemplatedcc_rec_wkS__ = zeros(n_w_sum,n_S);
for nS_sub=0:n_S_sub-1;
nS = index_nS_(1+nS_sub);
ddtemplatedaa_rec_wkS__(:,1+nS) = ddtemplatedaa_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedab_rec_wkS__(:,1+nS) = ddtemplatedab_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedac_rec_wkS__(:,1+nS) = ddtemplatedac_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedbb_rec_wkS__(:,1+nS) = ddtemplatedbb_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedbc_rec_wkS__(:,1+nS) = ddtemplatedbc_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedcc_rec_wkS__(:,1+nS) = ddtemplatedcc_rec_wkS_sub__(:,1+nS_sub);
end;%for nS_sub=0:n_S_sub-1;

if flag_parsimonious==1;
if (flag_verbose>0); disp(sprintf(' %% overwriting first-derivative.')); end;
for nS_sub=0:n_S_sub-1;
nS = index_nS_(1+nS_sub);
ddtemplatedaa_ori_wkS__(:,1+nS) = ddtemplatedaa_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedab_ori_wkS__(:,1+nS) = ddtemplatedab_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedac_ori_wkS__(:,1+nS) = ddtemplatedac_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedbb_ori_wkS__(:,1+nS) = ddtemplatedbb_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedbc_ori_wkS__(:,1+nS) = ddtemplatedbc_rec_wkS_sub__(:,1+nS_sub);
ddtemplatedcc_ori_wkS__(:,1+nS) = ddtemplatedcc_rec_wkS_sub__(:,1+nS_sub);
end;%for nS_sub=0:n_S_sub-1;
end;%if flag_parsimonious==1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_dd;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

dtemplateda_rec_wkS__ = zeros(n_w_sum,n_S);
dtemplatedb_rec_wkS__ = zeros(n_w_sum,n_S);
dtemplatedc_rec_wkS__ = zeros(n_w_sum,n_S);
for nS_sub=0:n_S_sub-1;
nS = index_nS_(1+nS_sub);
dtemplateda_rec_wkS__(:,1+nS) = dtemplateda_rec_wkS_sub__(:,1+nS_sub);
dtemplatedb_rec_wkS__(:,1+nS) = dtemplatedb_rec_wkS_sub__(:,1+nS_sub);
dtemplatedc_rec_wkS__(:,1+nS) = dtemplatedc_rec_wkS_sub__(:,1+nS_sub);
end;%for nS_sub=0:n_S_sub-1;

if flag_parsimonious==1;
if (flag_verbose>0); disp(sprintf(' %% overwriting second-derivative.')); end;
for nS_sub=0:n_S_sub-1;
nS = index_nS_(1+nS_sub);
dtemplateda_ori_wkS__(:,1+nS) = dtemplateda_rec_wkS_sub__(:,1+nS_sub);
dtemplatedb_ori_wkS__(:,1+nS) = dtemplatedb_rec_wkS_sub__(:,1+nS_sub);
dtemplatedc_ori_wkS__(:,1+nS) = dtemplatedc_rec_wkS_sub__(:,1+nS_sub);
end;%for nS_sub=0:n_S_sub-1;
end;%if flag_parsimonious==1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
end;%if flag_d;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

if (flag_verbose>0); disp(sprintf(' %% [finished %s]',str_thisfunction)); end;



