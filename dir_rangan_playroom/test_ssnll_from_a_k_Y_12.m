flag_verbose=1; flag_disp=1; nf=0;
str_thisfunction = 'ssnll_from_a_k_Y_12';
if (flag_verbose>0); disp(sprintf(' %% testing %s',str_thisfunction)); end;

%%%%%%%%;
% First define integral of <f,f>. ;
%%%%%%%%;
h2d_ = @(kd) 4*pi^2*(besselj(0,kd) + besselj(2,kd)); % calculates <f_j,f_k>, normalized so that <f,f> = (4*pi^2);
dh2d_ = @(kd) 4*pi^3*(besselj(-1,kd) - besselj(+3,kd));
h3d_ = @(kd) 4*pi*( sin(kd) - (kd).*cos(kd) ) ./ kd.^3 ; % calculates <f_j,f_k>, normalized so that <f,f> = 4*pi/3;
dh3d_ = @(kd) 12*pi*( (kd.^2/3 - 1) .* sin(kd) + (kd).*cos(kd) ) ./ kd.^4 ;
%%%%%%%%;
% Now set up and test k-quadrature on sphere. ;
%%%%%%%%;
k_p_r_max = 48.0/(2*pi); k_eq_d = 1.0/(2*pi); str_T_vs_L = 'C';
[ ...
 n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,k_c_0_all_ ...
,k_c_1_all_ ...
,k_c_2_all_ ...
] = ...
sample_sphere_7( ...
 0*flag_verbose ...
,k_p_r_max ...
,k_eq_d ...
,str_T_vs_L ...
) ;
%%%%;
if flag_disp>1;
figure(1+nf);nf=nf+1;clf;figbig;
p_row = 2; p_col = 4; n_plot = p_row*p_col;
for nplot=0:n_plot-1;
nk_p_r = max(0,min(n_k_p_r-1,round(n_k_p_r*nplot/n_plot)));
tmp_index_ = n_k_all_csum_(1+nk_p_r):n_k_all_csum_(1+nk_p_r+1)-1;
subplot(p_row,p_col,1+nplot);
plot3(k_c_0_all_(1+tmp_index_),k_c_1_all_(1+tmp_index_),k_c_2_all_(1+tmp_index_),'.');
axis equal; axis vis3d; axisnotick3d;
title(sprintf('nk_p_r %d/%d',nk_p_r,n_k_p_r),'Interpreter','none');
end;%for nplot=0:n_plot-1;
end;%if flag_disp;
%%%%;
n_source = 4;
rng(0);
delta_a_c__ = zeros(3,n_source);
delta_b_c__ = zeros(3,n_source);
for nsource=0:n_source-1;
rng(1+nsource);
delta_a_c_ = 2*rand(3,1)-1; delta_a_c_ = delta_a_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_a_c_)); %<-- ensure small in magnitude. ;
delta_a_c__(:,1+nsource) = delta_a_c_;
delta_b_c_ = 2*rand(3,1)-1; delta_b_c_ = delta_b_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_b_c_)); %<-- ensure small in magnitude. ;
delta_b_c__(:,1+nsource) = delta_b_c_;
end;%for nsource=0:n_source-1;
a_k_p_form_ = zeros(n_k_all,1);
b_k_p_form_ = zeros(n_k_all,1);
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c__(:,1+nsource);
a_k_p_form_ = a_k_p_form_ + exp(+i*2*pi*(k_c_0_all_*delta_a_c_(1+0) + k_c_1_all_*delta_a_c_(1+1) + k_c_2_all_*delta_a_c_(1+2)));
delta_b_c_ = delta_b_c__(:,1+nsource);
b_k_p_form_ = b_k_p_form_ + exp(+i*2*pi*(k_c_0_all_*delta_b_c_(1+0) + k_c_1_all_*delta_b_c_(1+1) + k_c_2_all_*delta_b_c_(1+2)));
end;%for nsource=0:n_source-1;
%%%%;
I_a_quad = sum(a_k_p_form_.*weight_3d_k_all_);
I_b_quad = sum(b_k_p_form_.*weight_3d_k_all_);
I_a_form = 0;
I_b_form = 0;
for nsource=0:n_source-1;
delta_a_c_ = delta_a_c__(:,1+nsource);
delta_b_c_ = delta_b_c__(:,1+nsource);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c_);
I_a_form = I_a_form + h3d_(tmp_kd)*k_p_r_max^3;
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_b_c_);
I_b_form = I_b_form + h3d_(tmp_kd)*k_p_r_max^3;
end;%for nsource=0:n_source-1;
disp(sprintf(' %% I_a_form vs I_a_quad %0.16f %%<-- should be <1e-6',fnorm(I_a_form-I_a_quad)/fnorm(I_a_form)));
disp(sprintf(' %% I_b_form vs I_b_quad %0.16f %%<-- should be <1e-6',fnorm(I_b_form-I_b_quad)/fnorm(I_b_form)));
%%%%%%%%;
% Now set up and test polar-quadrature-weights on disk. ;
%%%%%%%%;
l_max_upb = round(2*pi*k_p_r_max);
l_max_max = min(l_max_upb,1+ceil(2*pi*k_p_r_(end)));
n_w_max = 2*(l_max_max+1); n_w_0in_ = n_w_max*ones(n_k_p_r,1);
[ ...
 n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,k_p_r_wk_ ...
,k_p_w_wk_ ...
,k_c_0_wk_ ...
,k_c_1_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_0in_ ...
);
n_w_sum = sum(n_w_); n_w_csum_ = cumsum([0;n_w_]);
%%%%;
S_k_p_wk_ = zeros(n_w_sum,1);
T_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
S_k_p_wk_ = S_k_p_wk_ + exp(+2*pi*i*(k_c_0_wk_*delta_a_c__(1+0,1+nsource) + k_c_1_wk_*delta_a_c__(1+1,1+nsource)));
T_k_p_wk_ = T_k_p_wk_ + exp(+2*pi*i*(k_c_0_wk_*delta_b_c__(1+0,1+nsource) + k_c_1_wk_*delta_b_c__(1+1,1+nsource)));
end;%for nsource=0:n_source-1;
I_quad = sum(conj(S_k_p_wk_).*T_k_p_wk_.*weight_2d_wk_)*(4*pi^2);
I_form = 0;
for nsource0=0:n_source-1;
for nsource1=0:n_source-1;
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_a_c__(1:2,1+nsource0) - delta_b_c__(1:2,1+nsource1));
I_form = I_form + h2d_(tmp_kd)/(4*pi^2) * (pi*k_p_r_max^2);
end;%for nsource1=0:n_source-1;
end;%for nsource0=0:n_source-1;
disp(sprintf(' %% I_form vs I_quad %0.16f %%<-- should be <1e-2',fnorm(I_form-I_quad)/fnorm(I_form)));
%%%%%%%%;
% Now set up spherical-harmonics. ;
%%%%%%%%;
l_max_ = zeros(n_k_p_r,1);
for nk_p_r=0:n_k_p_r-1;
l_max_(1+nk_p_r) = max(0,min(l_max_upb,1+ceil(2*pi*k_p_r_(1+nk_p_r))));
end;%for nk_p_r=0:n_k_p_r-1;
n_lm_ = (l_max_+1).^2;
n_lm_max = max(n_lm_);
n_lm_sum = sum(n_lm_);
n_lm_csum_ = cumsum([0;n_lm_]);
l_max_max = max(l_max_);
m_max_ = -l_max_max : +l_max_max;
n_m_max = length(m_max_);
%%%%;
Y_l_val_ = zeros(n_lm_sum,1);
Y_m_val_ = zeros(n_lm_sum,1);
Y_k_val_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
l_max = l_max_(1+nk_p_r);
tmp_l_val_ = zeros(n_lm_(1+nk_p_r),1);
tmp_m_val_ = zeros(n_lm_(1+nk_p_r),1);
na=0; 
for l_val=0:l_max;
for m_val=-l_val:+l_val;
tmp_l_val_(1+na) = l_val;
tmp_m_val_(1+na) = m_val;
na=na+1;
end;%for m_val=-l_val:+l_val;
end;%for l_val=0:l_max;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
Y_l_val_(1+tmp_index_) = tmp_l_val_;
Y_m_val_(1+tmp_index_) = tmp_m_val_;
Y_k_val_(1+tmp_index_) = k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
weight_Y_ = zeros(n_lm_sum,1);
for nk_p_r=0:n_k_p_r-1;
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm_(1+nk_p_r)-1);
weight_Y_(1+tmp_index_) = weight_3d_k_p_r_(1+nk_p_r);
end;%for nk_p_r=0:n_k_p_r-1;
%%%%;
a_k_Y_form_ = zeros(n_lm_sum,1);
b_k_Y_form_ = zeros(n_lm_sum,1);
for nsource=0:n_source-1;
a_k_Y_form_ = a_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_a_c__(:,1+nsource),l_max_);
b_k_Y_form_ = b_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_b_c__(:,1+nsource),l_max_);
end;%for nsource=0:n_source-1;
%%%%;
tmp_t = tic;
if ~exist('Ylm_uklma___','var'); Ylm_uklma___ = []; end;
if ~exist('k_p_azimu_b_sub_uka__','var'); k_p_azimu_b_sub_uka__ = []; end;
if ~exist('k_p_polar_a_sub_uka__','var'); k_p_polar_a_sub_uka__ = []; end;
if ~exist('l_max_uk_','var'); l_max_uk_ = []; end;
if ~exist('index_nu_n_k_per_shell_from_nk_p_r_','var'); index_nu_n_k_per_shell_from_nk_p_r_ = []; end;
if ~exist('index_k_per_shell_uka__','var'); index_k_per_shell_uka__ = []; end;
[ ...
 a_k_Y_quad_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_Y_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% a_k_Y_form_ vs a_k_Y_quad_: %0.16f %%<-- should be <1e-2',fnorm(a_k_Y_form_-a_k_Y_quad_)/fnorm(a_k_Y_form_)));
%%%%;
tmp_t = tic();
[ ...
 b_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% b_k_Y_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% b_k_Y_form_ vs b_k_Y_quad_: %0.16f %%<-- should be <1e-2',fnorm(b_k_Y_form_-b_k_Y_quad_)/fnorm(b_k_Y_form_)));
%%%%;
tmp_t = tic;
[ ...
 a_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,a_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% a_k_p_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% a_k_p_form_ vs a_k_p_quad_: %0.16f %%<-- should be <1e-2',fnorm(a_k_p_form_-a_k_p_quad_)/fnorm(a_k_p_form_)));
%%%%;
tmp_t = tic;
[ ...
 b_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,b_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% b_k_p_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% b_k_p_form_ vs b_k_p_quad_: %0.16f %%<-- should be <1e-2',fnorm(b_k_p_form_-b_k_p_quad_)/fnorm(b_k_p_form_)));
%%%%%%%%;
% prepare a_k_Y_form__ and b_k_Y_form__ ;
%%%%%%%%;
a_k_Y_form_yk_ = a_k_Y_form_;
a_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
a_k_Y_form_yk__(1:n_lm,1+nk_p_r) = a_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% a_k_Y_form_yk__: %0.6fs',tmp_t)); end;
%%%%;
b_k_Y_form_yk_ = b_k_Y_form_;
b_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
b_k_Y_form_yk__(1:n_lm,1+nk_p_r) = b_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% b_k_Y_form_yk__: %0.6fs',tmp_t)); end;
%%%%%%%%;
% define rotations. ;
%%%%%%%%;
Rz = @(azimu_b) ...
[ +cos(azimu_b) -sin(azimu_b) 0 ; ...
  +sin(azimu_b) +cos(azimu_b) 0 ; ...
   0             0            1 ; ...
] ;
%%%%%%%%;
Ry = @(polar_a) ...
[ +cos(polar_a) 0 +sin(polar_a) ; ...
   0            1  0            ; ...
  -sin(polar_a) 0 +cos(polar_a) ; ...
];
%%%%%%%%;
% generate templates. ;
%%%%%%%%;
tmp_t = tic();
template_k_eq_d = 1.0/k_p_r_max;
flag_tensor_vs_adap = 1; %<-- tensor grid. ;
[ ...
 n_viewing_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,viewing_k_c_0_all_ ...
,viewing_k_c_1_all_ ...
,viewing_k_c_2_all_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
sample_shell_6( ...
 1.0 ...
,template_k_eq_d ...
,str_T_vs_L ...
,flag_tensor_vs_adap ...
) ;
n_S = n_viewing_S;
if (flag_verbose>0); disp(sprintf(' %% n_S %d, n_viewing_polar_a %d, n_viewing_azimu_b [%d,..,%d]',n_S,n_viewing_polar_a,n_viewing_azimu_b_(1+0),n_viewing_azimu_b_(end))); end;
%%%%;
if flag_disp>1;
figure(1+nf);nf=nf+1;clf;figsml;
plot3(viewing_k_c_0_all_,viewing_k_c_1_all_,viewing_k_c_2_all_,'.');
axis equal; axisnotick3d; axis vis3d;
end;%if flag_disp;
%%%%;
[ ...
 ~ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
] = ...
get_weight_2d_2( ...
 0*flag_verbose ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,-1 ...
,n_w_ ...
);
%%%%;
tmp_t = tic();
[ ...
 S_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,a_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
S_k_p_wkS__ = reshape(S_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% S_k_p_wkS__: %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
R_k_p_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
R_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_R__*delta_a_c__(:,1+nsource);
R_k_p_wk_ = R_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
R_k_p_wkS__(:,1+nS) = R_k_p_wk_;
end;%for nS=0:n_S-1;
disp(sprintf(' %% R_k_p_wkS__ vs S_k_p_wkS__: %0.16f %%<-- should be <1e-2',fnorm(R_k_p_wkS__-S_k_p_wkS__)/fnorm(R_k_p_wkS__)));
%%%%%%%%;
% Now get templates for b_k_Y_form. ;
%%%%%%%%;
tmp_t = tic();
[ ...
 T_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,b_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
T_k_p_wkS__ = reshape(T_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% T_k_p_wkS__: %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now test integral. ;
%%%%%%%%;
CTF_alpha = 0.3;
CTF_k_p_wk_ = reshape(repmat(reshape(besselj(0,CTF_alpha*k_p_r_),[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1]);
%%%%;
nS = 128;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
nsource_a = 0;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
%%%%;
nT = 128;
T_k_p_wk_ = T_k_p_wkS__(:,1+nT);
tmp_azimu_b = viewing_azimu_b_S_(1+nT);
tmp_polar_a = viewing_polar_a_S_(1+nT);
tmp_gamma_z = 0.0;
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
nsource_b = 0;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
%%%%;
I_quad = sum(conj(U_k_p_wk_).*CTF_k_p_wk_.*V_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
I_form = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_U ...
,tmp_omega_U ...
,tmp_delta_V ...
,tmp_omega_V ...
,CTF_alpha ...
);
if (flag_verbose>0); disp(sprintf(' %% I_form vs I_quad: %0.16f',fnorm(I_form-I_quad)/fnorm(I_form))); end;
J_quad = 0.5 * sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*weight_2d_wk_,'all')*(4*pi^2);
%%%%;
% Note that (Gradshteyn and Ryzhik 5.52.1): ;
% \int_{0}^{K} k besselj(0,alpha*k) dkdpsi = 2*pi*K*besselj(1,alpha*K)/alpha. ;
% and: \lim_{alpha\rightarrow 0} besselj(1,alpha*K)/alpha = K/2. ;
% i.e.: CTF_alpha = 0.2; integral2(@(k,psi) k.*besselj(0,CTF_alpha.*k),0,k_p_r_max,0,2*pi)*CTF_alpha/(2*pi*k_p_r_max*besselj(1,CTF_alpha.*k_p_r_max));
% Note also that (Gradshteyn and Ryzhik 5.54.2): ;
% \int_{0}^{k} k besselj(0,alpha*k)^2 dkdpsi = 2*pi* (K^2/2)*(besselj(0,alpha*K)^2 - besselj(-1,alpha*K)*besselj(+1,alpha*K)). ;
% i.e., ;
% nu = 0; CTF_alpha = 0.2;
% tmp_I = integral(@(k) k.*besselj(nu,CTF_alpha.*k).^2,0,k_p_r_max);
% tmp_J = (k_p_r_max^2/2)*(besselj(nu,CTF_alpha.*k_p_r_max)^2 - besselj(nu+1,CTF_alpha.*k_p_r_max)*besselj(nu-1,CTF_alpha.*k_p_r_max));
% disp(sprintf(' %% fnorm(tmp_I - tmp_J): %0.16f',fnorm(tmp_I-tmp_J)));
% CTF_alpha = 1e-4;
% tmp_J = (k_p_r_max^2/2)*(besselj(nu,CTF_alpha.*k_p_r_max)^2 - besselj(nu+1,CTF_alpha.*k_p_r_max)*besselj(nu-1,CTF_alpha.*k_p_r_max));
% disp(sprintf(' %% fnorm(tmp_J - k_p_r_max^2/2) %0.6f',fnorm(tmp_J - k_p_r_max^2/2)));
%%%%;
G_form = (2*pi)*k_p_r_max^2/2.0; if (CTF_alpha> 1e-12); G_form = (2*pi)*(k_p_r_max^2/2)*(besselj(0,CTF_alpha*k_p_r_max)^2 - besselj(-1,CTF_alpha*k_p_r_max)*besselj(+1,CTF_alpha*k_p_r_max)); end;
H_form = pi*k_p_r_max^2;
J_form = 0.5 * (G_form - 2*I_form + H_form);
%%%%;
n_nS_sub = 8; nS_sub_ = randperm(n_S,n_nS_sub)-1;
n_nT_sub = 10; nT_sub_ = randperm(n_S,n_nT_sub)-1;
I_quad_ST__ = zeros(n_nS_sub,n_nT_sub);
I_form_ST__ = zeros(n_nS_sub,n_nT_sub);
for nnS_sub=0:n_nS_sub-1;
nS_sub = nS_sub_(1+nnS_sub);
nS = nS_sub;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
for nnT_sub=0:n_nT_sub-1;
nT_sub = nT_sub_(1+nnT_sub);
nT = nT_sub;
T_k_p_wk_ = T_k_p_wkS__(:,1+nT);
tmp_azimu_b = viewing_azimu_b_S_(1+nT);
tmp_polar_a = viewing_polar_a_S_(1+nT);
tmp_gamma_z = 0.0;
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
I_quad = sum(conj(U_k_p_wk_).*CTF_k_p_wk_.*V_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
I_form = 0;
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
I_form_sub = ...
plane_bessel_plane_integral_0( ...
 k_p_r_max ...
,tmp_delta_U ...
,tmp_omega_U ...
,tmp_delta_V ...
,tmp_omega_V ...
,CTF_alpha ...
);
I_form = I_form + I_form_sub;
end;%for nsource_b=0:n_source-1;
end;%for nsource_a=0:n_source-1;
I_quad_ST__(1+nnS_sub,1+nnT_sub) = I_quad;
I_form_ST__(1+nnS_sub,1+nnT_sub) = I_form;
end;%for nnT_sub=0:n_nT_sub-1;
end;%for nnS_sub=0:n_nS_sub-1;
if (flag_verbose>0); disp(sprintf(' %% I_form_ST__ vs I_quad_ST__: %0.16f',fnorm(I_form_ST__-I_quad_ST__)/fnorm(I_form_ST__))); end;
%%%%%%%%;
% set up CTF and eta. ;
% This does not test anisotropic CTF. ;
% Nor does this test anisotropic eta. ;
%%%%%%%%;
n_alpha = 3; CTF_alpha_ = [0.10;0.15;0.30];
n_power = 2; eta_power_ = [0.50;0.75];
n_CTF = n_alpha*n_power;
n_eta = n_alpha*n_power;
CTF_k_p_wkC__ = zeros(n_w_sum,n_CTF);
eta_k_p_wke__ = zeros(n_w_sum,n_eta);
for nalpha=0:n_alpha-1;
CTF_alpha = CTF_alpha_(1+nalpha);
for npower=0:n_power-1;
eta_power = eta_power_(1+npower);
nCTF = nalpha+npower*n_alpha;
neta = nalpha+npower*n_alpha;
CTF_k_p_wk_ = (reshape(repmat(reshape(besselj(0,CTF_alpha*k_p_r_),[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1])).^(1-eta_power);
CTF_k_p_wkC__(:,1+nCTF) = CTF_k_p_wk_;
eta_k_p_wk_ = (reshape(repmat(reshape(besselj(0,CTF_alpha*k_p_r_),[1,n_k_p_r]),[n_w_max,1]),[n_w_sum,1])).^(0+eta_power);
eta_k_p_wke__(:,1+neta) = eta_k_p_wk_;
end;%for npower=0:n_power-1;
end;%for nalpha=0:n_alpha-1;
%%%%;

%%%%%%%%;
% testing full on-grid ssnll. ;
%%%%%%%%;
n_M = n_S; M_k_p_wkM__ = T_k_p_wkS__ ;
index_nCTF_from_nM_ = zeros(n_M,1); for nM=0:n_M-1; index_nCTF_from_nM_(1+nM) = mod(nM,n_CTF); end;%for nM=0:n_M-1;
index_neta_from_nM_ = zeros(n_M,1); for nM=0:n_M-1; index_neta_from_nM_(1+nM) = mod(nM,n_eta); end;%for nM=0:n_M-1;
euler_polar_a_M_ = viewing_polar_a_S_;
euler_azimu_b_M_ = viewing_azimu_b_S_;
rng(0); euler_gamma_z_M_ = 2*pi*rand(n_M,1);
for nM=0:n_M-1;
M_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_wkS__(:,1+nM),+euler_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
%%%%;
ssnll_0 = 0.0d0;
for nM=0:n_M-1;
nS = nM;
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
T_k_p_wk_ = T_k_p_wkS__(:,1+nM);
nCTF = index_nCTF_from_nM_(1+nM);
CTF_k_p_wk_ = CTF_k_p_wkC__(:,1+nCTF);
neta = index_neta_from_nM_(1+nM);
eta_k_p_wk_ = eta_k_p_wke__(:,1+neta);
tmp_polar_a = euler_polar_a_M_(1+nM);
tmp_azimu_b = euler_azimu_b_M_(1+nM);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
tmp_R_a__ = tmp_R__; tmp_R_b__ = tmp_R__;
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% S_k_p_wk_ vs U_k_p_wk_: %0.16f',fnorm(S_k_p_wk_ - U_k_p_wk_)/fnorm(S_k_p_wk_))); end;
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% T_k_p_wk_ vs V_k_p_wk_: %0.16f',fnorm(T_k_p_wk_ - V_k_p_wk_)/fnorm(T_k_p_wk_))); end;
ssnll_0 = ssnll_0 + 0.5*sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*eta_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
end;%for nM=0:n_M-1;
%%%%;
parameter_ssnll = struct('type','parameter');
[ ...
 ~ ...
,ssnll_1 ...
] = ...
ssnll_from_a_k_Y_12( ...
 parameter_ssnll ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_form_yk_ ...
,[] ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,S_k_p_wkS__ ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,[] ...
,[] ...
,[] ...
);
%%%%;
if (flag_verbose>0); disp(sprintf(' %% ssnll_0 vs ssnll_1: %0.16f',fnorm(ssnll_0-ssnll_1)/fnorm(ssnll_0))); end;
%%%%%%%%;

%%%%%%%%;
% Now creating dvol_a_k_Y_form_. ;
%%%%%%%%;
n_source = 4;
rng(1);
delta_dvol_a_c__ = zeros(3,n_source);
for nsource=0:n_source-1;
rng(1+nsource);
delta_dvol_a_c_ = 2*rand(3,1)-1; delta_dvol_a_c_ = delta_dvol_a_c_*0.5/k_p_r_max/max(1e-12,fnorm(delta_dvol_a_c_)); %<-- ensure small in magnitude. ;
delta_dvol_a_c__(:,1+nsource) = delta_dvol_a_c_;
end;%for nsource=0:n_source-1;
dvol_a_k_p_form_ = zeros(n_k_all,1);
for nsource=0:n_source-1;
delta_dvol_a_c_ = delta_dvol_a_c__(:,1+nsource);
dvol_a_k_p_form_ = dvol_a_k_p_form_ + exp(+i*2*pi*(k_c_0_all_*delta_dvol_a_c_(1+0) + k_c_1_all_*delta_dvol_a_c_(1+1) + k_c_2_all_*delta_dvol_a_c_(1+2)));
end;%for nsource=0:n_source-1;
%%%%;
I_dvol_a_quad = sum(dvol_a_k_p_form_.*weight_3d_k_all_);
I_dvol_a_form = 0;
for nsource=0:n_source-1;
delta_dvol_a_c_ = delta_dvol_a_c__(:,1+nsource);
tmp_kd = 2*pi*k_p_r_max*fnorm(delta_dvol_a_c_);
I_dvol_a_form = I_dvol_a_form + h3d_(tmp_kd)*k_p_r_max^3;
end;%for nsource=0:n_source-1;
disp(sprintf(' %% I_a_form vs I_a_quad %0.16f %%<-- should be <1e-6',fnorm(I_a_form-I_a_quad)/fnorm(I_a_form)));
%%%%;
dvol_a_k_Y_form_ = zeros(n_lm_sum,1);
for nsource=0:n_source-1;
dvol_a_k_Y_form_ = dvol_a_k_Y_form_ + plane_wave_expansion_1(n_k_p_r,k_p_r_,delta_dvol_a_c__(:,1+nsource),l_max_);
end;%for nsource=0:n_source-1;
%%%%;
tmp_t = tic;
[ ...
 dvol_a_k_Y_quad_ ...
] = ...
convert_k_p_to_spharm_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,dvol_a_k_p_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% dvol_a_k_Y_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% dvol_a_k_Y_form_ vs dvol_a_k_Y_quad_: %0.16f %%<-- should be <1e-2',fnorm(dvol_a_k_Y_form_-dvol_a_k_Y_quad_)/fnorm(dvol_a_k_Y_form_)));
%%%%;
tmp_t = tic;
[ ...
 dvol_a_k_p_quad_ ...
] = ...
convert_spharm_to_k_p_4( ...
 0*flag_verbose ...
,n_k_all ...
,n_k_all_csum_ ...
,k_p_r_all_ ...
,k_p_azimu_b_all_ ...
,k_p_polar_a_all_ ...
,weight_3d_k_all_ ...
,weight_shell_k_ ...
,n_k_p_r ...
,k_p_r_ ...
,weight_3d_k_p_r_ ...
,l_max_ ...
,dvol_a_k_Y_form_ ...
,Ylm_uklma___ ...
,k_p_azimu_b_sub_uka__ ...
,k_p_polar_a_sub_uka__ ...
,l_max_uk_ ...
,index_nu_n_k_per_shell_from_nk_p_r_ ...
,index_k_per_shell_uka__ ...
);
tmp_t = toc(tmp_t); disp(sprintf(' %% dvol_a_k_p_quad_ time %0.2fs',tmp_t));
disp(sprintf(' %% dvol_a_k_p_form_ vs dvol_a_k_p_quad_: %0.16f %%<-- should be <1e-2',fnorm(dvol_a_k_p_form_-dvol_a_k_p_quad_)/fnorm(dvol_a_k_p_form_)));
%%%%%%%%;
% prepare dvol_a_k_Y_form__ ;
%%%%%%%%;
dvol_a_k_Y_form_yk_ = dvol_a_k_Y_form_;
dvol_a_k_Y_form_yk__ = zeros(n_lm_max,n_k_p_r);
tmp_t = tic();
for nk_p_r=0:n_k_p_r-1;
n_lm = n_lm_(1+nk_p_r);
tmp_index_ = n_lm_csum_(1+nk_p_r) + (0:n_lm-1);
dvol_a_k_Y_form_yk__(1:n_lm,1+nk_p_r) = dvol_a_k_Y_form_yk_(1+tmp_index_);
end;%for nk_p_r=0:n_k_p_r-1;
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dvol_a_k_Y_form_yk__: %0.6fs',tmp_t)); end;
%%%%%%%%;
% generate templates. ;
%%%%%%%%;
tmp_t = tic();
[ ...
 dvol_S_k_p_wkS__ ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
] = ...
pm_template_2( ...
 0*flag_verbose ...
,l_max ...
,n_k_p_r ...
,dvol_a_k_Y_form_yk__ ...
,[] ...
,-1 ...
,n_w_max ...
,n_S ...
,viewing_azimu_b_S_ ...
,viewing_polar_a_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
);
dvol_S_k_p_wkS__ = reshape(dvol_S_k_p_wkS__,[n_w_sum,n_S]);
tmp_t = toc(tmp_t); if (flag_verbose>0); disp(sprintf(' %% dvol_S_k_p_wkS__: %0.6fs',tmp_t)); end;
%%%%%%%%;
% Now step through and reconstitute the templates. ;
%%%%%%%%;
dvol_R_k_p_wkS__ = zeros(n_w_sum,n_S);
for nS=0:n_S-1;
dvol_S_k_p_wk_ = dvol_S_k_p_wkS__(:,1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_dvol_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
dvol_R_k_p_wk_ = zeros(n_w_sum,1);
for nsource=0:n_source-1;
tmp_delta_ = tmp_dvol_R__*delta_dvol_a_c__(:,1+nsource);
dvol_R_k_p_wk_ = dvol_R_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_(1+0) + k_c_1_wk_*tmp_delta_(1+1)));
end;%for nsource=0:n_source-1;
dvol_R_k_p_wkS__(:,1+nS) = dvol_R_k_p_wk_;
end;%for nS=0:n_S-1;
disp(sprintf(' %% dvol_R_k_p_wkS__ vs dvol_S_k_p_wkS__: %0.16f %%<-- should be <1e-2',fnorm(dvol_R_k_p_wkS__-dvol_S_k_p_wkS__)/fnorm(dvol_R_k_p_wkS__)));
%%%%%%%%;

%%%%%%%%;
% Set up test with five 'on-grid' images. ;
%%%%%%%%;
n_M = 5;
index_nCTF_from_nM_ = [1;0;0;1;1];
index_neta_from_nM_ = [1;0;1;0;1];
index_nS_from_nM_ = [32;64;128;512;768];
M_k_p_wkM__ = zeros(n_w_sum,n_M);
euler_polar_a_M_ = viewing_polar_a_S_(1+index_nS_from_nM_);
euler_azimu_b_M_ = viewing_azimu_b_S_(1+index_nS_from_nM_);
euler_gamma_z_M_ = [pi/3;pi/4;pi/5;pi/6;pi/7];
for nM=0:n_M-1;
M_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_wkS__(:,1+index_nS_from_nM_(1+nM)),+euler_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
%%%%;
rng(7);
dtau_euler_polar_a_M_ = 2*pi*rand(n_M,1);
dtau_euler_azimu_b_M_ = 2*pi*rand(n_M,1);
dtau_euler_gamma_z_M_ = 2*pi*rand(n_M,1);
dtau_fnorm = fnorm([ dtau_euler_polar_a_M_ , dtau_euler_azimu_b_M_ , dtau_euler_gamma_z_M_ ]);
dtau_euler_polar_a_M_ = dtau_euler_polar_a_M_/max(1e-12,dtau_fnorm);
dtau_euler_azimu_b_M_ = dtau_euler_azimu_b_M_/max(1e-12,dtau_fnorm);
dtau_euler_gamma_z_M_ = dtau_euler_gamma_z_M_/max(1e-12,dtau_fnorm);
dtau = 1e-5;
%%%%;
ssnll_0 = 0.0d0;
for nM=0:n_M-1;
nS = index_nS_from_nM_(1+nM);
S_k_p_wk_ = S_k_p_wkS__(:,1+nS);
T_k_p_wk_ = T_k_p_wkS__(:,1+nS);
nCTF = index_nCTF_from_nM_(1+nM);
CTF_k_p_wk_ = CTF_k_p_wkC__(:,1+nCTF);
neta = index_neta_from_nM_(1+nM);
eta_k_p_wk_ = eta_k_p_wke__(:,1+neta);
tmp_polar_a = euler_polar_a_M_(1+nM);
tmp_azimu_b = euler_azimu_b_M_(1+nM);
tmp_gamma_z = 0.0;
tmp_R__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
tmp_R_a__ = tmp_R__; tmp_R_b__ = tmp_R__;
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% S_k_p_wk_ vs U_k_p_wk_: %0.16f',fnorm(S_k_p_wk_ - U_k_p_wk_)/fnorm(S_k_p_wk_))); end;
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% T_k_p_wk_ vs V_k_p_wk_: %0.16f',fnorm(T_k_p_wk_ - V_k_p_wk_)/fnorm(T_k_p_wk_))); end;
ssnll_0 = ssnll_0 + 0.5*sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*eta_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
end;%for nM=0:n_M-1;

%%%%%%%%;
% Calculate derivative using ssnll_from_plane_wave_expansion_0. ;
%%%%%%%%;
n_source_a = n_source; v_source_a_ = ones(n_source_a,1);
n_source_b = n_source; v_source_b_ = ones(n_source_b,1);
n_source_dvol_a = n_source; v_source_dvol_a_ = ones(n_source_dvol_a,1);
viewing_gamma_z_S_ = zeros(n_S,1);
[ ...
 ~ ...
,ssnll_pwv ...
,S_k_p_pwv_wkS__ ...
,dvol_ssnll_pwv ...
,dvol_S_k_p_pwv_wkS__ ...
,dvol_dvol_ssnll_pwv ...
,dtau_ssnll_pwv_M3__ ...
,dtau_ssnll_pwv ...
,dtau_S_k_p_pwv_wkS3___ ...
,dtau_dvol_ssnll_pwv_M3__ ...
,dtau_dvol_ssnll_pwv ...
,dtau_dvol_S_k_p_pwv_wkS3___ ...
,dtau_dtau_ssnll_pwv_M33___ ...
,dtau_dtau_ssnll_pwv ...
,dtau_dtau_S_k_p_pwv_wkS33____ ...
] = ...
ssnll_from_plane_wave_expansion_0( ...
 parameter_ssnll ...
,n_source_a ...
,v_source_a_ ...
,delta_a_c__ ...
,n_source_b ...
,v_source_b_ ...
,delta_b_c__ ...
,n_source_dvol_a ...
,v_source_dvol_a_ ...
,delta_dvol_a_c__ ...
,n_k_p_r ...
,k_p_r_ ...
,n_w_max ...
,weight_2d_wk_ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,n_M ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,0*euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,n_S ...
,index_nS_from_nM_ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
);

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_Y_12. ;
%%%%%%%%;
[ ...
 ~ ...
,ssnll_tst ...
,S_k_p_tst_wkS__ ...
,dvol_ssnll_tst ...
,dvol_S_k_p_tst_wkS__ ...
,dvol_dvol_ssnll_tst ...
,dtau_ssnll_tst_M3__ ...
,dtau_ssnll_tst ...
,dtau_S_k_p_tst_wkS3___ ...
,dtau_dvol_ssnll_tst_M3__ ...
,dtau_dvol_ssnll_tst ...
,dtau_dvol_S_k_p_tst_wkS3___ ...
,dtau_dtau_ssnll_tst_M33___ ...
,dtau_dtau_ssnll_tst ...
,dtau_dtau_S_k_p_tst_wkS33____ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
] = ...
ssnll_from_a_k_Y_12( ...
 parameter_ssnll ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_form_yk__ ...
,dvol_a_k_Y_form_yk__ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
);

%%%%%%%%;
% tabulate results. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
if (flag_verbose>0); disp(sprintf(' %% on-grid test: ')); end;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
if (flag_verbose>0); disp(sprintf(' %% ssnll_0 vs ssnll_pwv: %0.16f',fnorm(ssnll_0 - ssnll_pwv)/max(1e-12,fnorm(ssnll_0)))); end;
if (flag_verbose>0); disp(sprintf(' %% ssnll_pwv vs ssnll_tst: %0.16f',fnorm(ssnll_pwv - ssnll_tst)/max(1e-12,fnorm(ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% S_k_p_pwv_wkS__ vs S_k_p_tst_wkS__: %0.16f',fnorm(S_k_p_pwv_wkS__ - S_k_p_tst_wkS__)/max(1e-12,fnorm(S_k_p_pwv_wkS__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_ssnll_pwv vs dvol_ssnll_tst: %0.16f',fnorm(dvol_ssnll_pwv - dvol_ssnll_tst)/max(1e-12,fnorm(dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_S_k_p_pwv_wkS__ vs dvol_S_k_p_tst_wkS__: %0.16f',fnorm(dvol_S_k_p_pwv_wkS__ - dvol_S_k_p_tst_wkS__)/max(1e-12,fnorm(dvol_S_k_p_pwv_wkS__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_dvol_ssnll_pwv vs dvol_dvol_ssnll_tst: %0.16f',fnorm(dvol_dvol_ssnll_pwv - dvol_dvol_ssnll_tst)/max(1e-12,fnorm(dvol_dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_ssnll_pwv_M3__ vs dtau_ssnll_tst_M3__: %0.16f',fnorm(dtau_ssnll_pwv_M3__ - dtau_ssnll_tst_M3__)/max(1e-12,fnorm(dtau_ssnll_pwv_M3__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_ssnll_pwv vs dtau_ssnll_tst: %0.16f',fnorm(dtau_ssnll_pwv - dtau_ssnll_tst)/max(1e-12,fnorm(dtau_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_S_k_p_pwv_wkS3___ vs dtau_S_k_p_tst_wkS3___: %0.16f',fnorm(dtau_S_k_p_pwv_wkS3___ - dtau_S_k_p_tst_wkS3___)/max(1e-12,fnorm(dtau_S_k_p_pwv_wkS3___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_ssnll_pwv_M3__ vs dtau_dvol_ssnll_tst_M3__: %0.16f',fnorm(dtau_dvol_ssnll_pwv_M3__ - dtau_dvol_ssnll_tst_M3__)/max(1e-12,fnorm(dtau_dvol_ssnll_pwv_M3__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_ssnll_pwv vs dtau_dvol_ssnll_tst: %0.16f',fnorm(dtau_dvol_ssnll_pwv - dtau_dvol_ssnll_tst)/max(1e-12,fnorm(dtau_dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_S_k_p_pwv_wkS3___ vs dtau_dvol_S_k_p_tst_wkS3___: %0.16f',fnorm(dtau_dvol_S_k_p_pwv_wkS3___ - dtau_dvol_S_k_p_tst_wkS3___)/max(1e-12,fnorm(dtau_dvol_S_k_p_pwv_wkS3___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_ssnll_pwv_M33___ vs dtau_dtau_ssnll_tst_M33___: %0.16f',fnorm(dtau_dtau_ssnll_pwv_M33___ - dtau_dtau_ssnll_tst_M33___)/max(1e-12,fnorm(dtau_dtau_ssnll_pwv_M33___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_ssnll_pwv vs dtau_dtau_ssnll_tst: %0.16f',fnorm(dtau_dtau_ssnll_pwv - dtau_dtau_ssnll_tst)/max(1e-12,fnorm(dtau_dtau_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_S_k_p_pwv_wkS33____ vs dtau_dtau_S_k_p_tst_wkS33____: %0.16f',fnorm(dtau_dtau_S_k_p_pwv_wkS33____ - dtau_dtau_S_k_p_tst_wkS33____)/max(1e-12,fnorm(dtau_dtau_S_k_p_pwv_wkS33____)))); end;

%%%%%%%%;
% Set up another test with some 'off-grid' images. ;
%%%%%%%%;
n_M = 5;
index_nCTF_from_nM_ = [1;0;0;1;1];
index_neta_from_nM_ = [1;0;1;0;1];
index_nS_from_nM_ = [32;64;128;512;768];
M_k_p_wkM__ = zeros(n_w_sum,n_M);
euler_polar_a_M_ = viewing_polar_a_S_(1+index_nS_from_nM_);
euler_azimu_b_M_ = viewing_azimu_b_S_(1+index_nS_from_nM_);
euler_gamma_z_M_ = [pi/3;pi/4;pi/5;pi/6;pi/7];
for nM=0:n_M-1;
M_k_p_wkM__(:,1+nM) = rotate_p_to_p_fftw(n_k_p_r,n_w_,n_w_sum,T_k_p_wkS__(:,1+index_nS_from_nM_(1+nM)),+euler_gamma_z_M_(1+nM));
end;%for nM=0:n_M-1;
nM = 1; euler_polar_a_M_(1+nM) = +2*pi/17; euler_azimu_b_M_(1+nM) = +19*pi/11; %<-- arbitrary off-grid viewing-angle. ;
nM = 3; euler_polar_a_M_(1+nM) = +9*pi/17; euler_azimu_b_M_(1+nM) = +17*pi/11; %<-- arbitrary off-grid viewing-angle. ;
nM = 4; euler_polar_a_M_(1+nM) = +3*pi/17; euler_azimu_b_M_(1+nM) = +10*pi/11; %<-- arbitrary off-grid viewing-angle. ;
%%%%;
rng(7);
dtau_euler_polar_a_M_ = 2*pi*rand(n_M,1);
dtau_euler_azimu_b_M_ = 2*pi*rand(n_M,1);
dtau_euler_gamma_z_M_ = 2*pi*rand(n_M,1);
dtau_fnorm = fnorm([ dtau_euler_polar_a_M_ , dtau_euler_azimu_b_M_ , dtau_euler_gamma_z_M_ ]);
dtau_euler_polar_a_M_ = dtau_euler_polar_a_M_/max(1e-12,dtau_fnorm);
dtau_euler_azimu_b_M_ = dtau_euler_azimu_b_M_/max(1e-12,dtau_fnorm);
dtau_euler_gamma_z_M_ = dtau_euler_gamma_z_M_/max(1e-12,dtau_fnorm);
dtau = 1e-5;
%%%%;
ssnll_0 = 0.0d0;
for nM=0:n_M-1;
nS = index_nS_from_nM_(1+nM);
T_k_p_wk_ = T_k_p_wkS__(:,1+nS);
nCTF = index_nCTF_from_nM_(1+nM);
CTF_k_p_wk_ = CTF_k_p_wkC__(:,1+nCTF);
neta = index_neta_from_nM_(1+nM);
eta_k_p_wk_ = eta_k_p_wke__(:,1+neta);
tmp_polar_a = euler_polar_a_M_(1+nM);
tmp_azimu_b = euler_azimu_b_M_(1+nM);
tmp_gamma_z = 0.0;
tmp_R_a__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
U_k_p_wk_ = zeros(n_w_sum,1);
for nsource_a=0:n_source-1;
tmp_delta_U_ = tmp_R_a__*delta_a_c__(:,1+nsource_a);
tmp_delta_U = fnorm(tmp_delta_U_(1+[0,1]));
tmp_omega_U = atan2(tmp_delta_U_(1+1),tmp_delta_U_(1+0));
U_k_p_wk_ = U_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_U_(1+0) + k_c_1_wk_*tmp_delta_U_(1+1)));
end;%for nsource_a=0:n_source-1;
tmp_polar_a = viewing_polar_a_S_(1+nS);
tmp_azimu_b = viewing_azimu_b_S_(1+nS);
tmp_gamma_z = 0.0;
tmp_R_b__ = Rz(-tmp_gamma_z)*Ry(-tmp_polar_a)*Rz(-tmp_azimu_b);
V_k_p_wk_ = zeros(n_w_sum,1);
for nsource_b=0:n_source-1;
tmp_delta_V_ = tmp_R_b__*delta_b_c__(:,1+nsource_b);
tmp_delta_V = fnorm(tmp_delta_V_(1+[0,1]));
tmp_omega_V = atan2(tmp_delta_V_(1+1),tmp_delta_V_(1+0));
V_k_p_wk_ = V_k_p_wk_ + exp(+i*2*pi*(k_c_0_wk_*tmp_delta_V_(1+0) + k_c_1_wk_*tmp_delta_V_(1+1)));
end;%for nsource_b=0:n_source-1;
if (flag_verbose>1); disp(sprintf(' %% T_k_p_wk_ vs V_k_p_wk_: %0.16f',fnorm(T_k_p_wk_ - V_k_p_wk_)/fnorm(T_k_p_wk_))); end;
ssnll_0 = ssnll_0 + 0.5*sum(abs(U_k_p_wk_.*CTF_k_p_wk_ - V_k_p_wk_).^2.*eta_k_p_wk_.*weight_2d_wk_,'all')*(4*pi^2);
end;%for nM=0:n_M-1;

%%%%%%%%;
% Calculate derivative using ssnll_from_plane_wave_expansion_0. ;
%%%%%%%%;
n_source_a = n_source; v_source_a_ = ones(n_source_a,1);
n_source_b = n_source; v_source_b_ = ones(n_source_b,1);
n_source_dvol_a = n_source; v_source_dvol_a_ = ones(n_source_dvol_a,1);
viewing_gamma_z_S_ = zeros(n_S,1);
[ ...
 ~ ...
,ssnll_pwv ...
,S_k_p_pwv_wkS__ ...
,dvol_ssnll_pwv ...
,dvol_S_k_p_pwv_wkS__ ...
,dvol_dvol_ssnll_pwv ...
,dtau_ssnll_pwv_M3__ ...
,dtau_ssnll_pwv ...
,dtau_S_k_p_pwv_wkS3___ ...
,dtau_dvol_ssnll_pwv_M3__ ...
,dtau_dvol_ssnll_pwv ...
,dtau_dvol_S_k_p_pwv_wkS3___ ...
,dtau_dtau_ssnll_pwv_M33___ ...
,dtau_dtau_ssnll_pwv ...
,dtau_dtau_S_k_p_pwv_wkS33____ ...
] = ...
ssnll_from_plane_wave_expansion_0( ...
 parameter_ssnll ...
,n_source_a ...
,v_source_a_ ...
,delta_a_c__ ...
,n_source_b ...
,v_source_b_ ...
,delta_b_c__ ...
,n_source_dvol_a ...
,v_source_dvol_a_ ...
,delta_dvol_a_c__ ...
,n_k_p_r ...
,k_p_r_ ...
,n_w_max ...
,weight_2d_wk_ ...
,n_CTF ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,n_eta ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,n_M ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,0*euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
,n_S ...
,index_nS_from_nM_ ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_gamma_z_S_ ...
);

%%%%%%%%;
% Calculate derivative using ssnll_from_a_k_Y_12. ;
%%%%%%%%;
[ ...
 ~ ...
,ssnll_tst ...
,S_k_p_tst_wkS__ ...
,dvol_ssnll_tst ...
,dvol_S_k_p_tst_wkS__ ...
,dvol_dvol_ssnll_tst ...
,dtau_ssnll_tst_M3__ ...
,dtau_ssnll_tst ...
,dtau_S_k_p_tst_wkS3___ ...
,dtau_dvol_ssnll_tst_M3__ ...
,dtau_dvol_ssnll_tst ...
,dtau_dvol_S_k_p_tst_wkS3___ ...
,dtau_dtau_ssnll_tst_M33___ ...
,dtau_dtau_ssnll_tst ...
,dtau_dtau_S_k_p_tst_wkS33____ ...
,V_lmm___ ...
,L_lm__ ...
,d0W_betazeta_mlma____ ...
,d1W_betazeta_mlma____ ...
,d2W_betazeta_mlma____ ...
] = ...
ssnll_from_a_k_Y_12( ...
 parameter_ssnll ...
,n_k_p_r ...
,k_p_r_ ...
,k_p_r_max ...
,l_max_ ...
,a_k_Y_form_yk__ ...
,dvol_a_k_Y_form_yk__ ...
,n_w_ ...
,weight_2d_k_p_r_ ...
,weight_2d_wk_ ...
,n_S ...
,[] ...
,[] ...
,[] ...
,[] ...
,[] ...
,viewing_polar_a_S_ ...
,viewing_azimu_b_S_ ...
,viewing_weight_S_ ...
,n_viewing_polar_a ...
,viewing_polar_a_ ...
,n_viewing_azimu_b_ ...
,n_M ...
,M_k_p_wkM__ ...
,index_nCTF_from_nM_ ...
,CTF_k_p_wkC__ ...
,index_neta_from_nM_ ...
,eta_k_p_wke__ ...
,euler_polar_a_M_ ...
,euler_azimu_b_M_ ...
,euler_gamma_z_M_ ...
,dtau_euler_polar_a_M_ ...
,dtau_euler_azimu_b_M_ ...
,dtau_euler_gamma_z_M_ ...
);

%%%%%%%%;
% tabulate results. ;
%%%%%%%%;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
if (flag_verbose>0); disp(sprintf(' %% off-grid test: ')); end;
if (flag_verbose>0); disp(sprintf(' %%%%%%%%%%%%%%%% : ')); end;
if (flag_verbose>0); disp(sprintf(' %% ssnll_0 vs ssnll_pwv: %0.16f',fnorm(ssnll_0 - ssnll_pwv)/max(1e-12,fnorm(ssnll_0)))); end;
if (flag_verbose>0); disp(sprintf(' %% ssnll_pwv vs ssnll_tst: %0.16f',fnorm(ssnll_pwv - ssnll_tst)/max(1e-12,fnorm(ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% S_k_p_pwv_wkS__ vs S_k_p_tst_wkS__: %0.16f',fnorm(S_k_p_pwv_wkS__ - S_k_p_tst_wkS__)/max(1e-12,fnorm(S_k_p_pwv_wkS__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_ssnll_pwv vs dvol_ssnll_tst: %0.16f',fnorm(dvol_ssnll_pwv - dvol_ssnll_tst)/max(1e-12,fnorm(dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_S_k_p_pwv_wkS__ vs dvol_S_k_p_tst_wkS__: %0.16f',fnorm(dvol_S_k_p_pwv_wkS__ - dvol_S_k_p_tst_wkS__)/max(1e-12,fnorm(dvol_S_k_p_pwv_wkS__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dvol_dvol_ssnll_pwv vs dvol_dvol_ssnll_tst: %0.16f',fnorm(dvol_dvol_ssnll_pwv - dvol_dvol_ssnll_tst)/max(1e-12,fnorm(dvol_dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_ssnll_pwv_M3__ vs dtau_ssnll_tst_M3__: %0.16f',fnorm(dtau_ssnll_pwv_M3__ - dtau_ssnll_tst_M3__)/max(1e-12,fnorm(dtau_ssnll_pwv_M3__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_ssnll_pwv vs dtau_ssnll_tst: %0.16f',fnorm(dtau_ssnll_pwv - dtau_ssnll_tst)/max(1e-12,fnorm(dtau_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_S_k_p_pwv_wkS3___ vs dtau_S_k_p_tst_wkS3___: %0.16f',fnorm(dtau_S_k_p_pwv_wkS3___ - dtau_S_k_p_tst_wkS3___)/max(1e-12,fnorm(dtau_S_k_p_pwv_wkS3___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_ssnll_pwv_M3__ vs dtau_dvol_ssnll_tst_M3__: %0.16f',fnorm(dtau_dvol_ssnll_pwv_M3__ - dtau_dvol_ssnll_tst_M3__)/max(1e-12,fnorm(dtau_dvol_ssnll_pwv_M3__)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_ssnll_pwv vs dtau_dvol_ssnll_tst: %0.16f',fnorm(dtau_dvol_ssnll_pwv - dtau_dvol_ssnll_tst)/max(1e-12,fnorm(dtau_dvol_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dvol_S_k_p_pwv_wkS3___ vs dtau_dvol_S_k_p_tst_wkS3___: %0.16f',fnorm(dtau_dvol_S_k_p_pwv_wkS3___ - dtau_dvol_S_k_p_tst_wkS3___)/max(1e-12,fnorm(dtau_dvol_S_k_p_pwv_wkS3___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_ssnll_pwv_M33___ vs dtau_dtau_ssnll_tst_M33___: %0.16f',fnorm(dtau_dtau_ssnll_pwv_M33___ - dtau_dtau_ssnll_tst_M33___)/max(1e-12,fnorm(dtau_dtau_ssnll_pwv_M33___)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_ssnll_pwv vs dtau_dtau_ssnll_tst: %0.16f',fnorm(dtau_dtau_ssnll_pwv - dtau_dtau_ssnll_tst)/max(1e-12,fnorm(dtau_dtau_ssnll_pwv)))); end;
if (flag_verbose>0); disp(sprintf(' %% dtau_dtau_S_k_p_pwv_wkS33____ vs dtau_dtau_S_k_p_tst_wkS33____: %0.16f',fnorm(dtau_dtau_S_k_p_pwv_wkS33____ - dtau_dtau_S_k_p_tst_wkS33____)/max(1e-12,fnorm(dtau_dtau_S_k_p_pwv_wkS33____)))); end;

